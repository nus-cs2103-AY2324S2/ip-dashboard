[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"\u003c!-- @format --\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"# :notebook_with_decorative_cover: Ciara - High performance tasks manager solution","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"![Screenshot of Ciara GUI](/docs/Ui.png)","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"\u003e [!CAUTION]","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"\u003e - This project is under **active** development","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"\u003e - There will be bugs and breaking changes","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"\u003e - **Do not use this app as the sole way of storing important tasks**","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"Ciara is a simple tasks command line based tasks manager developed with speed as the main focus.","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"## Features","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"- Text-based","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"- Low learning curve","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"- FAST to use","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"## Getting Started","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"1. Grab the latest release from [here](https://github.com/RyanNgWH/ip/releases)","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"1. Launch the application","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"1. Add your tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"1. Profit!","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"---","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"Alternatively, you could launch it from the command line with the following command:","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"```bash","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"java -jar ciara.jar","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"\u003e [!WARNING]","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"\u003e This project was developed with `Java 11` and is not guaranteed to work with other versions of Java","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"## Supported Commands","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"```bash","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"usage:    \u003ccommand\u003e \u003carguments\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"commands:","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    bye                                   # Exit the application","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    list      [/archive] [/date]          # List all tasks (choose between archived or not) in the application (with an optional date filter - in the format YYYY/MM/DD)","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"    mark      {index}                     # Mark the task as completed","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    unmark    {index}                     # Mark the task as not completed","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    archive   {index}                     # Archive the task","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"    unarchive {index}                     # Unarchive the task","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    delete    {index}                     # Delete the task","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    todo      {description}               # Create a todo with the specified description","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    deadline  {description} {/by}         # Create a deadline with the specified description and deadline","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"    event     {description} {/from} {/to} # Create an event with the specified description and duration","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"## Sample Commands","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"### List","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"```bash","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"list                            # List all tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"list /archive                   # List all archived tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"list /date 2024/12/12           # List all tasks occuring on 12 Dec 2024","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"list /archive /date 2024/12/12  # List all archived tasks occuring on 12 Dec 2024","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"### Mark \u0026 Unmark","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"```bash","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"mark 1      # Mark the 1st task (as shown in the `list` command)","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"unmark 2    # Unmark the 2nd task (as shown in the `list` command)","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"### Archive, Unarchive \u0026 Delete","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"```bash","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"archive 1   # Archive the 1st task (as shown in the `list`` command)","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"unarchive 2 # Unarchive the 2nd task (as shown in the `list /archive` command)","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"delete 3    # Delete the 3rd task (as shown in the `list`` command)","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"### Todo, Deadline \u0026 Event","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"```bash","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"todo buy bread                                                      # Create a new \"Todo\" task with the description \"buy bread\"","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"deadline project submission /by 2024/02/23 14:00                    # Create a new \"Deadline\" task with the description \"project submission\" that is due on 23 Feb 2024 at 2pm","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"event taengoo concert /from 2024/02/24 17:00 /to 2024/02/24 20:00   # Create a new \"Event\" task with the description \"taengoo concert\" that occurs from 23 Feb 2024 at 5pm to 8pm","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"## Roadmap","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"- [x] Managing tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"- [x] Managing deadlines","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"RyanNgWH":93,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.1.0\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"    implementation group: \u0027org.json\u0027, name: \u0027json\u0027, version: \u002720231013\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    mainClass.set(\"ciara.Ciara\")","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    archiveBaseName \u003d \"ciara\"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"checkstyle {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"java {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"    toolchain {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"        languageVersion.set(JavaLanguageVersion.of(11))","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"javafx {","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    modules \u003d [\u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027]","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"RyanNgWH":20,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"\u003c!-- @format --\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"# Ciara - High performance tasks manager solution","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"![Screenshot of Ciara GUI](Ui.png)","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"\u003e - This project is under **active** development","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"\u003e - There will be bugs and breaking changes","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"\u003e - **Do not use this app as the sole way of storing important tasks**","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"Ciara is a simple tasks command line based tasks manager developed with speed as the main focus.","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"## Features","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"- Text-based","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"- Low learning curve","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"- FAST to use","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"## Getting Started","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"1. Grab the latest release from [here](https://github.com/RyanNgWH/ip/releases)","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"1. Launch the application","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"1. Add your tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"1. Profit!","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"---","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"Alternatively, you could launch it from the command line with the following command:","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"```bash","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"java -jar ciara.jar","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"\u003e This project was developed with `Java 11` and is not guaranteed to work with other versions of Java","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"## Supported Commands","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"```bash","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"usage:    \u003ccommand\u003e \u003carguments\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"commands:","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    bye                                   # Exit the application","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"    list      [/archive] [/date]          # List all tasks (choose between archived or not) in the application (with an optional date filter - in the format YYYY/MM/DD)","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    mark      {index}                     # Mark the task as completed","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    unmark    {index}                     # Mark the task as not completed","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    archive   {index}                     # Archive the task","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"    unarchive {index}                     # Unarchive the task","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    delete    {index}                     # Delete the task","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    todo      {description}               # Create a todo with the specified description","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"    deadline  {description} {/by}         # Create a deadline with the specified description and deadline","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    event     {description} {/from} {/to} # Create an event with the specified description and duration","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"## Sample Commands","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"### List","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"```bash","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"list                            # List all tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"list /archive                   # List all archived tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"list /date 2024/12/12           # List all tasks occuring on 12 Dec 2024","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"list /archive /date 2024/12/12  # List all archived tasks occuring on 12 Dec 2024","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"### Mark \u0026 Unmark","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"```bash","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"mark 1      # Mark the 1st task (as shown in the `list` command)","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"unmark 2    # Unmark the 2nd task (as shown in the `list` command)","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"### Archive, Unarchive \u0026 Delete","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"```bash","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"archive 1   # Archive the 1st task (as shown in the `list`` command)","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"unarchive 2 # Unarchive the 2nd task (as shown in the `list /archive` command)","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"delete 3    # Delete the 3rd task (as shown in the `list`` command)","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"### Todo, Deadline \u0026 Event","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"```bash","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"todo buy bread                                                      # Create a new \"Todo\" task with the description \"buy bread\"","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"deadline project submission /by 2024/02/23 14:00                    # Create a new \"Deadline\" task with the description \"project submission\" that is due on 23 Feb 2024 at 2pm","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"event taengoo concert /from 2024/02/24 17:00 /to 2024/02/24 20:00   # Create a new \"Event\" task with the description \"taengoo concert\" that occurs from 23 Feb 2024 at 5pm to 8pm","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"## Roadmap","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"- [x] Managing tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"- [x] Managing deadlines","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"RyanNgWH":78,"-":18}},{"path":"src/main/java/ciara/Ciara.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Gui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * The Ciara class provides the Ciara chatbot application","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"public class Ciara {","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * File to save storage to","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    private static File saveFile;","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     * Task list for the Ciara instance","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     * UI of the Ciara instance","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a Ciara instance","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"     * @param file File to save and load tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    public Ciara(File file) {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"        this.ui \u003d new Gui();","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"        Ciara.saveFile \u003d file;","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"        // Create data directory (if required)","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"        this.taskList \u003d new TaskList(Ciara.saveFile);","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"     * Gets the save file of the application","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     * @return Save file of the application","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    public static File getSaveFile() {","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"        return Ciara.saveFile;","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     * Sets the save file of the application","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * @param file File to use as the save file of the application","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    public static void setSaveFile(File file) {","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        Ciara.saveFile \u003d file;","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"     * Runs the Ciara instance","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"     * @param args Arguments to pass to the application","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"    public void run(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        assert this.ui !\u003d null; // UI should exist","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        assert this.taskList !\u003d null; // Tasklist should exist","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        this.ui.startUI(this.taskList, args);","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"        new Ciara(new File(\"data/tasks.json\")).run(args);","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"RyanNgWH":78}},{"path":"src/main/java/ciara/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * The AddCommand class defines a command to add tasks to be stored in the Ciara","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * application","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * Task to be added","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    private Task task;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a add command","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     * @param task Task to be added","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"        super(false);","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the command","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     * @return String containing the output of the command","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    public String execute(TaskList taskList) throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"        // Add task","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(task, false);","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"                + String.format(\"  %s\\n\", task.toString())","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"                + String.format(\"Now you have %d tasks in the list.\\n\", taskList.size());","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the add command","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"     * @param ui       UI used for the command","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    public void execute(TaskList taskList, Ui ui) throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        String successMessage \u003d this.execute(taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        // Print success message","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"        System.out.print(successMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"     * Indicates whether some other object is \"equal to\" this command","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"     * @param obj Object to be checked against","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if equal, False otherwise","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        if (obj instanceof AddCommand) {","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"            AddCommand command \u003d (AddCommand) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"            return super.equals(command) \u0026\u0026 this.task.equals(command.task);","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"RyanNgWH":82}},{"path":"src/main/java/ciara/commands/ArchiveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * The ArchiveCommand class defines a command to archive/unarchive tasks stored","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * in the Ciara application","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"public class ArchiveCommand extends Command {","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * Index of task to archive/unarchive","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    private int index;","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     * Visibility to apply to the task","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    private boolean toArchive;","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a Archive command","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"     * @param index     Index of task to mark","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"     * @param toArchive Visibility to apply to the task","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    public ArchiveCommand(int index, boolean toArchive) {","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        super(false);","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        this.toArchive \u003d toArchive;","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the command","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * @return String containing the output of the command","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    public String execute(TaskList taskList) throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        // Archive/unarchive the task","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        Task updatedTask \u003d taskList.archiveTask(this.index, this.toArchive);","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        // Print success message","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        String response;","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"        if (toArchive) {","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"            response \u003d \"Nice! I\u0027ve archived this task:\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"            response \u003d \"Nice! I\u0027ve unarchived this task:\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        return response + String.format(\"  %s\", updatedTask.toString());","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the mark command","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"     * @param ui       UI used for the command","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"    public void execute(TaskList taskList, Ui ui) throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"        String successMessage \u003d this.execute(taskList);","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        // Print tasks","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        System.out.println(successMessage);","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"     * Indicates whether some other object is \"equal to\" this command","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"     * @param obj Object to be checked against","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if equal, False otherwise","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"        if (obj instanceof ArchiveCommand) {","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"            ArchiveCommand command \u003d (ArchiveCommand) obj;","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"            return super.equals(command)","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"                    \u0026\u0026 this.index \u003d\u003d command.index","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"                    \u0026\u0026 this.toArchive \u003d\u003d command.toArchive;","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        return false;","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"RyanNgWH":96}},{"path":"src/main/java/ciara/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" * The Command class defines a command that can be used in the Ciara","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * application.","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     * Flag indicating if command is an exit command","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    private boolean isExit;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a new Command","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     * @param isExit Flag if command is an exist command","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    protected Command(boolean isExit) {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"     * Checks if the command is an exit command","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if the command is an exist command, false otherwise","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        return this.isExit;","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the command","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     * @param ui       UI used for the command","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    public abstract void execute(TaskList taskList, Ui ui) throws CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the command","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"     * @return String containing the output of the command","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    public abstract String execute(TaskList taskList) throws CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     * Indicates whether some other object is \"equal to\" this command","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * @param obj Object to be checked against","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if equal, False otherwise","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"        if (obj instanceof Command) {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"            Command command \u003d (Command) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"            return this.isExit \u003d\u003d command.isExit;","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"RyanNgWH":75}},{"path":"src/main/java/ciara/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * The DeleteCommand class defines a command to delete tasks stored in the Ciara","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * application","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * Index of task to delete","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    private int index;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     * Visibility of the task to delete","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    private boolean isArchived;","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a delete command","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"     * @param index      Index of task to delete","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived Visibility of the task to delete","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    public DeleteCommand(int index, boolean isArchived) {","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        super(false);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        this.isArchived \u003d isArchived;","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the command","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * @return String containing the output of the command","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    public String execute(TaskList taskList) throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        // Delete the task","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        Task deletedTask \u003d taskList.deleteTask(this.index, isArchived);","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"                + String.format(\"  %s\\n\", deletedTask.toString())","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"                + String.format(\"Now you have %d tasks in the list.\\n\", taskList.size());","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the delete command","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     * @param ui       UI used for the command","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    public void execute(TaskList taskList, Ui ui) throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        String successMessage \u003d this.execute(taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        // Print success message","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"        System.out.print(successMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"     * Indicates whether some other object is \"equal to\" this command","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"     * @param obj Object to be checked against","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if equal, False otherwise","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"        if (obj instanceof DeleteCommand) {","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"            DeleteCommand command \u003d (DeleteCommand) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"            return super.equals(command)","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"                    \u0026\u0026 this.index \u003d\u003d command.index","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"                    \u0026\u0026 this.isArchived \u003d\u003d command.isArchived;","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"RyanNgWH":91}},{"path":"src/main/java/ciara/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * The ExitCommand class defines an exit command that can be used in the Ciara","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" * application.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     * Creates an exit command","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"    public ExitCommand() {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"        super(true);","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the command","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     * @return String containing the output of the command","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"        // Goodbye message","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the exit command","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"     * @param ui       UI used for the command","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"        String successMessage \u003d this.execute(taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        // Print exit message","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        System.out.print(successMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     * Indicates whether some other object is \"equal to\" this command","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"     * @param obj Object to be checked against","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if equal, False otherwise","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        if (obj instanceof ExitCommand) {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"            ExitCommand command \u003d (ExitCommand) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"            return super.equals(command);","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"RyanNgWH":68}},{"path":"src/main/java/ciara/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * The FindCommand class defines a command to find tasks stored in the Ciara","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" * application (containing the keyword)","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     * Keyword for the find command","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"    private String keyword;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"     * Visibility of the tasks to find","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    private boolean isArchived;","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a find command without any keyword","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived Visibility of the tasks to find","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    public FindCommand(boolean isArchived) {","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"        super(false);","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"        this.keyword \u003d \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"        this.isArchived \u003d isArchived;","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a find command with a keyword","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"     * @param keyword    Keyword for the find command","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived Visibility of the tasks to find","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    public FindCommand(String keyword, boolean isArchived) {","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"        super(false);","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        this.isArchived \u003d isArchived;","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the command","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"     * @return String containing the output of the command","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        String tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        if (this.keyword.equals(\"\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"            tasks \u003d taskList.getTasks(this.isArchived);","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"            tasks \u003d taskList.getTasks(keyword, this.isArchived);","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        return tasks;","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the find command","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"     * @param ui       UI used for the command","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        String successMessage \u003d this.execute(taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"        // Print tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        System.out.println(successMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"     * Indicates whether some other object is \"equal to\" this command","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"     * @param obj Object to be checked against","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if equal, False otherwise","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        if (obj instanceof FindCommand) {","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"            FindCommand command \u003d (FindCommand) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"            if (this.keyword !\u003d null \u0026\u0026 command.keyword !\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"                return super.equals(command)","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"                        \u0026\u0026 this.keyword.equals(command.keyword)","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"                        \u0026\u0026 this.isArchived \u003d\u003d command.isArchived;","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"            } else if (this.keyword \u003d\u003d null \u0026\u0026 command.keyword \u003d\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"                return super.equals(command) \u0026\u0026 this.isArchived \u003d\u003d command.isArchived;","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"RyanNgWH":107}},{"path":"src/main/java/ciara/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * The ListCommand class defines a command to list tasks stored in the Ciara","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" * application","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     * Date filter for the list command","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    private Instant date;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     * Visibility of the tasks to list","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    private boolean isArchived;","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a list command without any filters","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived Visibility of the tasks to find","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"    public ListCommand(boolean isArchived) {","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"        super(false);","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        this.date \u003d null;","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"        this.isArchived \u003d isArchived;","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a list command with a date filter","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     * @param date       Date to filter","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived Visibility of the tasks to find","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    public ListCommand(Instant date, boolean isArchived) {","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"        super(false);","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        this.isArchived \u003d isArchived;","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the command","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     * @return String containing the output of the command","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"    public String execute(TaskList taskList) throws InvalidArgumentException {","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        String tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        if (this.date !\u003d null) {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"            tasks \u003d taskList.getTasks(this.date, isArchived);","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"            tasks \u003d taskList.getTasks(isArchived);","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"        return tasks;","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the list command","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"     * @param ui       UI used for the command","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"    public void execute(TaskList taskList, Ui ui) throws InvalidArgumentException {","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        String successMessage \u003d this.execute(taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        // Print tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"        System.out.println(successMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"     * Indicates whether some other object is \"equal to\" this command","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"     * @param obj Object to be checked against","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if equal, False otherwise","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"        if (obj instanceof ListCommand) {","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"            ListCommand command \u003d (ListCommand) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"            if (this.date !\u003d null \u0026\u0026 command.date !\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"                return super.equals(command)","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"                        \u0026\u0026 this.date.equals(command.date)","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"                        \u0026\u0026 this.isArchived \u003d\u003d command.isArchived;","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"            } else if (this.date \u003d\u003d null \u0026\u0026 command.date \u003d\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"                return super.equals(command) \u0026\u0026 this.isArchived \u003d\u003d command.isArchived;","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"RyanNgWH":110}},{"path":"src/main/java/ciara/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * The MarkCommand class defines a command to mark tasks stored in the Ciara","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" * application as completed/uncompleted","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * Index of task to mark","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    private int index;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     * Status of task","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    private boolean isCompleted;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a mark command","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"     * @param index       Index of task to mark","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"     * @param isCompleted Status of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    public MarkCommand(int index, boolean isCompleted) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        super(false);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the command","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * @return String containing the output of the command","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    public String execute(TaskList taskList) throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        // Mark task as completed/uncomplete","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        Task markedTask \u003d taskList.markTask(this.index, this.isCompleted);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"        // Print success message","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        String response;","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        if (isCompleted) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"            response \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"            response \u003d \"Nice! I\u0027ve marked this task as not done:\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        return response + String.format(\"  %s\", markedTask.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"     * Executes the mark command","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist used for the command","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"     * @param ui       UI used for the command","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"    public void execute(TaskList taskList, Ui ui) throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"        String successMessage \u003d this.execute(taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        // Print tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        System.out.println(successMessage);","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"     * Indicates whether some other object is \"equal to\" this command","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"     * @param obj Object to be checked against","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if equal, False otherwise","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"        if (obj instanceof MarkCommand) {","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"            MarkCommand command \u003d (MarkCommand) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"            return super.equals(command)","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"                    \u0026\u0026 this.index \u003d\u003d command.index","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"                    \u0026\u0026 this.isCompleted \u003d\u003d command.isCompleted;","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"RyanNgWH":95}},{"path":"src/main/java/ciara/exceptions/CiaraException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The CiaraException class defines an exception specific to the Ciara","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" * application.","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"public class CiaraException extends Exception {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a CiaraException","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * @param errorMessage Error message","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    public CiaraException(String errorMessage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"RyanNgWH":18}},{"path":"src/main/java/ciara/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The MissingArgumentException class provides an exception for invalid","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" * arguments in the ciara application","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"public class InvalidArgumentException extends CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     * Creates an InvalidArgumentException","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * @param errorMessage Error message","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    public InvalidArgumentException(String errorMessage) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"RyanNgWH":18}},{"path":"src/main/java/ciara/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The InvalidCommandException class provides an exception for invalid","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" * commands in the ciara application","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"public class InvalidCommandException extends CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     * Creates an InvalidCommandException","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * @param errorMessage Error message","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"RyanNgWH":18}},{"path":"src/main/java/ciara/exceptions/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The MissingArgumentException class provides an exception for missing","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" * arguments in the ciara exception.","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"public class MissingArgumentException extends CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a MissingArgumentException","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * @param errorMessage Error message","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    public MissingArgumentException(String errorMessage) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"RyanNgWH":18}},{"path":"src/main/java/ciara/exceptions/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The MissingTaskException class provides an exception for missing","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" * tasks in the ciara exception.","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"public class MissingTaskException extends CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a MissingTaskException","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * @param errorMessage Error message","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    public MissingTaskException(String errorMessage) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"RyanNgWH":18}},{"path":"src/main/java/ciara/exceptions/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The StorageException class provides an exception for storage related","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" * activities.","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"public class StorageException extends CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a StorageException","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * @param errorMessage Error message","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    public StorageException(String errorMessage) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"RyanNgWH":18}},{"path":"src/main/java/ciara/exceptions/TaskCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The TaskCorruptedException class provides an exception for corrupted tasks in","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" * the Ciara application.","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"public class TaskCorruptedException extends CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a TaskCorruptedException","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * @param errorMessage Error message","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    public TaskCorruptedException(String errorMessage) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"RyanNgWH":18}},{"path":"src/main/java/ciara/exceptions/TaskNotSupportedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The TaskNotSupportedException class provides an exception for unspported","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" * tasks in the Ciara application.","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"public class TaskNotSupportedException extends CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a TaskNotSupportedException","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * @param errorMessage Error message","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"    public TaskNotSupportedException(String errorMessage) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"RyanNgWH":18}},{"path":"src/main/java/ciara/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.parser;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.time.ZoneOffset;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.AddCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.ArchiveCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.Command;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.DeleteCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.ExitCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.FindCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.ListCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.MarkCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.InvalidCommandException;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.MissingArgumentException;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Todo;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":" * The Parser class handles the making sense of user commands","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"public class Parser {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"     * Converts user input date (in format \u0027YYYY/MM/DD hh:mm\u0027) to Instant","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     * @param date Date to be converted (in format \u0027YYYY/MM/DD\u0027)","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"     * @param time Time to be converted (in format \u0027hh:mm\u0027)","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     * @return Instant of the specified datetime","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    public static Instant userDateToInstant(String date, String time)","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"            throws NumberFormatException, StringIndexOutOfBoundsException, DateTimeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"        return LocalDateTime.of(","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"                Integer.parseInt(date.substring(0, 4)),","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"                Integer.parseInt(date.substring(5, 7)),","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"                Integer.parseInt(date.substring(8, 10)),","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"                Integer.parseInt(time.substring(0, 2)),","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"                Integer.parseInt(time.substring(3, 5)))","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"                .toInstant(ZoneOffset.of(\"+8\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"     * Parses a string and return a command if valid","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     * @param input String to be parsed","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * @return A valid command for the application","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    public static Command parse(String input) throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        // Remove whitespaces from input","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        input \u003d input.strip();","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        // Split input","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        ArrayList\u003cString\u003e splitInput \u003d new ArrayList\u003cString\u003e(Arrays.asList(input.split(\" \")));","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"        // Remove unncessary whitespace","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"        splitInput.removeIf(item -\u003e item \u003d\u003d null || \"\".equals(item));","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        switch (splitInput.get(0).toLowerCase()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        case \"bye\": // Exit","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        case \"list\": // List tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"            return parseList(splitInput);","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"        case \"mark\": // Mark task","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"            return parseMark(splitInput);","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        case \"unmark\": // Unmark task","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"            return parseUnmark(splitInput);","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"        case \"delete\": // Delete task","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"            return parseDelete(splitInput);","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"            return parseTodo(splitInput);","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"            return parseDeadline(splitInput);","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        case \"event\":","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"            return parseEvent(splitInput);","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        case \"find\":","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"            return parseFind(splitInput);","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"        case \"archive\":","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"            return parseArchive(splitInput);","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"        case \"unarchive\":","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"            return parseUnarchive(splitInput);","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"        default:","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"            throw new InvalidCommandException(String.format(\"Unknown command \u0027%s\u0027\", splitInput.get(0)));","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"     * Parses a user input to list tasks in the application","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"     * @param splitInput Options from the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"     * @return Application command associated with the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"RyanNgWH"},"content":"     * @throws InvalidArgumentException Invalid argument was entered by the user","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"RyanNgWH"},"content":"    private static Command parseList(ArrayList\u003cString\u003e splitInput) throws InvalidArgumentException {","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"RyanNgWH"},"content":"        if (splitInput.size() \u003e 1) { // List filtered tasks","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"RyanNgWH"},"content":"            boolean isArchived \u003d false;","lastModifiedDate":"2024-02-16"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"            if (splitInput.get(1).equals(\"/archive\")) {","lastModifiedDate":"2024-02-16"},{"lineNumber":121,"author":{"gitId":"RyanNgWH"},"content":"                isArchived \u003d true;","lastModifiedDate":"2024-02-16"},{"lineNumber":122,"author":{"gitId":"RyanNgWH"},"content":"                splitInput.remove(1);","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":124,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":125,"author":{"gitId":"RyanNgWH"},"content":"            if (splitInput.size() \u003c\u003d 1) {","lastModifiedDate":"2024-02-16"},{"lineNumber":126,"author":{"gitId":"RyanNgWH"},"content":"                return new ListCommand(isArchived);","lastModifiedDate":"2024-02-16"},{"lineNumber":127,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":128,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":129,"author":{"gitId":"RyanNgWH"},"content":"            switch (splitInput.get(1)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"RyanNgWH"},"content":"            case \"/date\": // Filter by date","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"RyanNgWH"},"content":"                try {","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"RyanNgWH"},"content":"                    Instant filterDate \u003d userDateToInstant(splitInput.get(2), \"00:00\");","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"RyanNgWH"},"content":"                    return new ListCommand(filterDate, isArchived);","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"RyanNgWH"},"content":"                } catch (NumberFormatException | DateTimeException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"RyanNgWH"},"content":"                    throw new InvalidArgumentException(","lastModifiedDate":"2024-01-28"},{"lineNumber":137,"author":{"gitId":"RyanNgWH"},"content":"                            \"Date/time format is invalid. Please enter the date/time in the format \u0027YYYY/MM/DD\u0027\");","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"RyanNgWH"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"RyanNgWH"},"content":"            default: // Invalid filter","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"RyanNgWH"},"content":"                throw new InvalidArgumentException(","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"RyanNgWH"},"content":"                        String.format(\"Unknown argument \u0027%s\u0027 for the \u0027list\u0027 command\", splitInput.get(1)));","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":144,"author":{"gitId":"RyanNgWH"},"content":"        } else { // Return full list","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"RyanNgWH"},"content":"            return new ListCommand(false);","lastModifiedDate":"2024-02-16"},{"lineNumber":146,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"RyanNgWH"},"content":"     * Parses a user input to mark tasks in the application","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"RyanNgWH"},"content":"     * @param splitInput Options from the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":153,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":154,"author":{"gitId":"RyanNgWH"},"content":"     * @return Application command associated with the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":157,"author":{"gitId":"RyanNgWH"},"content":"     * @throws MissingArgumentException Missing argument in the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"RyanNgWH"},"content":"     * @throws InvalidArgumentException Invalid argument was entered by the user","lastModifiedDate":"2024-02-23"},{"lineNumber":159,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"RyanNgWH"},"content":"    private static Command parseMark(ArrayList\u003cString\u003e splitInput)","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"RyanNgWH"},"content":"            throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2024-02-23"},{"lineNumber":162,"author":{"gitId":"RyanNgWH"},"content":"        if (splitInput.size() \u003c\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"RyanNgWH"},"content":"            throw new MissingArgumentException(\"Missing argument - Index of task required\");","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":165,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":166,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":167,"author":{"gitId":"RyanNgWH"},"content":"            return new MarkCommand(Integer.parseInt(splitInput.get(1)) - 1, true);","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"RyanNgWH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":169,"author":{"gitId":"RyanNgWH"},"content":"            throw new InvalidArgumentException(\"Index to mark is not an integer\");","lastModifiedDate":"2024-01-28"},{"lineNumber":170,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":171,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":172,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":173,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":174,"author":{"gitId":"RyanNgWH"},"content":"     * Parses a user input to unmark tasks in the application","lastModifiedDate":"2024-02-23"},{"lineNumber":175,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":176,"author":{"gitId":"RyanNgWH"},"content":"     * @param splitInput Options from the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":177,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":178,"author":{"gitId":"RyanNgWH"},"content":"     * @return Application command associated with the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":179,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":180,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":181,"author":{"gitId":"RyanNgWH"},"content":"     * @throws MissingArgumentException Missing argument in the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":182,"author":{"gitId":"RyanNgWH"},"content":"     * @throws InvalidArgumentException Invalid argument was entered by the user","lastModifiedDate":"2024-02-23"},{"lineNumber":183,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":184,"author":{"gitId":"RyanNgWH"},"content":"    private static Command parseUnmark(ArrayList\u003cString\u003e splitInput)","lastModifiedDate":"2024-02-23"},{"lineNumber":185,"author":{"gitId":"RyanNgWH"},"content":"            throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2024-02-23"},{"lineNumber":186,"author":{"gitId":"RyanNgWH"},"content":"        if (splitInput.size() \u003c\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"RyanNgWH"},"content":"            throw new MissingArgumentException(\"Missing argument - Index of task required\");","lastModifiedDate":"2024-01-28"},{"lineNumber":188,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":189,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":190,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":191,"author":{"gitId":"RyanNgWH"},"content":"            return new MarkCommand(Integer.parseInt(splitInput.get(1)) - 1, false);","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"RyanNgWH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":193,"author":{"gitId":"RyanNgWH"},"content":"            throw new InvalidArgumentException(\"Index to unmark is not an integer\");","lastModifiedDate":"2024-01-28"},{"lineNumber":194,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":195,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":196,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":197,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":198,"author":{"gitId":"RyanNgWH"},"content":"     * Parses a user input to delete tasks in the application","lastModifiedDate":"2024-02-23"},{"lineNumber":199,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":200,"author":{"gitId":"RyanNgWH"},"content":"     * @param splitInput Options from the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":201,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":202,"author":{"gitId":"RyanNgWH"},"content":"     * @return Application command associated with the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":203,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":204,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":205,"author":{"gitId":"RyanNgWH"},"content":"     * @throws MissingArgumentException Missing argument in the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":206,"author":{"gitId":"RyanNgWH"},"content":"     * @throws InvalidArgumentException Invalid argument was entered by the user","lastModifiedDate":"2024-02-23"},{"lineNumber":207,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":208,"author":{"gitId":"RyanNgWH"},"content":"    private static Command parseDelete(ArrayList\u003cString\u003e splitInput)","lastModifiedDate":"2024-02-23"},{"lineNumber":209,"author":{"gitId":"RyanNgWH"},"content":"            throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2024-02-23"},{"lineNumber":210,"author":{"gitId":"RyanNgWH"},"content":"        if (splitInput.size() \u003c\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":211,"author":{"gitId":"RyanNgWH"},"content":"            throw new MissingArgumentException(\"Missing argument - Index of task required\");","lastModifiedDate":"2024-01-28"},{"lineNumber":212,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":213,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":214,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":215,"author":{"gitId":"RyanNgWH"},"content":"            return new DeleteCommand(Integer.parseInt(splitInput.get(1)) - 1, false);","lastModifiedDate":"2024-02-16"},{"lineNumber":216,"author":{"gitId":"RyanNgWH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":217,"author":{"gitId":"RyanNgWH"},"content":"            throw new InvalidArgumentException(\"Index to delete is not an integer\");","lastModifiedDate":"2024-01-29"},{"lineNumber":218,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":219,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":220,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":221,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":222,"author":{"gitId":"RyanNgWH"},"content":"     * Parses a user input to create a todo task in the application","lastModifiedDate":"2024-02-23"},{"lineNumber":223,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":224,"author":{"gitId":"RyanNgWH"},"content":"     * @param splitInput  Options from the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":225,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":226,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":227,"author":{"gitId":"RyanNgWH"},"content":"     * @return Application command associated with the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":228,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":229,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":230,"author":{"gitId":"RyanNgWH"},"content":"     * @throws MissingArgumentException Missing argument in the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":231,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":232,"author":{"gitId":"RyanNgWH"},"content":"    private static Command parseTodo(ArrayList\u003cString\u003e splitInput) throws MissingArgumentException {","lastModifiedDate":"2024-02-23"},{"lineNumber":233,"author":{"gitId":"RyanNgWH"},"content":"        if (splitInput.size() \u003c\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":234,"author":{"gitId":"RyanNgWH"},"content":"            throw new MissingArgumentException(\"Missing argument - Description of a todo cannot be empty\");","lastModifiedDate":"2024-01-29"},{"lineNumber":235,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":236,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":237,"author":{"gitId":"RyanNgWH"},"content":"        String description \u003d String.join(\" \", splitInput.subList(1, splitInput.size()));","lastModifiedDate":"2024-02-23"},{"lineNumber":238,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":239,"author":{"gitId":"RyanNgWH"},"content":"        // Return new add todo command","lastModifiedDate":"2024-01-29"},{"lineNumber":240,"author":{"gitId":"RyanNgWH"},"content":"        return new AddCommand(new Todo(description));","lastModifiedDate":"2024-01-29"},{"lineNumber":241,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":242,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":243,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":244,"author":{"gitId":"RyanNgWH"},"content":"     * Parses a user input to create a deadline task in the application","lastModifiedDate":"2024-02-23"},{"lineNumber":245,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":246,"author":{"gitId":"RyanNgWH"},"content":"     * @param splitInput  Options from the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":247,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":248,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":249,"author":{"gitId":"RyanNgWH"},"content":"     * @return Application command associated with the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":250,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":251,"author":{"gitId":"RyanNgWH"},"content":"     * @throws MissingArgumentException Missing argument in the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":252,"author":{"gitId":"RyanNgWH"},"content":"     * @throws InvalidArgumentException Invalid argument was entered by the user","lastModifiedDate":"2024-02-23"},{"lineNumber":253,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":254,"author":{"gitId":"RyanNgWH"},"content":"    private static Command parseDeadline(ArrayList\u003cString\u003e splitInput)","lastModifiedDate":"2024-02-23"},{"lineNumber":255,"author":{"gitId":"RyanNgWH"},"content":"            throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2024-02-23"},{"lineNumber":256,"author":{"gitId":"RyanNgWH"},"content":"        // Get arguments","lastModifiedDate":"2024-01-29"},{"lineNumber":257,"author":{"gitId":"RyanNgWH"},"content":"        List\u003cString\u003e arguments \u003d splitInput.subList(1, splitInput.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":258,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":259,"author":{"gitId":"RyanNgWH"},"content":"        // Get index of \u0027/by\u0027 argument","lastModifiedDate":"2024-01-29"},{"lineNumber":260,"author":{"gitId":"RyanNgWH"},"content":"        int byIndex \u003d -1;","lastModifiedDate":"2024-01-29"},{"lineNumber":261,"author":{"gitId":"RyanNgWH"},"content":"        for (int i \u003d 0; i \u003c arguments.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":262,"author":{"gitId":"RyanNgWH"},"content":"            if (arguments.get(i).equals(\"/by\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":263,"author":{"gitId":"RyanNgWH"},"content":"                byIndex \u003d i;","lastModifiedDate":"2024-01-29"},{"lineNumber":264,"author":{"gitId":"RyanNgWH"},"content":"                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":265,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":266,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":267,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":268,"author":{"gitId":"RyanNgWH"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":269,"author":{"gitId":"RyanNgWH"},"content":"            throw new MissingArgumentException(\"Missing Argument - Argument \u0027/by\u0027 missing\");","lastModifiedDate":"2024-01-29"},{"lineNumber":270,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":271,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":272,"author":{"gitId":"RyanNgWH"},"content":"        // Extract task description \u0026 due date","lastModifiedDate":"2024-01-29"},{"lineNumber":273,"author":{"gitId":"RyanNgWH"},"content":"        String description \u003d String.join(\" \", arguments.subList(0, byIndex));","lastModifiedDate":"2024-02-23"},{"lineNumber":274,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":275,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":276,"author":{"gitId":"RyanNgWH"},"content":"            String date \u003d arguments.get(byIndex + 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":277,"author":{"gitId":"RyanNgWH"},"content":"            String time \u003d arguments.get(byIndex + 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":278,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":279,"author":{"gitId":"RyanNgWH"},"content":"            // Create new add deadline command","lastModifiedDate":"2024-01-29"},{"lineNumber":280,"author":{"gitId":"RyanNgWH"},"content":"            return new AddCommand(new Deadline(description, Parser.userDateToInstant(date, time)));","lastModifiedDate":"2024-01-29"},{"lineNumber":281,"author":{"gitId":"RyanNgWH"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":282,"author":{"gitId":"RyanNgWH"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2024-01-29"},{"lineNumber":283,"author":{"gitId":"RyanNgWH"},"content":"                    \"Date/time format is invalid. Please enter the date/time in the format \u0027YYYY/MM/DD hh:mm\u0027\");","lastModifiedDate":"2024-01-29"},{"lineNumber":284,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":285,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":286,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":287,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":288,"author":{"gitId":"RyanNgWH"},"content":"     * Parses a user input to create an event task in the application","lastModifiedDate":"2024-02-23"},{"lineNumber":289,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":290,"author":{"gitId":"RyanNgWH"},"content":"     * @param splitInput  Options from the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":291,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":292,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":293,"author":{"gitId":"RyanNgWH"},"content":"     * @return Application command associated with the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":294,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":295,"author":{"gitId":"RyanNgWH"},"content":"     * @throws MissingArgumentException Missing argument in the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":296,"author":{"gitId":"RyanNgWH"},"content":"     * @throws InvalidArgumentException Invalid argument was entered by the user","lastModifiedDate":"2024-02-23"},{"lineNumber":297,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":298,"author":{"gitId":"RyanNgWH"},"content":"    private static Command parseEvent(ArrayList\u003cString\u003e splitInput)","lastModifiedDate":"2024-02-23"},{"lineNumber":299,"author":{"gitId":"RyanNgWH"},"content":"            throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2024-02-23"},{"lineNumber":300,"author":{"gitId":"RyanNgWH"},"content":"        // Get arguments","lastModifiedDate":"2024-01-29"},{"lineNumber":301,"author":{"gitId":"RyanNgWH"},"content":"        List\u003cString\u003e arguments \u003d splitInput.subList(1, splitInput.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":302,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":303,"author":{"gitId":"RyanNgWH"},"content":"        // Get index of \u0027/from\u0027 and \u0027/to\u0027 argument","lastModifiedDate":"2024-01-29"},{"lineNumber":304,"author":{"gitId":"RyanNgWH"},"content":"        int fromIndex \u003d -1;","lastModifiedDate":"2024-01-29"},{"lineNumber":305,"author":{"gitId":"RyanNgWH"},"content":"        int toIndex \u003d -1;","lastModifiedDate":"2024-01-29"},{"lineNumber":306,"author":{"gitId":"RyanNgWH"},"content":"        for (int i \u003d 0; i \u003c arguments.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":307,"author":{"gitId":"RyanNgWH"},"content":"            if (fromIndex !\u003d -1 \u0026\u0026 toIndex !\u003d -1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":308,"author":{"gitId":"RyanNgWH"},"content":"                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":309,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":310,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":311,"author":{"gitId":"RyanNgWH"},"content":"            if (fromIndex \u003d\u003d -1 \u0026\u0026 arguments.get(i).equals(\"/from\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":312,"author":{"gitId":"RyanNgWH"},"content":"                fromIndex \u003d i;","lastModifiedDate":"2024-01-29"},{"lineNumber":313,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":314,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":315,"author":{"gitId":"RyanNgWH"},"content":"            if (toIndex \u003d\u003d -1 \u0026\u0026 arguments.get(i).equals(\"/to\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":316,"author":{"gitId":"RyanNgWH"},"content":"                toIndex \u003d i;","lastModifiedDate":"2024-01-29"},{"lineNumber":317,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":318,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":319,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":320,"author":{"gitId":"RyanNgWH"},"content":"        if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":321,"author":{"gitId":"RyanNgWH"},"content":"            throw new MissingArgumentException(\"Missing Argument - Argument \u0027/from\u0027 missing\");","lastModifiedDate":"2024-01-29"},{"lineNumber":322,"author":{"gitId":"RyanNgWH"},"content":"        } else if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":323,"author":{"gitId":"RyanNgWH"},"content":"            throw new MissingArgumentException(\"Missing Argument - Argument \u0027/to\u0027 missing\");","lastModifiedDate":"2024-01-29"},{"lineNumber":324,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":325,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":326,"author":{"gitId":"RyanNgWH"},"content":"        // Extract task description","lastModifiedDate":"2024-01-29"},{"lineNumber":327,"author":{"gitId":"RyanNgWH"},"content":"        String description \u003d String.join(\" \", arguments.subList(0, fromIndex));","lastModifiedDate":"2024-02-23"},{"lineNumber":328,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":329,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":330,"author":{"gitId":"RyanNgWH"},"content":"            // Extract start date","lastModifiedDate":"2024-01-29"},{"lineNumber":331,"author":{"gitId":"RyanNgWH"},"content":"            String fromDate \u003d arguments.get(fromIndex + 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":332,"author":{"gitId":"RyanNgWH"},"content":"            String fromTime \u003d arguments.get(fromIndex + 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":333,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":334,"author":{"gitId":"RyanNgWH"},"content":"            // Extract end date","lastModifiedDate":"2024-01-29"},{"lineNumber":335,"author":{"gitId":"RyanNgWH"},"content":"            String toDate \u003d arguments.get(toIndex + 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":336,"author":{"gitId":"RyanNgWH"},"content":"            String toTime \u003d arguments.get(toIndex + 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":337,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":338,"author":{"gitId":"RyanNgWH"},"content":"            // Create new add event command","lastModifiedDate":"2024-01-29"},{"lineNumber":339,"author":{"gitId":"RyanNgWH"},"content":"            return new AddCommand(new Event(description, Parser.userDateToInstant(fromDate, fromTime),","lastModifiedDate":"2024-01-29"},{"lineNumber":340,"author":{"gitId":"RyanNgWH"},"content":"                    Parser.userDateToInstant(toDate, toTime)));","lastModifiedDate":"2024-01-29"},{"lineNumber":341,"author":{"gitId":"RyanNgWH"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":342,"author":{"gitId":"RyanNgWH"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2024-01-29"},{"lineNumber":343,"author":{"gitId":"RyanNgWH"},"content":"                    \"Date/time format is invalid. Please enter the date/time in the format \u0027YYYY/MM/DD hh:mm\u0027\");","lastModifiedDate":"2024-01-29"},{"lineNumber":344,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":345,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":346,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":347,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":348,"author":{"gitId":"RyanNgWH"},"content":"     * Parses a user input to search for a task in the application","lastModifiedDate":"2024-02-23"},{"lineNumber":349,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":350,"author":{"gitId":"RyanNgWH"},"content":"     * @param splitInput  Options from the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":351,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":352,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":353,"author":{"gitId":"RyanNgWH"},"content":"     * @return Application command associated with the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":354,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":355,"author":{"gitId":"RyanNgWH"},"content":"    private static Command parseFind(ArrayList\u003cString\u003e splitInput) {","lastModifiedDate":"2024-02-23"},{"lineNumber":356,"author":{"gitId":"RyanNgWH"},"content":"        if (splitInput.size() \u003c\u003d 1) { // no arguments","lastModifiedDate":"2024-01-29"},{"lineNumber":357,"author":{"gitId":"RyanNgWH"},"content":"            return new FindCommand(false);","lastModifiedDate":"2024-02-16"},{"lineNumber":358,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":359,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":360,"author":{"gitId":"RyanNgWH"},"content":"        String keyword \u003d String.join(\" \", splitInput.subList(1, splitInput.size()));","lastModifiedDate":"2024-01-29"},{"lineNumber":361,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":362,"author":{"gitId":"RyanNgWH"},"content":"        // Return new add todo command","lastModifiedDate":"2024-01-29"},{"lineNumber":363,"author":{"gitId":"RyanNgWH"},"content":"        return new FindCommand(keyword, false);","lastModifiedDate":"2024-02-16"},{"lineNumber":364,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":365,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":366,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":367,"author":{"gitId":"RyanNgWH"},"content":"     * Parses a user input to archive a task in the application","lastModifiedDate":"2024-02-23"},{"lineNumber":368,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":369,"author":{"gitId":"RyanNgWH"},"content":"     * @param splitInput  Options from the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":370,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":371,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":372,"author":{"gitId":"RyanNgWH"},"content":"     * @return Application command associated with the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":373,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":374,"author":{"gitId":"RyanNgWH"},"content":"     * @throws MissingArgumentException Missing argument in the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":375,"author":{"gitId":"RyanNgWH"},"content":"     * @throws InvalidArgumentException Invalid argument was entered by the user","lastModifiedDate":"2024-02-23"},{"lineNumber":376,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":377,"author":{"gitId":"RyanNgWH"},"content":"    private static Command parseArchive(ArrayList\u003cString\u003e splitInput)","lastModifiedDate":"2024-02-23"},{"lineNumber":378,"author":{"gitId":"RyanNgWH"},"content":"            throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2024-02-23"},{"lineNumber":379,"author":{"gitId":"RyanNgWH"},"content":"        if (splitInput.size() \u003c\u003d 1) {","lastModifiedDate":"2024-02-16"},{"lineNumber":380,"author":{"gitId":"RyanNgWH"},"content":"            throw new MissingArgumentException(\"Missing argument - Index of task required\");","lastModifiedDate":"2024-02-16"},{"lineNumber":381,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":382,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":383,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":384,"author":{"gitId":"RyanNgWH"},"content":"            return new ArchiveCommand(Integer.parseInt(splitInput.get(1)) - 1, true);","lastModifiedDate":"2024-02-16"},{"lineNumber":385,"author":{"gitId":"RyanNgWH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":386,"author":{"gitId":"RyanNgWH"},"content":"            throw new InvalidArgumentException(\"Index to archive is not an integer\");","lastModifiedDate":"2024-02-16"},{"lineNumber":387,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":388,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":389,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":390,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":391,"author":{"gitId":"RyanNgWH"},"content":"     * Parses a user input to unarchive a task in the application","lastModifiedDate":"2024-02-23"},{"lineNumber":392,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":393,"author":{"gitId":"RyanNgWH"},"content":"     * @param splitInput  Options from the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":394,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":395,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":396,"author":{"gitId":"RyanNgWH"},"content":"     * @return Application command associated with the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":397,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":398,"author":{"gitId":"RyanNgWH"},"content":"     * @throws MissingArgumentException Missing argument in the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":399,"author":{"gitId":"RyanNgWH"},"content":"     * @throws InvalidArgumentException Invalid argument was entered by the user","lastModifiedDate":"2024-02-23"},{"lineNumber":400,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":401,"author":{"gitId":"RyanNgWH"},"content":"    private static Command parseUnarchive(ArrayList\u003cString\u003e splitInput)","lastModifiedDate":"2024-02-23"},{"lineNumber":402,"author":{"gitId":"RyanNgWH"},"content":"            throws MissingArgumentException, InvalidArgumentException {","lastModifiedDate":"2024-02-23"},{"lineNumber":403,"author":{"gitId":"RyanNgWH"},"content":"        if (splitInput.size() \u003c\u003d 1) {","lastModifiedDate":"2024-02-16"},{"lineNumber":404,"author":{"gitId":"RyanNgWH"},"content":"            throw new MissingArgumentException(\"Missing argument - Index of task required\");","lastModifiedDate":"2024-02-16"},{"lineNumber":405,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":406,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":407,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":408,"author":{"gitId":"RyanNgWH"},"content":"            return new ArchiveCommand(Integer.parseInt(splitInput.get(1)) - 1, false);","lastModifiedDate":"2024-02-16"},{"lineNumber":409,"author":{"gitId":"RyanNgWH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":410,"author":{"gitId":"RyanNgWH"},"content":"            throw new InvalidArgumentException(\"Index to unarchive is not an integer\");","lastModifiedDate":"2024-02-16"},{"lineNumber":411,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":412,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":413,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"RyanNgWH":413}},{"path":"src/main/java/ciara/storage/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.time.ZoneId;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * The Deadline class defines a \u0027Deadline\u0027 task used for the application","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     * Due date/time of the deadline task","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    private Instant dueDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a Deadline task","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     * @param dueDate     Due date of the deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"    public Deadline(String description, Instant dueDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.DEADLINE, false, false);","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a Deadline task","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"     * @param dueDate     Due date of the deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     * @param isCompleted Status of the deadline","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived  Visibility of the deadline","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    public Deadline(String description, Instant dueDate, boolean isCompleted, boolean isArchived) {","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.DEADLINE, isCompleted, false);","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a Deadline task","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"     * @param dueDate     Due date of the deadline (in epoch Milliseconds)","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     * @param isCompleted Status of the deadline","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived  Visibility of the deadline","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    public Deadline(String description, long dueDate, boolean isCompleted, boolean isArchived) {","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.DEADLINE, isCompleted, isArchived);","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        this.dueDate \u003d Instant.ofEpochMilli(dueDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * Gets the due date of the deadline (in epoch milliseconds)","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"     * @return Due date of the deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    public long getDueDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        return this.dueDate.toEpochMilli();","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"     * Checks if deadline is on the specified date","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"     * @param date Date to check against","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if deadline is on the specified date, false otherwise","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"    public boolean isOn(Instant date) {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        LocalDate dueDateLocal \u003d this.dueDate.atZone(ZoneId.of(\"+8\")).toLocalDate();","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        LocalDate dateLocal \u003d date.atZone(ZoneId.of(\"+8\")).toLocalDate();","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"        return dueDateLocal.equals(dateLocal);","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"     * String representation of a Deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"     * @return String representation of the Deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy hh:mma\")","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"                .withZone(ZoneId.of(\"+8\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), formatter.format(dueDate));","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"     * Indicates whether some other object is \"equal to\" this Deadline","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"     * @param obj Object to be checked against","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if equal, False otherwise","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"            Deadline task \u003d (Deadline) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"            return super.equals(task) \u0026\u0026 this.dueDate.equals(task.dueDate);","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"RyanNgWH":113}},{"path":"src/main/java/ciara/storage/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.time.ZoneId;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * The Event class defines a \u0027Event\u0027 task used for the application","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     * Start date/time of the Event task","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    private Instant startDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"     * End date/time of the Event task","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"    private Instant endDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     * Creates an Event task","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the event","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"     * @param startDate   Start date of the event","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"     * @param endDate     End date of the event","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    public Event(String description, Instant startDate, Instant endDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.EVENT, false, false);","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     * Creates an Event task","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     * @param startDate   Start date of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * @param endDate     End date of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     * @param isCompleted Status of the event","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived  Visibility of the event","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"    public Event(String description, Instant startDate, Instant endDate, boolean isCompleted, boolean isArchived) {","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.EVENT, isCompleted, isArchived);","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"     * Creates an Event task","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     * @param startDate   Start date of the event (in epoch milliseconds)","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * @param endDate     End date of the event (in epoch milliseconds)","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     * @param isCompleted Status of the event","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived  Visibility of the event","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    public Event(String description, long startDate, long endDate, boolean isCompleted, boolean isArchived) {","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.EVENT, isCompleted, isArchived);","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        this.startDate \u003d Instant.ofEpochMilli(startDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        this.endDate \u003d Instant.ofEpochMilli(endDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"     * Gets the start date of the event","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"     * @return Start date of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"    public long getStartDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        return this.startDate.toEpochMilli();","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"     * Gets the end date of the event","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"     * @return End date of the event","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"    public long getEndDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"        return this.endDate.toEpochMilli();","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"     * Checks if event encompasses the specified date","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"     * @param date Date to check against","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if event is encompasses specified date, false otherwise","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"    public boolean encompasses(Instant date) {","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        // Get dates in local time zone","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        LocalDate startDateLocal \u003d this.startDate.atZone(ZoneId.of(\"+8\")).toLocalDate();","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"        LocalDate endDateLocal \u003d this.endDate.atZone(ZoneId.of(\"+8\")).toLocalDate();","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"        LocalDate dateLocal \u003d date.atZone(ZoneId.of(\"+8\")).toLocalDate();","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"        boolean isBetweenDates \u003d dateLocal.isAfter(startDateLocal) \u0026\u0026 dateLocal.isBefore(endDateLocal);","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"        boolean isOnStartDate \u003d dateLocal.equals(startDateLocal);","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"        boolean isOnEndDate \u003d dateLocal.equals(endDateLocal);","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"        return isBetweenDates || isOnStartDate || isOnEndDate;","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"     * String representation of an event","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"     * @return String representation of the event","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy hh:mma\")","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"                .withZone(ZoneId.of(\"+8\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"RyanNgWH"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), formatter.format(startDate),","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"RyanNgWH"},"content":"                formatter.format(endDate));","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"     * Indicates whether some other object is \"equal to\" this Event","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"RyanNgWH"},"content":"     * @param obj Object to be checked against","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if equal, False otherwise","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"RyanNgWH"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"RyanNgWH"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"RyanNgWH"},"content":"            Event task \u003d (Event) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"RyanNgWH"},"content":"            return super.equals(task)","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"RyanNgWH"},"content":"                    \u0026\u0026 this.startDate.equals(task.startDate)","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"RyanNgWH"},"content":"                    \u0026\u0026 this.endDate.equals(task.endDate);","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"RyanNgWH"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"RyanNgWH":142}},{"path":"src/main/java/ciara/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import org.json.JSONArray;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import org.json.JSONException;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import org.json.JSONObject;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import org.json.JSONTokener;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.StorageException;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.TaskCorruptedException;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.TaskNotSupportedException;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Task.TaskType;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":" * The Storage class handles storing of application data to system","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"public class Storage {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     * Writes JSON array to file in JSON format","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"     * @param array JSON array to be written to file","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"     * @param file  Path of the file to write to","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    public static void saveToFile(JSONArray array, File file) throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        // Create file (if required)","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"        file.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"        assert file.canWrite(); // Ensure that file is writable","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"        // Write to file","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"        FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"        array.write(writer, 2, 0);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"        writer.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"     * Populates storage array from file in JSON format","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList TaskList to populate","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"     * @param file     File to load values from","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"    public static void loadFromFile(TaskList taskList, File file)","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"            throws TaskNotSupportedException, FileNotFoundException, TaskCorruptedException, StorageException {","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"        // Check if file is readable","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        if (!file.canRead()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"            throw new FileNotFoundException(\"File cannot be read\");","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"            // Read stored tasks from file","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"            FileInputStream input \u003d new FileInputStream(file);","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"            JSONArray jsonArray \u003d new JSONArray(new JSONTokener(input));","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"            // Populate storage array","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"            for (int i \u003d 0; i \u003c jsonArray.length(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"                // Get json entry","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"                JSONObject entry \u003d jsonArray.getJSONObject(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"                assert entry !\u003d null; // Entry should exist","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"                // Parse JSON entry to task","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"                Task task;","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"                switch (TaskType.valueOf(entry.getString(\"type\"))) {","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"                case TODO:","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"                    task \u003d new Todo(entry.getString(\"description\"),","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"                            entry.getBoolean(\"isCompleted\"),","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"                            entry.getBoolean(\"isArchived\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"                case DEADLINE:","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"                    task \u003d new Deadline(entry.getString(\"description\"),","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"                            entry.getLong(\"dueDate\"),","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"                            entry.getBoolean(\"isCompleted\"),","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"                            entry.getBoolean(\"isArchived\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"                case EVENT:","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"                    task \u003d new Event(entry.getString(\"description\"),","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"                            entry.getLong(\"startDate\"),","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"                            entry.getLong(\"endDate\"),","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"                            entry.getBoolean(\"isCompleted\"),","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"                            entry.getBoolean(\"isArchived\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"                default:","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"                    throw new TaskNotSupportedException(","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"                            String.format(\"Task \u0027%s\u0027 not currently supported\", entry.getString(\"type\")));","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"                assert task !\u003d null; // Task should exist","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"                // Add task to storage array","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"                taskList.addTask(task, task.getIsArchived());","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"        } catch (IllegalArgumentException | JSONException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"            throw new TaskCorruptedException(\"Task corrupted, will not be loaded\");","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"RyanNgWH":105}},{"path":"src/main/java/ciara/storage/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The Task class defined a task used for the application","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"     * Type of task supported by the application","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    public enum TaskType {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"        TODO,","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"        DEADLINE,","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"        EVENT","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"     * Type of task","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    private final TaskType type;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     * Description of the task","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    private String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"     * Status of the task (Done/not done)","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    private boolean isCompleted;","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"     * Visibility of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    private boolean isArchived;","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a task","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the task","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * @param type        Type of task","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     * @param isCompleted Status of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived  Visibility of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"    protected Task(String description, TaskType type, boolean isCompleted, boolean isArchived) {","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        this.isArchived \u003d isArchived;","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"     * Gets the type of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     * @return Type of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"    public TaskType getType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        return this.type;","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"     * Gets the description of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"     * @return Description of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        return this.description;","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"     * Gets the status of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"     * @return Status of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"    public boolean getIsCompleted() {","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        return this.isCompleted;","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"     * Gets the visibility of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"     * @return Visibility of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"    public boolean getIsArchived() {","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"        return this.isArchived;","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"     * Marks the task as done","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"    public void mark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"     * Marks the task as not done","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"     * Archives the task","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"    public void archive() {","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"        this.isArchived \u003d true;","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"     * Unarchives the task","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"    public void unarchive() {","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"        this.isArchived \u003d false;","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"RyanNgWH"},"content":"     * Checks if task description contains keyword","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"     * @param keyword Keyword to check against","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if description contains keyword, false otherwise","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"RyanNgWH"},"content":"    public boolean descriptionContains(String keyword) {","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"RyanNgWH"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"RyanNgWH"},"content":"     * String representation of a Task","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"RyanNgWH"},"content":"     * @return String representation of the Task","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"RyanNgWH"},"content":"        return String.format(\"[%s] %s\", isCompleted ? \"X\" : \" \", description);","lastModifiedDate":"2024-02-15"},{"lineNumber":136,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"RyanNgWH"},"content":"     * Indicates whether some other object is \"equal to\" this Task","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"RyanNgWH"},"content":"     * @param obj Object to be checked against","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if equal, False otherwise","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"RyanNgWH"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"RyanNgWH"},"content":"        if (obj instanceof Task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"RyanNgWH"},"content":"            Task task \u003d (Task) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"RyanNgWH"},"content":"            return this.type.equals(task.type)","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"RyanNgWH"},"content":"                    \u0026\u0026 this.description.equals(task.description)","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"RyanNgWH"},"content":"                    \u0026\u0026 this.isCompleted \u003d\u003d task.isCompleted;","lastModifiedDate":"2024-02-15"},{"lineNumber":157,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"RyanNgWH"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"RyanNgWH":161}},{"path":"src/main/java/ciara/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import java.util.List;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import org.json.JSONArray;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"import ciara.Ciara;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.MissingTaskException;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.StorageException;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.TaskCorruptedException;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.TaskNotSupportedException;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Cli;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":" * The TaskList class handles storing of tasks required for","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":" * the application","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"public class TaskList {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     * Array used to store tasks for the application","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"    private ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     * Array used to store archived tasks for the application","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    private ArrayList\u003cTask\u003e archivedTaskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a new task list with values loaded from a file","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * @param file File to load tasks from","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    public TaskList(File file) {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"            Storage.loadFromFile(this, file);","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        } catch (TaskNotSupportedException | TaskCorruptedException | FileNotFoundException | StorageException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"            Cli.printLoadFromFileWarning();","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"     * Gets the number of stored tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     * @return Number of stored tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"    public int size() {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"        return taskArray.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"     * Adds a task","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"     * @param task       Task to be added","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived Visibility of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"    public void addTask(Task task, boolean isArchived) throws StorageException {","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        if (isArchived) {","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"            archivedTaskArray.add(task);","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"            taskArray.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        // Save to file","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        saveTasks();","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"     * Removes an item from task list","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"     * @param deleteIndex Index of the item to delete","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived  Visibility of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"     * @return Deleted task","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"    public Task deleteTask(int deleteIndex, boolean isArchived) throws StorageException, MissingTaskException {","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"            Task deletedTask;","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"            if (isArchived) {","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"                deletedTask \u003d archivedTaskArray.remove(deleteIndex);","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"            } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"                deletedTask \u003d taskArray.remove(deleteIndex);","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"            // Save to file","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"            saveTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"            return deletedTask;","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"            throw new MissingTaskException(\"Task does not exist\");","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"     * Marks a task as completed/uncompleted","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"     * @param markIndex   Index of the item to mark","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"     * @param isCompleted Status of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"     * @return Task succesfully marked as completed","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"    public Task markTask(int markIndex, boolean isCompleted) throws StorageException, MissingTaskException {","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"            if (isCompleted) { // Mark task","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"RyanNgWH"},"content":"                taskArray.get(markIndex).mark();","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"RyanNgWH"},"content":"            } else { // Unmark task","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"RyanNgWH"},"content":"                taskArray.get(markIndex).unmark();","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"            // Save to file","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"RyanNgWH"},"content":"            saveTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"RyanNgWH"},"content":"            return taskArray.get(markIndex);","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"RyanNgWH"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"RyanNgWH"},"content":"            throw new MissingTaskException(\"Task does not exist\");","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"RyanNgWH"},"content":"     * Gets all items in storage","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived Visibility of the tasks to retrieve","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"RyanNgWH"},"content":"     * @return String containing all items in storage","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"RyanNgWH"},"content":"    public String getTasks(boolean isArchived) {","lastModifiedDate":"2024-02-15"},{"lineNumber":137,"author":{"gitId":"RyanNgWH"},"content":"        ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"RyanNgWH"},"content":"        if (isArchived) {","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"RyanNgWH"},"content":"            taskList \u003d archivedTaskArray;","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"RyanNgWH"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":141,"author":{"gitId":"RyanNgWH"},"content":"            taskList \u003d taskArray;","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":144,"author":{"gitId":"RyanNgWH"},"content":"        return getTasksString(taskList);","lastModifiedDate":"2024-02-15"},{"lineNumber":145,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"RyanNgWH"},"content":"     * Gets all items in storage filtered by date","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":150,"author":{"gitId":"RyanNgWH"},"content":"     * @param date       Date to filter","lastModifiedDate":"2024-01-28"},{"lineNumber":151,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived Visibility of the tasks","lastModifiedDate":"2024-02-15"},{"lineNumber":152,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"RyanNgWH"},"content":"     * @return String containing filtered items","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":155,"author":{"gitId":"RyanNgWH"},"content":"    public String getTasks(Instant date, boolean isArchived) throws InvalidArgumentException {","lastModifiedDate":"2024-02-15"},{"lineNumber":156,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":157,"author":{"gitId":"RyanNgWH"},"content":"            List\u003cTask\u003e filteredTasks;","lastModifiedDate":"2024-02-15"},{"lineNumber":158,"author":{"gitId":"RyanNgWH"},"content":"            if (isArchived) {","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"RyanNgWH"},"content":"                filteredTasks \u003d archivedTaskArray.stream()","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"RyanNgWH"},"content":"                        .filter(task -\u003e {","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"RyanNgWH"},"content":"                            boolean validDeadline \u003d task instanceof Deadline \u0026\u0026 ((Deadline) task).isOn(date);","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"RyanNgWH"},"content":"                            boolean validEvent \u003d task instanceof Event \u0026\u0026 ((Event) task).encompasses(date);","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"RyanNgWH"},"content":"                            return validDeadline || validEvent;","lastModifiedDate":"2024-02-15"},{"lineNumber":165,"author":{"gitId":"RyanNgWH"},"content":"                        })","lastModifiedDate":"2024-02-15"},{"lineNumber":166,"author":{"gitId":"RyanNgWH"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2024-02-15"},{"lineNumber":167,"author":{"gitId":"RyanNgWH"},"content":"            } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":168,"author":{"gitId":"RyanNgWH"},"content":"                filteredTasks \u003d taskArray.stream()","lastModifiedDate":"2024-02-15"},{"lineNumber":169,"author":{"gitId":"RyanNgWH"},"content":"                        .filter(task -\u003e {","lastModifiedDate":"2024-02-15"},{"lineNumber":170,"author":{"gitId":"RyanNgWH"},"content":"                            boolean validDeadline \u003d task instanceof Deadline \u0026\u0026 ((Deadline) task).isOn(date);","lastModifiedDate":"2024-02-15"},{"lineNumber":171,"author":{"gitId":"RyanNgWH"},"content":"                            boolean validEvent \u003d task instanceof Event \u0026\u0026 ((Event) task).encompasses(date);","lastModifiedDate":"2024-02-15"},{"lineNumber":172,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":173,"author":{"gitId":"RyanNgWH"},"content":"                            return validDeadline || validEvent;","lastModifiedDate":"2024-02-15"},{"lineNumber":174,"author":{"gitId":"RyanNgWH"},"content":"                        })","lastModifiedDate":"2024-02-15"},{"lineNumber":175,"author":{"gitId":"RyanNgWH"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2024-02-15"},{"lineNumber":176,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":177,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":178,"author":{"gitId":"RyanNgWH"},"content":"            return getTasksString(filteredTasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":179,"author":{"gitId":"RyanNgWH"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":180,"author":{"gitId":"RyanNgWH"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2024-01-28"},{"lineNumber":181,"author":{"gitId":"RyanNgWH"},"content":"                    \"Date/time format is invalid. Please enter the date/time in the format \u0027YYYY/MM/DD\u0027\");","lastModifiedDate":"2024-01-28"},{"lineNumber":182,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":183,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":186,"author":{"gitId":"RyanNgWH"},"content":"     * Gets all items in storage filtered by keyword","lastModifiedDate":"2024-02-23"},{"lineNumber":187,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"RyanNgWH"},"content":"     * @param keyword    Keyword to filter","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived Visibility of the tasks","lastModifiedDate":"2024-02-15"},{"lineNumber":190,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":191,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"RyanNgWH"},"content":"    public String getTasks(String keyword, boolean isArchived) {","lastModifiedDate":"2024-02-15"},{"lineNumber":193,"author":{"gitId":"RyanNgWH"},"content":"        List\u003cTask\u003e filteredTasks;","lastModifiedDate":"2024-02-15"},{"lineNumber":194,"author":{"gitId":"RyanNgWH"},"content":"        if (isArchived) {","lastModifiedDate":"2024-02-15"},{"lineNumber":195,"author":{"gitId":"RyanNgWH"},"content":"            filteredTasks \u003d archivedTaskArray.stream()","lastModifiedDate":"2024-02-15"},{"lineNumber":196,"author":{"gitId":"RyanNgWH"},"content":"                    .filter(task -\u003e task.descriptionContains(keyword))","lastModifiedDate":"2024-02-15"},{"lineNumber":197,"author":{"gitId":"RyanNgWH"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2024-02-15"},{"lineNumber":198,"author":{"gitId":"RyanNgWH"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":199,"author":{"gitId":"RyanNgWH"},"content":"            filteredTasks \u003d taskArray.stream()","lastModifiedDate":"2024-02-15"},{"lineNumber":200,"author":{"gitId":"RyanNgWH"},"content":"                    .filter(task -\u003e task.descriptionContains(keyword))","lastModifiedDate":"2024-02-15"},{"lineNumber":201,"author":{"gitId":"RyanNgWH"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2024-02-15"},{"lineNumber":202,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":203,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":204,"author":{"gitId":"RyanNgWH"},"content":"        return getTasksString(filteredTasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":205,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":206,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":207,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":208,"author":{"gitId":"RyanNgWH"},"content":"     * Archives or unarchives a task","lastModifiedDate":"2024-02-23"},{"lineNumber":209,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":210,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskIndex Index of the item to archive/unarchive","lastModifiedDate":"2024-02-15"},{"lineNumber":211,"author":{"gitId":"RyanNgWH"},"content":"     * @param toArchive Visibility to apply to the task","lastModifiedDate":"2024-02-15"},{"lineNumber":212,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":213,"author":{"gitId":"RyanNgWH"},"content":"     * @return Task succesfully archived/unarchived","lastModifiedDate":"2024-02-15"},{"lineNumber":214,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":215,"author":{"gitId":"RyanNgWH"},"content":"    public Task archiveTask(int taskIndex, boolean toArchive) throws StorageException, MissingTaskException {","lastModifiedDate":"2024-02-15"},{"lineNumber":216,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":217,"author":{"gitId":"RyanNgWH"},"content":"            Task task;","lastModifiedDate":"2024-02-15"},{"lineNumber":218,"author":{"gitId":"RyanNgWH"},"content":"            if (toArchive) { // Archive task","lastModifiedDate":"2024-02-15"},{"lineNumber":219,"author":{"gitId":"RyanNgWH"},"content":"                task \u003d taskArray.get(taskIndex);","lastModifiedDate":"2024-02-15"},{"lineNumber":220,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":221,"author":{"gitId":"RyanNgWH"},"content":"                // Remove task from taskArray","lastModifiedDate":"2024-02-15"},{"lineNumber":222,"author":{"gitId":"RyanNgWH"},"content":"                this.deleteTask(taskIndex, false);","lastModifiedDate":"2024-02-15"},{"lineNumber":223,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":224,"author":{"gitId":"RyanNgWH"},"content":"                // Add task to archived array","lastModifiedDate":"2024-02-15"},{"lineNumber":225,"author":{"gitId":"RyanNgWH"},"content":"                task.archive();","lastModifiedDate":"2024-02-15"},{"lineNumber":226,"author":{"gitId":"RyanNgWH"},"content":"                this.addTask(task, true);","lastModifiedDate":"2024-02-15"},{"lineNumber":227,"author":{"gitId":"RyanNgWH"},"content":"            } else { // Unarchive task","lastModifiedDate":"2024-02-15"},{"lineNumber":228,"author":{"gitId":"RyanNgWH"},"content":"                task \u003d archivedTaskArray.get(taskIndex);","lastModifiedDate":"2024-02-15"},{"lineNumber":229,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":230,"author":{"gitId":"RyanNgWH"},"content":"                // Remove task from archived array","lastModifiedDate":"2024-02-15"},{"lineNumber":231,"author":{"gitId":"RyanNgWH"},"content":"                this.deleteTask(taskIndex, true);","lastModifiedDate":"2024-02-15"},{"lineNumber":232,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":233,"author":{"gitId":"RyanNgWH"},"content":"                // Add task to taskArray","lastModifiedDate":"2024-02-15"},{"lineNumber":234,"author":{"gitId":"RyanNgWH"},"content":"                task.unarchive();","lastModifiedDate":"2024-02-15"},{"lineNumber":235,"author":{"gitId":"RyanNgWH"},"content":"                this.addTask(task, false);","lastModifiedDate":"2024-02-15"},{"lineNumber":236,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":237,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":238,"author":{"gitId":"RyanNgWH"},"content":"            // Save to file","lastModifiedDate":"2024-02-15"},{"lineNumber":239,"author":{"gitId":"RyanNgWH"},"content":"            saveTasks();","lastModifiedDate":"2024-02-15"},{"lineNumber":240,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":241,"author":{"gitId":"RyanNgWH"},"content":"            return task;","lastModifiedDate":"2024-02-15"},{"lineNumber":242,"author":{"gitId":"RyanNgWH"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":243,"author":{"gitId":"RyanNgWH"},"content":"            throw new MissingTaskException(\"Task does not exist\");","lastModifiedDate":"2024-02-15"},{"lineNumber":244,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":245,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":246,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":247,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":248,"author":{"gitId":"RyanNgWH"},"content":"     * Saves the current tasklist to file","lastModifiedDate":"2024-02-23"},{"lineNumber":249,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":250,"author":{"gitId":"RyanNgWH"},"content":"    public void saveTasks() throws StorageException {","lastModifiedDate":"2024-01-29"},{"lineNumber":251,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":252,"author":{"gitId":"RyanNgWH"},"content":"            // Save to file","lastModifiedDate":"2024-01-29"},{"lineNumber":253,"author":{"gitId":"RyanNgWH"},"content":"            JSONArray jsonArray \u003d new JSONArray(taskArray);","lastModifiedDate":"2024-01-29"},{"lineNumber":254,"author":{"gitId":"RyanNgWH"},"content":"            jsonArray.putAll(new JSONArray(archivedTaskArray));","lastModifiedDate":"2024-02-16"},{"lineNumber":255,"author":{"gitId":"RyanNgWH"},"content":"            Storage.saveToFile(jsonArray, Ciara.getSaveFile());","lastModifiedDate":"2024-02-23"},{"lineNumber":256,"author":{"gitId":"RyanNgWH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":257,"author":{"gitId":"RyanNgWH"},"content":"            throw new StorageException(String.format(\"Failed to save to file - %s\", e.getMessage()));","lastModifiedDate":"2024-01-29"},{"lineNumber":258,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":259,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":260,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":261,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":262,"author":{"gitId":"RyanNgWH"},"content":"     * Gets string representation of tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":263,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":264,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Task list whose string representation to get","lastModifiedDate":"2024-02-15"},{"lineNumber":265,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":266,"author":{"gitId":"RyanNgWH"},"content":"     * @return String representation of the specified tasklist","lastModifiedDate":"2024-02-15"},{"lineNumber":267,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":268,"author":{"gitId":"RyanNgWH"},"content":"    private String getTasksString(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-15"},{"lineNumber":269,"author":{"gitId":"RyanNgWH"},"content":"        StringBuilder tasks \u003d new StringBuilder();","lastModifiedDate":"2024-02-15"},{"lineNumber":270,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":271,"author":{"gitId":"RyanNgWH"},"content":"        IntStream","lastModifiedDate":"2024-02-15"},{"lineNumber":272,"author":{"gitId":"RyanNgWH"},"content":"                .range(0, taskList.size())","lastModifiedDate":"2024-02-16"},{"lineNumber":273,"author":{"gitId":"RyanNgWH"},"content":"                .mapToObj(index -\u003e String.format(\"%d.%s\\n\", index + 1, taskList.get(index).toString()))","lastModifiedDate":"2024-02-15"},{"lineNumber":274,"author":{"gitId":"RyanNgWH"},"content":"                .forEach(task -\u003e tasks.append(task));","lastModifiedDate":"2024-02-15"},{"lineNumber":275,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":276,"author":{"gitId":"RyanNgWH"},"content":"        // Remove trailing \u0027\\n\u0027 characters","lastModifiedDate":"2024-02-15"},{"lineNumber":277,"author":{"gitId":"RyanNgWH"},"content":"        if (tasks.lastIndexOf(\"\\n\") !\u003d -1) {","lastModifiedDate":"2024-02-15"},{"lineNumber":278,"author":{"gitId":"RyanNgWH"},"content":"            return tasks.substring(0, tasks.length() - 1);","lastModifiedDate":"2024-02-15"},{"lineNumber":279,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":280,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":281,"author":{"gitId":"RyanNgWH"},"content":"        return tasks.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":282,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":283,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":284,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":285,"author":{"gitId":"RyanNgWH"},"content":"     * Indicates whether some other object is \"equal to\" this TaskList","lastModifiedDate":"2024-01-29"},{"lineNumber":286,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":287,"author":{"gitId":"RyanNgWH"},"content":"     * @param obj Object to be checked against","lastModifiedDate":"2024-01-29"},{"lineNumber":288,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":289,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if equal, False otherwise","lastModifiedDate":"2024-01-29"},{"lineNumber":290,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":291,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":292,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":293,"author":{"gitId":"RyanNgWH"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":294,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":295,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":296,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":297,"author":{"gitId":"RyanNgWH"},"content":"        if (obj instanceof TaskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":298,"author":{"gitId":"RyanNgWH"},"content":"            TaskList taskList \u003d (TaskList) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":299,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":300,"author":{"gitId":"RyanNgWH"},"content":"            return this.taskArray.equals(taskList.taskArray);","lastModifiedDate":"2024-01-29"},{"lineNumber":301,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":302,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":303,"author":{"gitId":"RyanNgWH"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":304,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":305,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"RyanNgWH":305}},{"path":"src/main/java/ciara/storage/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":" * The Todo class defines a \u0027ToDo\u0027 task used for the application","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a Todo task","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the todo task","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.TODO, false, false);","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a Todo task","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     * @param description Description of the todo task","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     * @param isCompleted Status of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     * @param isArchived  Visibility of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"    public Todo(String description, boolean isCompleted, boolean isArchived) {","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"        super(description, TaskType.TODO, isCompleted, isArchived);","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"     * String representation of a Todo","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"     * @return String representation of the Todo","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     * Indicates whether some other object is \"equal to\" this Todo","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * @param obj Object to be checked against","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"     * @return True if equal, False otherwise","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"            return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        if (obj instanceof Todo) {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"            Todo task \u003d (Todo) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"            return super.equals(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"RyanNgWH":60}},{"path":"src/main/java/ciara/ui/Cli.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.Command;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import ciara.parser.Parser;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" * The UI CLI class handles the displaying of UI elements in the application","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" * using the command line","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"public class Cli extends Ui {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"     * Shared scanner for user input","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     * Displays the UI of the application","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist to use for the application","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     * @param args     Arguments for the application","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"    public void startUI(TaskList taskList, String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"        // Print greeting","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"        printGreeting();","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"                // Get user input","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"                String input \u003d readCommand();","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"                printDividerLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"                // Parse user input","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"                // Execute command","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"                command.execute(taskList, this);","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"                // Exit (if applicable)","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"            } catch (CiaraException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"                printError(e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"            } finally {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"                printDividerLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        sc.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"     * Prints warning on standard output when application fails to load tasks from","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"     * file","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    public static void printLoadFromFileWarning() {","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        System.out.println(\"WARNING: Failed to load from file, starting with empty list\");","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"     * Gets and return the user input from standard input.","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"     * @return User input from standard input","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"    private String readCommand() {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"     * Prints greeting on standard output","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"    private void printGreeting() {","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"        // UI Greeting","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"        String greeting \u003d \"Hello! I\u0027m Ciara\\n\"","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"        // Display greeting","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"        printDividerLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"        System.out.println(greeting);","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"        printDividerLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"     * Prints divider line on standard output","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"    private void printDividerLine() {","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"     * Prints error on standard output","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"     * @param message Error message to be printed","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"    private void printError(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"        System.out.println(String.format(\"ERROR: %s\", message));","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"RyanNgWH":105}},{"path":"src/main/java/ciara/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.Command;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import ciara.parser.Parser;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.gui.Main;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":" * The UI GUI class handles the displaying of UI elements in the application","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":" * using a graphical user interface","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"public class Gui extends Ui {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"     * Tasklist for the application","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"     * Gets the command associated with the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"     * @param input User input to be parsed","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"     * @return Relevant command for the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"    public Command getCommand(String input) throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"        // Parse user input","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"        return Parser.parse(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     * Gets the response from a command","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"     * @param command Command to be executed","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"     * @return String with the response from the application","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    public String getResponse(Command command) throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"        assert command !\u003d null; // Command should exist","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        // Execute command","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"        return command.execute(Gui.taskList);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     * Displays the UI of the application","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist to use for the application","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"     * @param args     Arguments for the application","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"    public void startUI(TaskList taskList, String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        Gui.taskList \u003d taskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"RyanNgWH":59}},{"path":"src/main/java/ciara/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":" * The UI class handles the displaying of UI elements in","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":" * the application","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"public abstract class Ui {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"     * Displays the UI of the application","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"     * @param taskList Tasklist to use for the application","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"     * @param args     Arguments for the application","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    public abstract void startUI(TaskList taskList, String[] args);","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"RyanNgWH":19}},{"path":"src/main/java/ciara/ui/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.ui.gui;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.StorageException;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":" * face and a label containing text from the speaker.","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    // Elements of the dialogbox","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    private HBox dialogContainer;","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"    private Circle displayCircle;","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    private DialogBox(String text, Image img) throws StorageException {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"            throw new StorageException(\"Could not load FXML file\");","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        displayCircle.setFill(new ImagePattern(img));","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"     * right.","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        dialogContainer.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a user dialog box","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"     * @param text    Text to display in the dialog box","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     * @param picture Picture to display in the dialog box","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"     * @return DialogBox for user input","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"    public static DialogBox getUserDialog(String text, Image picture) throws StorageException {","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        var dialogBox \u003d new DialogBox(text, picture);","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        return dialogBox;","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"     * Creates a ciara dialog box","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"     * @param text    Text to display in the dialog box","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"     * @param picture Picture to display in the dialog box","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"     * @return DialogBox for ciara response","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"    public static DialogBox getCiaraDialog(String text, Image picture) throws StorageException {","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"        var dialogBox \u003d new DialogBox(text, picture);","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"        dialogBox.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"        return dialogBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"RyanNgWH":91}},{"path":"src/main/java/ciara/ui/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.ui.gui;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.StorageException;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Gui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":" * A GUI for Ciara using FXML.","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    // GUI for the application","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"    private Gui gui \u003d new Gui();","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"    public void start(Stage stage) throws StorageException {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"            Scene scene \u003d new Scene(anchorPane);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setGui(gui);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"            throw new StorageException(\"Could not load FXML file\");","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"RyanNgWH":36}},{"path":"src/main/java/ciara/ui/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.ui.gui;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.Command;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.StorageException;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Gui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":" * Controller for MainWindow of the GUI. Provides the layout for the other","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":" * controls.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":" * @author Ryan NgWH","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"    // Elements of the main GUI window","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"    // Instance of the GUI","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"    private Gui gui;","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    // Images for the chatbot","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    private Image ciaraImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Ciara.jpg\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"     * Initializes the main window","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    public void initialize() throws StorageException {","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        // UI Greeting","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        String greeting \u003d \"Hello! I\u0027m Ciara\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"                DialogBox.getCiaraDialog(greeting, this.ciaraImage));","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     * Sets GUI instance of the main window","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     * @param gui GUI instance to set","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"    public void setGui(Gui gui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        this.gui \u003d gui;","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"     * Ciara\u0027s reply and then appends them to","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"    private void handleUserInput() throws StorageException {","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        String userText \u003d this.userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        String ciaraText \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        Boolean toExit \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"            Command command \u003d gui.getCommand(this.userInput.getText());","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"            if (command.isExit()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"                toExit \u003d true;","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"            ciaraText \u003d gui.getResponse(command);","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"        } catch (CiaraException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"            ciaraText \u003d String.format(\"Sorry! I got the following error:\\n %s\", e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"        } finally {","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"                    DialogBox.getUserDialog(userText, this.userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"                    DialogBox.getCiaraDialog(ciaraText, this.ciaraImage));","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"            this.userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"            if (toExit) {","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"                System.exit(0);","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"RyanNgWH":97}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"      \u003cHBox fx:id\u003d\"dialogContainer\" alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #fdfd96; -fx-background-radius: 30; -fx-border-radius: 30; -fx-border-color: black; -fx-border-width: 3;\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"          \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"              \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"      \u003cCircle fx:id\u003d\"displayCircle\" fill\u003d\"#2197ff\" radius\u003d\"50.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"3.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"RyanNgWH":30}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ciara.ui.gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #d3c7e9;\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"RyanNgWH":19}},{"path":"src/test/java/ciara/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance.Lifecycle;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"import ciara.Ciara;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Todo;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Cli;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":" * Test cases for methods in the AddCommand Class","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":" * @author RyanNgWH","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"@TestInstance(Lifecycle.PER_CLASS)","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"public class AddCommandTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"    // Streams for testing standard output","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    // Test file","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"    private final File testFile \u003d new File(\"data/tasksTest.json\");","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    // Environment for tests","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"     * Sets up streams to allow for System.out testing","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeAll","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     * Restores streams after tests","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"    @AfterAll","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"     * Creates testing environment for each test","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"    public void createEnvironment() {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        // Create data directory (if required)","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        testFile.getParentFile().mkdirs();","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        testFile.delete();","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        Ciara.setSaveFile(testFile);","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        taskList \u003d new TaskList(testFile);","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        ui \u003d new Cli();","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        outContent.reset();","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"     * Resets testing environment for each test","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"    @AfterEach","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"    public void resetEnvironment() {","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"        testFile.delete();","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful execute","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_validTask_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"                + \"  [T][ ] buy lunch\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"                + \"Now you have 1 tasks in the list.\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"        Task todo \u003d new Todo(\"buy lunch\");","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"        AddCommand addCommand \u003d new AddCommand(todo);","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"        addCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"RyanNgWH":101}},{"path":"src/test/java/ciara/commands/ArchiveCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.io.File;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance.Lifecycle;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"import ciara.Ciara;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Todo;","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Cli;","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":" * Test cases for methods in the ArchiveCommand Class","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":" * @author RyanNgWH","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"@TestInstance(Lifecycle.PER_CLASS)","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"public class ArchiveCommandTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    // Streams for testing standard output","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"    // Test file","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    private final File testFile \u003d new File(\"data/tasksTest.json\");","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    // Environment for tests","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     * Sets up streams to allow for System.out testing","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeAll","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * Restores streams after tests","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    @AfterAll","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"     * Creates testing environment for each test","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"    public void createEnvironment() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        // Create data directory (if required)","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        testFile.getParentFile().mkdirs();","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        testFile.delete();","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        Ciara.setSaveFile(testFile);","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        taskList \u003d new TaskList(testFile);","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"        ui \u003d new Cli();","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Todo(\"buy lunch\"), true);","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"eat lunch\", Instant.ofEpochSecond(1706513963)), false);","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Event(\"taengoo concert\", Instant.ofEpochSecond(1706521160), Instant.ofEpochSecond(","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"                1706528360)), false);","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"go school\", Instant.ofEpochSecond(1706614760)), false);","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"        outContent.reset();","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"     * Resets testing environment for each test","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"    @AfterEach","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"    public void resetEnvironment() {","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"        testFile.delete();","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful archival of task","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_archiveTask_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"Nice! I\u0027ve archived this task:\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"                + \"  [E][ ] taengoo concert (from: 29-Jan-2024 05:39PM to: 29-Jan-2024 07:39PM)\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"        ArchiveCommand archiveCommand \u003d new ArchiveCommand(1, true);","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"        archiveCommand.execute(taskList, ui);","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful unmarking of task as completed","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_unarchiveTask_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"Nice! I\u0027ve unarchived this task:\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"RyanNgWH"},"content":"                + \"  [T][ ] buy lunch\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"RyanNgWH"},"content":"        ArchiveCommand archiveCommand \u003d new ArchiveCommand(0, false);","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"RyanNgWH"},"content":"        archiveCommand.execute(taskList, ui);","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"RyanNgWH":122}},{"path":"src/test/java/ciara/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance.Lifecycle;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"import ciara.Ciara;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Todo;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Cli;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":" * Test cases for methods in the DeleteCommand Class","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":" * @author RyanNgWH","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"@TestInstance(Lifecycle.PER_CLASS)","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"    // Streams for testing standard output","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    // Test file","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"    private final File testFile \u003d new File(\"data/tasksTest.json\");","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    // Environment for tests","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"     * Sets up streams to allow for System.out testing","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeAll","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"     * Restores streams after tests","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"    @AfterAll","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"     * Creates testing environment for each test","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"    public void createEnvironment() {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        // Create data directory (if required)","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        testFile.getParentFile().mkdirs();","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        testFile.delete();","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        Ciara.setSaveFile(testFile);","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        taskList \u003d new TaskList(testFile);","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        ui \u003d new Cli();","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        outContent.reset();","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"     * Resets testing environment for each test","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"    @AfterEach","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"    public void resetEnvironment() {","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"        testFile.delete();","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful execute","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_validTask_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"                + \"  [T][ ] buy lunch\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"                + \"Now you have 0 tasks in the list.\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"        Task todo \u003d new Todo(\"buy lunch\");","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(todo, false);","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(0, false);","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"        deleteCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"RyanNgWH":102}},{"path":"src/test/java/ciara/commands/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance.Lifecycle;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Cli;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":" * Test cases for methods in the ExitCommand Class","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":" * @author RyanNgWH","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"@TestInstance(Lifecycle.PER_CLASS)","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"public class ExitCommandTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"    // Streams for testing standard output","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    // Test file","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    private final File testFile \u003d new File(\"data/tasksTest.json\");","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    // Environment for tests","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"     * Sets up streams to allow for System.out testing","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeAll","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"     * Restores streams after tests","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"    @AfterAll","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"     * Creates testing environment for each test","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    public void createEnvironment() {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"        taskList \u003d new TaskList(testFile);","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"        ui \u003d new Cli();","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"        outContent.reset();","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful execute","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_validCommand_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"        exitCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"RyanNgWH":81}},{"path":"src/test/java/ciara/commands/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance.Lifecycle;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"import ciara.Ciara;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Todo;","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Cli;","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":" * Test cases for methods in the FindCommand Class","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":" * @author RyanNgWH","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"@TestInstance(Lifecycle.PER_CLASS)","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"public class FindCommandTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    // Streams for testing standard output","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"    // Test file","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    private final File testFile \u003d new File(\"data/tasksTest.json\");","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    // Environment for tests","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     * Sets up streams to allow for System.out testing","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeAll","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * Restores streams after tests","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    @AfterAll","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"     * Creates testing environment for each test","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"    public void createEnvironment() {","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        // Create data directory (if required)","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        testFile.getParentFile().mkdirs();","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        testFile.delete();","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        Ciara.setSaveFile(testFile);","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        taskList \u003d new TaskList(testFile);","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"        ui \u003d new Cli();","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"        outContent.reset();","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"     * Resets testing environment for each test","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"    @AfterEach","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"    public void resetEnvironment() {","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"        testFile.delete();","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful execute without keyword with a","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"     * populated tasklist","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_noKeywordPopulated_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"1.[T][ ] buy lunch\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"                + \"2.[D][ ] eat lunch (by: 29-Jan-2024 03:39PM)\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"                + \"3.[E][ ] taengoo concert (from: 29-Jan-2024 05:39PM to: 29-Jan-2024 07:39PM)\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"                + \"4.[D][ ] go school (by: 30-Jan-2024 07:39PM)\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Todo(\"buy lunch\"), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"eat lunch\", Instant.ofEpochSecond(1706513963)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Event(\"taengoo concert\", Instant.ofEpochSecond(1706521160), Instant.ofEpochSecond(","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"                1706528360)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"go school\", Instant.ofEpochSecond(1706614760)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand findCommand \u003d new FindCommand(false);","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"        findCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful execute with a keyword and a","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"     * populated tasklist","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_keywordPopulated_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"1.[T][ ] buy lunch\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"RyanNgWH"},"content":"                + \"2.[D][ ] eat lunch (by: 29-Jan-2024 03:39PM)\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Todo(\"buy lunch\"), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":122,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"eat lunch\", Instant.ofEpochSecond(1706513963)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Event(\"taengoo concert\", Instant.ofEpochSecond(1706521160), Instant.ofEpochSecond(","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"RyanNgWH"},"content":"                1706528360)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":125,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"go school\", Instant.ofEpochSecond(1706614760)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":126,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand findCommand \u003d new FindCommand(\"lunch\", false);","lastModifiedDate":"2024-02-16"},{"lineNumber":128,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"RyanNgWH"},"content":"        findCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for empty result with a keyword and a","lastModifiedDate":"2024-02-23"},{"lineNumber":135,"author":{"gitId":"RyanNgWH"},"content":"     * populated tasklist","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_keywordPopulated_empty() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":139,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Todo(\"buy lunch\"), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":142,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"eat lunch\", Instant.ofEpochSecond(1706513963)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":143,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Event(\"taengoo concert\", Instant.ofEpochSecond(1706521160), Instant.ofEpochSecond(","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"RyanNgWH"},"content":"                1706528360)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":145,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"go school\", Instant.ofEpochSecond(1706614760)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":146,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand findCommand \u003d new FindCommand(\"Alonica\", false);","lastModifiedDate":"2024-02-16"},{"lineNumber":148,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"RyanNgWH"},"content":"        findCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful execute without keyword and an","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"RyanNgWH"},"content":"     * unpopulated tasklist","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_noKeywordUnpopulated_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":159,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand findCommand \u003d new FindCommand(false);","lastModifiedDate":"2024-02-16"},{"lineNumber":162,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"RyanNgWH"},"content":"        findCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful execute with keyword and an","lastModifiedDate":"2024-02-23"},{"lineNumber":169,"author":{"gitId":"RyanNgWH"},"content":"     * unpopulated tasklist","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_keywordUnpopulated_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":173,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"RyanNgWH"},"content":"        FindCommand findCommand \u003d new FindCommand(\"Alonica\", false);","lastModifiedDate":"2024-02-16"},{"lineNumber":176,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":177,"author":{"gitId":"RyanNgWH"},"content":"        findCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"RyanNgWH":180}},{"path":"src/test/java/ciara/commands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance.Lifecycle;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"import ciara.Ciara;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Todo;","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Cli;","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":" * Test cases for methods in the ListCommand Class","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":" * @author RyanNgWH","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"@TestInstance(Lifecycle.PER_CLASS)","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"public class ListCommandTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    // Streams for testing standard output","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"    // Test file","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    private final File testFile \u003d new File(\"data/tasksTest.json\");","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    // Environment for tests","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     * Sets up streams to allow for System.out testing","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeAll","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * Restores streams after tests","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    @AfterAll","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"     * Creates testing environment for each test","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"    public void createEnvironment() {","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        // Create data directory (if required)","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        testFile.getParentFile().mkdirs();","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        testFile.delete();","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        Ciara.setSaveFile(testFile);","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        taskList \u003d new TaskList(testFile);","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"        ui \u003d new Cli();","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"        outContent.reset();","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"     * Resets testing environment for each test","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"    @AfterEach","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"    public void resetEnvironment() {","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"        testFile.delete();","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful execute without filter with a","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"     * populated tasklist","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_noFiltersPopulated_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"1.[T][ ] buy lunch\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"                + \"2.[D][ ] eat lunch (by: 29-Jan-2024 03:39PM)\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"                + \"3.[E][ ] taengoo concert (from: 29-Jan-2024 05:39PM to: 29-Jan-2024 07:39PM)\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"                + \"4.[D][ ] go school (by: 30-Jan-2024 07:39PM)\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Todo(\"buy lunch\"), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"eat lunch\", Instant.ofEpochSecond(1706513963)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Event(\"taengoo concert\", Instant.ofEpochSecond(1706521160), Instant.ofEpochSecond(","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"                1706528360)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"go school\", Instant.ofEpochSecond(1706614760)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"        ListCommand listCommand \u003d new ListCommand(false);","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"        listCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful execute with a date filter and","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"     * a","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"RyanNgWH"},"content":"     * populated tasklist","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_dateFilterPopulated_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"1.[D][ ] eat lunch (by: 29-Jan-2024 03:39PM)\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"                + \"2.[E][ ] taengoo concert (from: 29-Jan-2024 05:39PM to: 29-Jan-2024 07:39PM)\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Todo(\"buy lunch\"), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"eat lunch\", Instant.ofEpochSecond(1706513963)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":124,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Event(\"taengoo concert\", Instant.ofEpochSecond(1706521160), Instant.ofEpochSecond(","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"RyanNgWH"},"content":"                1706528360)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":126,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"go school\", Instant.ofEpochSecond(1706614760)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":127,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"RyanNgWH"},"content":"        ListCommand listCommand \u003d new ListCommand(Instant.ofEpochSecond(1706513963), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":129,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"RyanNgWH"},"content":"        listCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for empty result with a date filter and a","lastModifiedDate":"2024-02-23"},{"lineNumber":136,"author":{"gitId":"RyanNgWH"},"content":"     * populated tasklist","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_dateFilterPopulated_empty() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":140,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Todo(\"buy lunch\"), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":143,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"eat lunch\", Instant.ofEpochSecond(1706513963)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":144,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Event(\"taengoo concert\", Instant.ofEpochSecond(1706521160), Instant.ofEpochSecond(","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"RyanNgWH"},"content":"                1706528360)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":146,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"go school\", Instant.ofEpochSecond(1706614760)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":147,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"RyanNgWH"},"content":"        ListCommand listCommand \u003d new ListCommand(Instant.ofEpochSecond(1707513963), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":149,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"RyanNgWH"},"content":"        listCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful execute without filter and an","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"RyanNgWH"},"content":"     * unpopulated tasklist","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_noFilterUnpopulated_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"RyanNgWH"},"content":"        ListCommand listCommand \u003d new ListCommand(false);","lastModifiedDate":"2024-02-16"},{"lineNumber":163,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"RyanNgWH"},"content":"        listCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful execute with filter and an","lastModifiedDate":"2024-02-23"},{"lineNumber":170,"author":{"gitId":"RyanNgWH"},"content":"     * unpopulated tasklist","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_dateFilterUnpopulated_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":174,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"RyanNgWH"},"content":"        ListCommand listCommand \u003d new ListCommand(Instant.ofEpochSecond(1706513963), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":177,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"RyanNgWH"},"content":"        listCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"RyanNgWH":181}},{"path":"src/test/java/ciara/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance.Lifecycle;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"import ciara.Ciara;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Todo;","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Cli;","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"import ciara.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":" * Test cases for methods in the MarkCommand Class","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":" * @author RyanNgWH","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"@TestInstance(Lifecycle.PER_CLASS)","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    // Streams for testing standard output","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"    // Test file","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"    private final File testFile \u003d new File(\"data/tasksTest.json\");","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"    // Environment for tests","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     * Sets up streams to allow for System.out testing","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeAll","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"     * Restores streams after tests","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"    @AfterAll","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"     * Creates testing environment for each test","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"    public void createEnvironment() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"        // Create data directory (if required)","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"        testFile.getParentFile().mkdirs();","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"        testFile.delete();","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"        Ciara.setSaveFile(testFile);","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"        taskList \u003d new TaskList(testFile);","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"        ui \u003d new Cli();","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Todo(\"buy lunch\"), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"eat lunch\", Instant.ofEpochSecond(1706513963)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Event(\"taengoo concert\", Instant.ofEpochSecond(1706521160), Instant.ofEpochSecond(","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"                1706528360)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"        taskList.addTask(new Deadline(\"go school\", Instant.ofEpochSecond(1706614760)), false);","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"        outContent.reset();","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"     * Resets testing environment for each test","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"    @AfterEach","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"    public void resetEnvironment() {","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"        testFile.delete();","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful marking of task as completed","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_markTask_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"                + \"  [E][X] taengoo concert (from: 29-Jan-2024 05:39PM to: 29-Jan-2024 07:39PM)\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"        MarkCommand markCommand \u003d new MarkCommand(2, true);","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"        markCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"     * Tests print to standard output for successful unmarking of task as completed","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"    public void execute_unmarkTask_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"        String expected \u003d \"Nice! I\u0027ve marked this task as not done:\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"RyanNgWH"},"content":"                + \"  [E][ ] taengoo concert (from: 29-Jan-2024 05:39PM to: 29-Jan-2024 07:39PM)\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"RyanNgWH"},"content":"        MarkCommand markCommand \u003d new MarkCommand(2, false);","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"RyanNgWH"},"content":"        markCommand.execute(taskList, ui);","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"RyanNgWH":122}},{"path":"src/test/java/ciara/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.parser;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance.Lifecycle;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.AddCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.Command;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.DeleteCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.ExitCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.FindCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.ListCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"import ciara.commands.MarkCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.InvalidCommandException;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.MissingArgumentException;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"import ciara.storage.Todo;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":" * Test cases for methods in the Parser Class","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":" * @author RyanNgWH","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"RyanNgWH"},"content":"@TestInstance(Lifecycle.PER_CLASS)","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"RyanNgWH"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"RyanNgWH"},"content":"     * Tests successful user date to instant conversion","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"RyanNgWH"},"content":"    public void userDateToInstant_validDate_success() {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"RyanNgWH"},"content":"        Instant expected \u003d Instant.ofEpochSecond(1706518200);","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"RyanNgWH"},"content":"        String date \u003d \"2024/01/29\";","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"RyanNgWH"},"content":"        String time \u003d \"16:50\";","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.userDateToInstant(date, time));","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of successful \u0027bye\u0027 command","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_bye_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"RyanNgWH"},"content":"        Command expected \u003d new ExitCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"bye\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"Bye\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of successful \u0027list\u0027 command without filters","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_listNoFilter_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"RyanNgWH"},"content":"        Command expected \u003d new ListCommand(false);","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"list\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"list \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"list  \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"  list  \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"List\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of successful \u0027list\u0027 command with date filter","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_listDateFilter_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"RyanNgWH"},"content":"        Command expected \u003d new ListCommand(Instant.ofEpochSecond(1706457600), false);","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"list /date 2024/01/29\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"list /date 2024/01/29 \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\" list /date 2024/01/29 \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"list  /date 2024/01/29\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"list /date  2024/01/29\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"List /date  2024/01/29\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of successful \u0027list\u0027 command of archived tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_listArchivedTasks_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"RyanNgWH"},"content":"        Command expected \u003d new ListCommand(true);","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"list /archive\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"list /archive \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"list /archive  \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"  list /archive  \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"List /archive\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of \u0027list\u0027 command with date filter with malformed date","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_listDateFilter_exceptionThrown() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"RyanNgWH"},"content":"        String expectedMessage \u003d \"Date/time format is invalid. Please enter the date/time in the format \u0027YYYY/MM/DD\u0027\";","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"RyanNgWH"},"content":"        InvalidArgumentException exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"list /date  \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"list /date 2024\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"list /date 2024-122-12\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"list /date 2024-25-25\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"list /date 12pm\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"list /date 12:00\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"List /date 12:00\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of \u0027list\u0027 command with of archived tasks with date filter","lastModifiedDate":"2024-02-23"},{"lineNumber":133,"author":{"gitId":"RyanNgWH"},"content":"     * with malformed date","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":135,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":136,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_listArchivedDateFilter_exceptionThrown() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"RyanNgWH"},"content":"        String expectedMessage \u003d \"Date/time format is invalid. Please enter the date/time in the format \u0027YYYY/MM/DD\u0027\";","lastModifiedDate":"2024-02-23"},{"lineNumber":138,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":139,"author":{"gitId":"RyanNgWH"},"content":"        InvalidArgumentException exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":140,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"list /archive /date  \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":141,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":142,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":143,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"list /archive /date 2024\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":145,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":146,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"list /archive /date 2024-122-12\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"list /archive /date 2024-25-25\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"list /archive /date 12pm\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":153,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":154,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"list /archive /date 12:00\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":157,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"List /archive /date 12:00\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":159,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":162,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":163,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of \u0027list\u0027 command with unknown filter","lastModifiedDate":"2024-02-23"},{"lineNumber":164,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":165,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":166,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_listUnknownFilter_exceptionThrown() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":167,"author":{"gitId":"RyanNgWH"},"content":"        String expectedMessage \u003d \"Unknown argument \u0027fake\u0027 for the \u0027list\u0027 command\";","lastModifiedDate":"2024-02-23"},{"lineNumber":168,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":169,"author":{"gitId":"RyanNgWH"},"content":"        InvalidArgumentException exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":170,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"list fake  \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":171,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":172,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":173,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":174,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"List fake\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":175,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":176,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":177,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":178,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":179,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of \u0027list\u0027 command of archived tasks with unknown filter","lastModifiedDate":"2024-02-23"},{"lineNumber":180,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":181,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":182,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_listArchivedUnknownFilter_exceptionThrown() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":183,"author":{"gitId":"RyanNgWH"},"content":"        String expectedMessage \u003d \"Unknown argument \u0027fake\u0027 for the \u0027list\u0027 command\";","lastModifiedDate":"2024-02-23"},{"lineNumber":184,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":185,"author":{"gitId":"RyanNgWH"},"content":"        InvalidArgumentException exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":186,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"list /archive fake  \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":187,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":188,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":189,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":190,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"List /archive fake\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":191,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":192,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":193,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":194,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":195,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of successful \u0027mark\u0027 command","lastModifiedDate":"2024-02-23"},{"lineNumber":196,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":197,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":198,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_mark_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":199,"author":{"gitId":"RyanNgWH"},"content":"        Command expected \u003d new MarkCommand(0, true);","lastModifiedDate":"2024-02-23"},{"lineNumber":200,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":201,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"mark 1\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":202,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"mark 1 \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":203,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\" mark 1\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":204,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\" mark 1 \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":205,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"Mark 1\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":206,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":207,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":208,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":209,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of \u0027mark\u0027 command with missing/malformed argument","lastModifiedDate":"2024-02-23"},{"lineNumber":210,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":211,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":212,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_mark_exceptionThrown() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":213,"author":{"gitId":"RyanNgWH"},"content":"        String expectedMessage \u003d \"Missing argument - Index of task required\";","lastModifiedDate":"2024-02-23"},{"lineNumber":214,"author":{"gitId":"RyanNgWH"},"content":"        MissingArgumentException missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":215,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"mark\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":216,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":217,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":218,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":219,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"mark \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":220,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":221,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":222,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":223,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\" mark\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":224,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":225,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":226,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":227,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\" mark \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":228,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":229,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":230,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":231,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"Mark\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":232,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":233,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":234,"author":{"gitId":"RyanNgWH"},"content":"        expectedMessage \u003d \"Index to mark is not an integer\";","lastModifiedDate":"2024-02-23"},{"lineNumber":235,"author":{"gitId":"RyanNgWH"},"content":"        InvalidArgumentException invalidException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":236,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"mark me\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":237,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":238,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":239,"author":{"gitId":"RyanNgWH"},"content":"        invalidException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":240,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"mark me \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":241,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":242,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":243,"author":{"gitId":"RyanNgWH"},"content":"        invalidException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":244,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\" mark me\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":245,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":246,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":247,"author":{"gitId":"RyanNgWH"},"content":"        invalidException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":248,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\" mark me \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":249,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":250,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":251,"author":{"gitId":"RyanNgWH"},"content":"        invalidException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":252,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"Mark me\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":253,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":254,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":255,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":256,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":257,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of successful \u0027unmark\u0027 command","lastModifiedDate":"2024-02-23"},{"lineNumber":258,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":259,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":260,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_unmark_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":261,"author":{"gitId":"RyanNgWH"},"content":"        Command expected \u003d new MarkCommand(0, false);","lastModifiedDate":"2024-02-23"},{"lineNumber":262,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":263,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"unmark 1\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":264,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"unmark 1 \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":265,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\" unmark 1\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":266,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\" unmark 1 \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":267,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"Unmark 1\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":268,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":269,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":270,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":271,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of \u0027unmark\u0027 command with missing/malformed argument","lastModifiedDate":"2024-02-23"},{"lineNumber":272,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":273,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":274,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_unmark_exceptionThrown() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":275,"author":{"gitId":"RyanNgWH"},"content":"        String expectedMessage \u003d \"Missing argument - Index of task required\";","lastModifiedDate":"2024-02-23"},{"lineNumber":276,"author":{"gitId":"RyanNgWH"},"content":"        MissingArgumentException missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":277,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"unmark\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":278,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":279,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":280,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(MissingArgumentException.class, () -\u003e Parser.parse(\"unmark \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":281,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":282,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":283,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(MissingArgumentException.class, () -\u003e Parser.parse(\" unmark\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":284,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":285,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":286,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(MissingArgumentException.class, () -\u003e Parser.parse(\" unmark \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":287,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":288,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":289,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(MissingArgumentException.class, () -\u003e Parser.parse(\"Unmark\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":290,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":291,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":292,"author":{"gitId":"RyanNgWH"},"content":"        expectedMessage \u003d \"Index to unmark is not an integer\";","lastModifiedDate":"2024-02-23"},{"lineNumber":293,"author":{"gitId":"RyanNgWH"},"content":"        InvalidArgumentException invalidException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":294,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"unmark me\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":295,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":296,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":297,"author":{"gitId":"RyanNgWH"},"content":"        invalidException \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"unmark me \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":298,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":299,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":300,"author":{"gitId":"RyanNgWH"},"content":"        invalidException \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\" unmark me\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":301,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":302,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":303,"author":{"gitId":"RyanNgWH"},"content":"        invalidException \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\" unmark me \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":304,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":305,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":306,"author":{"gitId":"RyanNgWH"},"content":"        invalidException \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"Unmark me\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":307,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":308,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":309,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":310,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":311,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of successful \u0027delete\u0027 command","lastModifiedDate":"2024-02-23"},{"lineNumber":312,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":313,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":314,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_delete_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":315,"author":{"gitId":"RyanNgWH"},"content":"        Command expected \u003d new DeleteCommand(0, false);","lastModifiedDate":"2024-02-23"},{"lineNumber":316,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":317,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"delete 1\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":318,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"delete 1 \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":319,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\" delete 1\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":320,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\" delete 1 \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":321,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"delete  1\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":322,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"Delete 1\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":323,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":324,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":325,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":326,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of \u0027delete\u0027 command with missing/malformed argument","lastModifiedDate":"2024-02-23"},{"lineNumber":327,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":328,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":329,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_delete_exceptionThrown() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":330,"author":{"gitId":"RyanNgWH"},"content":"        String expectedMessage \u003d \"Missing argument - Index of task required\";","lastModifiedDate":"2024-02-23"},{"lineNumber":331,"author":{"gitId":"RyanNgWH"},"content":"        MissingArgumentException missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":332,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"delete\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":333,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":334,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":335,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":336,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"delete \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":337,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":338,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":339,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":340,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\" delete\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":341,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":342,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":343,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":344,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\" delete \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":345,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":346,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":347,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":348,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"Delete\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":349,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":350,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":351,"author":{"gitId":"RyanNgWH"},"content":"        expectedMessage \u003d \"Index to delete is not an integer\";","lastModifiedDate":"2024-02-23"},{"lineNumber":352,"author":{"gitId":"RyanNgWH"},"content":"        InvalidArgumentException invalidException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":353,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"delete me\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":354,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":355,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":356,"author":{"gitId":"RyanNgWH"},"content":"        invalidException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":357,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"delete me \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":358,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":359,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":360,"author":{"gitId":"RyanNgWH"},"content":"        invalidException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":361,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\" delete me\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":362,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":363,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":364,"author":{"gitId":"RyanNgWH"},"content":"        invalidException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":365,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\" delete me \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":366,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":367,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":368,"author":{"gitId":"RyanNgWH"},"content":"        invalidException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":369,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"Delete me\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":370,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, invalidException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":371,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":372,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":373,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":374,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of successful \u0027todo\u0027 command","lastModifiedDate":"2024-02-23"},{"lineNumber":375,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":376,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":377,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_todo_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":378,"author":{"gitId":"RyanNgWH"},"content":"        Command expected \u003d new AddCommand(new Todo(\"Nights Into Days\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":379,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":380,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"todo Nights Into Days\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":381,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"todo Nights Into Days \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":382,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\" todo Nights Into Days\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":383,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"Todo Nights Into Days\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":384,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":385,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":386,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":387,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of \u0027todo\u0027 command with missing argument","lastModifiedDate":"2024-02-23"},{"lineNumber":388,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":389,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":390,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_todo_exceptionThrown() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":391,"author":{"gitId":"RyanNgWH"},"content":"        String expectedMessage \u003d \"Missing argument - Description of a todo cannot be empty\";","lastModifiedDate":"2024-02-23"},{"lineNumber":392,"author":{"gitId":"RyanNgWH"},"content":"        MissingArgumentException missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":393,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"todo\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":394,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":395,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":396,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":397,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"todo \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":398,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":399,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":400,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":401,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\" todo\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":402,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":403,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":404,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":405,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\" todo \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":406,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":407,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":408,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":409,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"Todo\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":410,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":411,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":412,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":413,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":414,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of successful \u0027deadline\u0027 command","lastModifiedDate":"2024-02-23"},{"lineNumber":415,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":416,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":417,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_deadline_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":418,"author":{"gitId":"RyanNgWH"},"content":"        Command expected \u003d new AddCommand(new Deadline(\"Nights Into Days\", Instant.ofEpochSecond(1706500800)));","lastModifiedDate":"2024-02-23"},{"lineNumber":419,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":420,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\" deadline Nights Into Days /by 2024/01/29 12:00\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":421,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"deadline Nights Into Days /by 2024/01/29 12:00 \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":422,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\" deadline Nights Into Days /by 2024/01/29 12:00 \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":423,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"Deadline Nights Into Days /by 2024/01/29 12:00\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":424,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":425,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":426,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":427,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of \u0027deadline\u0027 command with missing/malformed argument","lastModifiedDate":"2024-02-23"},{"lineNumber":428,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":429,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":430,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_deadline_exceptionThrown() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":431,"author":{"gitId":"RyanNgWH"},"content":"        String expectedMessage \u003d \"Missing Argument - Argument \u0027/by\u0027 missing\";","lastModifiedDate":"2024-02-23"},{"lineNumber":432,"author":{"gitId":"RyanNgWH"},"content":"        MissingArgumentException missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":433,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"deadline test\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":434,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":435,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":436,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":437,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"deadline test \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":438,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":439,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":440,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":441,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\" deadline test\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":442,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":443,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":444,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":445,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\" deadline test \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":446,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":447,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":448,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":449,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"Deadline test\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":450,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":451,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":452,"author":{"gitId":"RyanNgWH"},"content":"        // Invalid date format","lastModifiedDate":"2024-02-23"},{"lineNumber":453,"author":{"gitId":"RyanNgWH"},"content":"        expectedMessage \u003d \"Date/time format is invalid. Please enter the date/time in the format \u0027YYYY/MM/DD hh:mm\u0027\";","lastModifiedDate":"2024-02-23"},{"lineNumber":454,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":455,"author":{"gitId":"RyanNgWH"},"content":"        InvalidArgumentException exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":456,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"deadline test /by\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":457,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":458,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":459,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"deadline test /by 2024\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":460,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":461,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":462,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":463,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"deadline test /by 2024-122-12\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":464,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":465,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":466,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":467,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"deadline test /by 2024-25-25\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":468,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":469,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":470,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"deadline test /by 12pm\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":471,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":472,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":473,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"deadline test /by 12:00\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":474,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":475,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":476,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":477,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"deadline test /by 2024/12/12\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":478,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":479,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":480,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(InvalidArgumentException.class, () -\u003e Parser.parse(\"Deadline test /by 12:00\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":481,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":482,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":483,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":484,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":485,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of successful \u0027event\u0027 command","lastModifiedDate":"2024-02-23"},{"lineNumber":486,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":487,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":488,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_event_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":489,"author":{"gitId":"RyanNgWH"},"content":"        Command expected \u003d new AddCommand(new Event(\"Nights Into Days\", Instant.ofEpochSecond(1706500800),","lastModifiedDate":"2024-02-23"},{"lineNumber":490,"author":{"gitId":"RyanNgWH"},"content":"                Instant.ofEpochSecond(1706508000)));","lastModifiedDate":"2024-02-23"},{"lineNumber":491,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":492,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected,","lastModifiedDate":"2024-02-23"},{"lineNumber":493,"author":{"gitId":"RyanNgWH"},"content":"                Parser.parse(\" event Nights Into Days /from 2024/01/29 12:00 /to 2024/01/29 14:00\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":494,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected,","lastModifiedDate":"2024-02-23"},{"lineNumber":495,"author":{"gitId":"RyanNgWH"},"content":"                Parser.parse(\"event Nights Into Days /from 2024/01/29 12:00 /to 2024/01/29 14:00 \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":496,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected,","lastModifiedDate":"2024-02-23"},{"lineNumber":497,"author":{"gitId":"RyanNgWH"},"content":"                Parser.parse(\" event Nights Into Days /from 2024/01/29 12:00 /to 2024/01/29 14:00 \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":498,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected,","lastModifiedDate":"2024-02-23"},{"lineNumber":499,"author":{"gitId":"RyanNgWH"},"content":"                Parser.parse(\"Event Nights Into Days /from 2024/01/29 12:00 /to 2024/01/29 14:00\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":500,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":501,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":502,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":503,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of \u0027event\u0027 command with missing/malformed argument","lastModifiedDate":"2024-02-23"},{"lineNumber":504,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":505,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":506,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_event_exceptionThrown() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":507,"author":{"gitId":"RyanNgWH"},"content":"        String expectedMessage \u003d \"Missing Argument - Argument \u0027/from\u0027 missing\";","lastModifiedDate":"2024-02-23"},{"lineNumber":508,"author":{"gitId":"RyanNgWH"},"content":"        MissingArgumentException missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":509,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"event test\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":510,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":511,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":512,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":513,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"event test \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":514,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":515,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":516,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":517,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\" event test\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":518,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":519,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":520,"author":{"gitId":"RyanNgWH"},"content":"        expectedMessage \u003d \"Missing Argument - Argument \u0027/to\u0027 missing\";","lastModifiedDate":"2024-02-23"},{"lineNumber":521,"author":{"gitId":"RyanNgWH"},"content":"        missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":522,"author":{"gitId":"RyanNgWH"},"content":"                MissingArgumentException.class, () -\u003e Parser.parse(\"event test /from\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":523,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":524,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":525,"author":{"gitId":"RyanNgWH"},"content":"        // Invalid date format","lastModifiedDate":"2024-02-23"},{"lineNumber":526,"author":{"gitId":"RyanNgWH"},"content":"        expectedMessage \u003d \"Date/time format is invalid. Please enter the date/time in the format \u0027YYYY/MM/DD hh:mm\u0027\";","lastModifiedDate":"2024-02-23"},{"lineNumber":527,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":528,"author":{"gitId":"RyanNgWH"},"content":"        InvalidArgumentException exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":529,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"event test /from test /to test\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":530,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":531,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":532,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":533,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, (","lastModifiedDate":"2024-02-23"},{"lineNumber":534,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":535,"author":{"gitId":"RyanNgWH"},"content":"                ) -\u003e Parser.parse(\"event test /from 2024/12/12 /to test\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":536,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":537,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":538,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":539,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, (","lastModifiedDate":"2024-02-23"},{"lineNumber":540,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":541,"author":{"gitId":"RyanNgWH"},"content":"                ) -\u003e Parser.parse(\"event test /from 2024-122-12 /to 2024/12/12\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":542,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":543,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":544,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":545,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, (","lastModifiedDate":"2024-02-23"},{"lineNumber":546,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":547,"author":{"gitId":"RyanNgWH"},"content":"                ) -\u003e Parser.parse(\"event test /from 2024-25-25 /to 2024/12/12\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":548,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":549,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":550,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":551,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"event test /from 12pm /to 2pm\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":552,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":553,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":554,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":555,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, () -\u003e Parser.parse(\"event test /from 12:00 /to 14:00\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":556,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":557,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":558,"author":{"gitId":"RyanNgWH"},"content":"        exception \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":559,"author":{"gitId":"RyanNgWH"},"content":"                InvalidArgumentException.class, (","lastModifiedDate":"2024-02-23"},{"lineNumber":560,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":561,"author":{"gitId":"RyanNgWH"},"content":"                ) -\u003e Parser.parse(\"event test /from 2024/12/12 14:00 /to 2024/12/12\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":562,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":563,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":564,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":565,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":566,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of successful \u0027find\u0027 command","lastModifiedDate":"2024-02-23"},{"lineNumber":567,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":568,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":569,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_find_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":570,"author":{"gitId":"RyanNgWH"},"content":"        Command expected \u003d new FindCommand(\"Back To Alonica\", false);","lastModifiedDate":"2024-02-23"},{"lineNumber":571,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":572,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"find Back To Alonica\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":573,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"find Back To Alonica \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":574,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\" find Back To Alonica \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":575,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"Find Back To Alonica\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":576,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":577,"author":{"gitId":"RyanNgWH"},"content":"        // Test no arguments","lastModifiedDate":"2024-02-23"},{"lineNumber":578,"author":{"gitId":"RyanNgWH"},"content":"        expected \u003d new FindCommand(false);","lastModifiedDate":"2024-02-23"},{"lineNumber":579,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"find\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":580,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\" find\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":581,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"find \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":582,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expected, Parser.parse(\"Find\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":583,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":584,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":585,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":586,"author":{"gitId":"RyanNgWH"},"content":"     * Tests parsing of unknown command","lastModifiedDate":"2024-02-23"},{"lineNumber":587,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":588,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":589,"author":{"gitId":"RyanNgWH"},"content":"    public void parse_unknown_exceptionThrown() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":590,"author":{"gitId":"RyanNgWH"},"content":"        String expectedMessage \u003d \"Unknown command \u0027alonica\u0027\";","lastModifiedDate":"2024-02-23"},{"lineNumber":591,"author":{"gitId":"RyanNgWH"},"content":"        InvalidCommandException missingException \u003d assertThrows(","lastModifiedDate":"2024-02-23"},{"lineNumber":592,"author":{"gitId":"RyanNgWH"},"content":"                InvalidCommandException.class, () -\u003e Parser.parse(\"alonica\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":593,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(expectedMessage, missingException.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":594,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":595,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"RyanNgWH":595}},{"path":"src/test/java/ciara/storage/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance.Lifecycle;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":" * Test cases for methods in the Deadline Class","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":" * @author RyanNgWH","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"@TestInstance(Lifecycle.PER_CLASS)","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     * Tests isOn method successful","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public void isOn_correctDate_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        Deadline deadline \u003d new Deadline(\"Nights To Days\", Instant.ofEpochSecond(1706500800));","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(true, deadline.isOn(Instant.ofEpochSecond(1706457600)));","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(false, deadline.isOn(Instant.ofEpochSecond(1706587200)));","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"RyanNgWH":30}},{"path":"src/test/java/ciara/storage/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"package ciara.storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"import java.time.Instant;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"import org.junit.jupiter.api.TestInstance.Lifecycle;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"import ciara.exceptions.CiaraException;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":" * Test cases for methods in the Event Class","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":" * @author RyanNgWH","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"RyanNgWH"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"@TestInstance(Lifecycle.PER_CLASS)","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"RyanNgWH"},"content":"public class EventTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"RyanNgWH"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"RyanNgWH"},"content":"     * Tests encompasses method successful","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"RyanNgWH"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"RyanNgWH"},"content":"    public void encompasses_correctDate_success() throws CiaraException {","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"RyanNgWH"},"content":"        Event event \u003d new Event(\"Nights To Days\", Instant.ofEpochSecond(1706500800), Instant.ofEpochSecond(1706846400));","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"RyanNgWH"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(true, event.encompasses(Instant.ofEpochSecond(1706457600)));","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(true, event.encompasses(Instant.ofEpochSecond(1706760000)));","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"RyanNgWH"},"content":"        assertEquals(false, event.encompasses(Instant.ofEpochSecond(1707537600)));","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"RyanNgWH"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"RyanNgWH"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"RyanNgWH":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RyanNgWH"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"RyanNgWH"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"RyanNgWH"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"RyanNgWH"},"content":"todo join sports club","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"RyanNgWH"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"RyanNgWH"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"RyanNgWH"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"RyanNgWH"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"RyanNgWH"},"content":"mark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"RyanNgWH"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"RyanNgWH"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"RyanNgWH"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"RyanNgWH"},"content":"delete 5","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"RyanNgWH"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"RyanNgWH"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"RyanNgWH":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"RyanNgWH"},"content":"java -classpath ..\\bin Ciara \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RyanNgWH":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"RyanNgWH"},"content":"if ! find ../src/main/java/ciara/ -type f -name \"*.java\" -exec javac -cp ../src/main/java/ciara/ -d ../bin \u0027{}\u0027 +","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"RyanNgWH"},"content":"java -classpath ../bin ciara.Ciara \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RyanNgWH":2,"-":36}}]
