[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"GiselleTan"},"content":"    //mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"GiselleTan"},"content":"    //mainClass.set(\"emis.Duke\")","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"GiselleTan"},"content":"    mainClass.set(\"emis.Launcher\")","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"GiselleTan"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"GiselleTan":19,"-":41}},{"path":"data/emis.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"D | 0 | feed cat | Feb 02 2024 19:00","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"E | 0 | wit | aug 2 | aug 3","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"T | 0 | read","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"E | 0 | hi |  | ","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"D | 0 | feed | Oct 23 2024","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"D | 0 | feed | 2359","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"GiselleTan":6}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import emis.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import emis.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":" * The Command class is an abstract class representing a command in the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":" * Each subclass of Command represents a specific type of command that can be executed by the application.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"     * Executes the command with the given parameters.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"     * @param tasklist The TaskList object representing the list of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"     * @param storage The Storage object handling loading and saving of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"     * @return A message indicating the result of executing the command.","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"    public abstract String execute(TaskList tasklist, Storage storage);","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":20}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import emis.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"import emis.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":" * The DeadlineCommand class represents a command to add a deadline task in the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":" * When executed, it adds a deadline task with the specified description and due date to the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"    /** The description of the deadline task. */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"    private String description;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"    /** The due date of the deadline task. */","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"    private String by;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new DeadlineCommand object with the specified description and due date.","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"     * @param by The due date of the deadline task.","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"    public DeadlineCommand(String description, String by) {","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"     * Executes the deadline command by adding a new Deadline task to the task list with the specified description and due date,","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"     * and updates the storage.","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"     * @param tasklist The TaskList object representing the list of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"     * @param storage The Storage object handling loading and saving of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"     * @return A message indicating the result of executing the command.","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"        String response \u003d tasklist.addTask(new Deadline(this.description, this.by));","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"        storage.updateStorage();","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"        return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":43}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import emis.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import emis.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":" * The DeleteCommand class represents a command to delete a task in the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":" * When executed, it deletes the task with the specified task number from the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"    /** The task number of the task to be deleted. */","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"    private int taskNo;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new DeleteCommand object with the specified task number.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"     * @param taskNo The task number of the task to be deleted.","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"    public DeleteCommand(int taskNo) {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"     * Executes the delete command by deleting the task with the specified task number from the task list and updating the storage.","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"     * @param tasklist The TaskList object representing the list of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"     * @param storage The Storage object handling loading and saving of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"     * @return A message indicating the result of executing the command.","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"            response \u003d tasklist.deleteTask(this.taskNo);","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"            storage.updateStorage();","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"        return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":41}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import emis.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import task.Event;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"import emis.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":" * The EventCommand class represents a command to add an event task in the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":" * When executed, it adds a new event task with the specified description, start time, and end time to the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"    /** The description of the event task. */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"    private String description;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"    /** The start time of the event task. */","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"    private String from;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"    /** The end time of the event task. */","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"    private String to;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new EventCommand object with the specified description, start time, and end time.","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"     * @param from The start time of the event task.","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"     * @param to The end time of the event task.","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"    public EventCommand(String description, String from, String to) {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"     * Executes the event command by adding a new event task to the task list and updating the storage.","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"     * @param tasklist The TaskList object representing the list of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"     * @param storage The Storage object handling loading and saving of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"     * @return A message indicating the result of executing the command.","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"GiselleTan"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"GiselleTan"},"content":"        String response \u003d tasklist.addTask(new Event(this.description, this.from, this.to));","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"GiselleTan"},"content":"        storage.updateStorage();","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"GiselleTan"},"content":"        return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":47}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import emis.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import emis.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":" * The ExitCommand class represents a command to exit the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":" * When executed, it terminates the application.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new ExitCommand object.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"    public ExitCommand() {","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"     * Executes the exit command by terminating the application.","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"     * @param tasklist The TaskList object representing the list of tasks (not used in this command).","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"     * @param storage The Storage object handling loading and saving of tasks (not used in this command).","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"     * @return A farewell message to the user.","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"        Thread thread \u003d new Thread(() -\u003e {","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"            try {","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"                Thread.sleep(1500);","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"                Platform.runLater(() -\u003e Platform.exit());","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"        });","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"        thread.start();","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"        ","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":41}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import emis.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import emis.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":" * The FindCommand class represents a command to find tasks containing a specific keyword in their descriptions in the EMIS application.","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":" * When executed, it searches for tasks containing the specified keyword and displays matching tasks to the user.","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"    /** The keyword to search for in task descriptions. */","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"    private String keywordToFind;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new FindCommand object with the specified keyword to find.","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"     * @param keywordToFind The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"    public FindCommand(String keywordToFind) {","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"        this.keywordToFind \u003d keywordToFind;","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"     * Executes the find command by searching for tasks containing the specified keyword in their descriptions.","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"     * @param tasklist The TaskList object representing the list of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"     * @param storage The Storage object handling loading and saving of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"     * @return A string representation of matching tasks found in the task list.","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"        return tasklist.findTasks(this.keywordToFind);","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"GiselleTan":34}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import emis.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import emis.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":" * The HelpCommand class represents a command to display help information in the EMIS application.","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":" * When executed, it provides instructions and usage information to the user.","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new HelpCommand object.","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"    public HelpCommand() {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"     * Executes the help command by providing instructions and usage information to the user.","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"     * @param tasklist The TaskList object representing the list of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"     * @param storage The Storage object handling loading and saving of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"     * @return A string containing instructions and usage information.","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"        response +\u003d \"Emis is happy to help with printing a list of tasks with the command \u0027list\u0027.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"        response +\u003d \"\\nAdd todos with the command \u0027todo (insert task here)\u0027.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"        response +\u003d \"\\nAdd deadlines with the command \u0027deadline (insert deadline name) /by (insert deadline here)\u0027.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"        response +\u003d \"\\nAdd events with the command \u0027event (insert event name) /from (insert start time) /to (insert end time)\u0027.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"        response +\u003d \"\\nMark tasks as done with the command \u0027mark (task no)\u0027.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"        response +\u003d \"\\nMark tasks as undone with the command \u0027unmark (task no)\u0027.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"        response +\u003d \"\\nDelete tasks  with the command \u0027delete (task no)\u0027.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"        response +\u003d \"\\nFind tasks containing keywords with the command \u0027find (keyword)\u0027.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"        response +\u003d \"\\nTo stop talking to Emis, please say \u0027bye\u0027.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"        return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"GiselleTan":39}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import emis.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import emis.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":" * The MarkCommand class represents a command to mark a task as done in the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":" * When executed, it marks the specified task as done and updates the storage.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"    /** The index of the task to mark as done. */","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"    private int taskNo;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new MarkCommand object with the specified task index.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"     * @param taskNo The index of the task to mark as done.","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"    public MarkCommand(int taskNo) {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"     * Executes the mark command by marking the specified task as done and updating the storage.","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"     * @param tasklist The TaskList object representing the list of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"     * @param storage The Storage object handling loading and saving of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"     * @return A string indicating the result of the command execution.","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"            String response \u003d tasklist.markAsDone(this.taskNo);","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"            storage.updateStorage();","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"            return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":40}},{"path":"src/main/java/command/PrintCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import emis.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import emis.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":" * The PrintCommand class represents a command to print the list of tasks in the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":" * When executed, it displays the list of tasks to the user.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"public class PrintCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new PrintCommand object.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"    public PrintCommand() {","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"     * Executes the print command by displaying the list of tasks to the user.","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"     * @param tasklist The TaskList object representing the list of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"     * @param storage The Storage object handling loading and saving of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"     * @return A string representing the list of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"        return tasklist.printList();","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":29}},{"path":"src/main/java/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import emis.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import task.ToDo;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"import emis.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":" * The ToDoCommand class represents a command to add a to-do task in the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":" * When executed, it adds a new to-do task with the specified description to the task list and updates the storage.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"    /** The description of the to-do task to be added. */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"    private String description;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new ToDoCommand object with the specified description.","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"     * Executes the to-do command by adding a new to-do task with the specified description to the task list and updating the storage.","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"     * @param tasklist The TaskList object representing the list of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"     * @param storage The Storage object handling loading and saving of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"     * @return A message indicating the result of executing the command.","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"        String response \u003d tasklist.addTask(new ToDo(this.description));","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"        storage.updateStorage();","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"        return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":37}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import emis.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import emis.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":" * The UnmarkCommand class represents a command to mark a task as undone in the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":" * When executed, it marks the specified task as undone and updates the storage.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"    /** The index of the task to mark as undone. */","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"    private int taskNo;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new UnmarkCommand object with the specified task index.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"     * @param taskNo The index of the task to mark as undone.","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"    public UnmarkCommand(int taskNo) {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"     * Executes the unmark command by marking the specified task as undone and updating the storage.","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"     * @param tasklist The TaskList object representing the list of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"     * @param storage The Storage object handling loading and saving of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"     * @return A message indicating the result of executing the command.","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"    public String execute(TaskList tasklist, Storage storage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"            String response \u003d tasklist.markAsUndone(this.taskNo);","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"            storage.updateStorage();","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"            return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":40}},{"path":"src/main/java/emis/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package emis;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"        dialog.setPadding(new Insets(0, 10, 0, 0));","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"GiselleTan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"GiselleTan"},"content":"    private void flip() {","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"GiselleTan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"GiselleTan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"GiselleTan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"GiselleTan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"GiselleTan"},"content":"        dialog.setPadding(new Insets(0, 0, 0, 10));","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"GiselleTan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"GiselleTan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"GiselleTan"},"content":"    public static DialogBox getEmisDialog(String text, Image img) {","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"GiselleTan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"GiselleTan"},"content":"        db.flip();","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"GiselleTan"},"content":"        return db;","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"GiselleTan"},"content":"    public static DialogBox showWelcome(String text, Image img) {","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"GiselleTan"},"content":"        return getEmisDialog(text, img);","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"GiselleTan":68}},{"path":"src/main/java/emis/Emis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package emis;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import command.Command;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import exceptions.EmisException;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":" * Duke handles the initialization of application components and the main application logic.","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"public class Emis {","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"    /** The storage component for managing data. */","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"    /** The task list component for managing tasks. */","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"    private TaskList tasklist;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"    /** The file path for storing application data. */","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"    private final String FILE_PATH \u003d \"./data/emis.txt\";","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a Duke object with default file path.","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"     * Initializes storage and tasklist components.","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"    public Emis() {","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"            tasklist \u003d new TaskList(storage.loadFromStorageFile());","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"        } catch (EmisException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"            tasklist \u003d new TaskList();","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"     * Gets the response from Duke for the given input.","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"     * Parses the input, executes the command, and returns the response.","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"     * @param input The input command from the user.","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"     * @return The response generated by Duke.","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"GiselleTan"},"content":"            Command command \u003d Parser.parse(input.trim());","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"GiselleTan"},"content":"            return command.execute(tasklist, storage);","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"GiselleTan"},"content":"        } catch (EmisException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"GiselleTan"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":49}},{"path":"src/main/java/emis/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package emis;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"public class Launcher {","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"GiselleTan":12}},{"path":"src/main/java/emis/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package emis;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"    private Emis emis \u003d new Emis();","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"            stage.setTitle(\"Emis\");","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setEmis(emis);","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"            stage.show();","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"GiselleTan":32}},{"path":"src/main/java/emis/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package emis;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"    private Emis emis;","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"    private Image emisImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Emis.png\"));","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"            DialogBox.showWelcome(\"Mrr! Emis is glad you\u0027re here.\", emisImage)","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"        );","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"    public void setEmis(Emis e) {","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"        emis \u003d e;","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"GiselleTan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"GiselleTan"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"GiselleTan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"GiselleTan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"GiselleTan"},"content":"        String response \u003d emis.getResponse(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"GiselleTan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"GiselleTan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"GiselleTan"},"content":"                DialogBox.getEmisDialog(response, emisImage)","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"GiselleTan"},"content":"        );","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"GiselleTan"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"GiselleTan":54}},{"path":"src/main/java/emis/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package emis;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import command.Command;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"import command.DeleteCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"import command.EventCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"import command.ExitCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"import command.FindCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"import command.HelpCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"import command.MarkCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"import command.PrintCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"import command.ToDoCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"import exceptions.EmisException;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"import exceptions.DeadlineException;","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"import exceptions.EventException;","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":" * The Parser class deals with making sense of user commands in the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":" * It parses the user input and returns the corresponding Command object.","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"public class Parser {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"     * Parses the user command and returns the corresponding Command object.","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"     * @param fullCommand The full user command to be parsed.","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"     * @return The Command object corresponding to the parsed user command.","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"     * @throws EmisException If the user command is invalid or cannot be parsed.","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"    public static Command parse(String fullCommand) throws EmisException {","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"        Integer spaceIndex \u003d fullCommand.indexOf(\" \");","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"        if (spaceIndex \u003d\u003d -1) {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"            if (fullCommand.equals(\"bye\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"                return new ExitCommand();","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"            } else if (fullCommand.equals(\"list\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"                return new PrintCommand();","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"            } else if (fullCommand.equals(\"help\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"                return new HelpCommand();","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"            }else {","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"GiselleTan"},"content":"                throw new EmisException(\"Meow? Emis doesn\u0027t understand.\\n Please send \u0027help\u0027 if needed.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"GiselleTan"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"GiselleTan"},"content":"        } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"GiselleTan"},"content":"            String action \u003d fullCommand.substring(0, spaceIndex);","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"GiselleTan"},"content":"            String prospectiveCommand \u003d fullCommand.substring(spaceIndex + 1);","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"GiselleTan"},"content":"            if (action.equals(\"todo\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"GiselleTan"},"content":"                return new ToDoCommand(prospectiveCommand);","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"GiselleTan"},"content":"            } else if (action.equals(\"deadline\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"GiselleTan"},"content":"                return parseDeadline(prospectiveCommand);","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"GiselleTan"},"content":"            } else if (action.equals(\"event\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"GiselleTan"},"content":"                return parseEvent(prospectiveCommand);","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"GiselleTan"},"content":"            } else if (action.equals(\"mark\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"GiselleTan"},"content":"                Integer taskNo \u003d Integer.valueOf(fullCommand.substring(spaceIndex + 1).trim());","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"GiselleTan"},"content":"                return new MarkCommand(taskNo);","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"GiselleTan"},"content":"            } else if (action.equals(\"unmark\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"GiselleTan"},"content":"                Integer taskNo \u003d Integer.valueOf(fullCommand.substring(spaceIndex + 1).trim());","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"GiselleTan"},"content":"                return new UnmarkCommand(taskNo);","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"GiselleTan"},"content":"            } else if (action.equals(\"delete\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"GiselleTan"},"content":"                Integer taskNo \u003d Integer.valueOf(fullCommand.substring(spaceIndex + 1).trim());","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"GiselleTan"},"content":"                return new DeleteCommand(taskNo);","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"GiselleTan"},"content":"            } else if (action.equals(\"find\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"GiselleTan"},"content":"                String taskToFind \u003d fullCommand.substring(spaceIndex + 1);","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"GiselleTan"},"content":"                return new FindCommand(taskToFind);","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"GiselleTan"},"content":"            } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"GiselleTan"},"content":"                throw new EmisException(\"Meow? Emis doesn\u0027t understand.\\n Please send \u0027help\u0027 if needed.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"GiselleTan"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":78,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"GiselleTan"},"content":"     * Parses a deadline command and returns the corresponding Command object.","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"GiselleTan"},"content":"     * @param input The input string containing the deadline command.","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"GiselleTan"},"content":"     * @return The DeadlineCommand object corresponding to the parsed command.","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"GiselleTan"},"content":"     * @throws DeadlineException If the deadline command cannot be parsed.","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"GiselleTan"},"content":"    public static Command parseDeadline(String input) throws DeadlineException {","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"GiselleTan"},"content":"        int slashIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"GiselleTan"},"content":"        if (slashIndex \u003d\u003d -1) {","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"GiselleTan"},"content":"            throw new DeadlineException(\"Please enter a deadline using \u0027/by\u0027 after the task.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"GiselleTan"},"content":"        } else {","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"GiselleTan"},"content":"            String description \u003d input.substring(0, slashIndex);","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"GiselleTan"},"content":"            String by \u003d input.substring(slashIndex + 3);","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"GiselleTan"},"content":"            return new DeadlineCommand(description, by);","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"GiselleTan"},"content":"     * Parses an event command and returns the corresponding Command object.","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"GiselleTan"},"content":"     * @param input The input string containing the event command.","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"GiselleTan"},"content":"     * @return The EventCommand object corresponding to the parsed command.","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"GiselleTan"},"content":"     * @throws EventException If the event command cannot be parsed.","lastModifiedDate":"2024-02-25"},{"lineNumber":102,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"GiselleTan"},"content":"    public static Command parseEvent(String input) throws EventException {","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"GiselleTan"},"content":"        int slashIndexFrom \u003d input.indexOf(\"/from\");","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"GiselleTan"},"content":"        int slashIndexTo \u003d input.indexOf(\"/to\");","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"GiselleTan"},"content":"        if (slashIndexFrom \u003d\u003d -1 || slashIndexTo \u003d\u003d -1) {","lastModifiedDate":"2024-02-25"},{"lineNumber":107,"author":{"gitId":"GiselleTan"},"content":"            throw new EventException(\"Please enter event in this format: event /from (from date) /to (to date or time) regardless of if you have a from or to.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"GiselleTan"},"content":"        } else {","lastModifiedDate":"2024-02-25"},{"lineNumber":109,"author":{"gitId":"GiselleTan"},"content":"            String description \u003d input.substring(0, slashIndexFrom);","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"GiselleTan"},"content":"            String from \u003d input.substring(slashIndexFrom + 5, slashIndexTo);","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"GiselleTan"},"content":"            String to \u003d input.substring(slashIndexTo + 3);","lastModifiedDate":"2024-02-25"},{"lineNumber":112,"author":{"gitId":"GiselleTan"},"content":"            return new EventCommand(description, from, to);","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":114,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":115,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":115}},{"path":"src/main/java/emis/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package emis;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import exceptions.EmisException;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"import task.Event;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"import task.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"import task.ToDo;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"import java.io.File;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"/** The Storage class deals with loading tasks from and saving tasks to a file in the EMIS application. */","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"public class Storage {","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"    private String filePath;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"     * @param filePath The file path of the storage file.","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"     * @return The list of tasks loaded from the storage file.","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"     * @throws EmisException If an error occurs during loading tasks from the storage file.","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"    public ArrayList\u003cTask\u003e loadFromStorageFile() throws EmisException {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"            Scanner scanner \u003d new Scanner(new File(this.filePath));","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"GiselleTan"},"content":"                readFileData(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"GiselleTan"},"content":"            } ","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"GiselleTan"},"content":"            scanner.close();","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"GiselleTan"},"content":"            ","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"GiselleTan"},"content":"        } catch (FileNotFoundException FNFe) {","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"GiselleTan"},"content":"            createStorageFile();","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"GiselleTan"},"content":"        return this.taskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"GiselleTan"},"content":"     * Updates the storage file with the current list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"GiselleTan"},"content":"    public void updateStorage() {","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"GiselleTan"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"GiselleTan"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"GiselleTan"},"content":"            String taskToBeAdded \u003d \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"GiselleTan"},"content":"            for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"GiselleTan"},"content":"                taskToBeAdded +\u003d this.taskList.get(i).storeString();","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"GiselleTan"},"content":"                taskToBeAdded +\u003d \"\\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"GiselleTan"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"GiselleTan"},"content":"            fileWriter.write(taskToBeAdded);","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"GiselleTan"},"content":"            fileWriter.close();","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"GiselleTan"},"content":"        } catch (IOException IOe) {","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"GiselleTan"},"content":"            IOe.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"GiselleTan"},"content":"     * Creates a storage file if it does not exist.","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"GiselleTan"},"content":"    public void createStorageFile() {","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"GiselleTan"},"content":"        try {","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"GiselleTan"},"content":"            File createFile \u003d new File(this.filePath);","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"GiselleTan"},"content":"            createFile.getParentFile().mkdirs();","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"GiselleTan"},"content":"            createFile.createNewFile();","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"GiselleTan"},"content":"        } catch (IOException IOe) {","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"GiselleTan"},"content":"            System.out.println(\"An error occurred while creating the file.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"GiselleTan"},"content":"     * Reads data from the storage file and creates tasks accordingly.","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"GiselleTan"},"content":"     * @param input The input data read from the storage file.","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"GiselleTan"},"content":"     * @throws EmisException If the input data is invalid or cannot be processed.","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"GiselleTan"},"content":"    public void readFileData(String input) throws EmisException {","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"GiselleTan"},"content":"        String[] data \u003d input.split(\"\\\\|\");","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"GiselleTan"},"content":"        String taskType \u003d data[0].trim();","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"GiselleTan"},"content":"        String retrieveStatus \u003d data[1].trim();","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"GiselleTan"},"content":"        boolean convertStatus \u003d retrieveStatus.equals(\"1\");","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"GiselleTan"},"content":"        String retrieveDescription \u003d data[2].trim();","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"GiselleTan"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"GiselleTan"},"content":"            this.taskList.add(new ToDo(convertStatus, retrieveDescription));","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"GiselleTan"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"GiselleTan"},"content":"            String finishBy \u003d data[3].trim();","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"GiselleTan"},"content":"            this.taskList.add(new Deadline(convertStatus, retrieveDescription, finishBy));","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"GiselleTan"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"GiselleTan"},"content":"            String startFrom \u003d data[3].trim();","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"GiselleTan"},"content":"            String endBy \u003d data[4].trim();","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"GiselleTan"},"content":"            this.taskList.add(new Event(convertStatus, retrieveDescription, startFrom, endBy));","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"GiselleTan"},"content":"        } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"GiselleTan"},"content":"            throw new EmisException(\"Invalid input type.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":111,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":112}},{"path":"src/main/java/emis/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package emis;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"import task.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":" * The TaskList class contains a list of tasks and provides operations to manipulate the task list in the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"public class TaskList {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"    /** The list of tasks. */","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"    private ArrayList\u003cTask\u003e tasklist;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new TaskList object with the specified list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"     * @param tasklist The list of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"        this.tasklist \u003d tasklist;","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new TaskList object with an empty list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"        this.tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"     * @return A string representation of the tasks in the list.","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"    public String printList() {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"        String response \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"        for (int i \u003d 0; i \u003c this.tasklist.size(); i++) {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"            response +\u003d (\"\\n\" + (i + 1) + \".\" + this.tasklist.get(i).toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"        return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"GiselleTan"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"GiselleTan"},"content":"     * @param taskNo The index of the task to delete.","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"GiselleTan"},"content":"     * @return A message confirming the deletion of the task.","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"GiselleTan"},"content":"     * @throws AssertionError If the specified task number is invalid.","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"GiselleTan"},"content":"    public String deleteTask(int taskNo) {","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"GiselleTan"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"GiselleTan"},"content":"        assert taskNo \u003e 0 \u0026\u0026 taskNo \u003c\u003d this.tasklist.size() : \"Task must exist!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"GiselleTan"},"content":"        response +\u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"GiselleTan"},"content":"        response +\u003d \"\\n\" + this.tasklist.get(taskNo - 1).toString();","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"GiselleTan"},"content":"        this.tasklist.remove(taskNo - 1);","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"GiselleTan"},"content":"        response +\u003d (\"\\nNow you have \" + this.tasklist.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"GiselleTan"},"content":"        return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"GiselleTan"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"GiselleTan"},"content":"     * @param task The task to add.","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"GiselleTan"},"content":"     * @return A message confirming the addition of the task.","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"GiselleTan"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"GiselleTan"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"GiselleTan"},"content":"        if (checkIfDuplicate(task)) {","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"GiselleTan"},"content":"            response +\u003d task.toString() + \" already exists and will not be added.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"GiselleTan"},"content":"        } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"GiselleTan"},"content":"            this.tasklist.add(task);","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"GiselleTan"},"content":"            response +\u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"GiselleTan"},"content":"            response +\u003d \"\\n\" + task.toString();","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"GiselleTan"},"content":"            response +\u003d (\"\\nNow you have \" + this.tasklist.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"GiselleTan"},"content":"        return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"GiselleTan"},"content":"    ","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"GiselleTan"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"GiselleTan"},"content":"     * @param taskNo The index of the task to mark as done.","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"GiselleTan"},"content":"     * @return A message confirming the task has been marked as done.","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"GiselleTan"},"content":"     * @throws AssertionError If the specified task number is invalid.","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"GiselleTan"},"content":"    public String markAsDone(int taskNo) {","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"GiselleTan"},"content":"        assert taskNo \u003e 0 \u0026\u0026 taskNo \u003c\u003d tasklist.size() : \"Task must exist!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"GiselleTan"},"content":"        Task task \u003d this.tasklist.get(taskNo - 1);","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"GiselleTan"},"content":"        String response \u003d task.markAsDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"GiselleTan"},"content":"        this.tasklist.set(taskNo - 1, task);","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"GiselleTan"},"content":"        return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"GiselleTan"},"content":"     * Marks a task as undone.","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"GiselleTan"},"content":"     * @param taskNo The index of the task to mark as undone.","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"GiselleTan"},"content":"     * @return A message confirming the task has been marked as undone.","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"GiselleTan"},"content":"     * @throws AssertionError If the specified task number is invalid.","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"GiselleTan"},"content":"    public String markAsUndone(int taskNo) {","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"GiselleTan"},"content":"        assert taskNo \u003e 0 \u0026\u0026 taskNo \u003c\u003d tasklist.size() : \"Task must exist!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"GiselleTan"},"content":"        Task task \u003d this.tasklist.get(taskNo - 1);","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"GiselleTan"},"content":"        String response \u003d task.markAsUndone();","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"GiselleTan"},"content":"        this.tasklist.set(taskNo - 1, task);","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"GiselleTan"},"content":"        return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"GiselleTan"},"content":"     * Finds tasks containing a specific keyword in their descriptions.","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"GiselleTan"},"content":"     * @param keywordToFind The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"GiselleTan"},"content":"     * @return A string representation of matching tasks found in the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"GiselleTan"},"content":"    public String findTasks(String keywordToFind) {","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"GiselleTan"},"content":"        String response \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"GiselleTan"},"content":"        int counter \u003d 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":118,"author":{"gitId":"GiselleTan"},"content":"        for (Task task : this.tasklist) {","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"GiselleTan"},"content":"            if (task.getDescription().contains(keywordToFind)) {","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"GiselleTan"},"content":"                response +\u003d (\"\\n\" + Integer.toString(counter) + \". \" + task.toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"GiselleTan"},"content":"                counter++;","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"GiselleTan"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":124,"author":{"gitId":"GiselleTan"},"content":"        return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":126,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":127,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":128,"author":{"gitId":"GiselleTan"},"content":"     * Checks if a task already exists in the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":129,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-24"},{"lineNumber":130,"author":{"gitId":"GiselleTan"},"content":"     * @param task The task to check for duplicates.","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"GiselleTan"},"content":"     * @return true if the task already exists, false otherwise.","lastModifiedDate":"2024-02-24"},{"lineNumber":132,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":133,"author":{"gitId":"GiselleTan"},"content":"    public boolean checkIfDuplicate(Task task) {","lastModifiedDate":"2024-02-24"},{"lineNumber":134,"author":{"gitId":"GiselleTan"},"content":"        for (Task existingTask : this.tasklist) {","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"GiselleTan"},"content":"            if(existingTask.equals(task)) {","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"GiselleTan"},"content":"                return true;","lastModifiedDate":"2024-02-24"},{"lineNumber":137,"author":{"gitId":"GiselleTan"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":138,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":139,"author":{"gitId":"GiselleTan"},"content":"        return false;","lastModifiedDate":"2024-02-24"},{"lineNumber":140,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":141,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":141}},{"path":"src/main/java/exceptions/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package exceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":" * The DeadlineException class represents an exception specific to the EMIS application.","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":" * It is a subclass of the EmisException class and is used to handle errors and exceptional conditions within the EMIS application.","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"public class DeadlineException extends EmisException {","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new DeadlineException object with the specified error message.","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"     * @param errorMessage The error message associated with this exception.","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"    public DeadlineException(String errorMessage) {","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"GiselleTan":16}},{"path":"src/main/java/exceptions/EmisException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package exceptions;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":" * The EmisException class represents an exception specific to the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":" * It is a subclass of the Java Exception class and is used to handle errors and exceptional conditions within the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"public class EmisException extends Exception {","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new EmisException object with the specified error message.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"     * @param errorMessage The error message associated with this exception.","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"    public EmisException(String errorMessage) {","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":16}},{"path":"src/main/java/exceptions/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package exceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":" * The EventException class represents an exception specific to the EMIS application.","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":" * It is a subclass of the EmisException class and is used to handle errors and exceptional conditions within the EMIS application.","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"public class EventException extends EmisException {","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new EventException object with the specified error message.","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"     * @param errorMessage The error message associated with this exception.","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"    public EventException(String errorMessage) {","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"GiselleTan":16}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package task;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":" * The Deadline class represents a task with a deadline in the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":" * It is a subclass of the Task class and provides additional functionality specific to tasks with deadlines.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"    /** The deadline string in the format \u0027dd-MM-yyyy HHmm\u0027. */","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"    protected String by;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new Deadline object with the specified description and deadline.","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"     * @param by The deadline.","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"        this.by \u003d by.trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"        formatDate();","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new Deadline object with the specified completion status, description, and deadline.","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"     * @param isDone The completion status of the deadline task.","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"     * @param by The deadline.","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"    public Deadline(boolean isDone, String description, String by) {","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"        super(isDone, description);","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"        formatDate();","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"GiselleTan"},"content":"     * Formats the deadline date and time into a standard format.","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"GiselleTan"},"content":"     * Attempts various date and date-time patterns to parse the deadline string.","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"GiselleTan"},"content":"    public void formatDate() {","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"GiselleTan"},"content":"        LocalDateTime doByDateTime \u003d null;","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"GiselleTan"},"content":"        String[] datePatterns \u003d {\"yyyy-MM-dd\", \"dd-MM-yyyy\", \"dd/MM/yyyy\", \"MMM dd yyyy\", \"dd MMM yyyy\"};","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"GiselleTan"},"content":"        String[] datetimePatterns \u003d {\"yyyy-MM-dd HHmm\", \"dd-MM-yyyy HHmm\", \"dd/MM/yyyy HHmm\", \"MMMM dd yyyy HHmm\"};","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"GiselleTan"},"content":"        LocalDate ld \u003d null;","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"GiselleTan"},"content":"        for (String dtpattern : datetimePatterns) {","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"GiselleTan"},"content":"            try {","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"GiselleTan"},"content":"                doByDateTime \u003d LocalDateTime.parse(this.by, DateTimeFormatter.ofPattern(dtpattern));","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"GiselleTan"},"content":"                this.by \u003d doByDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"GiselleTan"},"content":"                break;","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"GiselleTan"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"GiselleTan"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"GiselleTan"},"content":"        if (doByDateTime \u003d\u003d null) {","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"GiselleTan"},"content":"            for (String pattern : datePatterns) {","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"GiselleTan"},"content":"                try {","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"GiselleTan"},"content":"                    ld \u003d LocalDate.parse(this.by, DateTimeFormatter.ofPattern(pattern));","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"GiselleTan"},"content":"                    this.by \u003d ld.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"GiselleTan"},"content":"                    break;","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"GiselleTan"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"GiselleTan"},"content":"                }","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"GiselleTan"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"GiselleTan"},"content":"     * Returns a string representation of the Deadline object for storage purposes.","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"GiselleTan"},"content":"     * @return A string representing the Deadline object in the format \u0027D | [Task] | [Deadline]\u0027.","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"GiselleTan"},"content":"    public String storeString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"GiselleTan"},"content":"        return \"D | \" + super.storeString() + \" | \" + this.by;","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"GiselleTan"},"content":"     * Returns a string representation of the Deadline object for display purposes.","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"GiselleTan"},"content":"     * @return A string representing the Deadline object in the format \u0027[D][Task] (by: [Deadline])\u0027.","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"GiselleTan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"GiselleTan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"GiselleTan"},"content":"     * Checks if this Deadline object is equal to another object.","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"GiselleTan"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"GiselleTan"},"content":"     * @return true if the objects are equal, false otherwise.","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"GiselleTan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"GiselleTan"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"GiselleTan"},"content":"            return true;","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"GiselleTan"},"content":"        if (other \u003d\u003d null || getClass() !\u003d other.getClass()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"GiselleTan"},"content":"            return false;","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"GiselleTan"},"content":"        Deadline otherTask \u003d (Deadline) other;","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"GiselleTan"},"content":"        return this.description.equals(otherTask.description) ","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"GiselleTan"},"content":"        \u0026\u0026 this.by.equals(otherTask.by);","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":112}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package task;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":" * The Event class represents an event task in the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":" * It extends the Task class and adds additional properties related to event timing.","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"    protected String from;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"    protected String to;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new Event object with the specified description, start time, and end time.","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new Event object with the specified completion status, description, start time, and end time.","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"     * @param isDone The completion status of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"    public Event(boolean isDone, String description, String from, String to) {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"        super(isDone, description);","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"     * Returns a string representation of the Event object for storage purposes.","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"     * @return A string representing the Event object in the format \u0027E | {status} | {description} | {from} | {to}\u0027.","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"GiselleTan"},"content":"    public String storeString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"GiselleTan"},"content":"        return \"E | \" + super.storeString() + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"GiselleTan"},"content":"     * Returns a string representation of the Event object for display purposes.","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"GiselleTan"},"content":"     * @return A string representing the Event object in the format \u0027[E] {description} (from: {from} to: {to})\u0027.","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"GiselleTan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"GiselleTan"},"content":"        return\"[E]\" + super.toString() + \"(from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"GiselleTan"},"content":"     * Checks if this Event object is equal to another object.","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"GiselleTan"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"GiselleTan"},"content":"     * @return true if the objects are equal, false otherwise.","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"GiselleTan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"GiselleTan"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"GiselleTan"},"content":"            return true;","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"GiselleTan"},"content":"        if (other \u003d\u003d null || getClass() !\u003d other.getClass()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"GiselleTan"},"content":"            return false;","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"GiselleTan"},"content":"        Event otherTask \u003d (Event) other;","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"GiselleTan"},"content":"        return this.description.equals(otherTask.description) ","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"GiselleTan"},"content":"        \u0026\u0026 this.from.equals(otherTask.from)","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"GiselleTan"},"content":"        \u0026\u0026 this.to.equals(otherTask.to);","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":79}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package task;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":" * The Task class represents a generic task in the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":" * It provides methods to manage the status and details of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"public class Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"    protected String description;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new Task object with the specified description and default completion status (false).","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new Task object with the specified completion status and description.","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"    public Task(boolean isDone, String description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"     * Returns the status icon representing the completion status of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"     * @return The status icon (\u0027X\u0027 for completed, \u0027 \u0027 for incomplete).","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"GiselleTan"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"GiselleTan"},"content":"     * @return The description of the task","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"GiselleTan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"GiselleTan"},"content":"        return this.description;","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"GiselleTan"},"content":"     * Marks the task as done and displays a confirmation message.","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"GiselleTan"},"content":"     * @return A string confirmation message.","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"GiselleTan"},"content":"    public String markAsDone() {","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"GiselleTan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"GiselleTan"},"content":"        String response \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"GiselleTan"},"content":"        response +\u003d (\"\\n[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"GiselleTan"},"content":"        return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"GiselleTan"},"content":"     * Marks the task as not done and displays a confirmation message.","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"GiselleTan"},"content":"     * ","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"GiselleTan"},"content":"     * @return A string confirmation message.","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"GiselleTan"},"content":"    public String markAsUndone() {","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"GiselleTan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"GiselleTan"},"content":"        String response \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"GiselleTan"},"content":"        response +\u003d (\"\\n[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"GiselleTan"},"content":"        return response;","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"GiselleTan"},"content":"     * Returns a string representation of the Task object for storage purposes.","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"GiselleTan"},"content":"     * @return A string representing the Task object in the format \u0027{status} | {description}\u0027.","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"GiselleTan"},"content":"    public String storeString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"GiselleTan"},"content":"        // done \u003d 1, not done \u003d 0","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"GiselleTan"},"content":"        int status \u003d isDone ? 1 : 0;","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"GiselleTan"},"content":"        return status + \" | \" + this.description;","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"GiselleTan"},"content":"     * Returns a string representation of the Task object for display purposes.","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"GiselleTan"},"content":"     * @return A string representing the Task object in the format \u0027[{status}] {description}\u0027.","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"GiselleTan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"GiselleTan"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"GiselleTan"},"content":"     * Checks if this Task object is equal to another object.","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"GiselleTan"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"GiselleTan"},"content":"     * @return true if the objects are equal, false otherwise.","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"GiselleTan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"GiselleTan"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"GiselleTan"},"content":"            return true;","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"GiselleTan"},"content":"        if (other \u003d\u003d null || getClass() !\u003d other.getClass()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"GiselleTan"},"content":"            return false;","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":111,"author":{"gitId":"GiselleTan"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"GiselleTan"},"content":"        return this.description.equals(otherTask.description);","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":114}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package task;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":" * The ToDo class represents a task without a deadline in the EMIS application.","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":" * It is a subclass of the Task class and provides additional functionality specific to tasks without deadlines.","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new ToDo object with the specified description.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"        super(description);","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"     * Constructs a new ToDo object with the specified completion status and description.","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"     * @param isDone The completion status of the todo task.","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"    public ToDo(boolean isDone, String description) {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"        super(isDone, description);","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"     * Returns a string representation of the ToDo object for storage purposes.","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"     * @return A string representing the ToDo object in the format \u0027T | [Task]\u0027.","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"    public String storeString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"        return \"T | \" + super.storeString();","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"     * Returns a string representation of the ToDo object for display purposes.","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"     * @return A string representing the ToDo object in the format \u0027[T][Task]\u0027.","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"GiselleTan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"GiselleTan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"GiselleTan"},"content":"     * Checks if this ToDo object is equal to another object.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"GiselleTan"},"content":"     * @param other The object to compare to.","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"GiselleTan"},"content":"     * @return true if the objects are equal, false otherwise.","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"GiselleTan"},"content":"    @Override","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"GiselleTan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"GiselleTan"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"GiselleTan"},"content":"            return true;","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"GiselleTan"},"content":"        if (other \u003d\u003d null || getClass() !\u003d other.getClass()) {","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"GiselleTan"},"content":"            return false;","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"GiselleTan"},"content":"        ToDo otherTask \u003d (ToDo) other;","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"GiselleTan"},"content":"        return this.description.equals(otherTask.description);","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"GiselleTan":67}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-background-color: #D5F5E3; -fx-padding: 8px;     -fx-background-radius: 10px; ","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"    -fx-border-color: #c0c0c0; -fx-border-width: 1px; -fx-border-radius: 10px;\"/\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"      \u003cclip\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"        \u003cCircle radius\u003d\"30\" centerY\u003d\"30\" centerX\u003d\"45\"/\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"      \u003c/clip\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"    \u003c/ImageView\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"    \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"GiselleTan":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" ","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" ","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"emis.MainWindow\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" ","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"    prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" ","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":"    onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"AS_NEEDED\" hvalue\u003d\"1.0\" ","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"    prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"-1\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"GiselleTan":24}},{"path":"src/test/java/Tests/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package Tests;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"import command.ToDoCommand;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"import emis.Parser;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"import exceptions.EmisException;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":" * The ParserTest class contains JUnit tests for the Parser class.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"     * Tests the parse method of the Parser class for successful parsing.","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"    public void parse_success() {","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"            assertTrue(Parser.parse(\"todo test1\") instanceof ToDoCommand);","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"        } catch (EmisException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"            fail(\"Unexpected EmisException: \" + e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"     * Tests the parse method of the Parser class for failed parsing.","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"    public void parse_fail() {","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"            Parser.parse(\"screaming crying\");","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"            fail(\"Expected EmisException to be thrown\"); // the test should not reach this line","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"        } catch (EmisException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"            assertEquals(\"Meow? Emis doesn\u0027t understand.\\n Please send \u0027help\u0027 if needed.\", e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"GiselleTan":43}},{"path":"src/test/java/Tests/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GiselleTan"},"content":"package Tests;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"GiselleTan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"GiselleTan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"GiselleTan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"GiselleTan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"GiselleTan"},"content":"import emis.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"GiselleTan"},"content":"import exceptions.EmisException;","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"GiselleTan"},"content":"import task.Task;","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"GiselleTan"},"content":"import task.ToDo;","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"GiselleTan"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"GiselleTan"},"content":" * The TaskListTest class contains JUnit tests for the TaskList class.","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"GiselleTan"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"GiselleTan"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"GiselleTan"},"content":"    ","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"GiselleTan"},"content":"     * Tests the markAsDone method of the TaskList class when an exception is thrown.","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"GiselleTan"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"GiselleTan"},"content":"     * @throws EmisException if an error occurs during the test.","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"GiselleTan"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"GiselleTan"},"content":"    public void markAsDone_TaskZero_exceptionThrown() throws EmisException {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"GiselleTan"},"content":"        ArrayList\u003cTask\u003e testTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"GiselleTan"},"content":"        testTasks.add(new ToDo(\"read book\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"GiselleTan"},"content":"        testTasks.add(new ToDo(\"read magazine\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"GiselleTan"},"content":"        testTasks.add(new ToDo(\"say hi\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"GiselleTan"},"content":"        TaskList testTasklist \u003d new TaskList(testTasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"GiselleTan"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"GiselleTan"},"content":"            testTasklist.markAsDone(0);","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"GiselleTan"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"GiselleTan"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"GiselleTan"},"content":"            assertEquals(\"Task must exist!\", e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"GiselleTan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"GiselleTan"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"GiselleTan"},"content":"     * Tests the deleteTask method of the TaskList class when an exception is thrown.","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"GiselleTan"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"GiselleTan"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"GiselleTan"},"content":"    public void deleteTask_TaskZero_exceptionThrown() {","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"GiselleTan"},"content":"        ArrayList\u003cTask\u003e testTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"GiselleTan"},"content":"        testTasks.add(new ToDo(\"read book\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"GiselleTan"},"content":"        testTasks.add(new ToDo(\"read magazine\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"GiselleTan"},"content":"        testTasks.add(new ToDo(\"say hi\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"GiselleTan"},"content":"        TaskList testTasklist \u003d new TaskList(testTasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"GiselleTan"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"GiselleTan"},"content":"            testTasklist.deleteTask(0);","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"GiselleTan"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"GiselleTan"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"GiselleTan"},"content":"            assertEquals(\"Task must exist!\", e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"GiselleTan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"GiselleTan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"GiselleTan"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"GiselleTan":57}}]
