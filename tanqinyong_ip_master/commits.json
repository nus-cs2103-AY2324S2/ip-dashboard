{"authorDailyContributionsMap":{"tanqinyong":[{"date":"2024-01-23","commitResults":[{"hash":"c42ef829e11aa5a0b44b243f12df1e228720e9d8","isMergeCommit":false,"messageTitle":"[Level-0] Changed chatbot name and greetings.","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":6}}}]},{"date":"2024-01-24","commitResults":[{"hash":"824decfbff46b65aa5f081e9d0583cdd7f8863a3","isMergeCommit":false,"messageTitle":"[Level-1] Updated Felix(Duke) to echo commands entered by the user and exit when user types bye.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"f3213144cf861f5a5dbaa59dba555838fdb3f21c","isMergeCommit":false,"messageTitle":"[Level-2] Add ability to store text and display them using an array.","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":3}}},{"hash":"63f411da28d6ea2f64142c8a815654844eafe3b6","isMergeCommit":false,"messageTitle":"[Level-3] Mark as done: Added the ability to mark tasks as done and undone. Additionally, added the tasklist class to hold the list of all tasks. Abstracted out the relevant functionality to the tasklist and task class accordingly.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":210,"deletions":20}}},{"hash":"ecc0a2acbe2a6a82440af1eb03188161f67d7cc9","isMergeCommit":false,"messageTitle":"[Level-4] Added ToDo, Deadlines and Events subclasses. 1. Updated Duke, Task and TaskList accordingly so that all functionalities work with new subclasses 2. Updated toString methods","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":116,"deletions":24}}},{"hash":"bb6e16b9838ded6753c3d1297e5301f52132e4b1","isMergeCommit":false,"messageTitle":"[A-TextUiTesting] Performed some UI tests using I/O redirection 1. Tested default greeting by chatbot 2. Tested creation of todos and deadlines","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"bat":{"insertions":2,"deletions":0}}}]},{"date":"2024-01-25","commitResults":[{"hash":"09464d83f770d68e083eeaca332699baa1b0d562","isMergeCommit":false,"messageTitle":"[Level-5] Handled some relevant errors, null pointer, index out of bounds, number format and illegal argument.","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":14}}},{"hash":"0b075744e8a3c9ed76ae76b997a19e0dcbff3a52","isMergeCommit":false,"messageTitle":"[Level-6] Added a delete function. - Changed the data structure used from a primitive array to arraylist. - Modified the relevant functions in tasklist accordingly. - Edited duke to accomodate for new function and added exception handling for it.","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":18}}},{"hash":"de7203437b4b23dcb37bfd7668bda390c3377cd3","isMergeCommit":false,"messageTitle":"Added Javadocs to document all of the code.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":120,"deletions":40}}}]},{"date":"2024-01-31","commitResults":[{"hash":"b3e4d63ffe7a958acabbabe31c4be12a659e67a8","isMergeCommit":false,"messageTitle":"Add save functionality to Duke","messageBody":"Duke does not save to hard disk and instead reboots with an empty task list every time it runs.\n\nAdd in new functionality that allows Duke to save to hard disk every time the task list changes.\nAlso loads in the task list every time it runs.\n\nAbstract out storage class to store these operations.\n","fileTypesAndContributionMap":{"java":{"insertions":339,"deletions":147}}},{"hash":"d1df1a5baea4a22b4ed170f82548386a01de5546","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"6e5c5bb4fd6c3ab8d740d55cf7665c5abcfb53eb","isMergeCommit":false,"messageTitle":"Modify duke to accept and store proper dates","messageBody":"Duke accepts all kinds of input for date fields.\n\nThis can mean that users can enter invalid dates which do not make sense.\n\nChange all task classes to accept and store LocalDate for all date fields.\n\nThis allows us to store, format and validify date inputs correctly, and print them out in a more readable format.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":17}}}]},{"date":"2024-02-04","commitResults":[{"hash":"8b2111cb0542fe4a5ba0a317f20fc06832977cf0","isMergeCommit":false,"messageTitle":"Restructure code for better OOP design","messageBody":"The main Duke class have some common behaviours and repeated code with similar functionalities.\n\nTo enhance readability and maintainability, it\u0027s important to refactor the code to a more organized and modular OOP design.\n\nLet\u0027s,\n* Add a new Ui class that manages user interactions.\n* Add a new Storage class that handles task file loading and saving\n* Add a new Parser class that interprets user commands\n\nThis approach makes it easier to understand and maintai neach component. The classes encapsulate related functionality, allowing for easier maintenance in the future.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":245,"deletions":126}}},{"hash":"32ac119938a3d1896f2b9012f2473f4a30b6e479","isMergeCommit":false,"messageTitle":"Refactor code base into multiple packages","messageBody":"All classes are not in a package and are put in the java folder together. This makes it hard to distinguish related classes and makes the code base rather disorganized.\n\nLet\u0027s refactor the code into three main packages:\n* \u0027duke\u0027: Houses the main program and TaskList class.\n* \u0027task\u0027: Manages the child tasks and the parent Task class.\n* \u0027util\u0027: Handles user interactions.\n\nThis provides a clear separation of concerns and makes the code base organized and easy to navigate.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":23},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}},{"hash":"d402ea977c2dde77b4ac44ec46c6198df65e7458","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027 of https://github.com/tanqinyong/ip","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"a545f44b2af235a6ba8005e77faa09daf1760018","isMergeCommit":false,"messageTitle":"Configure the project with Gradle","messageBody":"Using Gradle as a buld automation tool allows for smooth project and dependency management.\n\nLet\u0027s add Gradle to our project.\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"2e78052fff9449071fa585a45e9c97602688206a","isMergeCommit":false,"messageTitle":"Add JUnit tests to verify functionality of two non-trivial methods","messageBody":"To ensure the reliability and functionality of the above two functions, we test them accordingly with JUnit.\n\nLet\u0027s produce unit tests for:\n* \u0027Deadline.toString()\u0027\n* \u0027Parser.parseDeadline()\u0027\n* \u0027Parser.parseDate()\u0027\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":0}}},{"hash":"c786085b09fe0815cedb0b143d94e4812b7a7bd4","isMergeCommit":false,"messageTitle":"Package app as an executable JAR for easy distribution","messageBody":"Currently the app is not easy to distribute as it requires a lot of setup on the users\u0027 end.\n\nLet\u0027s package the Duke project as a JAR so users can simply download and run the program.\n\nNote that this commit does not have any significant change. (Removed extra line form TaskList)\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"6bd8ed60e43f99c1f6ee92a3c2d365f9ba52173f","isMergeCommit":false,"messageTitle":"Remove some JavaDocs comments for getters and setters","messageBody":"There are some redundant comments for getters and setters in the Task class.\n\nLet\u0027s remove the comments.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":11}}}]},{"date":"2024-02-05","commitResults":[{"hash":"23b3ec739159fdc6c2d7d8708c69951cf1dcd346","isMergeCommit":false,"messageTitle":"Add new Find Tasks feature","messageBody":"Users may find it difficult to search for tasks given that they have a long list of tasks.\n\nAdd new \u0027findTask\u0027 method in the TaskList class. This method allows users to search for tasks by providing a substring.\n\nThe implementation is straightforward and easy to maintain, iterating through the task list and checking if each task\u0027s description matches the substring.\n","tags":["Level-9"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":87,"deletions":55}}},{"hash":"a3d2bd954eb3688cd9937c09774b766aac8acfc9","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"120a21584e8045be2c8c35715342dadba9d0eaa9","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2024-02-14","commitResults":[{"hash":"281862d9b569a5047e8b14575cad948616d6d5a6","isMergeCommit":false,"messageTitle":"Add GUI using JavaFX for Duke","messageBody":"Prior to this commit, Duke did not have GUI interface and only ran on console.\n\nThis is not very intuitive or user-friendly, as users have to manually enter console commands to run Duke.\n\nLet\u0027s:\n* Implement JavaFX in our codebase\n* Add Launcher class as our new entrypoint\n* Add Main class to handle the main GUI components\n* Add GUI package with DialogBox and MainWindow controller classes\n* Add two GUI views for DialogBox and MainWindow\n","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":1},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":339,"deletions":159}}},{"hash":"3032b75200674d7cedd5b4adcf9e03c4fcc2c142","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2024-02-17","commitResults":[{"hash":"59450e7f71d64a74c17f6b7a33c10172f48ac897","isMergeCommit":false,"messageTitle":"Add Assertions to TaskList class","messageBody":"Previously, there was no use of assertions\nto verify code behaviour.\n\nLet\u0027s add some assertions\nto important methods in the TaskList\nclass.\n\nUsing assertions will help\nverify code behaviour and detect\nfor bugs, improving error handling.\n","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"1834c685f0cea94b4ce4aa8cbc90353c8c9f0380","isMergeCommit":false,"messageTitle":"Abstract out parsing of commands in main class","messageBody":"The main class consisted of one very long method,\nwhich parsed the user input and perform the operations\naccordingly.\n\nBut this is not very readable and not up to\ncoding standard guidelines.\n\nLet\u0027s:\n* Create methods in Parser for each command\n* Abstract out from main to new methods\n* Create constructor for Duke to initialise\n   utilities\n\nWith this, our code is much more modular\nand readable.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":170,"deletions":111}}},{"hash":"a1537c36b2cf5407a59bdac8d68377ac4bea7343","isMergeCommit":false,"messageTitle":"Abstract out helper function for Storage methods","messageBody":"Both methods in Storage were very long\nand unreadable. This may cause issues\nas it will be hard to identify bugs in the\nfuture.\n\nAdditionally, add javadocs for methods in Parser\nas well as for methods in Storage.\n\nLet\u0027s:\n* Abstract out helper functions for\neach of the methods\n* Add javadocs accordingly\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":184,"deletions":80}}},{"hash":"168d9d81173405ee87473c3808ef7f55b2b84a56","isMergeCommit":true,"messageTitle":"Merge pull request #2 from tanqinyong/branch-A-Assertions","messageBody":"Add Assertions to TaskList class","fileTypesAndContributionMap":{}},{"hash":"f33cd63712d5a961df9d35e818a99945f5e2e7ea","isMergeCommit":true,"messageTitle":"Merge pull request #3 from tanqinyong/branch-A-CodeQuality","messageBody":"Abstract out parsing of commands in main class","fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"tanqinyong":{"java":1296,"md":2,"fxml":35,"sh":0,"bat":3,"gradle":21,"txt":3}},"authorContributionVariance":{"tanqinyong":38748.902},"authorDisplayNameMap":{"tanqinyong":"CS2103-F09-3 TAN ..YONG"}}
