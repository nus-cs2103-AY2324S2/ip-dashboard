[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"qinboan":4,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"D | 1 | return book | 2024-02-24","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"E | 1 | project meeting | 2024-02-24 14:00 | 2024-02-24 16:00","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"T | 0 | duke","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"T | 0 | read book","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"qinboan":4}},{"path":"data/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"T | 0 | read book","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"D | 0 | return book | 2024-02-24","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"E | 0 | project meeting | 2024-02-24 14:00 | 2024-02-24 16:00","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"qinboan":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" * Represents a deadline task in the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":" * A deadline task is a task with a deadline","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"    private LocalDate byDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"     * Creates a new Deadline instance.","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"     * @throws DukeException If the provided deadline is in an invalid format.","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"            this.byDate \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"            // Handle exception or set a default value if the date is in the wrong format","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"            throw new DukeException(\"Invalid date format (yyyy-mm-dd).\");","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"     * Returns a formatted string of the deadline for display.","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"     * @return A formatted string representing the deadline.","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"        return byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"     * Returns a formatted string of the deadline for file storage","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"     * @return A formatted string representing the deadline.","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"    public String getByForFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"        return byDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"     * Returns a formatted string for display.","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"qinboan":59}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":" * Duke is the main class for the Duke chatbot application.","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":" * It initializes the application and starts the interaction with the user.","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"public class Duke {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"     * Constructs a new Duke object.","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"     * @param filePath The file path where tasks are saved and loaded from.","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"            tasks \u003d new TaskList(); // Start with an empty TaskList if loading fails","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"     * Runs the Duke application. This method reads and processes user input","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"     * until the application is exited.","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"    public void run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"        while (true) {","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"                // Create a Parser instance and parse the command","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"                Parser parser \u003d new Parser(tasks, ui, storage);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"                parser.parse(command);","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"     * The main entry point for the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"qinboan":56}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":" * Represents exceptions specific to the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"qinboan":18}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":" * Represents an event task in the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":" * An event is a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"    private LocalDateTime start;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"    private LocalDateTime end;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"     * Constructs an Event task with the specified description, start time, and end time.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"     * @param start The start time of the event in the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"     * @param end The end time of the event in the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"     * @throws DukeException If the provided start or end time is in an invalid format.","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"    public Event(String description, String start, String end) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"            this.start \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"            this.end \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"            throw new DukeException(\"Invalid datetime format (yyyy-MM-dd HH:mm).\");","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"     * Returns the formatted start time of the event.","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"     * @return A string representing the start time formatted as \"MMM d yyyy HH:mm\".","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"    public String getStart() {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"        return start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"     * Returns the formatted end time of the event.","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"     * @return A string representing the end time formatted as \"MMM d yyyy HH:mm\".","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"    public String getEnd() {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"        return end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"     * Returns the start time of the event formatted for file storage.","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"     * @return A string representing the start time formatted as \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"    public String getStartForFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"        return start.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"qinboan"},"content":"     * Returns the end time of the event formatted for file storage.","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"qinboan"},"content":"     * @return A string representing the end time formatted as \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"qinboan"},"content":"    public String getEndForFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"qinboan"},"content":"        return end.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"qinboan"},"content":"     * Returns a string representation of the event task, including its type, description,","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"qinboan"},"content":"     * and start and end times.","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"qinboan"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"qinboan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"qinboan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"qinboan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getStart() + \" to: \" + getEnd() + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"qinboan":83}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":" * Represents a parser in the Duke application that interprets and executes user commands.","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"public class Parser {","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"     * Constructs a Parser instance.","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"     * @param tasks The list of tasks to manage.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"     * @param storage The storage to save and load tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"    public Parser(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"     * Parses and executes the given input command.","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"     * @param input The user input command to parse.","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"     * @throws DukeException If the command execution encounters any errors.","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"    public void parse(String input) throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"        if (\"bye\".equals(input)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"            handleExit();","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"        } else if (\"list\".equals(input)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"            handleList();","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"            handleDelete(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"                handleMark(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"                handleUnmark(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"            if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"                System.out.println(\"That\u0027s not a valid todo!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"            } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"                String description \u003d input.substring(5).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"                    System.out.println(\"That\u0027s not a valid todo!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"qinboan"},"content":"                } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"qinboan"},"content":"                    handleAdd(new ToDo(description));","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"qinboan"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"qinboan"},"content":"            if (input.length() \u003c\u003d 9) {","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"qinboan"},"content":"                System.out.println(\"That\u0027s not a valid Deadline!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"qinboan"},"content":"            } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"qinboan"},"content":"                String[] parts \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"qinboan"},"content":"                if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"qinboan"},"content":"                    try {","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"qinboan"},"content":"                        handleAdd(new Deadline(parts[0], parts[1]));","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"qinboan"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"qinboan"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"qinboan"},"content":"                    }","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"qinboan"},"content":"                } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"qinboan"},"content":"                    System.out.println(\"That\u0027s not a valid Deadline!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"qinboan"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"qinboan"},"content":"            int fromIndex \u003d input.indexOf(\" /from\");","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"qinboan"},"content":"            int toIndex \u003d input.indexOf(\" /to\");","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"qinboan"},"content":"            if (fromIndex !\u003d -1 \u0026\u0026 toIndex !\u003d -1 \u0026\u0026 fromIndex \u003c toIndex \u0026\u0026","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"qinboan"},"content":"                    fromIndex \u003e\u003d 6 \u0026\u0026 toIndex \u003e\u003d fromIndex + 7 \u0026\u0026 input.length() \u003e\u003d toIndex + 5) {","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"qinboan"},"content":"                String description \u003d input.substring(6, fromIndex).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"qinboan"},"content":"                String startTime \u003d input.substring(fromIndex + 7, toIndex).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"qinboan"},"content":"                String endTime \u003d input.substring(toIndex + 5).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"qinboan"},"content":"                if (description.isEmpty() || startTime.isEmpty() || endTime.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"qinboan"},"content":"                    System.out.println(\"The description, start time, and end time of an event cannot be empty.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"qinboan"},"content":"                } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"qinboan"},"content":"                    try {","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"qinboan"},"content":"                        handleAdd(new Event(description, startTime, endTime));","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"qinboan"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"qinboan"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"qinboan"},"content":"                    }","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"qinboan"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"qinboan"},"content":"            } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"qinboan"},"content":"                System.out.println(\"That\u0027s not a valid Event!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"find \")){","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"qinboan"},"content":"            String keyword \u003d input.substring(5).trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"qinboan"},"content":"            handleFind(keyword);","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"qinboan"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"qinboan"},"content":"            System.out.println(\"That\u0027s not a valid task!\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"qinboan"},"content":"    private void handleFind(String keyword) {","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"qinboan"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.find(keyword);","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"qinboan"},"content":"        ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"qinboan"},"content":"    private void handleExit() {","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"qinboan"},"content":"        ui.showGoodbye();","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"qinboan"},"content":"        System.exit(0);","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"qinboan"},"content":"    private void handleList() {","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"qinboan"},"content":"        ui.showTasks(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"qinboan"},"content":"    private void handleMark(String input) throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"qinboan"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"qinboan"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"qinboan"},"content":"            Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"qinboan"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"qinboan"},"content":"            ui.showTask(\"Nice! I\u0027ve marked this task as done: \" + task);","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"qinboan"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"qinboan"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"qinboan"},"content":"            throw new DukeException(\"Task does not exist.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"qinboan"},"content":"    private void handleUnmark(String input) throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"qinboan"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"qinboan"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"qinboan"},"content":"            Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"qinboan"},"content":"            task.markAsNotDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"qinboan"},"content":"            ui.showTask(\"OK, I\u0027ve marked this task as not done yet: \" + task);","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"qinboan"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"qinboan"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":143,"author":{"gitId":"qinboan"},"content":"            throw new DukeException(\"Task does not exist.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"qinboan"},"content":"    private void handleAdd(Task task) throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"qinboan"},"content":"            tasks.addTask(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"qinboan"},"content":"            ui.showAddedTask(task.toString(), tasks.size());","lastModifiedDate":"2024-02-12"},{"lineNumber":151,"author":{"gitId":"qinboan"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":152,"author":{"gitId":"qinboan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":153,"author":{"gitId":"qinboan"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":154,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":155,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":156,"author":{"gitId":"qinboan"},"content":"    private void handleDelete(String input) {","lastModifiedDate":"2024-02-12"},{"lineNumber":157,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"qinboan"},"content":"            int index \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":159,"author":{"gitId":"qinboan"},"content":"            Task task \u003d tasks.deleteTask(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":160,"author":{"gitId":"qinboan"},"content":"            ui.showRemovedTask(task.toString(), tasks.size());","lastModifiedDate":"2024-02-12"},{"lineNumber":161,"author":{"gitId":"qinboan"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":162,"author":{"gitId":"qinboan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"qinboan"},"content":"            ui.showError(\"Task does not exist.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":164,"author":{"gitId":"qinboan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":165,"author":{"gitId":"qinboan"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":166,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":167,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":168,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"qinboan":168}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.io.File;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":" * Represents the file storage for Duke application, handling the loading and saving of tasks to a file.","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"public class Storage {","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"    private String filePath;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"     * @param filePath The path of the file where tasks are stored.","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"     * @throws DukeException If an error occurs during file processing.","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"            } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"                    Task task \u003d fileStringToTask(line);","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"                        tasks.add(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"                    }","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"                scanner.close();","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"        return tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"     * Saves the current list of tasks to the file.","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"     * @throws DukeException If an error occurs during file processing.","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"qinboan"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"qinboan"},"content":"            PrintWriter writer \u003d new PrintWriter(filePath);","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"qinboan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"qinboan"},"content":"                writer.println(taskToFileString(tasks.getTask(i)));","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"qinboan"},"content":"            writer.close();","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"qinboan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"qinboan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"qinboan"},"content":"     * Converts a line from the file to a Task object.","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"qinboan"},"content":"     * @param line The line from the file to be converted into a Task.","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"qinboan"},"content":"     * @return The Task object represented by the line.","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"qinboan"},"content":"     * @throws DukeException If the line format is invalid.","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"qinboan"},"content":"    private static Task fileStringToTask(String line) throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"qinboan"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"qinboan"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"qinboan"},"content":"            throw new DukeException(\"Unable to read some tasks!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"qinboan"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"qinboan"},"content":"        boolean isDone \u003d \"1\".equals(parts[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"qinboan"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"qinboan"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"qinboan"},"content":"        switch (type) {","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"qinboan"},"content":"        case \"T\":","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"qinboan"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"qinboan"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"qinboan"},"content":"        case \"D\":","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"qinboan"},"content":"            task \u003d new Deadline(description, parts.length \u003e 3 ? parts[3] : \"\");","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"qinboan"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"qinboan"},"content":"        case \"E\":","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"qinboan"},"content":"            task \u003d new Event(description, parts.length \u003e 3 ? parts[3] : \"\", parts.length \u003e 4 ? parts[4] : \"\");","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"qinboan"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"qinboan"},"content":"        if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"qinboan"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"qinboan"},"content":"        return task;","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"qinboan"},"content":"     * Converts a Task object to a string for file storage.","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"qinboan"},"content":"     * @param task The Task to be converted to a string.","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"qinboan"},"content":"     * @return The string representation of the Task for file storage.","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"qinboan"},"content":"    private static String taskToFileString(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"qinboan"},"content":"        String type \u003d task instanceof ToDo ? \"T\" :","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"qinboan"},"content":"                task instanceof Deadline ? \"D\" :","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"qinboan"},"content":"                        task instanceof Event ? \"E\" : \"\";","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"qinboan"},"content":"        String status \u003d task.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"qinboan"},"content":"        String details \u003d type + \" | \" + status + \" | \" + task.description;","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"qinboan"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"qinboan"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"qinboan"},"content":"            details +\u003d \" | \" + deadline.getByForFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"qinboan"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"qinboan"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"qinboan"},"content":"            details +\u003d \" | \" + event.getStartForFile() + \" | \" + event.getEndForFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"qinboan"},"content":"        return details;","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"qinboan":134}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":" * Represents a task in the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":" * A task has a description and a completion status.","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"        return this.description;","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"     * The status icon is \"[X]\" if the task is done and \"[ ]\" if it is not done.","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"     * @return A string representing the status icon.","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"qinboan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"qinboan"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"qinboan":67}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" * Represents the list of tasks in the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"public class TaskList {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"     * Constructs a TaskList initialized with an existing list of tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"     * Retrieves a task from the list by its index.","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range (index \u003c 0 || index \u003e\u003d size()).","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"    public Task getTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"     * Deletes a task from the list by its index.","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"     * @return The removed task.","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range (index \u003c 0 || index \u003e\u003d size()).","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"    public Task deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"qinboan"},"content":"     * Retrieves the entire list of tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"qinboan"},"content":"     * @return A list of tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"qinboan"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"qinboan"},"content":"        return tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"qinboan"},"content":"     * Searches for tasks that contain the specified keyword in their description.","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"qinboan"},"content":"     * @param keyword The string to search for in task descriptions.","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"qinboan"},"content":"     * @return An ArrayList of tasks that contain the keyword in their description.","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"qinboan"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"qinboan"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"qinboan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"qinboan"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"qinboan"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"qinboan"},"content":"        return matchingTasks;","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"qinboan"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"qinboan"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"qinboan"},"content":"    public int size() {","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"qinboan"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"qinboan":98}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":" * Represents a to-do task in the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":" * A to-do is a type of task without any date/time attached to it.","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"     * Returns a string representation of the to-do task.","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"     * @return A string representation of the to-do task.","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"qinboan":29}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" * Represents the user interface for the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":" * This class handles all user interactions.","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"public class Ui {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"    public Ui() {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"     * Reads the next command from the user input.","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"     * Shows the welcome message to the user.","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"        System.out.println(\"Hello! I\u0027m BBJSOBB\");","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"     * Shows an error message to the user.","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"        System.out.println(\"Error: \" + message);","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"     * Shows a loading error message.","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"        showError(\"Could not load tasks from file.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"     * Displays a task to the user.","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"     * @param task The task to be displayed.","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"    public void showTask(String task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"qinboan"},"content":"     * Shows a message indicating that a task has been added.","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"qinboan"},"content":"     * @param task The task that has been added.","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"qinboan"},"content":"     * @param taskCount The total number of tasks after adding.","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"qinboan"},"content":"    public void showAddedTask(String task, int taskCount) {","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"qinboan"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"qinboan"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"qinboan"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"qinboan"},"content":"     * Shows a message indicating that a task has been removed.","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"qinboan"},"content":"     * @param task The task that has been removed.","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"qinboan"},"content":"     * @param taskCount The total number of tasks after removal.","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"qinboan"},"content":"    public void showRemovedTask(String task, int taskCount) {","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"qinboan"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"qinboan"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"qinboan"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"qinboan"},"content":"     * Displays all tasks in the task list.","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"qinboan"},"content":"     * @param tasks The TaskList containing tasks to be displayed.","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"qinboan"},"content":"    public void showTasks(TaskList tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"qinboan"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"qinboan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"qinboan"},"content":"            System.out.println((i + 1) + \". \" + tasks.getTask(i));","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"qinboan"},"content":"     * Shows the exit message to the user.","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"qinboan"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"qinboan"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"qinboan"},"content":"     * Closes the scanner when the UI is closing.","lastModifiedDate":"2024-02-13"},{"lineNumber":109,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"qinboan"},"content":"    public void close() {","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"qinboan"},"content":"        scanner.close();","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"qinboan"},"content":"     * Displays a list of tasks to the user. If the list is empty, a message indicating","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"qinboan"},"content":"     * no matching tasks is shown. Otherwise, all matching tasks are displayed.","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"qinboan"},"content":"     * @param tasks The ArrayList of tasks to be displayed.","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"qinboan"},"content":"    public void showMatchingTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"qinboan"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"qinboan"},"content":"            System.out.println(\"No matching tasks in your list.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":123,"author":{"gitId":"qinboan"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":124,"author":{"gitId":"qinboan"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"qinboan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"qinboan"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-02-13"},{"lineNumber":127,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":128,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":129,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":130,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"qinboan":130}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"    public void testSaveAndLoad() throws IOException, DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"        Path filePath \u003d Path.of(\"data/test.txt\");","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"        Storage storage \u003d new Storage(filePath.toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2024-02-24\");","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"        Event event \u003d new Event(\"project meeting\", \"2024-02-24 14:00\", \"2024-02-24 16:00\");","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"        list.addTask(todo);","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"        list.addTask(deadline);","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"        list.addTask(event);","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"        storage.save(list);","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"        assertEquals(3, lines.size());","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"        assertEquals(\"T | 0 | read book\", lines.get(0));","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"        assertEquals(\"D | 0 | return book | 2024-02-24\", lines.get(1));","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"        assertEquals(\"E | 0 | project meeting | 2024-02-24 14:00 | 2024-02-24 16:00\", lines.get(2));","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"qinboan":35}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"    public void testAdd() throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2024-02-24\");","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"        Event event \u003d new Event(\"project meeting\", \"2024-02-24 14:00\", \"2024-02-24 16:00\");","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"        list.addTask(todo);","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"        list.addTask(deadline);","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"        list.addTask(event);","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"        assertEquals(3, list.size());","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"        assertEquals(todo, list.getTask(0));","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"        assertEquals(deadline, list.getTask(1));","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"        assertEquals(event, list.getTask(2));","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"        assertEquals(\"[T][ ] read book\", list.getTask(0).toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"        assertEquals(\"[D][ ] return book (by: Feb 24 2024)\", list.getTask(1).toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"        assertEquals(\"[E][ ] project meeting (from: Feb 24 2024 14:00 to: Feb 24 2024 16:00)\", list.getTask(2).toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"qinboan":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"qinboan":10}}]
