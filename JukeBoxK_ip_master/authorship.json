[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JukeBoxK":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"JukeBoxK"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JukeBoxK":2,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":" * Represents a chatbot whose name is \"Alfred\".","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":" * It is a task management app for recording different kinds of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":" * It provides a czommand Line interface for users to interact with.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"     * Constructs a new instance of the Duke class.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"     * This constructor initializes the Parser, Ui, and TaskList for the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"    public Duke() {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"     * Runs the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"     * This method prompts the user with a greeting, accepts and processes user commands,","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"     * and continues execution until the user enters the \"bye\" command.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"     * Handles invalid commands by informing the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"JukeBoxK"},"content":"    public void run() {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"JukeBoxK"},"content":"        this.ui.greet();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"JukeBoxK"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"JukeBoxK"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"JukeBoxK"},"content":"            Command command;","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"JukeBoxK"},"content":"            do{","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"JukeBoxK"},"content":"                command \u003d this.parser.parse(scanner.nextLine());","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"JukeBoxK"},"content":"                command.run(this.taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"JukeBoxK"},"content":"            }while(!command.getType().equals(Parser.Cmd.bye));","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"JukeBoxK"},"content":"        }catch(IllegalArgumentException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"JukeBoxK"},"content":"            Ui.informInvalidCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"JukeBoxK"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"JukeBoxK"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"JukeBoxK"},"content":"        Duke Alfred \u003d new Duke();","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"JukeBoxK"},"content":"        Alfred.run();","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"JukeBoxK":52,"-":1}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":" * Represents the Command of adding a new deadline to a task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"    private String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"    private LocalDateTime date;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"     * Initializes a Command to add a deadline using the input description and date.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"     * @param type the type of the command which is deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"     * @param description the description of the deadline to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"     * @param date the date of the deadline to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"    public AddDeadlineCommand(Parser.Cmd type, String description, LocalDateTime date) {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"        super(type);","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"     * Adds a new deadline task to give taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"     * @param taskList the given taskList to add the task to.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"JukeBoxK"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"JukeBoxK"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"JukeBoxK"},"content":"        Deadline ddl \u003d new Deadline(this.description, this.date);","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"JukeBoxK"},"content":"        String date \u003d this.date.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"JukeBoxK"},"content":"        String[] data \u003d {this.description, date};","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"JukeBoxK"},"content":"        taskList.addTask(ddl, \"deadline\", data);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"JukeBoxK":42}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":" * Represents the Command of adding a new event to a task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"    private String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"    private LocalDateTime fromDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"    private LocalDateTime toDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"     * Initializes a Command to add a event using the input description and dates.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"     * @param type the type of the command which is event.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"     * @param description the description of the event to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"     * @param fromDate the starting date of the event to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"     * @param toDate the ending date of the event to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"    public AddEventCommand(Parser.Cmd type, String description, LocalDateTime fromDate, LocalDateTime toDate) {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"        super(type);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"JukeBoxK"},"content":"     * Adds a new event task to give taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"JukeBoxK"},"content":"     * @param taskList the given taskList to add the task to.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"JukeBoxK"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"JukeBoxK"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"JukeBoxK"},"content":"        Event event \u003d new Event(this.description, this.fromDate, this.toDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"JukeBoxK"},"content":"        String fromTime \u003d this.fromDate.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"JukeBoxK"},"content":"        String toTime \u003d this.toDate.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"JukeBoxK"},"content":"        String[] data \u003d {this.description, fromTime, toTime};","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"JukeBoxK"},"content":"        taskList.addTask(event, \"event\", data);","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"JukeBoxK":46}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":" * Represents the Command of adding a new todo to a task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"    private String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"     * Initializes a Command to add a todo using the input description.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"     * @param type the type of the command which is todo.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"     * @param description the description of the todo task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"    public AddTodoCommand(Parser.Cmd type, String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"        super(type);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"     * Adds a new todo task to give taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"     * @param taskList the given taskList to add the task to.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"        Todo todo \u003d new Todo(this.description);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"        String[] data \u003d {this.description};","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"        taskList.addTask(todo, \"todo\", data);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"JukeBoxK":35}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":" * Represents a Command for exiting the program.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"     * Initializes the exiting Command.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"     * @param type the type of the Command which is bye.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"    public ByeCommand(Parser.Cmd type) {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"        super(type);","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"     * Ends the program.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"     * @param taskList the given taskList to run the function on.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"        Ui.leave();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"JukeBoxK":30}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":" * Represents a command which can be run.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"    protected final Parser.Cmd type;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"     * Constructor of the Command class","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"     * @param type type of the Command created.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"    protected Command(Parser.Cmd type) {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"     * Runs the function on the given taskList which the command represents","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"     * @param taskList the given taskList to run the function on.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"    public abstract void run(TaskList taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"     * Returns the type of the Command","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"     * @return the type of the Command.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"    public Parser.Cmd getType() {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"        return this.type;","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"JukeBoxK":33}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":" * Represents the Command of deleting a task in a list.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"    private int index;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"     * Initializes a Command to remove a task on the given index.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"     * @param type the type of the Command which is delete.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"     * @param index the index of the task to be removed.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"    public DeleteTaskCommand(Parser.Cmd type, int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"        super(type);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"     * Removes the task on the index field in the given list.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"     * @param taskList the given taskList from which the task is removed.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"        taskList.deleteList(this.index);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"JukeBoxK":32}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":" * Represents the Command of finding a task from a list.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"public class FindCommand  extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"    String keyword;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"     * Initializes a Command to find e a task that contains the given keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"     * @param type the type of the Command which is find.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"     * @param keyword the keyword for finding the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"    public FindCommand(Parser.Cmd type, String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"        super(type);","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"     * Finds and displays the task with the keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"     * @param taskList the given taskList from which the task with keyword is searched.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"        taskList.searchAndDisplay(this.keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"JukeBoxK":32}},{"path":"src/main/java/duke/command/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":" * Represents a Command for listing the full task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"     * Initializes the listing Command.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"     * @param type the type of the Command which is list.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"    public ListTaskCommand(Parser.Cmd type) {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"        super(type);","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"     * Lists the tasks in the list in full details.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"     * @param taskList the given taskList to be listed.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"        Ui.displayFullList(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"JukeBoxK":30}},{"path":"src/main/java/duke/command/NoActionCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":" * Represents a Command for doing nothing.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":" * Use as a placeholder when there is invalid Command.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"public class NoActionCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"     * Initializes the Command that does nothing.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"     * @param type the type of the Command which is none.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"    public NoActionCommand(Parser.Cmd type) {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"        super(type);","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"     * Does nothing.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"     * @param taskList the given taskList where nothing is done.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"JukeBoxK":28}},{"path":"src/main/java/duke/command/ToggleMarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import duke.util.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":" * Represents the Command of marking/unmarking a task in a list.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"public class ToggleMarkTaskCommand extends Command{","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"    private int index;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"     * Initializes a Command to mark/unmkark a task on the given index depending on the given type.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"     * @param type the type of the Command which can be mark or unmark.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"     * @param index the index of the task to be marked","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"    public ToggleMarkTaskCommand(Parser.Cmd type, int index){","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"        super(type);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"     * Marks/Unmarks the task on the index field in the given list.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"     * @param taskList the given taskList to mark/unmark the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"    public void run(TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"        if (this.type \u003d\u003d Parser.Cmd.mark) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"            taskList.markList(this.index);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"            taskList.unmarkList(this.index);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"JukeBoxK"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"JukeBoxK":36}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":" * Represents a deadline task that is added by the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"    private LocalDateTime date;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"     * The deadline task also has a date field to specify the deadline time.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"     * @param description the description of the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"     * @param date the date of the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"    public Deadline(String description, LocalDateTime date) {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"     * Changes the String representation of the deadline to displaying a D letter,","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"     * along with its status icon, its description and its date.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"     * @return the specified string representation of the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date.format(outputFormatter) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"JukeBoxK":33}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":" * Represents an event task that is added by the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"    private LocalDateTime fromDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"    private LocalDateTime toDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"     * The deadline task also has a fromDate field to specify the starting date and,","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"     * a toDate field to specify the ending date.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"     * @param description the description of the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"     * @param fromDate the starting date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"     * @param toDate the ending date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"    public Event(String description, LocalDateTime fromDate, LocalDateTime toDate) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"     * Changes the String representation of the event to displaying an E letter,","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"     * along with its status icon, its description, its starting and ending date.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"     * @return the specified string representation of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"JukeBoxK"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"JukeBoxK"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.fromDate.format(outputFormatter) + \" to: \" +","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"JukeBoxK"},"content":"                this.toDate.format(outputFormatter) +\")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"JukeBoxK":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":" * Represents a task that is added by the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"    private String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"     * Initializes a Task with the given description.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"     * The isDone field is et to false as the task is obviously not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"     * @param description","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"     * Returns the status icon of the Task in String format.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"     * @return the status icon whic is \"X\" or \" \" depending on isDone field.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"     * Sets the isDone field as true;","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"    public void mark() {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"JukeBoxK"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"JukeBoxK"},"content":"     * Sets the isDone field as false;","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"JukeBoxK"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"JukeBoxK"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"JukeBoxK"},"content":"     * Returns whether if the description field contains the given keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"JukeBoxK"},"content":"     * @param keyword the keyword to be seached for in the description field.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"JukeBoxK"},"content":"     * @return boolean value of if the description contains the keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"JukeBoxK"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"JukeBoxK"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"JukeBoxK"},"content":"     * Changes the String representation of the task to displaying its status icon and its description.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"JukeBoxK"},"content":"     * @return the specified string representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"JukeBoxK"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"JukeBoxK"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"JukeBoxK"},"content":"        String output \u003d \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"JukeBoxK"},"content":"        return output;","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"JukeBoxK":63}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":" * Represents a todo task that is added by the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"        super(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"     * Changes the String representation of the todo to displaying a T letter,","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"     * along with its status icon and its description.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"     * @return the specified string representation of the todo.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"JukeBoxK":24}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.util;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.command.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":" *  Represents the parser of the program that converts user inputs into Commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"    public enum Cmd{","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"        list, todo, deadline, event, mark, unmark, delete, find, bye, none;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"     * Initializes the given Task ArrayList with given input,","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"     * by adding the tasks from each line of input into the ArrayList.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"     * The different data in each line of a stored task is splitted by a \"|\" sign.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"     * THe method processes these data, creates corresponding task and add the ArrayList accordingly.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"     * @param input the input for each task, the input typically comes from a stored data,","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"     *              accessed by the Storage class.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"     * @param taskList the given Task ArrayList to be initialized.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"    public static void initializeTask(String input, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"        String[] data \u003d input.split(\" \\\\| \");","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"        Task task \u003d new Task(\"\");","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"JukeBoxK"},"content":"        switch (data[0]) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"JukeBoxK"},"content":"            case \"T\":","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"JukeBoxK"},"content":"                task \u003d new Todo(data[2]);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"JukeBoxK"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"JukeBoxK"},"content":"            case \"D\":","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"JukeBoxK"},"content":"                LocalDateTime date \u003d LocalDateTime.parse(data[3], DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"JukeBoxK"},"content":"                task \u003d new Deadline(data[2], date);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"JukeBoxK"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"JukeBoxK"},"content":"            case \"E\":","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"JukeBoxK"},"content":"                LocalDateTime fromDate \u003d LocalDateTime.parse(data[3], DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"JukeBoxK"},"content":"                LocalDateTime toDate \u003d LocalDateTime.parse(data[4], DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"JukeBoxK"},"content":"                task \u003d new Event(data[2], fromDate, toDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"JukeBoxK"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"JukeBoxK"},"content":"            default:","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"JukeBoxK"},"content":"                System.out.println(\"PROBLEM encountered with the saved data while loading\");","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"JukeBoxK"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"JukeBoxK"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"JukeBoxK"},"content":"        if (data[1].equals(\"1\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"JukeBoxK"},"content":"            task.mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"JukeBoxK"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"JukeBoxK"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"JukeBoxK"},"content":"     * Parse the given input into Commands that can be run inside the program.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"JukeBoxK"},"content":"     * @param input the String input by the user. The different type of input are as follow:","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"JukeBoxK"},"content":"     *              todo \u003cdescription\u003e: to add a todo with the given description.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"JukeBoxK"},"content":"     *              deadline \u003cdescription\u003e \u003cdate\u003e: to add a deadline with the given information.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"JukeBoxK"},"content":"     *              event \u003cdescription\u003e \u003cstart date\u003e \u003cend date\u003e: to add an event with the given information.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"JukeBoxK"},"content":"     *              list : to list the full list","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"JukeBoxK"},"content":"     *              tmark \u003cindex\u003e: to mark the task at index no \u003cindex\u003e in the list as complete","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"JukeBoxK"},"content":"     *              tunmark \u003cindex\u003e: to mark the task at index no \u003cindex\u003e in the last as incomplete","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"JukeBoxK"},"content":"     *              delete \u003cindex\u003e: to remove the taks at index no \u003cindex\u003e in the last","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"JukeBoxK"},"content":"     *              bye: to leave the program","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"JukeBoxK"},"content":"     * @return the Command that correspond to the input","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"JukeBoxK"},"content":"    public Command parse(String input) {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"JukeBoxK"},"content":"        Command command \u003d new NoActionCommand(Cmd.none);","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"JukeBoxK"},"content":"        String[] cmds \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"JukeBoxK"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"JukeBoxK"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"JukeBoxK"},"content":"            switch (Cmd.valueOf(cmds[0])) {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"JukeBoxK"},"content":"                case bye:","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"JukeBoxK"},"content":"                    command \u003d new ByeCommand(Cmd.bye);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"JukeBoxK"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"JukeBoxK"},"content":"                case list:","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"JukeBoxK"},"content":"                    command \u003d new ListTaskCommand(Cmd.list);","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"JukeBoxK"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"JukeBoxK"},"content":"                case mark:","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"JukeBoxK"},"content":"                    command \u003d new ToggleMarkTaskCommand(Cmd.mark, Integer.parseInt(cmds[1]));","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"JukeBoxK"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"JukeBoxK"},"content":"                case unmark:","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"JukeBoxK"},"content":"                    command \u003d new ToggleMarkTaskCommand(Cmd.unmark, Integer.parseInt(cmds[1]));","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"JukeBoxK"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"JukeBoxK"},"content":"                case todo:","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"JukeBoxK"},"content":"                    command \u003d new AddTodoCommand(Cmd.todo, cmds[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"JukeBoxK"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"JukeBoxK"},"content":"                case deadline:","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"JukeBoxK"},"content":"                    String[] deadlineData \u003d cmds[1].split(\" /by \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"JukeBoxK"},"content":"                    LocalDateTime date \u003d LocalDateTime.parse(deadlineData[1], formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"JukeBoxK"},"content":"                    command \u003d new AddDeadlineCommand(Cmd.deadline, deadlineData[0], date);","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"JukeBoxK"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"JukeBoxK"},"content":"                case event:","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"JukeBoxK"},"content":"                    String[] eventData \u003d cmds[1].split(\" /from \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"JukeBoxK"},"content":"                    String[] eventData2 \u003d eventData[1].split(\" /to \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"JukeBoxK"},"content":"                    LocalDateTime fromDate \u003d LocalDateTime.parse(eventData2[0], formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"JukeBoxK"},"content":"                    LocalDateTime toDate \u003d LocalDateTime.parse(eventData2[1], formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"JukeBoxK"},"content":"                    command \u003d new AddEventCommand(Cmd.event, eventData[0], fromDate, toDate);","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"JukeBoxK"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"JukeBoxK"},"content":"                case find:","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"JukeBoxK"},"content":"                    command \u003d new FindCommand(Cmd.find, cmds[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"JukeBoxK"},"content":"                    break;","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"JukeBoxK"},"content":"                case delete:","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"JukeBoxK"},"content":"                    command \u003d new DeleteTaskCommand(Cmd.delete, Integer.parseInt(cmds[1]));","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"JukeBoxK"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"JukeBoxK"},"content":"                default:","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"JukeBoxK"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"JukeBoxK"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"JukeBoxK"},"content":"        }catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"JukeBoxK"},"content":"            Ui.informInvalidCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"JukeBoxK"},"content":"        }catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"JukeBoxK"},"content":"            Ui.informWrongDateFormat();","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"JukeBoxK"},"content":"        }catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"JukeBoxK"},"content":"            Ui.informWrongInputFormat();","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"JukeBoxK"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"JukeBoxK"},"content":"        return command;","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"JukeBoxK":122}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.util;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":" * Represents the storage which stores the lists inside the disk.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"    private ArrayList\u003cString\u003e listStates\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"    private static String listFilePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"     * Access the stored lists and parse it into usable ArrayList of Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"     * Each line of the stored file is read and parsed using a Parser.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"     * The listStates is changed with each task read to capture the file state.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"     * @return the converted Task ArrayList from the stored data.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"        this.initializeListFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"        File f \u003d new File(listFilePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"        try{","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"                String str \u003d s.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"JukeBoxK"},"content":"                listStates.add(str);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"JukeBoxK"},"content":"                Parser.initializeTask(str,temp);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"JukeBoxK"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"JukeBoxK"},"content":"        }catch (FileNotFoundException e){","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"JukeBoxK"},"content":"            System.out.println(\"FILE NOT FOUND\");","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"JukeBoxK"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"JukeBoxK"},"content":"        return temp;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"JukeBoxK"},"content":"     * Rewrites the entire text file used as the disk storage of the lists.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"JukeBoxK"},"content":"     * The rewriting is based on the listStates field, which reflects the latest changes in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"JukeBoxK"},"content":"    private void writeList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"JukeBoxK"},"content":"        this.initializeListFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"JukeBoxK"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"JukeBoxK"},"content":"            FileWriter fw \u003d new FileWriter(listFilePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"JukeBoxK"},"content":"            for (int i \u003d 0; i \u003c listStates.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"JukeBoxK"},"content":"                fw.write(listStates.get(i) + \"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"JukeBoxK"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"JukeBoxK"},"content":"            fw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"JukeBoxK"},"content":"        }catch(IOException e){","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"JukeBoxK"},"content":"            System.out.println(\"File Saving failed...\" + e);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"JukeBoxK"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"JukeBoxK"},"content":"     * Removes the task at the given index in the list from the stored data.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"JukeBoxK"},"content":"     * @param index the given index of the task to be removed.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"JukeBoxK"},"content":"    public void removeListStateRecord(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"JukeBoxK"},"content":"        this.listStates.remove(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"JukeBoxK"},"content":"        this.writeList();","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"JukeBoxK"},"content":"     * Add task into the stored data using the given type and data.","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"JukeBoxK"},"content":"     * @param type the type of the task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"JukeBoxK"},"content":"     *             Can be todo, deadline, or event.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"JukeBoxK"},"content":"     * @param data the data of the task to be added in the form of String array,","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"JukeBoxK"},"content":"     *             with varying size depending on the type.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"JukeBoxK"},"content":"     *             For todos, the data only has description.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"JukeBoxK"},"content":"     *             For deadlines, the data has description and the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"JukeBoxK"},"content":"     *             For events, the data has description, start time and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"JukeBoxK"},"content":"    public void addListStateRecord(String type, String[] data) {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"JukeBoxK"},"content":"        String newRecord \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"JukeBoxK"},"content":"        switch (type){","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"JukeBoxK"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"JukeBoxK"},"content":"            String[] recordT \u003d {\"T\", \"0\", data[0]};","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"JukeBoxK"},"content":"            newRecord \u003d String.join(\" | \", recordT);","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"JukeBoxK"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"JukeBoxK"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"JukeBoxK"},"content":"            String[] recordD \u003d {\"D\", \"0\", data[0], data[1]};","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"JukeBoxK"},"content":"            newRecord \u003d String.join(\" | \", recordD);","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"JukeBoxK"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"JukeBoxK"},"content":"        case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"JukeBoxK"},"content":"            String[] record \u003d {\"E\", \"0\", data[0], data[1], data[2]};","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"JukeBoxK"},"content":"            newRecord \u003d String.join(\" | \", record);","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"JukeBoxK"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"JukeBoxK"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"JukeBoxK"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"JukeBoxK"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"JukeBoxK"},"content":"        this.listStates.add(newRecord);","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"JukeBoxK"},"content":"        this.writeList();","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"JukeBoxK"},"content":"     * Modify the task at the given index in the stored data,","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"JukeBoxK"},"content":"     * by changing its mark/unmark state depending on the value of isMarking given","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"JukeBoxK"},"content":"     * @param isMarking the value to indicate whether to mark or unmark the taks.","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"JukeBoxK"},"content":"     *                  true to mark, and false to unmark.","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"JukeBoxK"},"content":"     * @param index the index of the task to modify.","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"JukeBoxK"},"content":"    public void modifyStateRecord(boolean isMarking, int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"JukeBoxK"},"content":"        String[] record \u003d this.listStates.get(index).split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"JukeBoxK"},"content":"        record[1] \u003d isMarking ? \"1\" : \"0\";","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"JukeBoxK"},"content":"        String newRecord \u003d String.join(\" | \", record);","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"JukeBoxK"},"content":"        this.listStates.set(index, newRecord);","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"JukeBoxK"},"content":"        this.writeList();","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"JukeBoxK"},"content":"     * Initializes the directory and file of the stored list.","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"JukeBoxK"},"content":"     * If the directory does not exist, it is created.","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"JukeBoxK"},"content":"     * If the file does not exist, it is created.","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"JukeBoxK"},"content":"    public void initializeListFile() {","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"JukeBoxK"},"content":"        try{","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"JukeBoxK"},"content":"            File dir \u003d new File(\"./data/\");","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"JukeBoxK"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"JukeBoxK"},"content":"                if (dir.mkdirs()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"JukeBoxK"},"content":"//                    System.out.println(\"Initializaing....\");","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"JukeBoxK"},"content":"                } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"JukeBoxK"},"content":"//                    System.out.println(\"Failed to create the directory.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"JukeBoxK"},"content":"                    return;","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"JukeBoxK"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"JukeBoxK"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"JukeBoxK"},"content":"            File file \u003d new File(listFilePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"JukeBoxK"},"content":"                if (!file.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"JukeBoxK"},"content":"                    if (file.createNewFile()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"JukeBoxK"},"content":"                        //System.out.println(\"File created: \" + file.getAbsolutePath());","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"JukeBoxK"},"content":"                    } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"JukeBoxK"},"content":"                        //System.out.println(\"Failed to create the file.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"JukeBoxK"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"JukeBoxK"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"JukeBoxK"},"content":"        }catch(IOException e){","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"JukeBoxK"},"content":"            System.out.println(\"FILE Creation failed\" + e);","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"JukeBoxK"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"JukeBoxK":146}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.util;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":" * Represents the list from which the tasks are stored.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":" * Handles the operation of modifying the lists.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"    private ArrayList\u003cTask\u003e listItems;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"     * Adds the given task of given type, using given data into the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"     * @param task the given task.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"     * @param type the type of the given task.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"     * @param data an array of string of varying size depending on the type of the task being added.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"     *             Todos only have o single data for description.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"     *             Deadlines have one for description and one for the deadline date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"     *             Events have one for description, one for the start date and time and, one for end date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"    public void addTask(Task task, String type, String[]data){","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"        this.listItems.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"        storage.addListStateRecord(type, data);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"        Ui.informItemAdded(task, this);","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"     * Constructs an instance of TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"     * The listItems field is initialized from the stored data, if any.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"JukeBoxK"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"JukeBoxK"},"content":"        this.listItems \u003d storage.loadTasks();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"JukeBoxK"},"content":"     * Displays the details of each task.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"JukeBoxK"},"content":"     * The process is done using loops to go through all the tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"JukeBoxK"},"content":"    public void showList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"JukeBoxK"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"JukeBoxK"},"content":"        System.out.println(\"\\tPer your request, I am outlining the tasks from your designated list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"JukeBoxK"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"JukeBoxK"},"content":"        for (Task item : this.listItems){","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"JukeBoxK"},"content":"            System.out.println(\"\\t\" + index + \". \" + item);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"JukeBoxK"},"content":"            index++;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"JukeBoxK"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"JukeBoxK"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\" );","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"JukeBoxK"},"content":"     * Marks the task at the given index in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"JukeBoxK"},"content":"     * @param index the given index of the task to be marked.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"JukeBoxK"},"content":"    public void markList(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"JukeBoxK"},"content":"        this.listItems.get(index-1).mark();","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"JukeBoxK"},"content":"        storage.modifyStateRecord(true, index-1);","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"JukeBoxK"},"content":"        Ui.informListMarked(listItems.get(index-1));","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"JukeBoxK"},"content":"     * Unmarks the task at the given index in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"JukeBoxK"},"content":"     * @param index the given index of the task to be marked.","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"JukeBoxK"},"content":"    public void unmarkList(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"JukeBoxK"},"content":"        this.listItems.get(index-1).unmark();","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"JukeBoxK"},"content":"        storage.modifyStateRecord(false, index-1);","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"JukeBoxK"},"content":"        Ui.informListUnmarked(listItems.get(index-1));","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"JukeBoxK"},"content":"     * Removes the task at the given index in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"JukeBoxK"},"content":"     * @param index the given index of the task to be marked.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"JukeBoxK"},"content":"    public void deleteList(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"JukeBoxK"},"content":"        Task task \u003d listItems.remove(index-1);","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"JukeBoxK"},"content":"        storage.removeListStateRecord( index-1);","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"JukeBoxK"},"content":"        Ui.informItemRemoved(task, listItems.size());","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"JukeBoxK"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"JukeBoxK"},"content":"     * @return size of the ArrayList storing the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"JukeBoxK"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"JukeBoxK"},"content":"        return this.listItems.size();","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"JukeBoxK"},"content":"     * Search for the tasks that has the given keyword in the description and display them.","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"JukeBoxK"},"content":"     * @param keyword the keyword to be searched.","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"JukeBoxK"},"content":"    public void searchAndDisplay(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"JukeBoxK"},"content":"        ArrayList\u003cTask\u003e searchResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"JukeBoxK"},"content":"        for(Task t : this.listItems){","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"JukeBoxK"},"content":"            if(t.contains(keyword)){","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"JukeBoxK"},"content":"                searchResult.add(t);","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"JukeBoxK"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"JukeBoxK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"JukeBoxK"},"content":"        Ui.displaySelectedList(searchResult);","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"JukeBoxK"},"content":"     * Changes the String representation TaskList into showing the number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"JukeBoxK"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"JukeBoxK"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"JukeBoxK"},"content":"        return \"\\tCurrently, the list comprises  \" + listItems.size() + \" tasks.\";","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"JukeBoxK":115}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.util;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":" * Represents the User Interface.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":" * Messages are displayed to inform users of the effects of their command.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":" * Messages are displayed through the console.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"    private String logo \u003d \"\\t  __   __    ____  ____  ____  ____\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"            + \"\\t / _\\\\ (  )  (  __)(  _ \\\\(  __)(    \\\\\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"            + \"\\t/    \\\\/ (_/\\\\ ) _)  )   / ) _)  ) D (\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"            + \"\\t\\\\_/\\\\_/\\\\____/(__)  (__\\\\_)(____)(____/\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"    private final String name \u003d \"Alfred\";","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"     * Displays the given content between two lines to separate the output message.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"     * @param content the content to be printed.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"    private static void printMessageWithLines(String content) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"        System.out.println(\"\\t\" + content);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\" );","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"     * Displays a greeting message with the logo and the name of the chatbot and,","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"     * prompts the user to enter commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"    public void greet() {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"JukeBoxK"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"JukeBoxK"},"content":"        String message \u003d \"Greetings! I am \" + name + \".\" +\"\\n\\tHow may I be of service to you today?\";","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"JukeBoxK"},"content":"        printMessageWithLines(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"JukeBoxK"},"content":"     * Displays a farewell message from the chatbot.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"JukeBoxK"},"content":"    public static void leave() {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"JukeBoxK"},"content":"        String message \u003d \"Farewell. Wishing for the opportunity to meet you again soon.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"JukeBoxK"},"content":"        printMessageWithLines(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"JukeBoxK"},"content":"     * Displays a message to inform user of invalid command and,","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"JukeBoxK"},"content":"     * shows the details of valid commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"JukeBoxK"},"content":"    public static void informInvalidCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"JukeBoxK"},"content":"        String message \u003d \"I regret to inform you that I currently lack an understanding of the intended meaning behind\"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"JukeBoxK"},"content":"                + \"that statement.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"JukeBoxK"},"content":"        printMessageWithLines(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"JukeBoxK"},"content":"        informWrongInputFormat();","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"JukeBoxK"},"content":"     * Informs the user that the given task has been marked.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"JukeBoxK"},"content":"     * @param task the given task to be marked.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"JukeBoxK"},"content":"    public static void informListMarked(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"JukeBoxK"},"content":"        String message \u003d \"It is my pleasure to inform you that I have officially marked this particular task as\"","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"JukeBoxK"},"content":"                +\" \u0027completed\u0027:\" + \"\\n\\t   \" + task;","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"JukeBoxK"},"content":"        printMessageWithLines(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"JukeBoxK"},"content":"    public static void informBadTodoInput() {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"JukeBoxK"},"content":"        String message \u003d \"It is imperative that the description of a to-do is not left empty.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"JukeBoxK"},"content":"        printMessageWithLines(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"JukeBoxK"},"content":"    public static void informBadDeadlineInput() {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"JukeBoxK"},"content":"        String message \u003d \"It is imperative that the description and the date of a deadline is not left empty.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"JukeBoxK"},"content":"        printMessageWithLines(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"JukeBoxK"},"content":"    public static void informBadEventInput() {","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"JukeBoxK"},"content":"        String message \u003d \"It is imperative that the description and from-to information of an event is not left empty.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"JukeBoxK"},"content":"        printMessageWithLines(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"JukeBoxK"},"content":"     * Informs the user that the given task has been unmarked.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"JukeBoxK"},"content":"     * @param task the given task to be unmarked.","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"JukeBoxK"},"content":"    public static void informListUnmarked(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"JukeBoxK"},"content":"        String message \u003d \"I wish to communicate that I have marked this particular task as \u0027incomplete\u0027 at this \"","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"JukeBoxK"},"content":"                +\"juncture:\"+ \"\\n\\t   \" + task;","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"JukeBoxK"},"content":"        printMessageWithLines(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"JukeBoxK"},"content":"     * Informs the user that the given task is added into the given list and,","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"JukeBoxK"},"content":"     * displays the size of the resulting list.","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"JukeBoxK"},"content":"     * @param task the given task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"JukeBoxK"},"content":"     * @param taskList the list from which the task will be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"JukeBoxK"},"content":"    public static void informItemAdded(Task task, TaskList taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"JukeBoxK"},"content":"        String message \u003d \"I am pleased to convey that the following task has been added to the outlined list:\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"JukeBoxK"},"content":"                \"\\t   \"+task + \"\\n \" + taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"JukeBoxK"},"content":"        printMessageWithLines(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"JukeBoxK"},"content":"     * Displays the given list fully with all the task details.","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"JukeBoxK"},"content":"     * @param taskList the given list to be displayed.","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"JukeBoxK"},"content":"    public static void displayFullList(TaskList taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"JukeBoxK"},"content":"        if (taskList.getSize() \u003e 0) {","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"JukeBoxK"},"content":"            taskList.showList();","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"JukeBoxK"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"JukeBoxK"},"content":"            String message \u003d \"I would like to inform you that the task list is empty.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"JukeBoxK"},"content":"            printMessageWithLines(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"JukeBoxK"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"JukeBoxK"},"content":"     * Informs the user that the given task is removed from the given list and,","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"JukeBoxK"},"content":"     * displays the size of the resulting list.","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"JukeBoxK"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"JukeBoxK"},"content":"     * @param task the given task to be removed.","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"JukeBoxK"},"content":"     * @param size the list from which the task will be removed.","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"JukeBoxK"},"content":"    public static void informItemRemoved(Task task, int size) {","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"JukeBoxK"},"content":"        String message \u003d \"I acknowledge your update. The specified task has been duly removed:\\n\\t\" + task + \"\\n\\tCurrently, \" +","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"JukeBoxK"},"content":"                \"the list comprises \" + size + \" tasks.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"JukeBoxK"},"content":"        printMessageWithLines(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"JukeBoxK"},"content":"    public static void displaySelectedList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"JukeBoxK"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"JukeBoxK"},"content":"        System.out.println(\"\\tHere are the corresponding tasks that align with your criteria:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"JukeBoxK"},"content":"        for(Task t: taskList){","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"JukeBoxK"},"content":"            System.out.println(\"\\t\" + t);","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"JukeBoxK"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"JukeBoxK"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\" );","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"JukeBoxK"},"content":"     * Informs the user of the correct format to enter a date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"JukeBoxK"},"content":"    public static void informWrongDateFormat() {","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"JukeBoxK"},"content":"        String message \u003d \"Please entered the date and time in the (yyyy/mm/dd HHmm) format\";","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"JukeBoxK"},"content":"        printMessageWithLines(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"JukeBoxK"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"JukeBoxK"},"content":"     * Informs the user of incorrect input format by,","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"JukeBoxK"},"content":"     * displaying the correct format of all the valid commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"JukeBoxK"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"JukeBoxK"},"content":"    public static void informWrongInputFormat() {","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"JukeBoxK"},"content":"        String message \u003d \"Please follow the correct format for adding tasks:\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"JukeBoxK"},"content":"                \"\\t\\tTo add todos: todo \u003cTask name\u003e\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"JukeBoxK"},"content":"                \"\\t\\tTo add deadlines: deadline \u003cTask name\u003e /by \u003cdeadline in yyyy-mm-dd HHmm format\u003e\\n\"+","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"JukeBoxK"},"content":"                \"\\t\\tTo add events: event \u003cTask name\u003e /from \u003cstart time in yyyy-mm-dd HHmm format\u003e \" +","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"JukeBoxK"},"content":"                \"/to \u003cend time in yyyy-mm-dd HHmm format\u003e\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"JukeBoxK"},"content":"                \"\\tOther commands: \\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"JukeBoxK"},"content":"                \"\\t\\tlist : to list the full list\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"JukeBoxK"},"content":"                \"\\t\\tmark \u003cindex\u003e: to mark the task at index no \u003cindex\u003e in the list as complete\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"JukeBoxK"},"content":"                \"\\t\\tunmark \u003cindex\u003e: to mark the task at index no \u003cindex\u003e in the last as incomplete\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"JukeBoxK"},"content":"                \"\\t\\tdelete \u003cindex\u003e: to remove the taks at index no \u003cindex\u003e in the last\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"JukeBoxK"},"content":"                \"\\t\\tbye: to leave the program\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"JukeBoxK"},"content":"                \"\\t\\tfind \u003ckeyword\u003e: to find tasks with description that contains the keyword\";","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"JukeBoxK"},"content":"        printMessageWithLines(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"JukeBoxK":168}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.util;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import duke.command.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"import java.lang.reflect.Field;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"    public void testParse() throws NoSuchFieldException, IllegalAccessException {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"        //Test set up","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"        String todo \u003d \"todo read book\";","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"        String deadline \u003d \"deadline math assignment about linear algebra /by 2024/03/03 2359\";","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"        String event \u003d \"event career fair for undergraduates /from 2024/04/03 1100 /to 2024/04/03 1700\";","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"        String list \u003d \"list\";","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"        String mark3 \u003d \"mark 3\";","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"        String unmark1 \u003d \"unmark 1\";","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"        String delete \u003d \"delete 1\";","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"        String gibberish \u003d \"I like coding, do you?\";","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"        String bye \u003d \"bye\";","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"        LocalDateTime deadlineDate \u003d LocalDateTime.of(2024, 3, 3, 23, 59);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"        LocalDateTime eventFromDate \u003d LocalDateTime.of(2024, 4, 3, 11, 0);","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"        LocalDateTime eventToDate \u003d LocalDateTime.of(2024, 4, 3, 17, 0);","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"        //test 1","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"        AddTodoCommand dummy1 \u003d (AddTodoCommand) p.parse(todo);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"        Field field \u003d AddTodoCommand.class.getDeclaredField(\"description\");","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"        field.setAccessible(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"JukeBoxK"},"content":"        String todoDes \u003d (String) field.get(dummy1);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(dummy1.getType(), Parser.Cmd.todo);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(todoDes, \"read book\");","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"JukeBoxK"},"content":"        //test2","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"JukeBoxK"},"content":"        AddDeadlineCommand dummy2 \u003d (AddDeadlineCommand) p.parse(deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"JukeBoxK"},"content":"        field \u003d AddDeadlineCommand.class.getDeclaredField(\"description\");","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"JukeBoxK"},"content":"        field.setAccessible(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"JukeBoxK"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"JukeBoxK"},"content":"        String deadlineDes \u003d (String) field.get(dummy2);","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"JukeBoxK"},"content":"        field \u003d AddDeadlineCommand.class.getDeclaredField(\"date\");","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"JukeBoxK"},"content":"        field.setAccessible(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"JukeBoxK"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"JukeBoxK"},"content":"        LocalDateTime deadlineDt \u003d (LocalDateTime) field.get(dummy2);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(dummy2.getType(), Parser.Cmd.deadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(deadlineDes, \"math assignment about linear algebra\");","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(deadlineDt, deadlineDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"JukeBoxK"},"content":"        //test3","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"JukeBoxK"},"content":"        AddEventCommand dummy3 \u003d (AddEventCommand) p.parse(event);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"JukeBoxK"},"content":"        field \u003d AddEventCommand.class.getDeclaredField(\"description\");","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"JukeBoxK"},"content":"        field.setAccessible(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"JukeBoxK"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"JukeBoxK"},"content":"        String eventDes \u003d (String) field.get(dummy3);","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"JukeBoxK"},"content":"        field \u003d AddEventCommand.class.getDeclaredField(\"fromDate\");","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"JukeBoxK"},"content":"        field.setAccessible(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"JukeBoxK"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"JukeBoxK"},"content":"        LocalDateTime eventFD \u003d (LocalDateTime) field.get(dummy3);","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"JukeBoxK"},"content":"        field \u003d AddEventCommand.class.getDeclaredField(\"toDate\");","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"JukeBoxK"},"content":"        field.setAccessible(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"JukeBoxK"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"JukeBoxK"},"content":"        LocalDateTime eventTD \u003d (LocalDateTime) field.get(dummy3);","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(dummy2.getType(), Parser.Cmd.deadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(eventDes, \"career fair for undergraduates\");","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(eventFD, eventFromDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(eventTD, eventToDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"JukeBoxK"},"content":"        //test4","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"JukeBoxK"},"content":"        ListTaskCommand dummy4 \u003d (ListTaskCommand) p.parse(list);","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(dummy4.getType(), Parser.Cmd.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"JukeBoxK"},"content":"        //test5","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"JukeBoxK"},"content":"        ToggleMarkTaskCommand dummy5 \u003d (ToggleMarkTaskCommand) p.parse(mark3);","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"JukeBoxK"},"content":"        field \u003d ToggleMarkTaskCommand.class.getDeclaredField(\"index\");","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"JukeBoxK"},"content":"        field.setAccessible(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"JukeBoxK"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"JukeBoxK"},"content":"        int markInd \u003d (int) field.get(dummy5);","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(dummy5.getType(), Parser.Cmd.mark);","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(markInd, 3);","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"JukeBoxK"},"content":"        //test6","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"JukeBoxK"},"content":"        ToggleMarkTaskCommand dummy6 \u003d (ToggleMarkTaskCommand) p.parse(unmark1);","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"JukeBoxK"},"content":"        int unmarkInd \u003d(int) field.get(dummy6);","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(dummy6.getType(), Parser.Cmd.unmark);","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(unmarkInd, 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"JukeBoxK"},"content":"        //test7","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"JukeBoxK"},"content":"        DeleteTaskCommand dummy7 \u003d (DeleteTaskCommand) p.parse(delete);","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"JukeBoxK"},"content":"        field \u003d DeleteTaskCommand.class.getDeclaredField(\"index\");","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"JukeBoxK"},"content":"        field.setAccessible(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"JukeBoxK"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"JukeBoxK"},"content":"        int deleteInd \u003d (int) field.get(dummy7);","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(dummy7.getType(), Parser.Cmd.delete);","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(deleteInd, 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"JukeBoxK"},"content":"        //test8","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"JukeBoxK"},"content":"        NoActionCommand dummy8 \u003d (NoActionCommand) p.parse(gibberish);","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(dummy8.getType(), Parser.Cmd.none);","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"JukeBoxK"},"content":"        //test9","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"JukeBoxK"},"content":"        ByeCommand dummy9 \u003d (ByeCommand) p.parse(bye);","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(dummy9.getType(), Parser.Cmd.bye);","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"JukeBoxK":107}},{"path":"src/test/java/duke/util/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"package duke.util;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"import java.lang.reflect.Field;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"    public void testAddListStateRecord() throws NoSuchFieldException, IllegalAccessException {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"        //Test set up","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"        Storage s \u003d new Storage();","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"        String todo \u003d \"todo\";","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"        String deadline \u003d \"deadline\";","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"        String event \u003d \"event\";","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"JukeBoxK"},"content":"        String[] todoData \u003d {\"todo description\"};","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"JukeBoxK"},"content":"        String[] deadlineData \u003d {\"deadline description\", \"1995/05/23 0000\"};","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"JukeBoxK"},"content":"        String[] eventData \u003d {\"event description\", \"1995/05/23 0000\", \"2023/12/12 0000\"};","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"JukeBoxK"},"content":"        ","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"JukeBoxK"},"content":"        Field field \u003d Storage.class.getDeclaredField(\"listStates\");","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"JukeBoxK"},"content":"        field.setAccessible(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"JukeBoxK"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"JukeBoxK"},"content":"        ArrayList\u003cString\u003e val \u003d (ArrayList\u003cString\u003e) field.get(s);","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"JukeBoxK"},"content":"        // test case 1","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"JukeBoxK"},"content":"        s.addListStateRecord(todo, todoData);","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(val.get(0), \"T | 0 | todo description\");","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"JukeBoxK"},"content":"        // test case 2","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"JukeBoxK"},"content":"        s.addListStateRecord(deadline, deadlineData);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(val.get(1), \"D | 0 | deadline description | 1995/05/23 0000\");","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"JukeBoxK"},"content":"        // test case 3","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"JukeBoxK"},"content":"        s.addListStateRecord(event, eventData);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"JukeBoxK"},"content":"        assertEquals(val.get(2), \"E | 0 | event description | 1995/05/23 0000 | 2023/12/12 0000\");","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"JukeBoxK"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"JukeBoxK"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"JukeBoxK":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JukeBoxK"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"JukeBoxK"},"content":"deadline return book /by 2024/06/06 0900","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"JukeBoxK"},"content":"event project meeting /from 2024/08/06 1400 /to 2024/08/06 1600","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"JukeBoxK"},"content":"todo join sports club","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"JukeBoxK"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"JukeBoxK"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"JukeBoxK"},"content":"mark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"JukeBoxK"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"deadline return book /by 2024/02/04 2359","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"event project meeting /from 2024/02/05 1300 /to 2024/02/05 1400","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"JukeBoxK"},"content":"deadline do homework /by 1899/09/30 2145","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"JukeBoxK"},"content":"unmark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"JukeBoxK"},"content":"mark 5","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"JukeBoxK"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"JukeBoxK"},"content":"delete 1","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"JukeBoxK"},"content":"delete 1","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"JukeBoxK"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"JukeBoxK":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"JukeBoxK"},"content":"if exist data\\ del data","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"JukeBoxK"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"JukeBoxK"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JukeBoxK":3,"-":20}}]
