[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"import com.sun.source.util.TaskListener;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"import java.io.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"import static java.time.DayOfWeek.MONDAY;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"    public static String formatDate(LocalDate date) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"        String formattedDate \u003d date.format(outputFormatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"        return formattedDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"    public static String formatTime(LocalTime time) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"        String formattedTime \u003d time.format(formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"        return formattedTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"    public static class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"        protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"        protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"        public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"            this.isDone \u003d isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"            return (this.isDone ? \"X\" : \"0\" ); // mark done task with 1","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"        public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"            return \" | \" + getStatusIcon() + \" | \" + this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"        public void editDescription(String input) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"            this.description \u003d input;","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"        public String checkType() {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"            return \"Task\";","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"        public boolean checkDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"            return this.isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"        public void markDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"tahnya"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"tahnya"},"content":"        public void markUnDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"tahnya"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"tahnya"},"content":"        public LocalDate getDue() {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"tahnya"},"content":"            return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"tahnya"},"content":"    public static class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"tahnya"},"content":"        public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"tahnya"},"content":"            super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"tahnya"},"content":"        @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"tahnya"},"content":"        public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"tahnya"},"content":"            return \"T\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"tahnya"},"content":"        @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"tahnya"},"content":"        public String checkType() {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"tahnya"},"content":"            return \"ToDo\";","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"tahnya"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"tahnya"},"content":"//        protected String by;","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"tahnya"},"content":"        private LocalDate byDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"tahnya"},"content":"        private LocalTime byTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"tahnya"},"content":"        public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"tahnya"},"content":"            super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"tahnya"},"content":"            String[] parseBy \u003d by.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"tahnya"},"content":"            if (parseBy.length \u003e 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"tahnya"},"content":"                this.byTime \u003d LocalTime.parse(parseBy[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"tahnya"},"content":"            this.byDate \u003d LocalDate.parse(parseBy[0]);","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"tahnya"},"content":"//            this.by \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"tahnya"},"content":"        @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"tahnya"},"content":"        public LocalDate getDue() {","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"tahnya"},"content":"            return this.byDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"tahnya"},"content":"        @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"tahnya"},"content":"        public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"tahnya"},"content":"            return \"D\" + super.toString()","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"tahnya"},"content":"                    + \" | by: \" + formatDate(byDate) + (byTime !\u003d null ? \" \" + formatTime(byTime) : \"\");","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"tahnya"},"content":"        @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"tahnya"},"content":"        public String checkType() {","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"tahnya"},"content":"            return \"Deadline\";","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"tahnya"},"content":"    public static class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"tahnya"},"content":"//        protected String start;","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"tahnya"},"content":"//        protected String end;","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"tahnya"},"content":"        private LocalDate startDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"tahnya"},"content":"        private LocalTime startTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"tahnya"},"content":"        private LocalDate endDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"tahnya"},"content":"        private LocalTime endTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"tahnya"},"content":"        public Event(String description, String start, String end, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"tahnya"},"content":"            super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"tahnya"},"content":"            String[] parseStart \u003d start.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"tahnya"},"content":"            String[] parseEnd \u003d end.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"tahnya"},"content":"            if (parseStart.length \u003e 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"tahnya"},"content":"                this.startTime \u003d LocalTime.parse(parseStart[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"tahnya"},"content":"            this.startDate \u003d LocalDate.parse(parseStart[0]);","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"tahnya"},"content":"            if (parseEnd.length \u003e 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"tahnya"},"content":"                this.endDate \u003d LocalDate.parse(parseEnd[0]);","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"tahnya"},"content":"                this.endTime \u003d LocalTime.parse(parseEnd[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"tahnya"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"tahnya"},"content":"                this.endTime \u003d LocalTime.parse(parseEnd[0]);","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"tahnya"},"content":"//            this.start \u003d start;","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"tahnya"},"content":"//            this.end \u003d end;","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"tahnya"},"content":"        @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"tahnya"},"content":"        public LocalDate getDue() {","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"tahnya"},"content":"            return this.startDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"tahnya"},"content":"        @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"tahnya"},"content":"        public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"tahnya"},"content":"            return \"E\" + super.toString()","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"tahnya"},"content":"                    + \" | from: \" + formatDate(startDate) + (startTime !\u003d null ? \" \" + formatTime(startTime) : \"\")","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"tahnya"},"content":"                    +  \" | to: \" + (endDate !\u003d null ? \" \" + formatDate(endDate) : \"\") + formatTime(endTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":157,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"tahnya"},"content":"        @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"tahnya"},"content":"        public String checkType() {","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"tahnya"},"content":"            return \"Event\";","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":164,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":165,"author":{"gitId":"tahnya"},"content":"    private static final String LOGO \u003d \" _______  __                       __ \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"tahnya"},"content":"            + \"|     __||__|.-----..-----..---.-.|  |\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":167,"author":{"gitId":"tahnya"},"content":"            + \"|__     ||  ||  _  ||     ||  _  ||  |\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":168,"author":{"gitId":"tahnya"},"content":"            + \"|_______||__||___  ||__|__||___._||__|\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":169,"author":{"gitId":"tahnya"},"content":"            + \"             |_____|                  \\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":170,"author":{"gitId":"tahnya"},"content":"    private static final String DIV \u003d \"\\n\" + \"~~**~~\";","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"tahnya"},"content":"    private static final String FILE_PATH \u003d \"./data/signal.txt\";","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"tahnya"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":173,"author":{"gitId":"tahnya"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d loadTasksFromFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"tahnya"},"content":"    private static int index \u003d 0; // index of the next task to be filled","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":176,"author":{"gitId":"tahnya"},"content":"    public static ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":178,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":179,"author":{"gitId":"tahnya"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"tahnya"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"tahnya"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"tahnya"},"content":"                // Create the file and necessary directory structure if it doesn\u0027t exist","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"tahnya"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"tahnya"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"tahnya"},"content":"                return taskList; // Return an empty list since there are no tasks yet","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":187,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":188,"author":{"gitId":"tahnya"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH));","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"tahnya"},"content":"            String line;","lastModifiedDate":"2024-02-01"},{"lineNumber":190,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":191,"author":{"gitId":"tahnya"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":192,"author":{"gitId":"tahnya"},"content":"                // Parse each line and create Task objects","lastModifiedDate":"2024-02-01"},{"lineNumber":193,"author":{"gitId":"tahnya"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":194,"author":{"gitId":"tahnya"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"tahnya"},"content":"                    taskList.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":197,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":198,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"tahnya"},"content":"            reader.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":200,"author":{"gitId":"tahnya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":201,"author":{"gitId":"tahnya"},"content":"            System.out.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":202,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":203,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":204,"author":{"gitId":"tahnya"},"content":"        return taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":205,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":206,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":207,"author":{"gitId":"tahnya"},"content":"    public static Task parseTask(String line) {","lastModifiedDate":"2024-02-01"},{"lineNumber":208,"author":{"gitId":"tahnya"},"content":"        // Parse each line to create Task objects","lastModifiedDate":"2024-02-01"},{"lineNumber":209,"author":{"gitId":"tahnya"},"content":"        // Example line format: \"T | 1 | read book\"","lastModifiedDate":"2024-02-01"},{"lineNumber":210,"author":{"gitId":"tahnya"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":211,"author":{"gitId":"tahnya"},"content":"        if (parts.length \u003e\u003d 3) {","lastModifiedDate":"2024-02-01"},{"lineNumber":212,"author":{"gitId":"tahnya"},"content":"            boolean isDone \u003d parts[1].equals(\"X\");","lastModifiedDate":"2024-02-01"},{"lineNumber":213,"author":{"gitId":"tahnya"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":214,"author":{"gitId":"tahnya"},"content":"            if (parts[0] \u003d\u003d \"T\") { // todo","lastModifiedDate":"2024-02-01"},{"lineNumber":215,"author":{"gitId":"tahnya"},"content":"                return new ToDo(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":216,"author":{"gitId":"tahnya"},"content":"            } else if (parts[0] \u003d\u003d \"D\") { // deadline","lastModifiedDate":"2024-02-01"},{"lineNumber":217,"author":{"gitId":"tahnya"},"content":"                String deadline \u003d parts[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":218,"author":{"gitId":"tahnya"},"content":"                return new Deadline(description, deadline, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":219,"author":{"gitId":"tahnya"},"content":"            } else if (parts[0] \u003d\u003d \"E\") { // event","lastModifiedDate":"2024-02-01"},{"lineNumber":220,"author":{"gitId":"tahnya"},"content":"                String from \u003d parts[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":221,"author":{"gitId":"tahnya"},"content":"                String to \u003d parts[4];","lastModifiedDate":"2024-02-01"},{"lineNumber":222,"author":{"gitId":"tahnya"},"content":"                return new Event(description, from, to, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":223,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":224,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":225,"author":{"gitId":"tahnya"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":226,"author":{"gitId":"tahnya"},"content":"            System.out.println(\"Invalid line format: \" + line);","lastModifiedDate":"2024-02-01"},{"lineNumber":227,"author":{"gitId":"tahnya"},"content":"            return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":228,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":229,"author":{"gitId":"tahnya"},"content":"        return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":230,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":231,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":232,"author":{"gitId":"tahnya"},"content":"    public static void writeTasksToFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":233,"author":{"gitId":"tahnya"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":234,"author":{"gitId":"tahnya"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH));","lastModifiedDate":"2024-02-01"},{"lineNumber":235,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":236,"author":{"gitId":"tahnya"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":237,"author":{"gitId":"tahnya"},"content":"                // Write each task to a line in the file","lastModifiedDate":"2024-02-01"},{"lineNumber":238,"author":{"gitId":"tahnya"},"content":"                writer.write(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":239,"author":{"gitId":"tahnya"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":240,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":241,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":242,"author":{"gitId":"tahnya"},"content":"            writer.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":243,"author":{"gitId":"tahnya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":244,"author":{"gitId":"tahnya"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":245,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":246,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":247,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":248,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":249,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":250,"author":{"gitId":"tahnya"},"content":"     * Checks with the user if the input is a typo of a command.","lastModifiedDate":"2024-01-25"},{"lineNumber":251,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":252,"author":{"gitId":"tahnya"},"content":"     * @param input Input collected from the user.","lastModifiedDate":"2024-01-25"},{"lineNumber":253,"author":{"gitId":"tahnya"},"content":"     * @param command Command to check.","lastModifiedDate":"2024-01-25"},{"lineNumber":254,"author":{"gitId":"tahnya"},"content":"     * @return True if input is a typo of the command.","lastModifiedDate":"2024-01-25"},{"lineNumber":255,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":256,"author":{"gitId":"tahnya"},"content":"    public static boolean checkCommandTypo(String input, String command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":257,"author":{"gitId":"tahnya"},"content":"        if(!input.equals(command)) {","lastModifiedDate":"2024-01-25"},{"lineNumber":258,"author":{"gitId":"tahnya"},"content":"            signalSays(\"Did you mean \u0027\"+ command + \"\u0027? (y/n)\");","lastModifiedDate":"2024-01-25"},{"lineNumber":259,"author":{"gitId":"tahnya"},"content":"            String isCommandCheck \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":260,"author":{"gitId":"tahnya"},"content":"            if(isCommandCheck.equals(\"y\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":261,"author":{"gitId":"tahnya"},"content":"                return true;","lastModifiedDate":"2024-01-25"},{"lineNumber":262,"author":{"gitId":"tahnya"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":263,"author":{"gitId":"tahnya"},"content":"                return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":264,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":265,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":266,"author":{"gitId":"tahnya"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":267,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":268,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":269,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":270,"author":{"gitId":"tahnya"},"content":"     * Check if the input is a permutation of the original.","lastModifiedDate":"2024-01-25"},{"lineNumber":271,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":272,"author":{"gitId":"tahnya"},"content":"     * @param input Input collected from the user.","lastModifiedDate":"2024-01-25"},{"lineNumber":273,"author":{"gitId":"tahnya"},"content":"     * @param original String to compare the input to.","lastModifiedDate":"2024-01-25"},{"lineNumber":274,"author":{"gitId":"tahnya"},"content":"     * @return True if input is a permutation of original.","lastModifiedDate":"2024-01-25"},{"lineNumber":275,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":276,"author":{"gitId":"tahnya"},"content":"    public static boolean isPermutationMatch(String input, String original) {","lastModifiedDate":"2024-01-25"},{"lineNumber":277,"author":{"gitId":"tahnya"},"content":"        // Check if user input is a permutation match","lastModifiedDate":"2024-01-25"},{"lineNumber":278,"author":{"gitId":"tahnya"},"content":"        char[] userInputArray \u003d input.toCharArray();","lastModifiedDate":"2024-01-25"},{"lineNumber":279,"author":{"gitId":"tahnya"},"content":"        char[] originalArray \u003d original.toCharArray();","lastModifiedDate":"2024-01-25"},{"lineNumber":280,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":281,"author":{"gitId":"tahnya"},"content":"        // Sort the arrays to compare","lastModifiedDate":"2024-01-25"},{"lineNumber":282,"author":{"gitId":"tahnya"},"content":"        java.util.Arrays.sort(userInputArray);","lastModifiedDate":"2024-01-25"},{"lineNumber":283,"author":{"gitId":"tahnya"},"content":"        java.util.Arrays.sort(originalArray);","lastModifiedDate":"2024-01-25"},{"lineNumber":284,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":285,"author":{"gitId":"tahnya"},"content":"        return java.util.Arrays.equals(userInputArray, originalArray);","lastModifiedDate":"2024-01-25"},{"lineNumber":286,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":287,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":288,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":289,"author":{"gitId":"tahnya"},"content":"     * Adds input to the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":290,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":291,"author":{"gitId":"tahnya"},"content":"     * @param input Input collected from the user.","lastModifiedDate":"2024-01-25"},{"lineNumber":292,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":293,"author":{"gitId":"tahnya"},"content":"    public static void taskAdded(String input) {","lastModifiedDate":"2024-01-25"},{"lineNumber":294,"author":{"gitId":"tahnya"},"content":"        Task t \u003d new Task(input, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":295,"author":{"gitId":"tahnya"},"content":"        taskList.add(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":296,"author":{"gitId":"tahnya"},"content":"        index +\u003d 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":297,"author":{"gitId":"tahnya"},"content":"        signalSays(\"Added: \" + input);","lastModifiedDate":"2024-01-25"},{"lineNumber":298,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":299,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":300,"author":{"gitId":"tahnya"},"content":"    public static void commandAddTask(String type, String input) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":301,"author":{"gitId":"tahnya"},"content":"        if (input \u003d\u003d \"\") {","lastModifiedDate":"2024-01-25"},{"lineNumber":302,"author":{"gitId":"tahnya"},"content":"            throw new DukeException(\"Looks like you haven\u0027t entered a task description!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":303,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":304,"author":{"gitId":"tahnya"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":305,"author":{"gitId":"tahnya"},"content":"            taskList.add(new ToDo(input, false));","lastModifiedDate":"2024-02-01"},{"lineNumber":306,"author":{"gitId":"tahnya"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":307,"author":{"gitId":"tahnya"},"content":"            String command[] \u003d input.split(\" /\");","lastModifiedDate":"2024-01-25"},{"lineNumber":308,"author":{"gitId":"tahnya"},"content":"            if (type.equals(\"deadline\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":309,"author":{"gitId":"tahnya"},"content":"                if (command.length \u003c 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":310,"author":{"gitId":"tahnya"},"content":"                    throw new DukeException(\"Looks like you haven\u0027t added a deadline!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":311,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":312,"author":{"gitId":"tahnya"},"content":"                String deadline \u003d command[1] !\u003d null \u0026\u0026 command[1].length() \u003e 3 ? command[1].substring(3) : command[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":313,"author":{"gitId":"tahnya"},"content":"                taskList.add(new Deadline(command[0], deadline, false));","lastModifiedDate":"2024-02-01"},{"lineNumber":314,"author":{"gitId":"tahnya"},"content":"            } else if (type.equals(\"event\")){","lastModifiedDate":"2024-01-25"},{"lineNumber":315,"author":{"gitId":"tahnya"},"content":"                if (command.length \u003c 3) {","lastModifiedDate":"2024-01-25"},{"lineNumber":316,"author":{"gitId":"tahnya"},"content":"                    throw new DukeException(\"Looks like you haven\u0027t added a start or end time!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":317,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":318,"author":{"gitId":"tahnya"},"content":"                String start \u003d command[1] !\u003d null \u0026\u0026 command[1].length() \u003e 5 ? command[1].substring(5): command[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":319,"author":{"gitId":"tahnya"},"content":"                String end \u003d command[2] !\u003d null \u0026\u0026 command[2].length() \u003e 3 ? command[2].substring(3) : command[2];","lastModifiedDate":"2024-01-25"},{"lineNumber":320,"author":{"gitId":"tahnya"},"content":"                taskList.add(new Event(command[0], start, end, false));","lastModifiedDate":"2024-02-01"},{"lineNumber":321,"author":{"gitId":"tahnya"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":322,"author":{"gitId":"tahnya"},"content":"                taskList.add(new Task(input, false));","lastModifiedDate":"2024-02-01"},{"lineNumber":323,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":324,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":325,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":326,"author":{"gitId":"tahnya"},"content":"        taskAdded(taskList.get(index));","lastModifiedDate":"2024-02-01"},{"lineNumber":327,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":328,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":329,"author":{"gitId":"tahnya"},"content":"    public static void taskAdded(Task t) {","lastModifiedDate":"2024-01-25"},{"lineNumber":330,"author":{"gitId":"tahnya"},"content":"        index +\u003d 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":331,"author":{"gitId":"tahnya"},"content":"        signalSays(\"Got it! I\u0027ve added this task to your list: \\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":332,"author":{"gitId":"tahnya"},"content":"                + \"  \" + t.toString() + \"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":333,"author":{"gitId":"tahnya"},"content":"                + \"Now you have \" + (index) + (index \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":334,"author":{"gitId":"tahnya"},"content":"        writeTasksToFile(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":335,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":336,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":337,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":338,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":339,"author":{"gitId":"tahnya"},"content":"     * Prints the list of inputs collected from the user.","lastModifiedDate":"2024-01-25"},{"lineNumber":340,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":341,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":342,"author":{"gitId":"tahnya"},"content":"    public static void commandList() {","lastModifiedDate":"2024-01-25"},{"lineNumber":343,"author":{"gitId":"tahnya"},"content":"        System.out.println(DIV);","lastModifiedDate":"2024-02-01"},{"lineNumber":344,"author":{"gitId":"tahnya"},"content":"        System.out.println(\"Here is your tasklist!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":345,"author":{"gitId":"tahnya"},"content":"        for (int i \u003d 0; i \u003c index; i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":346,"author":{"gitId":"tahnya"},"content":"            System.out.println((i + 1) + \". \" + taskList.get(i).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":347,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":348,"author":{"gitId":"tahnya"},"content":"        System.out.println(DIV);","lastModifiedDate":"2024-02-01"},{"lineNumber":349,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":350,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":351,"author":{"gitId":"tahnya"},"content":"//    public static void commandListDate(String date) {","lastModifiedDate":"2024-02-01"},{"lineNumber":352,"author":{"gitId":"tahnya"},"content":"//        LocalDate d \u003d LocalDate.parse(date);","lastModifiedDate":"2024-02-01"},{"lineNumber":353,"author":{"gitId":"tahnya"},"content":"//        System.out.println(DIV);","lastModifiedDate":"2024-02-01"},{"lineNumber":354,"author":{"gitId":"tahnya"},"content":"//        System.out.println(\"Here\u0027s what\u0027s happening on \" + formatDate(d) + \":\");","lastModifiedDate":"2024-02-01"},{"lineNumber":355,"author":{"gitId":"tahnya"},"content":"//        for (int i \u003d 0; i \u003c index; i++){","lastModifiedDate":"2024-02-01"},{"lineNumber":356,"author":{"gitId":"tahnya"},"content":"//            Task t \u003d taskList.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":357,"author":{"gitId":"tahnya"},"content":"//            if (t.getDue() \u003d\u003d d) {","lastModifiedDate":"2024-02-01"},{"lineNumber":358,"author":{"gitId":"tahnya"},"content":"//                System.out.println(t.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":359,"author":{"gitId":"tahnya"},"content":"//            }","lastModifiedDate":"2024-02-01"},{"lineNumber":360,"author":{"gitId":"tahnya"},"content":"//        }","lastModifiedDate":"2024-02-01"},{"lineNumber":361,"author":{"gitId":"tahnya"},"content":"//        System.out.println(DIV);","lastModifiedDate":"2024-02-01"},{"lineNumber":362,"author":{"gitId":"tahnya"},"content":"//    }","lastModifiedDate":"2024-02-01"},{"lineNumber":363,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":364,"author":{"gitId":"tahnya"},"content":"    public static String commandMark(int x) {","lastModifiedDate":"2024-02-01"},{"lineNumber":365,"author":{"gitId":"tahnya"},"content":"        Task current \u003d taskList.get(x);","lastModifiedDate":"2024-02-01"},{"lineNumber":366,"author":{"gitId":"tahnya"},"content":"        String response \u003d current.checkDone()","lastModifiedDate":"2024-02-01"},{"lineNumber":367,"author":{"gitId":"tahnya"},"content":"                ? \"Task \" + (x + 1) + \" is already done! Yay!\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":368,"author":{"gitId":"tahnya"},"content":"                : \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":369,"author":{"gitId":"tahnya"},"content":"        current.markDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":370,"author":{"gitId":"tahnya"},"content":"        return response + \"  \" + current.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":371,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":372,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":373,"author":{"gitId":"tahnya"},"content":"    public static String commandUnmark(int x) {","lastModifiedDate":"2024-02-01"},{"lineNumber":374,"author":{"gitId":"tahnya"},"content":"        Task current \u003d taskList.get(x);","lastModifiedDate":"2024-02-01"},{"lineNumber":375,"author":{"gitId":"tahnya"},"content":"        String response \u003d current.checkDone()","lastModifiedDate":"2024-02-01"},{"lineNumber":376,"author":{"gitId":"tahnya"},"content":"                ? \"Task \" + (x + 1) + \" is not done yet!\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":377,"author":{"gitId":"tahnya"},"content":"                : \"OK, I\u0027ve marked this task as undone:\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":378,"author":{"gitId":"tahnya"},"content":"        current.markUnDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":379,"author":{"gitId":"tahnya"},"content":"        return response + \"  \" + current.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":380,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":381,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":382,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":383,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":384,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-01-26"},{"lineNumber":385,"author":{"gitId":"tahnya"},"content":"     * Deletes the task from the list and shifts the subsequent tasks forward.","lastModifiedDate":"2024-01-26"},{"lineNumber":386,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-01-26"},{"lineNumber":387,"author":{"gitId":"tahnya"},"content":"     * @param x The index of the task to be deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":388,"author":{"gitId":"tahnya"},"content":"     * @throws DukeException","lastModifiedDate":"2024-01-26"},{"lineNumber":389,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-01-26"},{"lineNumber":390,"author":{"gitId":"tahnya"},"content":"    public static void commandDelete(int x) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":391,"author":{"gitId":"tahnya"},"content":"        Task current \u003d taskList.get(x);","lastModifiedDate":"2024-02-01"},{"lineNumber":392,"author":{"gitId":"tahnya"},"content":"//        if (index \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":393,"author":{"gitId":"tahnya"},"content":"//            throw new DukeException(\"Looks like there\u0027s nothing here to remove. Better get on those tasks!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":394,"author":{"gitId":"tahnya"},"content":"//        }","lastModifiedDate":"2024-02-01"},{"lineNumber":395,"author":{"gitId":"tahnya"},"content":"        if (x \u003e\u003d 0 \u0026\u0026 x \u003c\u003d index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":396,"author":{"gitId":"tahnya"},"content":"            taskList.remove(x);","lastModifiedDate":"2024-02-01"},{"lineNumber":397,"author":{"gitId":"tahnya"},"content":"            index -\u003d 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":398,"author":{"gitId":"tahnya"},"content":"            signalSays(\"Noted, I\u0027ve deleted this task from your list: \\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":399,"author":{"gitId":"tahnya"},"content":"                    + \"  \" + current.toString() + \"\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":400,"author":{"gitId":"tahnya"},"content":"                    + \"Now you have \" + (index) + (index \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":401,"author":{"gitId":"tahnya"},"content":"            writeTasksToFile(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":402,"author":{"gitId":"tahnya"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":403,"author":{"gitId":"tahnya"},"content":"            throw new DukeException(\"I\u0027d say shoot for the stars but in this case there are only \"","lastModifiedDate":"2024-01-25"},{"lineNumber":404,"author":{"gitId":"tahnya"},"content":"                    + (index - 1) + ((index - 1) \u003d\u003d 1 ? \" item\" : \" items\") + \" in this list\");","lastModifiedDate":"2024-01-25"},{"lineNumber":405,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":406,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":407,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":408,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-01-26"},{"lineNumber":409,"author":{"gitId":"tahnya"},"content":"     * Handles negative and out-of-bounds inputs for deleting tasks.","lastModifiedDate":"2024-01-26"},{"lineNumber":410,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-01-26"},{"lineNumber":411,"author":{"gitId":"tahnya"},"content":"     * @param x","lastModifiedDate":"2024-01-26"},{"lineNumber":412,"author":{"gitId":"tahnya"},"content":"     * @throws DukeException","lastModifiedDate":"2024-01-26"},{"lineNumber":413,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-01-26"},{"lineNumber":414,"author":{"gitId":"tahnya"},"content":"    public static void commandDeleteInvalid(int x) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":415,"author":{"gitId":"tahnya"},"content":"        if (x \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":416,"author":{"gitId":"tahnya"},"content":"            throw new DukeException(\"Looks like there\u0027s nothing here to remove. Better get on those tasks!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":417,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":418,"author":{"gitId":"tahnya"},"content":"        if (x \u003c 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":419,"author":{"gitId":"tahnya"},"content":"            throw new DukeException(\"Negative numbers might exist in maths but not in this list!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":420,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":421,"author":{"gitId":"tahnya"},"content":"        if (x \u003e 100) {","lastModifiedDate":"2024-01-25"},{"lineNumber":422,"author":{"gitId":"tahnya"},"content":"            throw new DukeException(\"I\u0027d say shoot for the stars but in this case there are only \"","lastModifiedDate":"2024-02-01"},{"lineNumber":423,"author":{"gitId":"tahnya"},"content":"                    + (index - 1) + ((index - 1) \u003d\u003d 1 ? \" item\" : \" items\") + \" in this list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":424,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":425,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":426,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":427,"author":{"gitId":"tahnya"},"content":"    public static void commandBlah() throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":428,"author":{"gitId":"tahnya"},"content":"        throw new DukeException(\"All words are made up, but this one seems more nonsensical than usual. Try something else!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":429,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":430,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":431,"author":{"gitId":"tahnya"},"content":"    public static void commandSomethingelse() throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":432,"author":{"gitId":"tahnya"},"content":"        throw new DukeException(\"Haha, very funny. Nice try my guy!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":433,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":434,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":435,"author":{"gitId":"tahnya"},"content":"    public static void commandHelp() {","lastModifiedDate":"2024-01-26"},{"lineNumber":436,"author":{"gitId":"tahnya"},"content":"        signalSays(\"Note: Entering any text besides the following creates a new generic task. \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":437,"author":{"gitId":"tahnya"},"content":"                \"The round brackets indicate you can enter any text, square brackets indicate you should enter a number, without the brackets. \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":438,"author":{"gitId":"tahnya"},"content":"                \"\\nCREATING TASKS: \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":439,"author":{"gitId":"tahnya"},"content":"                \"* todo () -- creates a To Do task, which has no deadline. \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":440,"author":{"gitId":"tahnya"},"content":"                \"* deadline () \\\\by () -- creates a Deadline task, indicate its deadline after \u0027\\\\by\u0027. \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":441,"author":{"gitId":"tahnya"},"content":"                \"* event () \\\\from () \\\\to () -- creates an Event task, indicate its start and end after \u0027\\\\from\u0027 and \u0027\\\\to\u0027. \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":442,"author":{"gitId":"tahnya"},"content":"                \"\\nCOMMANDS: \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":443,"author":{"gitId":"tahnya"},"content":"                \"* list -- prints a numbered list of the tasks created, in input order.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":444,"author":{"gitId":"tahnya"},"content":"                \"* mark [] -- marks the task at index [] as completed. \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":445,"author":{"gitId":"tahnya"},"content":"                \"* unmark [] -- marks the task at index [] as uncompleted. \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":446,"author":{"gitId":"tahnya"},"content":"                \"* delete [] -- removes the task at index [] from the list.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":447,"author":{"gitId":"tahnya"},"content":"                \"* bye -- exits the program.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":448,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":449,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":450,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":451,"author":{"gitId":"tahnya"},"content":"     * Prints Signal\u0027s response enclosed in the dividers.","lastModifiedDate":"2024-01-25"},{"lineNumber":452,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":453,"author":{"gitId":"tahnya"},"content":"     * @param response The message that is printed.","lastModifiedDate":"2024-01-25"},{"lineNumber":454,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":455,"author":{"gitId":"tahnya"},"content":"    public static void signalSays(String response) {","lastModifiedDate":"2024-01-25"},{"lineNumber":456,"author":{"gitId":"tahnya"},"content":"        System.out.println(DIV);","lastModifiedDate":"2024-02-01"},{"lineNumber":457,"author":{"gitId":"tahnya"},"content":"        System.out.println(response);","lastModifiedDate":"2024-01-25"},{"lineNumber":458,"author":{"gitId":"tahnya"},"content":"        System.out.println(DIV);","lastModifiedDate":"2024-02-01"},{"lineNumber":459,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":460,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":461,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":462,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":463,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":465,"author":{"gitId":"tahnya"},"content":"        System.out.println(\"Hello! My name is\\n\" + LOGO);","lastModifiedDate":"2024-02-01"},{"lineNumber":466,"author":{"gitId":"tahnya"},"content":"        System.out.println(\"How can I help?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":467,"author":{"gitId":"tahnya"},"content":"        System.out.println(\"Enter \u0027help\u0027 to see the list of commands available :D\");","lastModifiedDate":"2024-01-26"},{"lineNumber":468,"author":{"gitId":"tahnya"},"content":"        System.out.println(DIV);","lastModifiedDate":"2024-02-01"},{"lineNumber":469,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":470,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":471,"author":{"gitId":"tahnya"},"content":"        while(true) {","lastModifiedDate":"2024-01-25"},{"lineNumber":472,"author":{"gitId":"tahnya"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":473,"author":{"gitId":"tahnya"},"content":"            String[] inputArray \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-25"},{"lineNumber":474,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":475,"author":{"gitId":"tahnya"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":476,"author":{"gitId":"tahnya"},"content":"                // Exit program","lastModifiedDate":"2024-01-25"},{"lineNumber":477,"author":{"gitId":"tahnya"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":478,"author":{"gitId":"tahnya"},"content":"            } else if (userInput.equals(\"\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":479,"author":{"gitId":"tahnya"},"content":"                // input is blank","lastModifiedDate":"2024-01-25"},{"lineNumber":480,"author":{"gitId":"tahnya"},"content":"                signalSays(\"Brevity is the soul of wit, but you have to tell me something still!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":481,"author":{"gitId":"tahnya"},"content":"            } else if (inputArray.length \u003d\u003d 2 \u0026\u0026 inputArray[0].equals(\"mark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":482,"author":{"gitId":"tahnya"},"content":"                // Mark item at index as done","lastModifiedDate":"2024-01-25"},{"lineNumber":483,"author":{"gitId":"tahnya"},"content":"                int itemIndex \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":484,"author":{"gitId":"tahnya"},"content":"                signalSays(commandMark(itemIndex));","lastModifiedDate":"2024-02-01"},{"lineNumber":485,"author":{"gitId":"tahnya"},"content":"            } else if (inputArray.length \u003d\u003d 2 \u0026\u0026 inputArray[0].equals(\"unmark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":486,"author":{"gitId":"tahnya"},"content":"                // Mark item at index as done","lastModifiedDate":"2024-01-25"},{"lineNumber":487,"author":{"gitId":"tahnya"},"content":"                int itemIndex \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":488,"author":{"gitId":"tahnya"},"content":"                signalSays(commandUnmark(itemIndex));","lastModifiedDate":"2024-02-01"},{"lineNumber":489,"author":{"gitId":"tahnya"},"content":"            } else if (inputArray.length \u003d\u003d 2 \u0026\u0026 (isPermutationMatch(inputArray[0], \"mark\") || isPermutationMatch(inputArray[0], \"unmark\"))) {","lastModifiedDate":"2024-01-25"},{"lineNumber":490,"author":{"gitId":"tahnya"},"content":"                // check typo of \"mark\" or \"unmark\"","lastModifiedDate":"2024-01-25"},{"lineNumber":491,"author":{"gitId":"tahnya"},"content":"                if (checkCommandTypo(inputArray[0], \"mark\")) { // command mark typo","lastModifiedDate":"2024-01-25"},{"lineNumber":492,"author":{"gitId":"tahnya"},"content":"                    int itemIndex \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":493,"author":{"gitId":"tahnya"},"content":"                    signalSays(commandMark(itemIndex));","lastModifiedDate":"2024-02-01"},{"lineNumber":494,"author":{"gitId":"tahnya"},"content":"                } else if (checkCommandTypo(inputArray[0], \"unmark\")) { // command unmark typo","lastModifiedDate":"2024-01-25"},{"lineNumber":495,"author":{"gitId":"tahnya"},"content":"                    int itemIndex \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":496,"author":{"gitId":"tahnya"},"content":"                    signalSays(commandUnmark(itemIndex));","lastModifiedDate":"2024-02-01"},{"lineNumber":497,"author":{"gitId":"tahnya"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":498,"author":{"gitId":"tahnya"},"content":"                    signalSays(\"Do you want to add \u0027\" + userInput + \"\u0027? (y/n)\");","lastModifiedDate":"2024-01-25"},{"lineNumber":499,"author":{"gitId":"tahnya"},"content":"                    String addCommandCheck \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":500,"author":{"gitId":"tahnya"},"content":"                    if (addCommandCheck.equals(\"n\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":501,"author":{"gitId":"tahnya"},"content":"                        signalSays(\"What else can I help you with?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":502,"author":{"gitId":"tahnya"},"content":"                    } else if (addCommandCheck.equals(\"y\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":503,"author":{"gitId":"tahnya"},"content":"                        taskAdded(userInput);","lastModifiedDate":"2024-01-25"},{"lineNumber":504,"author":{"gitId":"tahnya"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":505,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":506,"author":{"gitId":"tahnya"},"content":"            } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":507,"author":{"gitId":"tahnya"},"content":"                // command list","lastModifiedDate":"2024-01-25"},{"lineNumber":508,"author":{"gitId":"tahnya"},"content":"                if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":509,"author":{"gitId":"tahnya"},"content":"                    signalSays(\"Oops, looks like you haven\u0027t added any tasks!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":510,"author":{"gitId":"tahnya"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":511,"author":{"gitId":"tahnya"},"content":"                    commandList();","lastModifiedDate":"2024-01-25"},{"lineNumber":512,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":513,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":514,"author":{"gitId":"tahnya"},"content":"//            else if (inputArray[0].equals(\"date\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":515,"author":{"gitId":"tahnya"},"content":"//                if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":516,"author":{"gitId":"tahnya"},"content":"//                    signalSays(\"Oops, looks like you haven\u0027t added any tasks!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":517,"author":{"gitId":"tahnya"},"content":"//                } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":518,"author":{"gitId":"tahnya"},"content":"//                    commandListDate(inputArray[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":519,"author":{"gitId":"tahnya"},"content":"//                }","lastModifiedDate":"2024-02-01"},{"lineNumber":520,"author":{"gitId":"tahnya"},"content":"//            }","lastModifiedDate":"2024-02-01"},{"lineNumber":521,"author":{"gitId":"tahnya"},"content":"            else if (isPermutationMatch(userInput, \"list\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":522,"author":{"gitId":"tahnya"},"content":"                // check typo of command list","lastModifiedDate":"2024-01-25"},{"lineNumber":523,"author":{"gitId":"tahnya"},"content":"                if (checkCommandTypo(userInput, \"list\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":524,"author":{"gitId":"tahnya"},"content":"                    commandList();","lastModifiedDate":"2024-01-25"},{"lineNumber":525,"author":{"gitId":"tahnya"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":526,"author":{"gitId":"tahnya"},"content":"                    signalSays(\"Do you want to add \" + userInput + \"? (y/n)\");","lastModifiedDate":"2024-01-25"},{"lineNumber":527,"author":{"gitId":"tahnya"},"content":"                    String addCommandCheck \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":528,"author":{"gitId":"tahnya"},"content":"                    if(addCommandCheck.equals(\"n\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":529,"author":{"gitId":"tahnya"},"content":"                        signalSays(\"What else can I help you with?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":530,"author":{"gitId":"tahnya"},"content":"                    } else if(addCommandCheck.equals(\"y\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":531,"author":{"gitId":"tahnya"},"content":"                        taskAdded(userInput);","lastModifiedDate":"2024-01-25"},{"lineNumber":532,"author":{"gitId":"tahnya"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":533,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":534,"author":{"gitId":"tahnya"},"content":"            } else if (inputArray[0].equals(\"todo\") || inputArray[0].equals(\"deadline\") || inputArray[0].equals(\"event\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":535,"author":{"gitId":"tahnya"},"content":"                String task \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, inputArray.length));","lastModifiedDate":"2024-01-25"},{"lineNumber":536,"author":{"gitId":"tahnya"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":537,"author":{"gitId":"tahnya"},"content":"                    commandAddTask(inputArray[0], task);","lastModifiedDate":"2024-01-25"},{"lineNumber":538,"author":{"gitId":"tahnya"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":539,"author":{"gitId":"tahnya"},"content":"                    signalSays(\"WHOOPSIE! \" + e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":540,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":541,"author":{"gitId":"tahnya"},"content":"            } else if (userInput.equals(\"blah\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":542,"author":{"gitId":"tahnya"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":543,"author":{"gitId":"tahnya"},"content":"                    commandBlah();","lastModifiedDate":"2024-01-25"},{"lineNumber":544,"author":{"gitId":"tahnya"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":545,"author":{"gitId":"tahnya"},"content":"                    signalSays(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":546,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":547,"author":{"gitId":"tahnya"},"content":"            } else if (userInput.equals(\"something else\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":548,"author":{"gitId":"tahnya"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":549,"author":{"gitId":"tahnya"},"content":"                    commandSomethingelse();","lastModifiedDate":"2024-01-25"},{"lineNumber":550,"author":{"gitId":"tahnya"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":551,"author":{"gitId":"tahnya"},"content":"                    signalSays(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":552,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":553,"author":{"gitId":"tahnya"},"content":"            } else if (inputArray.length \u003d\u003d 2 \u0026\u0026 inputArray[0].equals(\"delete\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":554,"author":{"gitId":"tahnya"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":555,"author":{"gitId":"tahnya"},"content":"                    int itemIndex \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":556,"author":{"gitId":"tahnya"},"content":"                    if (index \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":557,"author":{"gitId":"tahnya"},"content":"                        commandDeleteInvalid(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":558,"author":{"gitId":"tahnya"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":559,"author":{"gitId":"tahnya"},"content":"                    if (itemIndex \u003e index - 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":560,"author":{"gitId":"tahnya"},"content":"                        commandDeleteInvalid(101);","lastModifiedDate":"2024-01-25"},{"lineNumber":561,"author":{"gitId":"tahnya"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":562,"author":{"gitId":"tahnya"},"content":"                    if (itemIndex \u003c 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":563,"author":{"gitId":"tahnya"},"content":"                        commandDeleteInvalid(-1);","lastModifiedDate":"2024-01-25"},{"lineNumber":564,"author":{"gitId":"tahnya"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":565,"author":{"gitId":"tahnya"},"content":"                    commandDelete(itemIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":566,"author":{"gitId":"tahnya"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":567,"author":{"gitId":"tahnya"},"content":"                    signalSays(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":568,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":569,"author":{"gitId":"tahnya"},"content":"            } else if (userInput.equals(\"help\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":570,"author":{"gitId":"tahnya"},"content":"                commandHelp();","lastModifiedDate":"2024-01-26"},{"lineNumber":571,"author":{"gitId":"tahnya"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":572,"author":{"gitId":"tahnya"},"content":"                taskAdded(userInput);","lastModifiedDate":"2024-01-25"},{"lineNumber":573,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":574,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":575,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":576,"author":{"gitId":"tahnya"},"content":"        signalSays(\"Bye! Hope you come back soon :D\");","lastModifiedDate":"2024-02-01"},{"lineNumber":577,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":578,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":579,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":580,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":581,"author":{"gitId":"tahnya"},"content":"class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":582,"author":{"gitId":"tahnya"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":583,"author":{"gitId":"tahnya"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":584,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":585,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tahnya":581,"-":4}}]
