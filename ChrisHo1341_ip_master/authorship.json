[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"checkstyle {","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"ChrisHo1341"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"ChrisHo1341"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"ChrisHo1341"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"ChrisHo1341"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"ChrisHo1341"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"ChrisHo1341":23}},{"path":"src/main/java/Test.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"public class Test {","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"    ","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"    public static void main(String[] args)  throws FileNotFoundException, IOException {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"        Storage storage \u003d new Storage(\"./data/saved_tasks.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"            TaskList taskList \u003d storage.load();","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"            System.out.println(taskList.showList());","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ChrisHo1341":18}},{"path":"src/main/java/data/saved_tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"todo true Read book","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"todo false Fly","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"deadline false 1999-12-03 Return book","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"ChrisHo1341":3}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":"    @FXML","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"    @FXML","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"ChrisHo1341"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"ChrisHo1341"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"ChrisHo1341"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"ChrisHo1341"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"ChrisHo1341"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"ChrisHo1341"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"ChrisHo1341"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"ChrisHo1341"},"content":"    private void flip() {","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"ChrisHo1341"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"ChrisHo1341"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"ChrisHo1341"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"ChrisHo1341"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"ChrisHo1341"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"ChrisHo1341"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"ChrisHo1341"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"ChrisHo1341"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"ChrisHo1341"},"content":"        db.flip();","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"ChrisHo1341"},"content":"        return db;","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ChrisHo1341":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":"import duke.exceptions.UnrecognizedException;","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"import duke.exceptions.MissingInputException;","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"/**","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":" * Class representing Duke","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":" */","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"ChrisHo1341"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"ChrisHo1341"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"ChrisHo1341"},"content":"    public static void main(String[] args) throws FileNotFoundException, IOException {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"ChrisHo1341"},"content":"        Ui chatty \u003d new Ui();","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"ChrisHo1341"},"content":"        Scanner reader \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"ChrisHo1341"},"content":"        String input \u003d reader.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ChrisHo1341"},"content":"        String message;","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"ChrisHo1341"},"content":"        while (chatty.hasFinished() \u003d\u003d false) {","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"ChrisHo1341"},"content":"            try {","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"ChrisHo1341"},"content":"                message \u003d chatty.interact(input);","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"ChrisHo1341"},"content":"            } catch (UnrecognizedException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"ChrisHo1341"},"content":"                message \u003d \"Apologies Sir! I am not equipped to handle such a command!\";","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"ChrisHo1341"},"content":"            } catch (MissingInputException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"ChrisHo1341"},"content":"                message \u003d \"Apologies Sir! You did not include the name of the item!\";","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"ChrisHo1341"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"ChrisHo1341"},"content":"            System.out.println(message);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"ChrisHo1341"},"content":"            input \u003d reader.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"ChrisHo1341"},"content":"        reader.close();","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"ChrisHo1341"},"content":"     * Returns appropriate response based on input.","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"ChrisHo1341"},"content":"     * @param input User input.","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"ChrisHo1341"},"content":"     * @return Response to user input.","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"ChrisHo1341"},"content":"     * @throws FileNotFoundException If text file where task list information is saved cannot be found.","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"ChrisHo1341"},"content":"     * @throws IOException If text file cannot be created.","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"ChrisHo1341"},"content":"    public String getResponse(String input) throws FileNotFoundException, IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":66,"author":{"gitId":"ChrisHo1341"},"content":"        Ui chatty \u003d new Ui();","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"ChrisHo1341"},"content":"        String message;","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"ChrisHo1341"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":69,"author":{"gitId":"ChrisHo1341"},"content":"            message \u003d chatty.interact(input);","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"ChrisHo1341"},"content":"        } catch (UnrecognizedException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":71,"author":{"gitId":"ChrisHo1341"},"content":"            message \u003d \"Apologies Sir! I am not equipped to handle such a command!\";","lastModifiedDate":"2024-02-27"},{"lineNumber":72,"author":{"gitId":"ChrisHo1341"},"content":"        } catch (MissingInputException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":73,"author":{"gitId":"ChrisHo1341"},"content":"            message \u003d \"Apologies Sir! You did not include the name of the item!\";","lastModifiedDate":"2024-02-27"},{"lineNumber":74,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":75,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":76,"author":{"gitId":"ChrisHo1341"},"content":"        return message;","lastModifiedDate":"2024-02-27"},{"lineNumber":77,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":79,"author":{"gitId":"ChrisHo1341"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":80,"author":{"gitId":"ChrisHo1341"},"content":"    public void start(Stage stage) throws FileNotFoundException, IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":81,"author":{"gitId":"ChrisHo1341"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-27"},{"lineNumber":82,"author":{"gitId":"ChrisHo1341"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-27"},{"lineNumber":83,"author":{"gitId":"ChrisHo1341"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-27"},{"lineNumber":84,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":85,"author":{"gitId":"ChrisHo1341"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-27"},{"lineNumber":86,"author":{"gitId":"ChrisHo1341"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-27"},{"lineNumber":87,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":88,"author":{"gitId":"ChrisHo1341"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-27"},{"lineNumber":89,"author":{"gitId":"ChrisHo1341"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-27"},{"lineNumber":90,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"ChrisHo1341"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-27"},{"lineNumber":92,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"ChrisHo1341"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-27"},{"lineNumber":94,"author":{"gitId":"ChrisHo1341"},"content":"        stage.show();","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"ChrisHo1341"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"ChrisHo1341"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-27"},{"lineNumber":98,"author":{"gitId":"ChrisHo1341"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-27"},{"lineNumber":99,"author":{"gitId":"ChrisHo1341"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-27"},{"lineNumber":100,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":101,"author":{"gitId":"ChrisHo1341"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-27"},{"lineNumber":102,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":103,"author":{"gitId":"ChrisHo1341"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-27"},{"lineNumber":104,"author":{"gitId":"ChrisHo1341"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-27"},{"lineNumber":105,"author":{"gitId":"ChrisHo1341"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-27"},{"lineNumber":106,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":107,"author":{"gitId":"ChrisHo1341"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-27"},{"lineNumber":108,"author":{"gitId":"ChrisHo1341"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-27"},{"lineNumber":109,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":110,"author":{"gitId":"ChrisHo1341"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-27"},{"lineNumber":111,"author":{"gitId":"ChrisHo1341"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-27"},{"lineNumber":112,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":113,"author":{"gitId":"ChrisHo1341"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-27"},{"lineNumber":114,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":115,"author":{"gitId":"ChrisHo1341"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-27"},{"lineNumber":116,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"ChrisHo1341"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":119,"author":{"gitId":"ChrisHo1341"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-27"},{"lineNumber":120,"author":{"gitId":"ChrisHo1341"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-27"},{"lineNumber":121,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":122,"author":{"gitId":"ChrisHo1341"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-27"},{"lineNumber":123,"author":{"gitId":"ChrisHo1341"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-27"},{"lineNumber":124,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"ChrisHo1341"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-27"},{"lineNumber":126,"author":{"gitId":"ChrisHo1341"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2024-02-27"},{"lineNumber":127,"author":{"gitId":"ChrisHo1341"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-27"},{"lineNumber":128,"author":{"gitId":"ChrisHo1341"},"content":"        });","lastModifiedDate":"2024-02-27"},{"lineNumber":129,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":130,"author":{"gitId":"ChrisHo1341"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-27"},{"lineNumber":131,"author":{"gitId":"ChrisHo1341"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2024-02-27"},{"lineNumber":132,"author":{"gitId":"ChrisHo1341"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-27"},{"lineNumber":133,"author":{"gitId":"ChrisHo1341"},"content":"        });","lastModifiedDate":"2024-02-27"},{"lineNumber":134,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":135,"author":{"gitId":"ChrisHo1341"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-27"},{"lineNumber":136,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":137,"author":{"gitId":"ChrisHo1341"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-27"},{"lineNumber":138,"author":{"gitId":"ChrisHo1341"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":139,"author":{"gitId":"ChrisHo1341"},"content":"                handleUserInput();","lastModifiedDate":"2024-02-27"},{"lineNumber":140,"author":{"gitId":"ChrisHo1341"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":141,"author":{"gitId":"ChrisHo1341"},"content":"                System.out.println(\"TaskList file cannot be found\");","lastModifiedDate":"2024-02-28"},{"lineNumber":142,"author":{"gitId":"ChrisHo1341"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":143,"author":{"gitId":"ChrisHo1341"},"content":"                System.out.println(\"File Creation failed\");","lastModifiedDate":"2024-02-28"},{"lineNumber":144,"author":{"gitId":"ChrisHo1341"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":145,"author":{"gitId":"ChrisHo1341"},"content":"        });","lastModifiedDate":"2024-02-27"},{"lineNumber":146,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":147,"author":{"gitId":"ChrisHo1341"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-27"},{"lineNumber":148,"author":{"gitId":"ChrisHo1341"},"content":"            try {","lastModifiedDate":"2024-02-27"},{"lineNumber":149,"author":{"gitId":"ChrisHo1341"},"content":"                handleUserInput();","lastModifiedDate":"2024-02-27"},{"lineNumber":150,"author":{"gitId":"ChrisHo1341"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":151,"author":{"gitId":"ChrisHo1341"},"content":"                System.out.println(\"TaskList file cannot be found\");","lastModifiedDate":"2024-02-28"},{"lineNumber":152,"author":{"gitId":"ChrisHo1341"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":153,"author":{"gitId":"ChrisHo1341"},"content":"                System.out.println(\"File Creation failed\");","lastModifiedDate":"2024-02-28"},{"lineNumber":154,"author":{"gitId":"ChrisHo1341"},"content":"            }","lastModifiedDate":"2024-02-27"},{"lineNumber":155,"author":{"gitId":"ChrisHo1341"},"content":"        });","lastModifiedDate":"2024-02-27"},{"lineNumber":156,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":157,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":158,"author":{"gitId":"ChrisHo1341"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-27"},{"lineNumber":159,"author":{"gitId":"ChrisHo1341"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2024-02-27"},{"lineNumber":160,"author":{"gitId":"ChrisHo1341"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-27"},{"lineNumber":161,"author":{"gitId":"ChrisHo1341"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-27"},{"lineNumber":162,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":163,"author":{"gitId":"ChrisHo1341"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-27"},{"lineNumber":164,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":165,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":166,"author":{"gitId":"ChrisHo1341"},"content":"    private void handleUserInput() throws FileNotFoundException, IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":167,"author":{"gitId":"ChrisHo1341"},"content":"        // Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2024-02-27"},{"lineNumber":168,"author":{"gitId":"ChrisHo1341"},"content":"        // Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2024-02-27"},{"lineNumber":169,"author":{"gitId":"ChrisHo1341"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-27"},{"lineNumber":170,"author":{"gitId":"ChrisHo1341"},"content":"                DialogBox.getUserDialog(userInput.getText(), user),","lastModifiedDate":"2024-02-27"},{"lineNumber":171,"author":{"gitId":"ChrisHo1341"},"content":"                DialogBox.getDukeDialog(getResponse(userInput.getText()), duke)","lastModifiedDate":"2024-02-27"},{"lineNumber":172,"author":{"gitId":"ChrisHo1341"},"content":"        );","lastModifiedDate":"2024-02-27"},{"lineNumber":173,"author":{"gitId":"ChrisHo1341"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-27"},{"lineNumber":174,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":175,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":176,"author":{"gitId":"ChrisHo1341"},"content":"    // public String getResponse(String input) {","lastModifiedDate":"2024-02-27"},{"lineNumber":177,"author":{"gitId":"ChrisHo1341"},"content":"    //     return \"Duke heard: \" + input;","lastModifiedDate":"2024-02-27"},{"lineNumber":178,"author":{"gitId":"ChrisHo1341"},"content":"    // }","lastModifiedDate":"2024-02-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"ChrisHo1341":177}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"public class Launcher {","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ChrisHo1341":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"        // assert false : \"Testing enable assertions\";","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"            stage.show();","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ChrisHo1341":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"    @FXML","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":"    @FXML","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":"    @FXML","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-27"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":"    @FXML","lastModifiedDate":"2024-02-27"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"    @FXML","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"ChrisHo1341"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"ChrisHo1341"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"ChrisHo1341"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"ChrisHo1341"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":40,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"ChrisHo1341"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"ChrisHo1341"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":44,"author":{"gitId":"ChrisHo1341"},"content":"    @FXML","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"ChrisHo1341"},"content":"    private void handleUserInput() throws FileNotFoundException, IOException {","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"ChrisHo1341"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"ChrisHo1341"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"ChrisHo1341"},"content":"        try {","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"ChrisHo1341"},"content":"            response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"ChrisHo1341"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"ChrisHo1341"},"content":"            response \u003d \"File not found\";","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"ChrisHo1341"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"ChrisHo1341"},"content":"            response \u003d \"File creation error\";","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":55,"author":{"gitId":"ChrisHo1341"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"ChrisHo1341"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"ChrisHo1341"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"ChrisHo1341"},"content":"        );","lastModifiedDate":"2024-02-27"},{"lineNumber":59,"author":{"gitId":"ChrisHo1341"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-27"},{"lineNumber":60,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":61,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ChrisHo1341":61}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.File;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":" * Class used to load and store data externally.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"public class Storage {","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":"    // Parses file and outputs it as a list","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"    private String path;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"     * Constructor for Storage.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"     * @param path Path to file to be loaded or saved","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"    public Storage(String path) {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"        this.path \u003d path;","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"ChrisHo1341"},"content":"     * Returns tasklist after reading external txt file according to path.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"ChrisHo1341"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"ChrisHo1341"},"content":"     * @return taskList based on external txt file","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"ChrisHo1341"},"content":"     * @throws FileNotFoundException If path does not lead to the correct file.","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"ChrisHo1341"},"content":"     * @throws IOException If the file cannot be created if not found.","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"ChrisHo1341"},"content":"    public TaskList load() throws FileNotFoundException, IOException {","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ChrisHo1341"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ChrisHo1341"},"content":"        assert taskList.getLength() \u003d\u003d 0: \"taskList should be empty\";","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"ChrisHo1341"},"content":"        Task task;","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ChrisHo1341"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ChrisHo1341"},"content":"        if (file.exists() \u003d\u003d false) {","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ChrisHo1341"},"content":"            try {","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ChrisHo1341"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ChrisHo1341"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ChrisHo1341"},"content":"                System.out.println(\"File creation failed.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ChrisHo1341"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ChrisHo1341"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ChrisHo1341"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ChrisHo1341"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ChrisHo1341"},"content":"                // Split by first space","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ChrisHo1341"},"content":"                String[] parts \u003d sc.nextLine().split(\" \", 2);","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"ChrisHo1341"},"content":"                if (parts[0].equals(TODO)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"ChrisHo1341"},"content":"                    parts \u003d parts[1].split(\" \", 2);","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"ChrisHo1341"},"content":"                    task \u003d new Todo(parts[1], parts[0]);","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"ChrisHo1341"},"content":"                } else if (parts[0].equals(DEADLINE)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"ChrisHo1341"},"content":"                    parts \u003d parts[1].split(\" \", 3);","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"ChrisHo1341"},"content":"                    LocalDate date \u003d LocalDate.parse(parts[1].trim());","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"ChrisHo1341"},"content":"                    task \u003d new Deadline(parts[2], parts[0], date);","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"ChrisHo1341"},"content":"                } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"ChrisHo1341"},"content":"                    parts \u003d parts[1].split(\" \", 3);","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"ChrisHo1341"},"content":"                    LocalDate date \u003d LocalDate.parse(parts[1].trim());","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"ChrisHo1341"},"content":"                    task \u003d new Event(parts[2], parts[0], date);","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"ChrisHo1341"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"ChrisHo1341"},"content":"                taskList.addTask(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"ChrisHo1341"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"ChrisHo1341"},"content":"            sc.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"ChrisHo1341"},"content":"            return taskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"ChrisHo1341"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"ChrisHo1341"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"ChrisHo1341"},"content":"            return taskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"ChrisHo1341"},"content":"     * Saves task list into a txt file","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"ChrisHo1341"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"ChrisHo1341"},"content":"     * @param taskList to be saved","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"ChrisHo1341"},"content":"     * @throws IOException If file cannot be created.","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"ChrisHo1341"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"ChrisHo1341"},"content":"        int length \u003d taskList.getLength();","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"ChrisHo1341"},"content":"        String finalOutput \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"ChrisHo1341"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"ChrisHo1341"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"ChrisHo1341"},"content":"            finalOutput \u003d finalOutput + taskList.getTask(i).getAttributes() + \"\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"ChrisHo1341"},"content":"        file.delete();","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"ChrisHo1341"},"content":"        file.createNewFile();","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"ChrisHo1341"},"content":"        FileWriter fileWriter \u003d new FileWriter(path, false);","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"ChrisHo1341"},"content":"        fileWriter.write(finalOutput);","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"ChrisHo1341"},"content":"        fileWriter.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ChrisHo1341":105}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":" * Class used to store tasks","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"     * Constructor for TaskList class","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"     * Add task to taskList.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":"     * @param task .","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"     * Returns the name of the latest task added to the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"     * @return name of the latest task.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"ChrisHo1341"},"content":"    public String showNewest() {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ChrisHo1341"},"content":"        int length \u003d taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ChrisHo1341"},"content":"        Task task \u003d taskList.get(length - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ChrisHo1341"},"content":"        return task.getName();","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ChrisHo1341"},"content":"    public int getLength() {","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ChrisHo1341"},"content":"        return taskList.size();","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ChrisHo1341"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ChrisHo1341"},"content":"        return taskList.get(idx);","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"ChrisHo1341"},"content":"     * Returns the full list of tasks currently on the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"ChrisHo1341"},"content":"     * @return String representing list of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"ChrisHo1341"},"content":"    public String showList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"ChrisHo1341"},"content":"        Task task;","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ChrisHo1341"},"content":"        String status;","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ChrisHo1341"},"content":"        String finalOutput \u003d new String(\"\");","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"ChrisHo1341"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ChrisHo1341"},"content":"            task \u003d taskList.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ChrisHo1341"},"content":"            status \u003d task.checkStatus();","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ChrisHo1341"},"content":"            finalOutput \u003d finalOutput + INDENT + Integer.toString(i + 1) + \".\" + status + \"\\n\";","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"ChrisHo1341"},"content":"        return finalOutput;","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"ChrisHo1341"},"content":"     * Updates the status of task in task list to done according to given index.","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"ChrisHo1341"},"content":"     * @param idx Index of task to be updated","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"ChrisHo1341"},"content":"    public void markTask(int idx) {","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ChrisHo1341"},"content":"        Task task \u003d taskList.get(idx - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"ChrisHo1341"},"content":"        task.completeTask();","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"ChrisHo1341"},"content":"     * Updates the status of task in task list to not done according to the given index.","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"ChrisHo1341"},"content":"     * @param idx Index of task to be updated.","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"ChrisHo1341"},"content":"    public void unmarkTask(int idx) {","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"ChrisHo1341"},"content":"        Task task \u003d taskList.get(idx - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"ChrisHo1341"},"content":"        task.revertStatus();","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"ChrisHo1341"},"content":"     * Removes the task from the task list based on the given index","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"ChrisHo1341"},"content":"     * @param idx Index of task to be removed","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"ChrisHo1341"},"content":"    public void removeTask(int idx) {","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"ChrisHo1341"},"content":"        taskList.remove(idx);","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"ChrisHo1341"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"ChrisHo1341"},"content":"        Task task;","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"ChrisHo1341"},"content":"        String status;","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"ChrisHo1341"},"content":"        String finalOutput \u003d new String(\"\");","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"ChrisHo1341"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"ChrisHo1341"},"content":"            task \u003d taskList.get(i);","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"ChrisHo1341"},"content":"            status \u003d task.checkStatus();","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"ChrisHo1341"},"content":"            if (task.correctKeyword(keyword)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"ChrisHo1341"},"content":"                finalOutput \u003d finalOutput + INDENT + Integer.toString(i + 1) + \".\" + status + \"\\n\";","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"ChrisHo1341"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"ChrisHo1341"},"content":"        return finalOutput;","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ChrisHo1341":105}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"import duke.exceptions.UnrecognizedException;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"import duke.exceptions.MissingInputException;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":" * Class that handles inputs given to the chat bot.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"public class Ui {","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String NEW_LINE \u003d INDENT + \"____________________________________________________________ \\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String GREETING \u003d INDENT","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":"            + \"Good day good sir! I am Chatimous Maximous, here to help you with your every need!\\n\";","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String BYE \u003d \"bye\";","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String LIST \u003d \"list\";","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String MARK \u003d \"mark\";","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String EXIT \u003d INDENT + \"It has been a pleasure! I do hope to see you again! \\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String PRAISE \u003d NEW_LINE + \"A job well done Sir! \\n\" + NEW_LINE;","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"    private static final int SEVEN \u003d 7;","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String ENCOURAGEMENT \u003d NEW_LINE + \"Don\u0027t fret Sir! You\u0027ll get it soon \\n\" + NEW_LINE;","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"ChrisHo1341"},"content":"    private static final int FIVE \u003d 5;","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String ADD_TASK \u003d \" has been accounted for! \\n\" + NEW_LINE;","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String REMOVE \u003d \"remove\";","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String TASK_REMOVED \u003d NEW_LINE + INDENT","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"ChrisHo1341"},"content":"            + \"I have removed the task from the list Sir! \\n\" + NEW_LINE;","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String FILE_PATH \u003d \"./src/main/java/data/saved_tasks.txt\";","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String FIND \u003d \"find\";","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String FOUND_MESSAGE \u003d NEW_LINE + INDENT + \"Here are the tasks I have found!\\n\";","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"ChrisHo1341"},"content":"    private Storage storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"ChrisHo1341"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"ChrisHo1341"},"content":"    private Boolean isFinished \u003d false;","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"ChrisHo1341"},"content":"    private int idx;","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"ChrisHo1341"},"content":"    private Task task;","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"ChrisHo1341"},"content":"     * Constructor for Ui","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"ChrisHo1341"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"ChrisHo1341"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"ChrisHo1341"},"content":"    public Ui() throws FileNotFoundException, IOException {","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"ChrisHo1341"},"content":"        System.out.println(NEW_LINE + GREETING);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"ChrisHo1341"},"content":"        taskList \u003d storage.load();","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"ChrisHo1341"},"content":"     * Checks if chatbot is no longer in use.","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"ChrisHo1341"},"content":"     * @return false if still in use.","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"ChrisHo1341"},"content":"    public Boolean hasFinished() {","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"ChrisHo1341"},"content":"        return isFinished;","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"ChrisHo1341"},"content":"     * Returns the appropriate reply string based on the input.","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"ChrisHo1341"},"content":"     * @param input Message given to chatbot by user.","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"ChrisHo1341"},"content":"     * @return Reply message based on input.","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"ChrisHo1341"},"content":"     * @throws UnrecognizedException If input contains an invalid command.","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"ChrisHo1341"},"content":"     * @throws MissingInputException If input is missing required inputs.","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"ChrisHo1341"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"ChrisHo1341"},"content":"    public String interact(String input) throws UnrecognizedException, MissingInputException, IOException {","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"ChrisHo1341"},"content":"        if (input.contains(LIST)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"ChrisHo1341"},"content":"            return NEW_LINE + taskList.showList() + NEW_LINE;","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"ChrisHo1341"},"content":"        } else if (input.contains(FIND)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"ChrisHo1341"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"ChrisHo1341"},"content":"            return FOUND_MESSAGE + taskList.findTask(parts[1]) + NEW_LINE;","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"ChrisHo1341"},"content":"        } else if (input.contains(UNMARK)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"ChrisHo1341"},"content":"            idx \u003d Integer.valueOf(input.substring(SEVEN));","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"ChrisHo1341"},"content":"            taskList.unmarkTask(idx);","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"ChrisHo1341"},"content":"            this.storage.save(taskList);","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"ChrisHo1341"},"content":"            return ENCOURAGEMENT;","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"ChrisHo1341"},"content":"        } else if (input.contains(MARK)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"ChrisHo1341"},"content":"            idx \u003d Integer.valueOf(input.substring(FIVE));","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"ChrisHo1341"},"content":"            taskList.markTask(idx);","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"ChrisHo1341"},"content":"            this.storage.save(taskList);","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"ChrisHo1341"},"content":"            return PRAISE;","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"ChrisHo1341"},"content":"        } else if (input.contains(BYE)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"ChrisHo1341"},"content":"            this.isFinished \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"ChrisHo1341"},"content":"            return EXIT;","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"ChrisHo1341"},"content":"        } else if (input.contains(REMOVE)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"ChrisHo1341"},"content":"            idx \u003d Integer.valueOf(input.substring(SEVEN));","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"ChrisHo1341"},"content":"            taskList.removeTask(idx - 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"ChrisHo1341"},"content":"            this.storage.save(taskList);","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"ChrisHo1341"},"content":"            return TASK_REMOVED;","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"ChrisHo1341"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"ChrisHo1341"},"content":"            if (input.contains(TODO)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"ChrisHo1341"},"content":"                try {","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"ChrisHo1341"},"content":"                    //todo takes in the name of the task","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"ChrisHo1341"},"content":"                    task \u003d new Todo(input.substring(TODO.length() + 1));","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"ChrisHo1341"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"ChrisHo1341"},"content":"                    throw new MissingInputException(\"Life is liddat\");","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"ChrisHo1341"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"ChrisHo1341"},"content":"            } else if (input.contains(DEADLINE)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"ChrisHo1341"},"content":"                try {","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"ChrisHo1341"},"content":"                    // deadline takes in the name and the deadline","lastModifiedDate":"2024-02-24"},{"lineNumber":116,"author":{"gitId":"ChrisHo1341"},"content":"                    // Need to split the input into name and deadline split by \"by\"","lastModifiedDate":"2024-02-24"},{"lineNumber":117,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":118,"author":{"gitId":"ChrisHo1341"},"content":"                    String[] parts \u003d input.split(\" by \"); // part 0 is todo [name], part 1 is [date]","lastModifiedDate":"2024-02-28"},{"lineNumber":119,"author":{"gitId":"ChrisHo1341"},"content":"                    LocalDate date \u003d LocalDate.parse(parts[1].trim());","lastModifiedDate":"2024-02-24"},{"lineNumber":120,"author":{"gitId":"ChrisHo1341"},"content":"                    task \u003d new Deadline(parts[0].substring(DEADLINE.length() + 1), date);","lastModifiedDate":"2024-02-24"},{"lineNumber":121,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"ChrisHo1341"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":123,"author":{"gitId":"ChrisHo1341"},"content":"                    throw new MissingInputException(\"Bruh\");","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"ChrisHo1341"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"ChrisHo1341"},"content":"            } else if (input.contains(EVENT)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"ChrisHo1341"},"content":"                try {","lastModifiedDate":"2024-02-08"},{"lineNumber":127,"author":{"gitId":"ChrisHo1341"},"content":"                    // event takes in the name and the deadline","lastModifiedDate":"2024-02-24"},{"lineNumber":128,"author":{"gitId":"ChrisHo1341"},"content":"                    String[] parts \u003d input.split(\" by \"); // part 0 is todo [name], part 1 is [date]","lastModifiedDate":"2024-02-28"},{"lineNumber":129,"author":{"gitId":"ChrisHo1341"},"content":"                    LocalDate date \u003d LocalDate.parse(parts[1].trim());","lastModifiedDate":"2024-02-24"},{"lineNumber":130,"author":{"gitId":"ChrisHo1341"},"content":"                    task \u003d new Event(parts[0].substring(DEADLINE.length() + 1), date);","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":132,"author":{"gitId":"ChrisHo1341"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":133,"author":{"gitId":"ChrisHo1341"},"content":"                    throw new MissingInputException(\"Haiz\");","lastModifiedDate":"2024-02-08"},{"lineNumber":134,"author":{"gitId":"ChrisHo1341"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":135,"author":{"gitId":"ChrisHo1341"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"ChrisHo1341"},"content":"                // task \u003d new Task(input, NORMAL);","lastModifiedDate":"2024-02-08"},{"lineNumber":137,"author":{"gitId":"ChrisHo1341"},"content":"                throw new UnrecognizedException(\"Yoyoyo\");","lastModifiedDate":"2024-02-08"},{"lineNumber":138,"author":{"gitId":"ChrisHo1341"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"ChrisHo1341"},"content":"            taskList.addTask(task);","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"ChrisHo1341"},"content":"            this.storage.save(taskList);","lastModifiedDate":"2024-02-23"},{"lineNumber":141,"author":{"gitId":"ChrisHo1341"},"content":"            // System.out.println(\"What\");","lastModifiedDate":"2024-02-23"},{"lineNumber":142,"author":{"gitId":"ChrisHo1341"},"content":"            return NEW_LINE + INDENT + task.getName() + ADD_TASK;","lastModifiedDate":"2024-02-14"},{"lineNumber":143,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":145,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":146,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ChrisHo1341":146}},{"path":"src/main/java/duke/data/saved_tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"todo true Read","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"deadline true 1999-12-03 Return book ","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"deadline false 2022-03-03 Eat book ","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"ChrisHo1341":3}},{"path":"src/main/java/duke/exceptions/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":" * Class representing exception for when chatbot input is missing required inputs.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"public class MissingInputException extends Exception {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"    public MissingInputException(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"        super(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"ChrisHo1341":11}},{"path":"src/main/java/duke/exceptions/UnrecognizedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":" * Class representing exception when chatbot receives input that does not have recognized commands.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"public class UnrecognizedException extends Exception {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"    public UnrecognizedException(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"        super(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"ChrisHo1341":10}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":" * Represents deadline tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String TASK_TYPE \u003d \"[D] \";","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String COMPLETED_MESSAGE_END \u003d \" is complete!\";","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String INCOMPLETE_MESSAGE_END \u003d \" by \";","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"    private LocalDate date;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"     * Constructor for new deadlines.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"     * @param name Description or name of the given task.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":"     * @param date Date that the task needs to be completed by.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":"    public Deadline(String name, LocalDate date) {","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"        super(name);","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"     * Constructor for existing deadlines.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"     * @param name Description or name of the given task.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"     * @param isDone Completion status of task.","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"     * @param date Date that the task needs to be completed by.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"ChrisHo1341"},"content":"    public Deadline(String name, String isDone, LocalDate date) {","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"ChrisHo1341"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ChrisHo1341"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ChrisHo1341"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ChrisHo1341"},"content":"    public String checkStatus() {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ChrisHo1341"},"content":"        if (this.checkDone()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ChrisHo1341"},"content":"            return TASK_TYPE + this.getName() + COMPLETED_MESSAGE_END;","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ChrisHo1341"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ChrisHo1341"},"content":"            return TASK_TYPE + this.getName() + INCOMPLETE_MESSAGE_END","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"ChrisHo1341"},"content":"                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"ChrisHo1341"},"content":"     * Returns string representing the current attributes of the deadline.","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"ChrisHo1341"},"content":"     * @return String representing the current attributes of the deadline.","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"ChrisHo1341"},"content":"    public String getAttributes() {","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ChrisHo1341"},"content":"        String isDoneString \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ChrisHo1341"},"content":"        if (this.checkDone()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"ChrisHo1341"},"content":"            isDoneString \u003d \"true\";","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ChrisHo1341"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ChrisHo1341"},"content":"            isDoneString \u003d \"false\";","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"ChrisHo1341"},"content":"        return DEADLINE + \" \" + isDoneString + \" \" + this.date + \" \" + this.getName();","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ChrisHo1341":61}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":" * Class representing event tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String TASK_TYPE \u003d \"[E] \";","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String COMPLETED_MESSAGE_END \u003d \" is complete!\";","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String INCOMPLETE_MESSAGE_END \u003d \" by \";","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"    private LocalDate date;","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"     * Constructor for new events.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"     * @param name Description or name of the given event.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":"     * @param date Date that the event occurs.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":"    public Event(String name, LocalDate date) {","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"        super(name);","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"     * Constructor for existing events.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"     * @param name Description or name of the given event.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"     * @param isDone Completion status of event.","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"     * @param date Date that the event occurs.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"ChrisHo1341"},"content":"    public Event(String name, String isDone, LocalDate date) {","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"ChrisHo1341"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ChrisHo1341"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ChrisHo1341"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ChrisHo1341"},"content":"    public String checkStatus() {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ChrisHo1341"},"content":"        if (this.checkDone()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ChrisHo1341"},"content":"            return TASK_TYPE + this.getName() + COMPLETED_MESSAGE_END;","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ChrisHo1341"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ChrisHo1341"},"content":"            return TASK_TYPE + this.getName() + INCOMPLETE_MESSAGE_END","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"ChrisHo1341"},"content":"                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"ChrisHo1341"},"content":"     * Returns string representing the current attributes of the event.","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"ChrisHo1341"},"content":"     * @return String representing the current attributes of the event.","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"ChrisHo1341"},"content":"    public String getAttributes() {","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ChrisHo1341"},"content":"        String isDoneString \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ChrisHo1341"},"content":"        if (this.checkDone()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"ChrisHo1341"},"content":"            isDoneString \u003d \"true\";","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ChrisHo1341"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ChrisHo1341"},"content":"            isDoneString \u003d \"false\";","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"ChrisHo1341"},"content":"        return EVENT + \" \" + isDoneString + \" \" + this.getName();","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ChrisHo1341":61}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":" * Class representing different possible tasks given to chatbot.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"    /* Task is a class, what does it do??? */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"    private String name;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"    private char taskType;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"    // static String COMPLETED_MESSAGE_END \u003d \" is complete!\";","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"    // static String INCOMPLETE_MESSAGE_END \u003d \" has yet to be completed.\";","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"     * Constructor for newly created tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"     * @param name Description or name of the given task.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"    public Task(String name) {","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":"     * Constructor for existing tasks that may or may not be completed.","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"     * @param name Description or name of the given task.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"     * @param isDone true if task has been completed, false otherwise.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"    public Task(String name, String isDone) {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"        if (isDone.equals(\"false\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ChrisHo1341"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ChrisHo1341"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ChrisHo1341"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ChrisHo1341"},"content":"    public Boolean checkDone() {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ChrisHo1341"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ChrisHo1341"},"content":"    public String getName() {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ChrisHo1341"},"content":"        return this.name;","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ChrisHo1341"},"content":"    public char getTaskType() {","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"ChrisHo1341"},"content":"        return this.taskType;","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"ChrisHo1341"},"content":"     * Checks if task has been completed and returns appropriate message based on completion status.","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"ChrisHo1341"},"content":"     * @return Message based on task completion status.","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"ChrisHo1341"},"content":"    public String checkStatus() {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ChrisHo1341"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ChrisHo1341"},"content":"            return \"[\" + this.taskType + \"] \" + this.name + \" is complete!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"ChrisHo1341"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ChrisHo1341"},"content":"            return \"[\" + this.taskType + \"] \" + this.name + \" has yet to be completed.\";","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"ChrisHo1341"},"content":"     * Returns values of different attributes of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"ChrisHo1341"},"content":"     * @return Values of the different attributes of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"ChrisHo1341"},"content":"    public abstract String getAttributes();","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"ChrisHo1341"},"content":"     * Sets task to completed.","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"ChrisHo1341"},"content":"    public void completeTask() {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"ChrisHo1341"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"ChrisHo1341"},"content":"     * Reverts task to incomplete.","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"ChrisHo1341"},"content":"    public void revertStatus() {","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"ChrisHo1341"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"ChrisHo1341"},"content":"    public boolean correctKeyword(String keyword) {","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"ChrisHo1341"},"content":"        return this.name.contains(keyword);","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ChrisHo1341":85}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":" * Class representing todo class.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String TASK_TYPE \u003d \"[T] \";","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String COMPLETED_MESSAGE_END \u003d \" is complete!\";","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String INCOMPLETE_MESSAGE_END \u003d \" has yet to be completed.\";","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"     * Constructor for new todo tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"     * @param name Description or name of the given task.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"        super(name);","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":"     * Constructor for existing todo tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"     * @param name Description or name of the given task.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"    public Todo(String name, String isDone) {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"    public String checkStatus() {","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"        if (this.checkDone()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ChrisHo1341"},"content":"            return TASK_TYPE + this.getName() + COMPLETED_MESSAGE_END;","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ChrisHo1341"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ChrisHo1341"},"content":"            return TASK_TYPE + this.getName() + INCOMPLETE_MESSAGE_END;","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"ChrisHo1341"},"content":"     * Returns string representing the current attributes of the todo task.","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"ChrisHo1341"},"content":"     * @return String representing the current attributes of the todo task.","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"ChrisHo1341"},"content":"    public String getAttributes() {","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ChrisHo1341"},"content":"        String isDoneString \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ChrisHo1341"},"content":"        if (this.checkDone()) {","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"ChrisHo1341"},"content":"            isDoneString \u003d \"true\";","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ChrisHo1341"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ChrisHo1341"},"content":"            isDoneString \u003d \"false\";","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ChrisHo1341"},"content":"        return TODO + \" \" + isDoneString + \" \" + this.getName();","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ChrisHo1341":52}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ChrisHo1341":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"ChrisHo1341":19}},{"path":"src/test/java/TestOutput.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"todo true Read","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"deadline false 1990-12-03 Return Book","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"event false 1999-05-03 Eat book","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"ChrisHo1341":3}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.File;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"    private static String INDENT \u003d \"    \";","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String FILE_NAME \u003d \"./src/test/java/TestOutput.txt\";","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String TEST_INPUT \u003d \"todo true Read\\ndeadline false 1990-12-03 Return Book\\nevent false 1999-05-03 Eat book\";","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"    private static final String EXPECTED_OUTPUT \u003d INDENT + \"1.[T] Read is complete!\\n\" + INDENT + \"2.[D] Return Book by Dec 3 1990\\n\" + INDENT + \"3.[E] Eat book by May 3 1999\\n\"; ","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":"    public void testLoad() throws FileNotFoundException, IOException {","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"        File file \u003d new File(FILE_NAME);","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":"        ","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"        if (file.exists() \u003d\u003d false) {","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":"            try {","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"            } catch (IOException e) { ","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"                System.out.println(\"Failed to create test text file\");","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"        FileWriter writer \u003d new FileWriter(FILE_NAME);","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"        writer.write(TEST_INPUT);","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"        writer.close();","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"ChrisHo1341"},"content":"        ","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"ChrisHo1341"},"content":"        Storage storage \u003d new Storage(FILE_NAME);","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"ChrisHo1341"},"content":"        TaskList testList \u003d storage.load();","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"ChrisHo1341"},"content":"        String output \u003d testList.showList();","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"ChrisHo1341"},"content":"        assertEquals(EXPECTED_OUTPUT, output);","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"ChrisHo1341":39}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package duke;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"    private static LocalDate DATE \u003d LocalDate.parse(\"1999-12-03\");","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"    private static String EXPECTED_OUTPUT \u003d \"1.[D] Return Book by Dec 3 1999\\n2.[T] Read has yet to be completed\\n[E] Eat Book by Dec 3 1999\\n\";","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"    ","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"    public void testShowList() {","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"        Deadline deadline \u003d new Deadline(\"Return Book\", DATE);","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"        Todo todo \u003d new Todo(\"Read\");","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":"        Event event \u003d new Event(\"Eat Book\", DATE);","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"        String output \u003d taskList.showList();","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"        assertEquals(EXPECTED_OUTPUT, output);","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"ChrisHo1341":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"todo Borrow book","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"todo Read","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"deadline Return book","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"list","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"mark 1","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"remove 1","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"bye","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ChrisHo1341":7}}]
