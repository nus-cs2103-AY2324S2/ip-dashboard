[{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"    protected String by;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"    public Deadlines(String description, String by) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"wolffe88":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"import java.io.*;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"import java.util.*;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"        String logo","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"                \u003d \"██████╗  ██████╗ ██╗      █████╗ ███╗   ██╗██████╗\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"                + \"██╔══██╗██╔═══██╗██║     ██╔══██╗████╗  ██║██╔══██╗\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"                + \"██████╔╝██║   ██║██║     ███████║██╔██╗ ██║██║  ██║\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"                + \"██╔══██╗██║   ██║██║     ██╔══██║██║╚██╗██║██║  ██║\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"                + \"██║  ██║╚██████╔╝███████╗██║  ██║██║ ╚████║██████╔╝\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"                + \"╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═════╝\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"        String bot \u003d \"[ROLAND] \";","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"        System.out.println(bot + \"Hello! I am ROLAND\");","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"        System.out.println(bot + \"What can I do for you?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"        String filePath \u003d \"/Users/lay/IdeaProjects/ip/src/main/java/roland.txt\";","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"        ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"        if (new File(filePath).length()!\u003d0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"            taskList  \u003d deserializeArrayList(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"            taskList  \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"        while(true){","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"            String reply \u003d sc.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"            if (reply.equals(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"            } else if (reply.startsWith(\"list\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"                System.out.println(bot + \"Here are your tasks:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"                for (int i \u003d 1; i \u003c taskList.size()+1; i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"                    task \u003d taskList.get(i-1);","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"                    System.out.println(\"    \" + i + \". \" + task.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"                continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"            } else if (reply.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"                int index \u003d Integer.parseInt(reply.replaceAll(\"[\\\\D]\", \"\"));","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"                task \u003d taskList.get(index-1);","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"                task.markDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"                System.out.println(bot + task.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"                continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"            } else if (reply.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"                int index \u003d Integer.parseInt(reply.replaceAll(\"[\\\\D]\", \"\"));","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"                task \u003d taskList.get(index-1);","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"                task.markUndone();","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"                System.out.println(bot + task.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"                continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"            } else if (reply.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"                int index \u003d Integer.parseInt(reply.replaceAll(\"[\\\\D]\", \"\"));","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"                task \u003d taskList.get(index - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"                taskList.remove(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"                System.out.println(bot + \"I have removed \" + task.toString() + \" from your list. You have \" + taskList.size() + \" task(s) in list\");","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"                continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"            } else if (reply.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"                    if (reply.length() \u003c\u003d 5) {","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"                        throw new RolandException(\"Please provide description for todo\");","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"                    String description \u003d reply.substring(5,reply.length());","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"wolffe88"},"content":"                    task \u003d new ToDos(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"wolffe88"},"content":"                } catch (RolandException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"wolffe88"},"content":"                    System.out.println(bot + e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"wolffe88"},"content":"                    continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"wolffe88"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"wolffe88"},"content":"            } else if (reply.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"wolffe88"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"wolffe88"},"content":"                    if (reply.length() \u003c\u003d 9) {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"wolffe88"},"content":"                        throw new RolandException(\"Please provide description for deadline\");","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"wolffe88"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"wolffe88"},"content":"                    if (reply.split(\"/\").length !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"wolffe88"},"content":"                        throw new RolandException(\"Please include when is the deadline by with /by \u003cdeadline\u003e\");","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"wolffe88"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"wolffe88"},"content":"                    String split[] \u003d reply.split(\" /\");","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"wolffe88"},"content":"                    String description \u003d split[0].substring(9, split[0].length());","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"wolffe88"},"content":"                    String by \u003d split[1].substring(3, split[1].length());","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"wolffe88"},"content":"                    task \u003d new Deadlines(description, by);","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"wolffe88"},"content":"                } catch (RolandException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"wolffe88"},"content":"                    System.out.println(bot + e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"wolffe88"},"content":"                    continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"wolffe88"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"wolffe88"},"content":"            } else if (reply.startsWith(\"event\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"wolffe88"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"wolffe88"},"content":"                    if (reply.length() \u003c\u003d 6) {","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"wolffe88"},"content":"                        throw new RolandException(\"Please provide description for event\");","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"wolffe88"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"wolffe88"},"content":"                    if (reply.split(\"/\").length !\u003d 3) {","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"wolffe88"},"content":"                        throw new RolandException(\"Please include when is the start and end of the event with /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"wolffe88"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"wolffe88"},"content":"                    String split[] \u003d reply.split(\" /\");","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"wolffe88"},"content":"                    String description \u003d split[0].substring(6, split[0].length());","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"wolffe88"},"content":"                    String from \u003d split[1].substring(5, split[1].length());","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"wolffe88"},"content":"                    String to \u003d split[2].substring(4, split[2].length());","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"wolffe88"},"content":"                    task \u003d new Events(description, from, to);","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"wolffe88"},"content":"                } catch (RolandException e){","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"wolffe88"},"content":"                    System.out.println(bot + e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"wolffe88"},"content":"                    continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"wolffe88"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"wolffe88"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"wolffe88"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"wolffe88"},"content":"                    throw new RolandException(\"I do not understand you :(.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"wolffe88"},"content":"                } catch (RolandException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"wolffe88"},"content":"                    System.out.println(bot + e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"wolffe88"},"content":"                    continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"wolffe88"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"wolffe88"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"wolffe88"},"content":"            taskList.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"wolffe88"},"content":"            System.out.println(bot + \"I have added \" + task.toString() + \" to your list of tasks. You have \" + taskList.size() + \" task(s) in list\");","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"wolffe88"},"content":"        serializeArrayList(taskList, filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"wolffe88"},"content":"        System.out.println(bot + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"wolffe88"},"content":"    private static void serializeArrayList(ArrayList\u003cTask\u003e list, String filePath) {","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"wolffe88"},"content":"        try (ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(filePath))) {","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"wolffe88"},"content":"            oos.writeObject(list);","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"wolffe88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"wolffe88"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"wolffe88"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"wolffe88"},"content":"    private static ArrayList\u003cTask\u003e deserializeArrayList(String filePath) {","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"wolffe88"},"content":"        try (ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(filePath))) {","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"wolffe88"},"content":"            return (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"wolffe88"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"wolffe88"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"wolffe88"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wolffe88":134,"-":4}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"public class Events extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"    protected String from;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"    protected String to;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"    public Events(String description, String from, String to) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from  + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"wolffe88":18}},{"path":"src/main/java/RolandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"class RolandException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"    public RolandException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"wolffe88":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"        return this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"wolffe88":34}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"public class ToDos extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"    public ToDos(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"wolffe88":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"mark 2","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"wolffe88":6}},{"path":"src/main/java/roland.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"wolffe88":0}}]
