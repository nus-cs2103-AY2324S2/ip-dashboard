[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"    mainClass.set(\"atlas.Launcher\")","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"zhikaiong2001"},"content":"    archiveBaseName \u003d \"launcher\"","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"zhikaiong2001"},"content":"checkstyle {","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"zhikaiong2001"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"-":40,"zhikaiong2001":21}},{"path":"data/Atlas.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"T | 1 | return book","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"zhikaiong2001":1}},{"path":"src/main/java/atlas/Atlas.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.command.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.exception.AtlasException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":" * The main class that drives the Atlas application.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"public class Atlas {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"    private final String DATA_PATH \u003d \"./data/Atlas.txt\";","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs an Atlas application instance with UI, TaskList, and Storage initialized.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"    public Atlas() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"        this.storage \u003d new Storage(tasks, DATA_PATH);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"        storage.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"     * The entry point of the application.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"        Atlas atlas \u003d new Atlas();","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"        atlas.run();","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"     * Starts the application loop, greets user, loads existing tasks, accepting user commands and","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"     * executing them until the exit command is given. Finally, saves the tasks before exiting.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"    public void run() {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"        ui.showGreeting();","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"        storage.load();","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"zhikaiong2001"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"zhikaiong2001"},"content":"                Command cmd \u003d Parser.parse(input, tasks, ui, storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"zhikaiong2001"},"content":"                cmd.execute();","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"zhikaiong2001"},"content":"            } catch (AtlasException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"zhikaiong2001"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"zhikaiong2001"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"zhikaiong2001"},"content":"                ui.showError(\"Date format should be: YYYY-MM-DD HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"zhikaiong2001"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"zhikaiong2001"},"content":"     * Takes an input from user and returns the appropriate response.","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"zhikaiong2001"},"content":"     * @param input The input from the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"zhikaiong2001"},"content":"     * @return Response from the program based off the input.","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"zhikaiong2001"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"zhikaiong2001"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"zhikaiong2001"},"content":"            Command cmd \u003d Parser.parse(input, tasks, ui, storage);","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"zhikaiong2001"},"content":"            return cmd.execute();","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"zhikaiong2001"},"content":"        } catch (AtlasException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"zhikaiong2001"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"zhikaiong2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"zhikaiong2001"},"content":"            return ui.showError(\"Date format should be: YYYY-MM-DD HHmm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"zhikaiong2001":77}},{"path":"src/main/java/atlas/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"zhikaiong2001"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"zhikaiong2001"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"zhikaiong2001"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"zhikaiong2001"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"zhikaiong2001"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"zhikaiong2001"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"zhikaiong2001"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"zhikaiong2001":61}},{"path":"src/main/java/atlas/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"zhikaiong2001":12}},{"path":"src/main/java/atlas/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"    private Atlas atlas \u003d new Atlas();","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(atlas);","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"zhikaiong2001":31}},{"path":"src/main/java/atlas/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"    private Atlas atlas;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"     * Starts up the Gui for the chatbot and show a greeting message.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"                DialogBox.getDukeDialog(Ui.showGreeting(), dukeImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"    public void setDuke(Atlas a) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"        atlas \u003d a;","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"zhikaiong2001"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"zhikaiong2001"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"zhikaiong2001"},"content":"        String response \u003d atlas.getResponse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"zhikaiong2001"},"content":"        assert response !\u003d null : \"Response should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"zhikaiong2001"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"zhikaiong2001"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"zhikaiong2001"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"zhikaiong2001"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"zhikaiong2001"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"zhikaiong2001"},"content":"        checkExitProgram(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"zhikaiong2001"},"content":"    private static void checkExitProgram(String input) {","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"zhikaiong2001"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"zhikaiong2001"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"zhikaiong2001":66}},{"path":"src/main/java/atlas/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.command.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.exception.AtlasException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.exception.InvalidDeadlineFormatException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.exception.InvalidEventFormatException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":" * The Parser class is responsible for parsing user input and converting it into executable commands.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"     * Parses a user input string and returns an executable Command.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"     * @param input   The user input string to parse.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks   The TaskList object used for task operations.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"     * @param ui      The Ui object used for user interaction.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"     * @param storage The Storage object used for file operations.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"     * @return Command The command that can be executed based on user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"     * @throws AtlasException If the input string does not correspond to a valid command format.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"    public static Command parse(String input, TaskList tasks, Ui ui, Storage storage) throws AtlasException {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"        assert parts.length \u003e 0 : \"Input command should not be empty\";","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"        String details \u003d parts.length \u003e 1 ? parts[1] : null;","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"        switch (command) {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"            return new ExitCommand(tasks, ui, storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"        case \"list\":","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"            return new ListCommand(tasks, ui, storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"            return createMarkCommand(tasks, ui, storage, details);","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"            return createUnmarkCommand(tasks, ui, storage, details);","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"            return createDeleteCommand(tasks, ui, storage, details);","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"zhikaiong2001"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"zhikaiong2001"},"content":"            return new AddToDoCommand(tasks, ui, storage, details);","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"zhikaiong2001"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"zhikaiong2001"},"content":"            return createAddDeadlineCommand(tasks, ui, storage, details);","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"zhikaiong2001"},"content":"        case \"event\":","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"zhikaiong2001"},"content":"            return createAddEventCommand(tasks, ui, storage, details);","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"zhikaiong2001"},"content":"        case \"tasks_on\":","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"zhikaiong2001"},"content":"            return createTasksOnDateCommand(tasks, ui, storage, details);","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"zhikaiong2001"},"content":"        case \"find\":","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"zhikaiong2001"},"content":"            return new FindCommand(tasks, ui, storage, details);","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"zhikaiong2001"},"content":"        default:","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"zhikaiong2001"},"content":"            return new InvalidCommand(tasks, ui, storage);","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"zhikaiong2001"},"content":"    private static TasksOnDateCommand createTasksOnDateCommand(TaskList tasks, Ui ui, Storage storage, String details) throws AtlasException {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"zhikaiong2001"},"content":"        LocalDate date;","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"zhikaiong2001"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"zhikaiong2001"},"content":"            date \u003d LocalDate.parse(details, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"zhikaiong2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"zhikaiong2001"},"content":"            throw new AtlasException(\"Invalid date format. Please use \u0027yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"zhikaiong2001"},"content":"        return new TasksOnDateCommand(tasks, ui, storage, date);","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"zhikaiong2001"},"content":"    private static AddEventCommand createAddEventCommand(TaskList tasks, Ui ui, Storage storage, String details) throws AtlasException {","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"zhikaiong2001"},"content":"        String[] eventParts \u003d details.split(\" /from | /to \"); // Split by both \"/from\" and \"/to\"","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"zhikaiong2001"},"content":"        if (eventParts.length !\u003d 3) {","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"zhikaiong2001"},"content":"            throw new AtlasException(\"Invalid event format.\"","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"zhikaiong2001"},"content":"                    + \" Please use \u0027event [description] /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"zhikaiong2001"},"content":"        String description \u003d eventParts[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"zhikaiong2001"},"content":"        LocalDateTime start;","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"zhikaiong2001"},"content":"        LocalDateTime end;","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"zhikaiong2001"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"zhikaiong2001"},"content":"            start \u003d LocalDateTime.parse(eventParts[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"zhikaiong2001"},"content":"            end \u003d LocalDateTime.parse(eventParts[2], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"zhikaiong2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"zhikaiong2001"},"content":"            throw new InvalidEventFormatException(\"Invalid date format for event. Please use \u0027yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"zhikaiong2001"},"content":"        return new AddEventCommand(tasks, ui, storage, description, start, end);","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"zhikaiong2001"},"content":"    private static AddDeadlineCommand createAddDeadlineCommand(TaskList tasks, Ui ui, Storage storage, String details) throws InvalidDeadlineFormatException {","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"zhikaiong2001"},"content":"        String[] deadlineDetails \u003d details.split(\" /by \");","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"zhikaiong2001"},"content":"        LocalDateTime by;","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"zhikaiong2001"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"zhikaiong2001"},"content":"            by \u003d LocalDateTime.parse(deadlineDetails[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"zhikaiong2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"zhikaiong2001"},"content":"            throw new InvalidDeadlineFormatException(\"Invalid date/time format. Please use \u0027yyyy-MM-dd HHmm\u0027.\\\"\");","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"zhikaiong2001"},"content":"        return new AddDeadlineCommand(tasks, ui, storage, deadlineDetails[0], by);","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"zhikaiong2001"},"content":"    private static DeleteCommand createDeleteCommand(TaskList tasks, Ui ui, Storage storage, String details) {","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"zhikaiong2001"},"content":"        int taskIndex \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"zhikaiong2001"},"content":"        return new DeleteCommand(tasks, ui, storage, taskIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"zhikaiong2001"},"content":"    private static UnmarkCommand createUnmarkCommand(TaskList tasks, Ui ui, Storage storage, String details) {","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"zhikaiong2001"},"content":"        int taskIndex \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"zhikaiong2001"},"content":"        return new UnmarkCommand(tasks, ui, storage, taskIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"zhikaiong2001"},"content":"    private static MarkCommand createMarkCommand(TaskList tasks, Ui ui, Storage storage, String details) {","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"zhikaiong2001"},"content":"        int taskIndex \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"zhikaiong2001"},"content":"        return new MarkCommand(tasks, ui, storage, taskIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"zhikaiong2001"},"content":"     * Converts a string from file format back into a Task object.","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"zhikaiong2001"},"content":"     * @param line The line from the file to be parsed into a Task.","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"zhikaiong2001"},"content":"     * @return Task The task created from a single file line.","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"zhikaiong2001"},"content":"    public static Task parseLineToTask(String line) {","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"zhikaiong2001"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"zhikaiong2001"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"zhikaiong2001"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"zhikaiong2001"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"zhikaiong2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"zhikaiong2001"},"content":"        switch (type) {","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"zhikaiong2001"},"content":"        case \"T\":","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"zhikaiong2001"},"content":"            return parseLineToToDo(description, isDone);","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"zhikaiong2001"},"content":"        case \"D\":","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"zhikaiong2001"},"content":"            return parseLineToDeadline(parts, description, isDone);","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"zhikaiong2001"},"content":"        case \"E\":","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"zhikaiong2001"},"content":"            return parseLineToEvent(parts, description, isDone);","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"zhikaiong2001"},"content":"        default:","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"zhikaiong2001"},"content":"            assert false : \"Line saved in data file cannot be parsed into task\";","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"zhikaiong2001"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"zhikaiong2001"},"content":"    private static Event parseLineToEvent(String[] parts, String description, boolean isDone) {","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"zhikaiong2001"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"zhikaiong2001"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(parts[3].trim());","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"zhikaiong2001"},"content":"            assert start !\u003d null : \"start should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"zhikaiong2001"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(parts[4].trim());","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"zhikaiong2001"},"content":"            assert end !\u003d null : \"end should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":152,"author":{"gitId":"zhikaiong2001"},"content":"            Event event \u003d new Event(description, start, end);","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"zhikaiong2001"},"content":"            assert event !\u003d null : \"Task object should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":154,"author":{"gitId":"zhikaiong2001"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"zhikaiong2001"},"content":"                event.toggle();","lastModifiedDate":"2024-02-05"},{"lineNumber":156,"author":{"gitId":"zhikaiong2001"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"zhikaiong2001"},"content":"            return event;","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"zhikaiong2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"zhikaiong2001"},"content":"            System.err.println(\"Failed to parse event dates: \" + parts[3] + \" and \" + parts[4]);","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"zhikaiong2001"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":164,"author":{"gitId":"zhikaiong2001"},"content":"    private static Deadline parseLineToDeadline(String[] parts, String description, boolean isDone) {","lastModifiedDate":"2024-02-12"},{"lineNumber":165,"author":{"gitId":"zhikaiong2001"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":166,"author":{"gitId":"zhikaiong2001"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(parts[3].trim());","lastModifiedDate":"2024-02-12"},{"lineNumber":167,"author":{"gitId":"zhikaiong2001"},"content":"            assert by !\u003d null : \"by should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":168,"author":{"gitId":"zhikaiong2001"},"content":"            Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-12"},{"lineNumber":169,"author":{"gitId":"zhikaiong2001"},"content":"            assert deadline !\u003d null : \"Task object should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":170,"author":{"gitId":"zhikaiong2001"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-12"},{"lineNumber":171,"author":{"gitId":"zhikaiong2001"},"content":"                deadline.toggle();","lastModifiedDate":"2024-02-12"},{"lineNumber":172,"author":{"gitId":"zhikaiong2001"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":173,"author":{"gitId":"zhikaiong2001"},"content":"            return deadline;","lastModifiedDate":"2024-02-12"},{"lineNumber":174,"author":{"gitId":"zhikaiong2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":175,"author":{"gitId":"zhikaiong2001"},"content":"            System.err.println(\"Failed to parse deadline date: \" + parts[3]);","lastModifiedDate":"2024-02-12"},{"lineNumber":176,"author":{"gitId":"zhikaiong2001"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":177,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":180,"author":{"gitId":"zhikaiong2001"},"content":"    private static ToDo parseLineToToDo(String description, boolean isDone) {","lastModifiedDate":"2024-02-12"},{"lineNumber":181,"author":{"gitId":"zhikaiong2001"},"content":"        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":182,"author":{"gitId":"zhikaiong2001"},"content":"        assert todo !\u003d null : \"Task object should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":183,"author":{"gitId":"zhikaiong2001"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-12"},{"lineNumber":184,"author":{"gitId":"zhikaiong2001"},"content":"            todo.toggle();","lastModifiedDate":"2024-02-12"},{"lineNumber":185,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":186,"author":{"gitId":"zhikaiong2001"},"content":"        return todo;","lastModifiedDate":"2024-02-12"},{"lineNumber":187,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":188,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":188}},{"path":"src/main/java/atlas/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":" * The Storage class handles loading from and saving to the task data file.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    private String filePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs a new Storage object.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks    The TaskList to be loaded from or saved to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"     * @param filePath The file path of the data file.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"    public Storage(TaskList tasks, String filePath) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"     * Loads tasks from the data file into the TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"    public void load() {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"        ensureFileExists();","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"        loadIntoFile(file);","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"    private void loadIntoFile(File file) {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"                Task task \u003d Parser.parseLineToTask(line);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"zhikaiong2001"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"zhikaiong2001"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"zhikaiong2001"},"content":"            System.err.println(\"Unable to load tasks: \" + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"zhikaiong2001"},"content":"     * Saves tasks from the TaskList to the data file.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"zhikaiong2001"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"zhikaiong2001"},"content":"        try (PrintWriter writer \u003d new PrintWriter(filePath)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"zhikaiong2001"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"zhikaiong2001"},"content":"                writer.println(task.toFileFormat());","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"zhikaiong2001"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"zhikaiong2001"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"zhikaiong2001"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"zhikaiong2001"},"content":"     * Ensures that the data file and its parent directories exist.","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"zhikaiong2001"},"content":"     * If they do not exist, it attempts to create them.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"zhikaiong2001"},"content":"    private void ensureFileExists() {","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"zhikaiong2001"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"zhikaiong2001"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"zhikaiong2001"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"zhikaiong2001"},"content":"                File directory \u003d file.getParentFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"zhikaiong2001"},"content":"                if (!directory.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"zhikaiong2001"},"content":"                    directory.mkdirs();","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"zhikaiong2001"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"zhikaiong2001"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"zhikaiong2001"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"zhikaiong2001"},"content":"                System.err.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"zhikaiong2001"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":88}},{"path":"src/main/java/atlas/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.exception.AtlasException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":" * The TaskList class manages a list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"     * Initializes a new TaskList with an empty arraylist of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"     * Deletes a task from the task list using index.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"     * @throws AtlasException If the index is out of bounds.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"    public void deleteTask(int index) throws AtlasException {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"        checkBounds(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"    private void checkBounds(int index) throws AtlasException {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"            throw new AtlasException(\"Task number \" + (index + 1) + \" does not exist in the list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"zhikaiong2001"},"content":"     * Marks a task as done by index.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"zhikaiong2001"},"content":"     * @param i The index of the task to be marked as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"zhikaiong2001"},"content":"     * @throws AtlasException If the index is out of bounds.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"zhikaiong2001"},"content":"    public void markTask(int i) throws AtlasException {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"zhikaiong2001"},"content":"        checkBounds(i);","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"zhikaiong2001"},"content":"        tasks.get(i).toggle();","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"zhikaiong2001"},"content":"     * Unmarks a task as not done by index.","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"zhikaiong2001"},"content":"     * @param i The index of the task to be unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"zhikaiong2001"},"content":"     * @throws AtlasException If the index is out of bounds.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"zhikaiong2001"},"content":"    public void unmarkTask(int i) throws AtlasException {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"zhikaiong2001"},"content":"        checkBounds(i);","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"zhikaiong2001"},"content":"        tasks.get(i).toggle();","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"zhikaiong2001"},"content":"     * Retrieves a list of tasks that occur on a particular date.","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"zhikaiong2001"},"content":"     * @param date The date for which tasks are to be retrieved.","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"zhikaiong2001"},"content":"     * @return An ArrayList of tasks that occur on the specified date.","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"zhikaiong2001"},"content":"    public ArrayList\u003cTask\u003e getTasksOnDate(LocalDate date) {","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"zhikaiong2001"},"content":"        ArrayList\u003cTask\u003e tasksOnDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"zhikaiong2001"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"zhikaiong2001"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"zhikaiong2001"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"zhikaiong2001"},"content":"                if (deadline.getBy().toLocalDate().equals(date)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"zhikaiong2001"},"content":"                    tasksOnDate.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"zhikaiong2001"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"zhikaiong2001"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"zhikaiong2001"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"zhikaiong2001"},"content":"                LocalDate startDate \u003d event.getStart().toLocalDate();","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"zhikaiong2001"},"content":"                LocalDate endDate \u003d event.getEnd().toLocalDate();","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"zhikaiong2001"},"content":"                if (checkDateWithinRange(date, startDate, endDate)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"zhikaiong2001"},"content":"                    tasksOnDate.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"zhikaiong2001"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"zhikaiong2001"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"zhikaiong2001"},"content":"        return tasksOnDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"zhikaiong2001"},"content":"    private static boolean checkDateWithinRange(LocalDate date, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"zhikaiong2001"},"content":"        return !date.isBefore(startDate) \u0026\u0026 !date.isAfter(endDate);","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"zhikaiong2001"},"content":"     * Gets the list of all tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"zhikaiong2001"},"content":"     * @return An ArrayList containing all the tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"zhikaiong2001"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"zhikaiong2001"},"content":"        return tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"zhikaiong2001"},"content":"     * Takes in a keyword and return tasks that match with that specific keyword.","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"zhikaiong2001"},"content":"     * @param keyword Keyword given by the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"zhikaiong2001"},"content":"     * @return A list of tasks that match with that keyword.","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"zhikaiong2001"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"zhikaiong2001"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"zhikaiong2001"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"zhikaiong2001"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"zhikaiong2001"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"zhikaiong2001"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"zhikaiong2001"},"content":"        return matchingTasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":127}},{"path":"src/main/java/atlas/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":" * The Ui class handles all user interactions.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    public Ui() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"    public static String showGreeting() {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"        sb.append(\"Hello! I\u0027m Atlas\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"        sb.append(\"What can I do for you?\");","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"    public String showGoodbye() {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"        return (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"    public String showError(String message) {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"        return message;","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"zhikaiong2001"},"content":"     * Reads the next line of input from the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"zhikaiong2001"},"content":"     * @return The line of input as a String.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"zhikaiong2001"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"zhikaiong2001"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"zhikaiong2001"},"content":"     * Displays a message indicating that a task has been added and how many tasks are in the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks The TaskList from which to retrieve the newly added task.","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"zhikaiong2001"},"content":"    public String showTaskAdded(TaskList tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"zhikaiong2001"},"content":"        ArrayList\u003cTask\u003e al \u003d tasks.getTasks();","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"zhikaiong2001"},"content":"        assert !al.isEmpty() : \"Task list should not be empty after adding\";","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"zhikaiong2001"},"content":"        return (\"Got it. I\u0027ve added this task:\\n  \" + al.get(al.size() - 1));","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"zhikaiong2001"},"content":"     * Displays a message indicating that a task has been deleted and how many remaining tasks in the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks The TaskList from which to retrieve the deleted task.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"zhikaiong2001"},"content":"     * @param index The index of the deleted task.","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"zhikaiong2001"},"content":"    public String showTaskDeleted(TaskList tasks, int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"zhikaiong2001"},"content":"        ArrayList\u003cTask\u003e al \u003d tasks.getTasks();","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"zhikaiong2001"},"content":"        return (\"Got it. I\u0027ve removed this task:\\n  \" + al.get(index));","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"zhikaiong2001"},"content":"     * Displays all tasks that are scheduled on a given date.","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks The TaskList from which to retrieve tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"zhikaiong2001"},"content":"     * @param date  The date for which tasks should be displayed.","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"zhikaiong2001"},"content":"    public String showTasksOnDate(TaskList tasks, LocalDate date) {","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"zhikaiong2001"},"content":"        ArrayList\u003cTask\u003e al \u003d tasks.getTasksOnDate(date);","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"zhikaiong2001"},"content":"        if (al.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"zhikaiong2001"},"content":"            return (\"No tasks found on \" + date);","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"zhikaiong2001"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"zhikaiong2001"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"zhikaiong2001"},"content":"            sb.append(\"Tasks on \").append(date).append(\":\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"zhikaiong2001"},"content":"            int i \u003d 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"zhikaiong2001"},"content":"            for (Task task : al) {","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"zhikaiong2001"},"content":"                sb.append(i).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"zhikaiong2001"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"zhikaiong2001"},"content":"            return sb.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"zhikaiong2001"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks The TaskList from which to retrieve the marked task.","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"zhikaiong2001"},"content":"     * @param index The index of the marked task.","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"zhikaiong2001"},"content":"    public String showMark(TaskList tasks, int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"zhikaiong2001"},"content":"        ArrayList\u003cTask\u003e al \u003d tasks.getTasks();","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"zhikaiong2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"zhikaiong2001"},"content":"        sb.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"zhikaiong2001"},"content":"        String str \u003d al.get(index).toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"zhikaiong2001"},"content":"        sb.append(str);","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"zhikaiong2001"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"zhikaiong2001"},"content":"     * Displays a message indicating that a task has been unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks The TaskList from which to retrieve the unmarked task.","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"zhikaiong2001"},"content":"     * @param index The index of the unmarked task.","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"zhikaiong2001"},"content":"    public String showunMark(TaskList tasks, int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"zhikaiong2001"},"content":"        ArrayList\u003cTask\u003e al \u003d tasks.getTasks();","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"zhikaiong2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"zhikaiong2001"},"content":"        sb.append(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"zhikaiong2001"},"content":"        String str \u003d al.get(index).toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"zhikaiong2001"},"content":"        sb.append(str);","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"zhikaiong2001"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"zhikaiong2001"},"content":"     * Displays all tasks in the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks The ArrayList of tasks to be displayed.","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"zhikaiong2001"},"content":"    public String showAllTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"zhikaiong2001"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"zhikaiong2001"},"content":"            return (\"There are no tasks in your list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"zhikaiong2001"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"zhikaiong2001"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"zhikaiong2001"},"content":"            sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"zhikaiong2001"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"zhikaiong2001"},"content":"                sb.append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"zhikaiong2001"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"zhikaiong2001"},"content":"            return sb.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":150,"author":{"gitId":"zhikaiong2001"},"content":"     * Takes in a list of tasks and returns a string matching the tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":151,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks Tasks found in the TaskList.","lastModifiedDate":"2024-02-07"},{"lineNumber":153,"author":{"gitId":"zhikaiong2001"},"content":"     * @return A string of tasks that match.","lastModifiedDate":"2024-02-07"},{"lineNumber":154,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":155,"author":{"gitId":"zhikaiong2001"},"content":"    public String showMatchingTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":156,"author":{"gitId":"zhikaiong2001"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"zhikaiong2001"},"content":"            return (\"No matching tasks found\");","lastModifiedDate":"2024-02-07"},{"lineNumber":158,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"zhikaiong2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":160,"author":{"gitId":"zhikaiong2001"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"zhikaiong2001"},"content":"            sb.append(i + 1).append(\".\").append(tasks.get(i));","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"zhikaiong2001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"zhikaiong2001"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":165}},{"path":"src/main/java/atlas/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":" * This command adds a new deadline to the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    private String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs an {@code AddDeadlineCommand} with the specified description and deadline time.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks       The {@code TaskList} to which the deadline will be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"     * @param ui          The {@code Ui} instance for user interaction.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"     * @param storage     The {@code Storage} instance for saving the updated task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"     * @param by          The time by which the task is due.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"    public AddDeadlineCommand(TaskList tasks, Ui ui, Storage storage, String description, LocalDateTime by) {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"        super(tasks, ui, storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"     * Executes the addition of a new deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"    public String execute() {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"        return ui.showTaskAdded(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":43}},{"path":"src/main/java/atlas/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":" * This command adds a new event to the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"    private String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    private LocalDateTime start;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"    private LocalDateTime end;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs an {@code AddEventCommand} with the specified description and start and end times.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks       The {@code TaskList} to which the deadline will be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"     * @param ui          The {@code Ui} instance for user interaction.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"     * @param storage     The {@code Storage} instance for saving the updated task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"     * @param start       The time by which the task starts.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"     * @param end         The time which the task ends.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    public AddEventCommand(TaskList tasks, Ui ui, Storage storage,","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"                           String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"        super(tasks, ui, storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"     * Executes the addition of a new event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"    public String execute() {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"zhikaiong2001"},"content":"        Event event \u003d new Event(description, start, end);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"zhikaiong2001"},"content":"        tasks.addTask(event);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"zhikaiong2001"},"content":"        return ui.showTaskAdded(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":45}},{"path":"src/main/java/atlas/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":" * This command adds a new event to the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"    private String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs an {@code AddToDoCommand} with the specified description.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks       The {@code TaskList} to which the deadline will be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"     * @param ui          The {@code Ui} instance for user interaction.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"     * @param storage     The {@code Storage} instance for saving the updated task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"     * @param description The description of the ToDo.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"    public AddToDoCommand(TaskList tasks, Ui ui, Storage storage, String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"        super(tasks, ui, storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"     * Executes the addition of a new ToDo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"    public String execute() {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"        return ui.showTaskAdded(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":38}},{"path":"src/main/java/atlas/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.exception.AtlasException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":" * The abstract Command class represents an executable command within the Atlas application.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":" * It serves as the base for all specific command types.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    protected TaskList tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"    protected Ui ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    protected Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs a Command with the specified TaskList, Ui, and Storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks   The TaskList containing the tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"     * @param ui      The Ui instance for interacting with the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"     * @param storage The Storage instance for loading and saving tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    public Command(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"     * Executes the command.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"     * @return A string representing the output of the program.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"     * @throws AtlasException If the command encounters problems during execution.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"    public abstract String execute() throws AtlasException;","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":40}},{"path":"src/main/java/atlas/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.exception.AtlasException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":" * This command handles the deletion of a task from the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"    private int taskIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"     * Creates a DeleteCommand with the specified task index to be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks       The {@code TaskList} from which the task will be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"     * @param ui          The {@code Ui} instance for user interaction.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"     * @param storage     The {@code Storage} instance for saving the updated task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"     * @param taskIndex   The index of the task to be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"    public DeleteCommand(TaskList tasks, Ui ui, Storage storage, int taskIndex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"        super(tasks, ui, storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"     * Executes the deletion of the task at the specified index. It will display a message","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"     * indicating the task deleted and then remove the task from the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"     * @throws AtlasException If the taskIndex is out of bounds of the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"    public String execute() throws AtlasException {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"        String str \u003d ui.showTaskDeleted(tasks, taskIndex);","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"        tasks.deleteTask(taskIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"        return str;","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":39}},{"path":"src/main/java/atlas/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":" * This command handles the exiting of the program.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs an {@code ExitCommand} with the specified TaskList, Ui, and Storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"     * This command is responsible for exiting the application.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks   The TaskList to be saved upon exit.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"     * @param ui      The Ui instance for user interaction.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"     * @param storage The Storage instance for saving the TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"    public ExitCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"        super(tasks, ui, storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"     * Executes the exit command. It will display a goodbye message, save the current state","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"     * of tasks, and then terminate the application.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"    public String execute() {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"        String str \u003d ui.showGoodbye();","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"        return str;","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":34}},{"path":"src/main/java/atlas/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":" * Represents a command to find and list all tasks that contain a specified keyword.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":" * This command extends the abstract Command class.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    private String keyword;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs a FindCommand with the given TaskList, Ui, Storage, and search keyword.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks   The TaskList to search within.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"     * @param ui      The Ui instance for user interaction.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"     * @param storage The Storage instance associated with the command (not directly used).","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"     * @param keyword The keyword to search for within task descriptions.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"    public FindCommand(TaskList tasks, Ui ui, Storage storage, String keyword) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"        super(tasks, ui, storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"     * Executes the find command. Searches the TaskList for tasks that contain the keyword","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"     * and displays the matching tasks to the user using the Ui.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"    public String execute() {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"        return ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"zhikaiong2001":39}},{"path":"src/main/java/atlas/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":" * This command handles invalid user commands.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs an {@code InvalidCommand} with the specified TaskList, Ui, and Storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"     * This command is invoked when an unrecognized command is input by the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks   The TaskList associated with the command, not used in this context.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"     * @param ui      The Ui instance for user interaction.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"     * @param storage The Storage instance, not used in this context.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"    public InvalidCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"        super(tasks, ui, storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"     * Executes the action for an invalid command. It will display an error message indicating","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"     * that an invalid command was entered.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    public String execute() {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"        return ui.showError(\"Invalid command entered. Please try again.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":31}},{"path":"src/main/java/atlas/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":" * This command handles the listing of tasks in the existing task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs a ListCommand with the specified TaskList, Ui, and Storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"     * This command is responsible for displaying all tasks in the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks   The TaskList containing the tasks to be listed.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"     * @param ui      The Ui instance for interacting with the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"     * @param storage The Storage instance, not directly used by this command.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"    public ListCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"        super(tasks, ui, storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"     * Executes the listing of all tasks in the task list. The tasks are displayed","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"     * to the user through the Ui.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"    public String execute() {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"        return ui.showAllTasks(tasks.getTasks());","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":34}},{"path":"src/main/java/atlas/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.exception.AtlasException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":" * This command handles marking a task as completed in the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"    private int taskIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs a MarkCommand with the specified TaskList, Ui, and Storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"     * This command marks a task, identified by its index, as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks     The TaskList containing the task to be marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"     * @param ui        The Ui instance for user interaction.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"     * @param storage   The Storage instance for saving the updated task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"     * @param taskIndex The index of the task in the task list to be marked as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"    public MarkCommand(TaskList tasks, Ui ui, Storage storage, int taskIndex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"        super(tasks, ui, storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"     * Executes the action of marking a task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"     * The task is marked in the task list and a confirmation message is displayed to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"     * @throws AtlasException If an error occurs during marking the task (e.g., index out of bounds).","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"    public String execute() throws AtlasException {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"        tasks.markTask(taskIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"        return ui.showMark(super.tasks, taskIndex);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":39}},{"path":"src/main/java/atlas/command/TasksOnDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":" * This command handles listing the tasks that fall on a specific date.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"public class TasksOnDateCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"    private LocalDate date;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs a TasksOnDateCommand with the specified TaskList, Ui, Storage, and date.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"     * This command is responsible for displaying all tasks scheduled for the given date.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks   The TaskList containing the tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"     * @param ui      The Ui instance for user interaction.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"     * @param storage The Storage instance, not directly used by this command.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"     * @param date    The date for which to list the tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"    public TasksOnDateCommand(TaskList tasks, Ui ui, Storage storage, LocalDate date) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"        super(tasks, ui, storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"     * Executes the listing of tasks on a specific date.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"     * The tasks scheduled for the specified date are displayed to the user through the Ui.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"    public String execute() {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"        return ui.showTasksOnDate(tasks, date);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":38}},{"path":"src/main/java/atlas/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"import atlas.exception.AtlasException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":" * This command handles unmarking a task as uncompleted in the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"    private int taskIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs a UnmarkCommand with the specified TaskList, Ui, and Storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"     * This command unmarks a task, identified by its index, as incomplete.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"     * @param tasks     The TaskList containing the task to be unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"     * @param ui        The Ui instance for user interaction.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"     * @param storage   The Storage instance for saving the updated task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"     * @param taskIndex The index of the task in the task list to be unmarked as incomplete.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"    public UnmarkCommand(TaskList tasks, Ui ui, Storage storage, int taskIndex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"        super(tasks, ui, storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"     * Executes the action of unmarking a task as incomplete.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"     * The task is unmarked in the task list and a incompletion message is displayed to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"     * @throws AtlasException If an error occurs during unmarking the task (e.g., index out of bounds).","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"    public String execute() throws AtlasException {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"zhikaiong2001"},"content":"        tasks.unmarkTask(taskIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"zhikaiong2001"},"content":"        return ui.showunMark(tasks, taskIndex);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":39}},{"path":"src/main/java/atlas/exception/AtlasException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":" * Represents exceptions specific to the Atlas application.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":" * This class extends the {@code Exception} class and is used to","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":" * handle various exceptional scenarios specific to the application\u0027s workflow.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"public class AtlasException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs a new {@code AtlasException} with the specified detail message.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"     * The message can be retrieved later by the {@code Throwable.getMessage()} method.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"     * @param message The detail message which provides more information about the exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    public AtlasException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"zhikaiong2001":18}},{"path":"src/main/java/atlas/exception/InvalidDeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":" * Represents an exception that occurs when the format of a deadline is invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":" * This class extends {@code AtlasException} to provide a more specific exception","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":" * related to the formatting issues of deadline tasks in the Atlas application.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"public class InvalidDeadlineFormatException extends AtlasException {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs a new {@code InvalidDeadlineFormatException} with the specified detail message.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"     * The message typically contains information about the specific formatting issue encountered.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"     * @param message The detail message which provides more information about the format issue.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    public InvalidDeadlineFormatException(String message) {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"        super(message);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":18}},{"path":"src/main/java/atlas/exception/InvalidEventFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":" * Represents an exception that occurs when the format of an event is invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":" * This class extends {@code AtlasException} to provide a more specific exception","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":" * for formatting issues related to event tasks in the Atlas application.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"public class InvalidEventFormatException extends AtlasException {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"     * Constructs a new {@code InvalidEventFormatException} with the specified detail message.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"     * The message typically contains information about the specific formatting issue encountered","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"     * in the event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"     * @param msg The detail message which provides more information about the event format issue.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    public InvalidEventFormatException(String msg) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"        super(msg);","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"zhikaiong2001":20}},{"path":"src/main/java/atlas/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"    public Deadline(String description, LocalDateTime by) throws DateTimeParseException {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(FORMATTER) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"        return by;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"zhikaiong2001":29}},{"path":"src/main/java/atlas/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) throws DateTimeParseException {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(FORMATTER) + \" to: \" + end.format(FORMATTER) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + start.toString() + \" | \" + end.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"        return start;","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"zhikaiong2001"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"zhikaiong2001"},"content":"        return end;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"zhikaiong2001":35}},{"path":"src/main/java/atlas/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"        return this.description;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"        String str \u003d String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"        return str;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"    public void toggle() {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"zhikaiong2001":31}},{"path":"src/main/java/atlas/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"zhikaiong2001":18}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"zhikaiong2001":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"atlas.MainWindow\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"zhikaiong2001":19}},{"path":"src/test/java/atlas/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"    public void createDeadline_ShouldHaveCorrectToString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.of(2021, 12, 31, 23, 59);","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"        DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"        DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"        Deadline dl \u003d new Deadline(\"Read book\", dueDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"        assertEquals(\"[D][ ] Read book (by: \" + dueDate.format(FORMATTER) + \")\", dl.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"    public void toggle_ShouldHaveCorrectToString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.of(2021, 12, 31, 23, 59);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"        DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"        DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"        Deadline dl \u003d new Deadline(\"Read book\", dueDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"        dl.toggle();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"        assertEquals(\"[D][X] Read book (by: \" + dueDate.format(FORMATTER) + \")\", dl.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"zhikaiong2001":29}},{"path":"src/test/java/atlas/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"public class EventTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"    public void createEvent_ShouldHaveCorrectToString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"        LocalDateTime startDate \u003d LocalDateTime.of(2021, 11, 30, 00, 00);","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.of(2021, 12, 31, 23, 59);","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"        DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"        DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"        Event ev \u003d new Event(\"Festival\", startDate, dueDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"        assertEquals(\"[E][ ] Festival (from: \" + startDate.format(FORMATTER) + \" to: \" + dueDate.format(FORMATTER) +\")\", ev.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"zhikaiong2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"zhikaiong2001"},"content":"    public void toggle_ShouldHaveCorrectToString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"zhikaiong2001"},"content":"        LocalDateTime startDate \u003d LocalDateTime.of(2021, 11, 30, 00, 00);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"zhikaiong2001"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.of(2021, 12, 31, 23, 59);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"        DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"zhikaiong2001"},"content":"        DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"zhikaiong2001"},"content":"        Event ev \u003d new Event(\"Festival\", startDate, dueDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"zhikaiong2001"},"content":"        ev.toggle();","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"zhikaiong2001"},"content":"        assertEquals(\"[E][X] Festival (from: \" + startDate.format(FORMATTER) + \" to: \" + dueDate.format(FORMATTER) +\")\", ev.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"zhikaiong2001":30}},{"path":"src/test/java/atlas/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"package atlas.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"public class ToDoTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"    public void createToDo_ShouldHaveCorrectToString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"        ToDo td \u003d new ToDo(\"Read book\");","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"        assertEquals(\"[T][ ] Read book\", td.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"zhikaiong2001"},"content":"    public void toggle_ShouldHaveCorrectToString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"zhikaiong2001"},"content":"        ToDo td \u003d new ToDo(\"Read book\");","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"zhikaiong2001"},"content":"        td.toggle();","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"zhikaiong2001"},"content":"        assertEquals(\"[T][X] Read book\", td.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"zhikaiong2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"zhikaiong2001":18}},{"path":"text-ui-test/data/Atlas.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"T | 1 | borrow book","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"D | 0 | return book | Sunday","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"zhikaiong2001":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhikaiong2001"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"zhikaiong2001"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"zhikaiong2001"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"zhikaiong2001"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"zhikaiong2001"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"zhikaiong2001"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"zhikaiong2001"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"zhikaiong2001"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"zhikaiong2001"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"zhikaiong2001"},"content":"delete 3","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"zhikaiong2001"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"zhikaiong2001"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"zhikaiong2001":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zhikaiong2001"},"content":"java -classpath ..\\bin Atlas \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"zhikaiong2001":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zhikaiong2001"},"content":"java -classpath ../bin Atlas \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"zhikaiong2001":1}}]
