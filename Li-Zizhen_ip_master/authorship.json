[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Li-Zizhen"},"content":"    mainClass.set(\"Duke.Duke\")","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"Li-Zizhen"},"content":"checkstyle {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"Li-Zizhen"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Li-Zizhen":4,"-":43}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.command.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":" * The main class of the application. This class initialize the application,","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":" * receive commands from users, process commands, and provide user feedbacks","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"public class Duke {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"     * Construct Duke instance, initialize application\u0027s components.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"     * @param filePath the path the program restore previously stored tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"     * Start the application, use the loop to get user\u0027s input and process","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"Li-Zizhen"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Li-Zizhen"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Li-Zizhen"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Li-Zizhen"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Li-Zizhen"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Li-Zizhen"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Li-Zizhen"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Li-Zizhen"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Li-Zizhen"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Li-Zizhen"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Li-Zizhen"},"content":"                Ui.print_message(e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"Li-Zizhen"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Li-Zizhen"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"Li-Zizhen"},"content":"     * The entry point of the entire program, create a Duke instance and run it.","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"Li-Zizhen"},"content":"     * @param args parameter not in use.","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"Li-Zizhen"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Li-Zizhen"},"content":"        new Duke(\"database.ser\").run();","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":50}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.command.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.task.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":" * The class used to parse the input from user to commands that","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":" * the program can execute","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"     * Parse the data in string formate to a specified LocalDate format","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"     * .","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"     * @param date the string representation of a date","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"     * @return the localDate representation of the data inputted by the user","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"    public static LocalDate parseDate(String date) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"        LocalDate formattedTime \u003d LocalDate.parse(date, timeFormatter);","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"        return formattedTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"Li-Zizhen"},"content":"     * Parse the String command by the user to command that could be executed by the program","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"Li-Zizhen"},"content":"     * @param userInput The input from users","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"Li-Zizhen"},"content":"     * @return A command object that represent the action to be performed","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"Li-Zizhen"},"content":"    public static Command parse(String userInput) {","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"Li-Zizhen"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"Li-Zizhen"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Li-Zizhen"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"Li-Zizhen"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Li-Zizhen"},"content":"        } else if (userInput.length() \u003e\u003d 4 \u0026\u0026 userInput.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"Li-Zizhen"},"content":"            return new AddCommand(new Todos(userInput.substring(4)));","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"Li-Zizhen"},"content":"        } else if (userInput.length() \u003e\u003d 8 \u0026\u0026 userInput.substring(0, 8).equals(\"deadline\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"Li-Zizhen"},"content":"            String[] strarr \u003d processDeadlineMsg(userInput.substring(8));","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"Li-Zizhen"},"content":"            return new AddCommand(new Deadline(strarr[0], parseDate(strarr[1])));","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Li-Zizhen"},"content":"        } else if (userInput.length() \u003e\u003d 5 \u0026\u0026 userInput.substring(0, 5).equals(\"event\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"Li-Zizhen"},"content":"            String[] strarr \u003d processEventMsg(userInput.substring(5));","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"Li-Zizhen"},"content":"            return new AddCommand(new Event(strarr[0], parseDate(strarr[1]), parseDate(strarr[2])));","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Li-Zizhen"},"content":"        } else if (userInput.length() \u003e 4 \u0026\u0026 userInput.substring(0, 4).equals(\"mark\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"Li-Zizhen"},"content":"            int number \u003d Integer.parseInt(userInput.substring(5));","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"Li-Zizhen"},"content":"            return new MarkCommand(number);","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Li-Zizhen"},"content":"        } else if (userInput.length() \u003e 6 \u0026\u0026 userInput.substring(0, 6).equals(\"unmark\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"Li-Zizhen"},"content":"            int number \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"Li-Zizhen"},"content":"            return new UnmarkCommand(number);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Li-Zizhen"},"content":"        } else if (userInput.length() \u003e 6 \u0026\u0026 userInput.substring(0, 6).equals(\"delete\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"Li-Zizhen"},"content":"            int number \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"Li-Zizhen"},"content":"            return new DeleteCommand(number);","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Li-Zizhen"},"content":"        } else if (userInput.length() \u003e 4 \u0026\u0026 userInput.substring(0, 4).equals(\"find\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"Li-Zizhen"},"content":"            String stringToFind \u003d userInput.substring(5);","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"Li-Zizhen"},"content":"            return new FindCommand(stringToFind);","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Li-Zizhen"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"Li-Zizhen"},"content":"            return new DontknowCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Li-Zizhen"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"Li-Zizhen"},"content":"     * Extract important information in user\u0027s command and organized them into a list of String","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"Li-Zizhen"},"content":"     * @param userInput User\u0027s input with only informative parts, i.e. without the command part","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"Li-Zizhen"},"content":"     * @return A list of String of three elements, the first element is the information about the event,","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"Li-Zizhen"},"content":"     * the second element is the starting time of the event, and the third element is the ending time of the event","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"Li-Zizhen"},"content":"    static String[] processEventMsg(String userInput) {","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"Li-Zizhen"},"content":"        String[] eventDetails \u003d new String[3];","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"Li-Zizhen"},"content":"        String[] splitByFrom \u003d userInput.split(\"/from\");","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"Li-Zizhen"},"content":"        if (splitByFrom.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"Li-Zizhen"},"content":"            eventDetails[0] \u003d splitByFrom[0].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"Li-Zizhen"},"content":"            String[] strArr \u003d splitByFrom[1].split(\"/to\");","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"Li-Zizhen"},"content":"            eventDetails[1] \u003d strArr[0].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"Li-Zizhen"},"content":"            if (strArr.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Li-Zizhen"},"content":"                eventDetails[2] \u003d strArr[1].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"Li-Zizhen"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Li-Zizhen"},"content":"                eventDetails[2] \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"Li-Zizhen"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Li-Zizhen"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Li-Zizhen"},"content":"            String[] strArr \u003d splitByFrom[0].split(\"/to\");","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"Li-Zizhen"},"content":"            if (strArr.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Li-Zizhen"},"content":"                eventDetails[0] \u003d strArr[0].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"Li-Zizhen"},"content":"                eventDetails[1] \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"Li-Zizhen"},"content":"                eventDetails[2] \u003d strArr[1].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"Li-Zizhen"},"content":"            } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"Li-Zizhen"},"content":"                eventDetails[0] \u003d strArr[0].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"Li-Zizhen"},"content":"                eventDetails[1] \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"Li-Zizhen"},"content":"                eventDetails[2] \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"Li-Zizhen"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Li-Zizhen"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Li-Zizhen"},"content":"        return eventDetails;","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"Li-Zizhen"},"content":"     * Extract important information in user\u0027s command and organized them into a list of String","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"Li-Zizhen"},"content":"     * @param userInput User\u0027s input with only informative parts, i.e. without the command part","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"Li-Zizhen"},"content":"     * @return A list of String of two elements, the first element is the information about the event,","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"Li-Zizhen"},"content":"     * the second element is the deadline of the event","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"Li-Zizhen"},"content":"    static String[] processDeadlineMsg(String userInput) {","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"Li-Zizhen"},"content":"        String[] deadlineDetails \u003d new String[2];","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"Li-Zizhen"},"content":"        String[] splitByBy \u003d userInput.split(\"/by\");","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"Li-Zizhen"},"content":"        if (splitByBy.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"Li-Zizhen"},"content":"            deadlineDetails[0] \u003d splitByBy[0].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"Li-Zizhen"},"content":"            deadlineDetails[1] \u003d splitByBy[1].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"Li-Zizhen"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Li-Zizhen"},"content":"            deadlineDetails[0] \u003d (splitByBy[0].trim());","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"Li-Zizhen"},"content":"            deadlineDetails[1] \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"Li-Zizhen"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Li-Zizhen"},"content":"        return deadlineDetails;","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":114}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"import java.io.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.task.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":" * Class responsible for storing task information locally and restoring the chat from local","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"    private String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"     * Construct a Storage object from a filepath which data is stored to and retrieved from","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"     * @param filePath the filepath the data is stored and retrieved.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"    Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"     * Writing the list of task into the file specified by filePath","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"     * @param tasksList the list containing task information","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"Li-Zizhen"},"content":"    public void writeDisk(ArrayList\u003cTask\u003e tasksList) {","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"Li-Zizhen"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Li-Zizhen"},"content":"            FileOutputStream fileOutputStream \u003d new FileOutputStream(filePath);","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"Li-Zizhen"},"content":"            ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream);","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"Li-Zizhen"},"content":"            objectOutputStream.writeObject(tasksList);","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"Li-Zizhen"},"content":"            objectOutputStream.close();","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"Li-Zizhen"},"content":"            fileOutputStream.close();","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"Li-Zizhen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Li-Zizhen"},"content":"            System.out.println(\"Problem writing to hard disk.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Li-Zizhen"},"content":"            //e.printStackTrace();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Li-Zizhen"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"Li-Zizhen"},"content":"     * Loading a list of tasks from the file specified by filePath","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"Li-Zizhen"},"content":"     * @return An Arraylist containing the information of task stored by user previously","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"Li-Zizhen"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Li-Zizhen"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"Li-Zizhen"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Li-Zizhen"},"content":"            FileInputStream file \u003d new FileInputStream(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Li-Zizhen"},"content":"            ObjectInputStream in \u003d new ObjectInputStream(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Li-Zizhen"},"content":"            ArrayList\u003cTask\u003e tasksList \u003d (ArrayList\u003cTask\u003e) in.readObject();","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"Li-Zizhen"},"content":"            in.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Li-Zizhen"},"content":"            file.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Li-Zizhen"},"content":"            return tasksList;","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"Li-Zizhen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Li-Zizhen"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Li-Zizhen"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":58}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.task.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":" * A system to store a list of task with additional functionality","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":" * such as inserting, deleting, marking, unmarkinng, etc.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"    private int taskCount \u003d 0;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"     * Construct TaskList using an ArrayList of tasks","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"     * @param tasks ArrayList of tasks","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"        taskCount \u003d this.tasks.size();","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"     * Accessor to access the number of tasks stored in TaskList","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"Li-Zizhen"},"content":"     * @return the number of tasks stored in the TaskList","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"Li-Zizhen"},"content":"    public int accessNumberTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Li-Zizhen"},"content":"        return taskCount;","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"Li-Zizhen"},"content":"     * Access the ArrayList of tasks","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"Li-Zizhen"},"content":"     * @return ArrayList of tasks","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"Li-Zizhen"},"content":"    public ArrayList\u003cTask\u003e accessList() {","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"Li-Zizhen"},"content":"        return tasks;","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"Li-Zizhen"},"content":"     * Inserting a task into the TaskList","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"Li-Zizhen"},"content":"     * @param task the task to be added","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"Li-Zizhen"},"content":"    public void insert(Task task) {","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"Li-Zizhen"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"Li-Zizhen"},"content":"        taskCount++;","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"Li-Zizhen"},"content":"     * delete a task from the TaskList with specified index","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"Li-Zizhen"},"content":"     * @param index the index of task to be deleted","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"Li-Zizhen"},"content":"     * @return the string representation of the deleted task","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"Li-Zizhen"},"content":"    public String delete(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Li-Zizhen"},"content":"        String deletedTaskDescription \u003d tasks.get(index - 1).toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"Li-Zizhen"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"Li-Zizhen"},"content":"        taskCount--;","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"Li-Zizhen"},"content":"        return deletedTaskDescription;","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"Li-Zizhen"},"content":"     * mark the task with specified index as done","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"Li-Zizhen"},"content":"     * @param index the index of tasks to be marked as done","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"Li-Zizhen"},"content":"     * @return the string representation fo the marked task","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"Li-Zizhen"},"content":"    public String mark(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Li-Zizhen"},"content":"        tasks.get(index - 1).mark();","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"Li-Zizhen"},"content":"        return tasks.get(index - 1).toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"Li-Zizhen"},"content":"     * unmark the task with specified index as not done","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"Li-Zizhen"},"content":"     * @param index  the index of task to be resumed as not done","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"Li-Zizhen"},"content":"     * @return the string representation of the unmarked task","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"Li-Zizhen"},"content":"    public String unmark(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Li-Zizhen"},"content":"        tasks.get(index - 1).unmark();","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"Li-Zizhen"},"content":"        return tasks.get(index - 1).toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"Li-Zizhen"},"content":"     * Returns the string representation of the task list","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"Li-Zizhen"},"content":"     * @return a string listing all the tasks with each prefixed with its index number","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"Li-Zizhen"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Li-Zizhen"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Li-Zizhen"},"content":"        String taskListString \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"Li-Zizhen"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"Li-Zizhen"},"content":"            if (i \u003d\u003d tasks.size() - 1) {","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"Li-Zizhen"},"content":"                taskListString \u003d taskListString + (i + 1) + \". \" + tasks.get(i);","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"Li-Zizhen"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Li-Zizhen"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Li-Zizhen"},"content":"            taskListString \u003d taskListString + (i + 1) + \". \" + tasks.get(i) + \"\\n \";","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"Li-Zizhen"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Li-Zizhen"},"content":"        return taskListString;","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":104}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":" * Representing the user interface of the application.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":" * It is responsible for getting inputs from users and displaying message to users.","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"    private final String logo \u003d \"ZZZZZ   H   H  EEEEE  N   N\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"            + \"   Z    H   H  E      NN  N\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"            + \"  Z     HHHHH  EEEE   N N N\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"            + \" Z      H   H  E      N  NN\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"            + \"ZZZZZ   H   H  EEEEE  N   N\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"     * Show welcome to the users","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"        print_message(\"Hello! I\u0027m ZHEN\\n What can I do for you? \");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"Li-Zizhen"},"content":"     * Organize content to be displayed to users in a formatted way.","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"Li-Zizhen"},"content":"     * @param msg The message the program wants to show to the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"Li-Zizhen"},"content":"    public static void print_message(String msg) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Li-Zizhen"},"content":"        System.out.println(\"\\n ----------------------------------\");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Li-Zizhen"},"content":"        System.out.println(\" \" + msg);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Li-Zizhen"},"content":"        System.out.println(\"\\n ----------------------------------\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"Li-Zizhen"},"content":"     * Reading inputs from users.","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"Li-Zizhen"},"content":"     * @return The line of string that the user input.","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"Li-Zizhen"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Li-Zizhen"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":44}},{"path":"src/main/java/Duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.task.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":" * Represent the command of adding a task to the task list","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"    private Task task;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"     * Construct a command to add task into the task list","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"     * @param task the task to be added","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"     * Execute the command of adding a task to the task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"     * @param taskList the List of tasks the task will be added to","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"     * @param ui show the deleting result to the user","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"     * @param storage store the product of execution locally.","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"Li-Zizhen"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"Li-Zizhen"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"Li-Zizhen"},"content":"        taskList.insert(this.task);","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"Li-Zizhen"},"content":"        Ui.print_message(\"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Li-Zizhen"},"content":"                + task.toString() + \"\\n \"","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"Li-Zizhen"},"content":"                + \"Now you have \"","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"Li-Zizhen"},"content":"                + taskList.accessNumberTask()","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"Li-Zizhen"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"Li-Zizhen"},"content":"        storage.writeDisk(taskList.accessList());","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"Li-Zizhen"},"content":"     * Determine whether this command is an exit command","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"Li-Zizhen"},"content":"     * @return false, because this is not an exit command","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"Li-Zizhen"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"Li-Zizhen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Li-Zizhen"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":47}},{"path":"src/main/java/Duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":" * Used to represent the abstract concept of commands. Other specific commands will extend this","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":" * class to represent specific type of commands.","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"     * Executing specific command.","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"     * @param taskList the List of tasks the command may work on","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"     * @param ui to manage the interaction with users","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"     * @param storage to store the product of execution locally.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"     * Determine whether this command is an exit command","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"     * @return true if the command is an exit command and false otherwise.","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":25}},{"path":"src/main/java/Duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":" * Represent the command of deleting a task from the task list","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"    private int deleteIndex;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"     * Construct a command to delete a task with a particular index from the task list","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"     * @param index the index of the task that will be deleted","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"        this.deleteIndex \u003d index;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"     * Execute the command of deleting a task from the task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"     * @param taskList the List of tasks the command may work on","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"     * @param ui to manage the interaction with users","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"     * @param storage to store the product of execution locally.","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"Li-Zizhen"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"Li-Zizhen"},"content":"        String deletedTaskInfo \u003d taskList.delete(deleteIndex);","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"Li-Zizhen"},"content":"        Ui.print_message(\"Noted. I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Li-Zizhen"},"content":"                + deletedTaskInfo + \"\\n \"","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"Li-Zizhen"},"content":"                + \"Now you have \"","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"Li-Zizhen"},"content":"                + taskList.accessNumberTask()","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"Li-Zizhen"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"Li-Zizhen"},"content":"        storage.writeDisk(taskList.accessList());","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"Li-Zizhen"},"content":"     * Determine whether this command is an exit command","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"Li-Zizhen"},"content":"     * @return false, because this is not an exit command","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"Li-Zizhen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Li-Zizhen"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":44}},{"path":"src/main/java/Duke/command/DontknowCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":" * Represent command of showing user that this program don\u0027t understand s/he command.","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"public class DontknowCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"     * Display message to user to tell that the program don\u0027t know what user\u0027s input means","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"     * @param taskList the task list potentially be worked on, not used in this program","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"     * @param ui to manage the interaction with users","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"     * @param storage to store the product of execution locally, not used in this program","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"        Ui.print_message(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"     * Determine whether this command is an exit command","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"     * @return false, because this is not an exit command","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":26}},{"path":"src/main/java/Duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":" * Represent the command of exiting the application","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"     * Execute the command of exiting the program, display bye message to user","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"     * @param taskList the task list potentially be worked on, not used in this program","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"     * @param ui to manage the interaction with users","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"     * @param storage to store the product of execution locally, not used in this program","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"        Ui.print_message(\"Bye\");","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"     * Determine whether this command is an exit command","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"     * @return ture, because this is an exit command","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":25}},{"path":"src/main/java/Duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke.command;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.Storage;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.Ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"    private final String stringToFind;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"    public FindCommand(String stringToFind) {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"        this.stringToFind \u003d stringToFind;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"    public void execute(TaskList tsk, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"        String stringToPrint \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"        int counter \u003d 0;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"        for (int i \u003d 0; i \u003c tsk.accessList().size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"            if (tsk.accessList().get(i).getMessage().contains(stringToFind)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"                counter++;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"                stringToPrint \u003d stringToPrint + counter + \". \" + tsk.accessList().get(i) + \"\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"        stringToPrint \u003d stringToPrint.substring(0, stringToPrint.length() - 1);","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"        Ui.print_message(stringToPrint);","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"Li-Zizhen"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Li-Zizhen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"Li-Zizhen"},"content":"        return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Li-Zizhen":31}},{"path":"src/main/java/Duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":" * Represent command of listing all the task added by the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"     * List all the task stored in the program.","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"     * @param taskList the task list storing the task the user operated on.","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"     * @param ui to manage the interaction with users","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"     * @param storage to store the product of execution locally, not used in this program","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"        Ui.print_message(taskList.toString());","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"     * Determine whether this command is an exit command","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"     * @return false, because this is not an exit command","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":25}},{"path":"src/main/java/Duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"    private final int markIndex;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"        this.markIndex \u003d index;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"        String markedTaskInfo \u003d taskList.mark(markIndex);","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"        Ui.print_message(\"Nice! I\u0027ve marked this task as done:\\n  \" + markedTaskInfo);","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"        storage.writeDisk(taskList.accessList());","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":18}},{"path":"src/main/java/Duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"    private int unmarkIndex;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"        this.unmarkIndex \u003d index;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"        String unmarkedTaskInfo \u003d taskList.unmark(unmarkIndex);","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"        Ui.print_message(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + unmarkedTaskInfo);","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"        storage.writeDisk(taskList.accessList());","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":19}},{"path":"src/main/java/Duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"import java.util.Locale;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"    private LocalDate dueDate \u003d null;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"    private String dueDateString;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"    public Deadline(String message, LocalDate dueDate) {","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"    public Deadline(String message, String dueDate) {","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"        this.dueDateString \u003d dueDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"        String taskInfo;","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"        if (isCompleted()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"            taskInfo \u003d \"[D][X] \" + getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"            taskInfo \u003d \"[D][ ] \" + getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"        if (dueDate !\u003d null) {","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Li-Zizhen"},"content":"            return taskInfo + \" (by: \"","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"Li-Zizhen"},"content":"                    + dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\").withLocale(Locale.ENGLISH))","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"Li-Zizhen"},"content":"                    + \")\";","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"Li-Zizhen"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Li-Zizhen"},"content":"            return taskInfo + \" (by: \" + dueDateString + \")\";","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"Li-Zizhen"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":33}},{"path":"src/main/java/Duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"    private LocalDate startDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"    private LocalDate endDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"    public Event(String message, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"        String msg;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"        if (isCompleted()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"            msg \u003d \"[E][X] \" + getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"            msg \u003d \"[E][ ] \" + getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"        return msg + \" (from: \" + startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"                + \" to: \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":26}},{"path":"src/main/java/Duke/task/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"public class Todos extends Task {","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"    public Todos(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"        super(message);","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"        if (isCompleted()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"            return \"[T][X] \" + getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"            return \"[T][ ] \" + getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":16}},{"path":"src/main/java/Duke/task/task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":"    private final String message;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"    private boolean isCompleted \u003d false;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"    public Task(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"        if (message.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"            throw new IllegalArgumentException(\"input can\u0027t be empty\");","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"    public void mark() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"        isCompleted \u003d true;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"    protected boolean isCompleted() {","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"        return isCompleted;","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Li-Zizhen"},"content":"        return message;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Li-Zizhen"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Li-Zizhen"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Li-Zizhen"},"content":"        if (isCompleted \u003d\u003d true) {","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"Li-Zizhen"},"content":"            return \"[X] \" + message;","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Li-Zizhen"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"Li-Zizhen"},"content":"            return \"[ ] \" + message;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Li-Zizhen"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Li-Zizhen":36}},{"path":"src/test/java/Duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"    public void testWellFormedEvent() {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"        String input \u003d \"return book /from 2023-11-11 /to 2023-02-03\";","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"        String[] expected \u003d {\"return book\", \"2023-11-11\", \"2023-02-03\"};","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"        assertArrayEquals(expected, Parser.processEventMsg(input));","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"    public void testEmptyEvent() {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"        String input \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"        String[] expected \u003d {\"\", \"\", \"\"};","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"        assertArrayEquals(expected,  Parser.processEventMsg(input));","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"    public void testPartialEmptyEvent() {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"        String input \u003d \"return book\";","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"        String[] expected \u003d {\"return book\", \"\", \"\"};","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"        assertArrayEquals(expected,  Parser.processEventMsg(input));","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Li-Zizhen"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Li-Zizhen"},"content":"    public void testLackFromEvent() {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Li-Zizhen"},"content":"        String input \u003d \"return book /to someday\";","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Li-Zizhen"},"content":"        String[] expected \u003d {\"return book\", \"\", \"someday\"};","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Li-Zizhen"},"content":"        assertArrayEquals(expected,  Parser.processEventMsg(input));","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Li-Zizhen"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Li-Zizhen"},"content":"    public void testLackToEvent() {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Li-Zizhen"},"content":"        String input \u003d \"return book /from someday\";","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Li-Zizhen"},"content":"        String[] expected \u003d {\"return book\", \"someday\", \"\"};","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Li-Zizhen"},"content":"        assertArrayEquals(expected,  Parser.processEventMsg(input));","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Li-Zizhen"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Li-Zizhen"},"content":"    public void testWellFormedDeadline() {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Li-Zizhen"},"content":"        String input \u003d \"return book /by 2023-11-11\";","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Li-Zizhen"},"content":"        String[] expected \u003d {\"return book\", \"2023-11-11\"};","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Li-Zizhen"},"content":"        assertArrayEquals(expected, Parser.processDeadlineMsg(input));","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Li-Zizhen"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Li-Zizhen"},"content":"    public void testEmptyDeadline() {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Li-Zizhen"},"content":"        String input \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Li-Zizhen"},"content":"        String[] expected \u003d {\"\", \"\"};","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Li-Zizhen"},"content":"        assertArrayEquals(expected,  Parser.processDeadlineMsg(input));","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Li-Zizhen"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Li-Zizhen"},"content":"    public void testLackByDeadline() {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Li-Zizhen"},"content":"        String input \u003d \"return something\";","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Li-Zizhen"},"content":"        String[] expected \u003d {\"return something\", \"\"};","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Li-Zizhen"},"content":"        assertArrayEquals(expected,  Parser.processDeadlineMsg(input));","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Li-Zizhen"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Li-Zizhen"},"content":"    public void testOnlyByDeadline() {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Li-Zizhen"},"content":"        String input \u003d \"/by monday\";","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Li-Zizhen"},"content":"        String[] expected \u003d {\"\", \"monday\"};","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Li-Zizhen"},"content":"        assertArrayEquals(expected,  Parser.processDeadlineMsg(input));","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Li-Zizhen":68}},{"path":"src/test/java/Duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"package Duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Li-Zizhen"},"content":"import Duke.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Li-Zizhen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Li-Zizhen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Li-Zizhen"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Li-Zizhen"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Li-Zizhen"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Li-Zizhen"},"content":"    public void testWellFormedDeadline() {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Li-Zizhen"},"content":"        String date \u003d \"2023-02-03\";","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Li-Zizhen"},"content":"        LocalDate date1 \u003d Parser.parseDate(date);","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Li-Zizhen"},"content":"        String input \u003d new Deadline(\"return book\", date1).toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Li-Zizhen"},"content":"        String expected \u003d \"[D][ ] return book (by: Feb 03 2023)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Li-Zizhen"},"content":"        assertEquals(expected, input);","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Li-Zizhen"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Li-Zizhen"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Li-Zizhen"},"content":"    public void testDeadlineStringInput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Li-Zizhen"},"content":"        String date \u003d \"2023-02-03\";","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Li-Zizhen"},"content":"        String input \u003d new Deadline(\"return book\", date).toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Li-Zizhen"},"content":"        String expected \u003d \"[D][ ] return book (by: 2023-02-03)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Li-Zizhen"},"content":"        assertEquals(expected, input);","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Li-Zizhen"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Li-Zizhen"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Li-Zizhen":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Li-Zizhen"},"content":"todo borrow book^","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Li-Zizhen":1}}]
