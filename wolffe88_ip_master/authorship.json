[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"# Roland","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"\u003e \"I have been doing my best, always thinking I want to beat my past self\" - Roland","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"Roland serves as a task tracking assistant designed to support you in achieving your self-improvement goals by aiding you in managing your workload effectively.","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"- text-based","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"- simple to get started","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"- clutter free and straightforward","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"To hire Roland, all you need to do is to:","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"1. download it from [here]()","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"2. double-click it","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"3. add your tasks","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"4. let it keep track of your tasks for you :U+1F60E:","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"And it is **FREE**!","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"Features:","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"- [x] Managing tasks","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"- [X] Managing deadlines","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"- [X] Reminders","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"If you are a Java programmer, you can use it to practice Java too. Here\u0027s the main method:","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"public class Main {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wolffe88":25,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"checkstyle {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"    mainClass.set(\u0027Launcher\u0027)","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"    archiveFileName \u003d \u0027Roland.jar\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wolffe88":22,"-":41}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"    private Label text;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"        text \u003d l;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"        text.setWrapText(true);","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"wolffe88":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"import command.Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"import roland.Parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"import roland.RolandException;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"import roland.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"import roland.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"import roland.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":" * The Duke class is the main class for the Roland task management application.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":" * It initializes the UI, storage, and task list, and handles the main loop for user interactions.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"        stage.show();","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"wolffe88"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"wolffe88"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"wolffe88"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"wolffe88"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"wolffe88"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"wolffe88"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"wolffe88"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"wolffe88"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"wolffe88"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"wolffe88"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"wolffe88"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"wolffe88"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"wolffe88"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"wolffe88"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"wolffe88"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"wolffe88"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"wolffe88"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"wolffe88"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"wolffe88"},"content":"        });","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"wolffe88"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"wolffe88"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"wolffe88"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"wolffe88"},"content":"        });","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"wolffe88"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"wolffe88"},"content":"        //More code to be added here later","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"wolffe88"},"content":"     * Iteration 1:","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"wolffe88"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"wolffe88"},"content":"     * @param text String containing text to add","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"wolffe88"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"wolffe88"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"wolffe88"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"wolffe88"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"wolffe88"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"wolffe88"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"wolffe88"},"content":"     * Constructs a new Duke object with the specified file path for storage.","lastModifiedDate":"2024-02-05"},{"lineNumber":118,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":119,"author":{"gitId":"wolffe88"},"content":"     * @param filePath The file path for storing task data.","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":121,"author":{"gitId":"wolffe88"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"wolffe88"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"wolffe88"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"wolffe88"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"wolffe88"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"wolffe88"},"content":"        } catch (RolandException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"wolffe88"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"wolffe88"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"wolffe88"},"content":"    public Duke() {","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"wolffe88"},"content":"        // ...","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"wolffe88"},"content":"     * Runs the main loop of the Roland application, handling user interactions and commands.","lastModifiedDate":"2024-02-05"},{"lineNumber":138,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"wolffe88"},"content":"    public void run() {","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"wolffe88"},"content":"        ui.boot();","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"wolffe88"},"content":"        // System.out.println(System.getProperty(\"user.dir\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"wolffe88"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"wolffe88"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"wolffe88"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"wolffe88"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"wolffe88"},"content":"                ui.spacer();","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"wolffe88"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"wolffe88"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":149,"author":{"gitId":"wolffe88"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"wolffe88"},"content":"            } catch (RolandException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"wolffe88"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"wolffe88"},"content":"            } finally {","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"wolffe88"},"content":"                ui.spacer();","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"wolffe88"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":159,"author":{"gitId":"wolffe88"},"content":"     * The main method to start the Roland application.","lastModifiedDate":"2024-02-05"},{"lineNumber":160,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":161,"author":{"gitId":"wolffe88"},"content":"     * @param args The command-line arguments (not used in this application).","lastModifiedDate":"2024-02-05"},{"lineNumber":162,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":164,"author":{"gitId":"wolffe88"},"content":"        new Duke(\"./src/main/java/data/roland.txt\").run();","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"wolffe88":163,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"public class Launcher {","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"wolffe88":10}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import roland.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import roland.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import roland.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":" * The AddCommand class represents a command to add a task to the TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":" * It extends the Command class and implements the execute method to perform the addition of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":" * Upon execution, it adds the provided task to the TaskList, updates the user interface, and provides","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":" * feedback about the addition, including the total number of tasks in the list.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"    private final Task task;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"     * Constructs an AddCommand with the specified task.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"     * Adds the specified task to the TaskList, and provides feedback","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"     * about the successful addition, including the total number of tasks in the list.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"     * @param tasks   The TaskList that stores the tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"     * @param ui      The user interface that outputs to the terminal.","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"     * @param storage The storage path to store persistent data.","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"        tasks.add(this.task);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"        serializeArrayList(tasks.getList(), storage.getFilePath());","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"        System.out.println(ui.getBot() + \"I have added \" + task.toString()","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"                + \" to your list of tasks. You have \" + tasks.size() + \" task(s) in list\");","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"     * Serializes the provided ArrayList of tasks to the specified file path using object serialization.","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"     * @param list     The ArrayList of tasks to be serialized.","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"     * @param filePath The file path where the serialized data will be stored.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"    private static void serializeArrayList(ArrayList\u003cTask\u003e list, String filePath) {","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"        try (ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(filePath))) {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"            oos.writeObject(list);","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"wolffe88":62}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import roland.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import roland.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import roland.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":" * The abstract Command class serves as a blueprint for various commands that can be executed","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":" * in the task management application. It provides an execute method to be implemented by its","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":" * concrete subclasses for carrying out specific actions, and a default isExit method to check","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":" * if the program should quit.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":" * Subclasses of Command are expected to provide concrete implementations for the execute method,","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":" * defining the behavior associated with the specific command.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"     * @param tasks The taskList that stores the task","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"     * @param ui The user interface that outputs to the terminal","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"     * @param storage The storage path to store persistent data","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"     * Checks if the program should exit.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"     * @return A boolean value indicating whether the program should exit (true) or continue running (false).","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"wolffe88":38}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import roland.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import roland.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import roland.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":" * The DeleteCommand class represents a command to delete a task from the TaskList based on its index.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":" * It extends the Command class and implements the execute method to perform the deletion of the specified task.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":" * Upon execution, it removes the task from the TaskList, updates the user interface, and provides feedback","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":" * about the successful removal, including the total number of tasks in the list.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"    private final int index;","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"     * Constructs a DeleteCommand with the specified index.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"     * Deletes a task from the taskList based on index","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"     * @param tasks The TaskList that stores the task","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"     * @param ui The user interface that outputs to the terminal","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"     * @param storage The storage path to store persistent data","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"        serializeArrayList(tasks.getList(), storage.getFilePath());","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"        System.out.println(ui.getBot() + \"I have removed \" + task.toString()","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"                + \" from your list. You have \" + tasks.size() + \" task(s) in list\");","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"     * Serializes the provided ArrayList of tasks to the specified file path using object serialization.","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"     * @param list     The ArrayList of tasks to be serialized.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"     * @param filePath The file path where the serialized data will be stored.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"    private static void serializeArrayList(ArrayList\u003cTask\u003e list, String filePath) {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"        try (ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(filePath))) {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"            oos.writeObject(list);","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"wolffe88":64}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import roland.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import roland.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import roland.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":" * The ExitCommand class represents a command to exit the task management application.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":" * It extends the Command class and implements the execute method to perform the exit operation.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":" * Upon execution, it serializes the TaskList to the specified file path using object serialization,","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":" * and prints a farewell message to the user interface.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"     * Executes the command by serializing the TaskList to the specified file path,","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"     * and prints a farewell message to the user interface.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"     * @param tasks   The TaskList that stores the tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"     * @param ui      The user interface that outputs to the terminal.","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"     * @param storage The storage path to store persistent data.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"        serializeArrayList(tasks.getList(), storage.getFilePath());","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"        System.out.println(ui.getBot() + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"     * Returns true to indicate that the program should exit when this command is executed.","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"     * @return true, as the ExitCommand signifies the program\u0027s exit.","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"        return true;","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"     * Serializes the provided ArrayList of tasks to the specified file path using object serialization.","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"     * @param list     The ArrayList of tasks to be serialized.","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"     * @param filePath The file path where the serialized data will be stored.","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"    private static void serializeArrayList(ArrayList\u003cTask\u003e list, String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"        try (ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(filePath))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"            oos.writeObject(list);","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"wolffe88":61}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package command;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import roland.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import roland.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import roland.Ui;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":" * The ListCommand class represents a command to display the list of tasks in the TaskList.","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":" * It extends the Command class and implements the execute method to perform the task listing operation.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":" * Upon execution, it outputs the list of tasks to the user interface, along with their respective indices.","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"    private final String keyword;","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"     * Executes the command by displaying the list of tasks in the TaskList along with their indices.","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"     * @param tasks   The TaskList that stores the tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"     * @param ui      The user interface that outputs to the terminal.","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"     * @param storage The storage path to store persistent data.","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"        System.out.println(ui.getBot() + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"            Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"                System.out.println(\"    \" + count + \". \" + task.toString());","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"                count++;","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"wolffe88":45}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import roland.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import roland.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import roland.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":" * The ListCommand class represents a command to display the list of tasks in the TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":" * It extends the Command class and implements the execute method to perform the task listing operation.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":" * Upon execution, it outputs the list of tasks to the user interface, along with their respective indices.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"     * Executes the command by displaying the list of tasks in the TaskList along with their indices.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"     * @param tasks   The TaskList that stores the tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"     * @param ui      The user interface that outputs to the terminal.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"     * @param storage The storage path to store persistent data.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"        System.out.println(ui.getBot() + \"Here are your tasks:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"            Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"            System.out.println(\"    \" + i + \". \" + task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"wolffe88":35}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import roland.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import roland.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import roland.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":" * The MarkCommand class represents a command to mark a task as done or undone in the TaskList based on its index.","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":" * It extends the Command class and implements the execute method to perform the marking operation.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":" * Upon execution, it marks the specified task as done or undone, updates the user interface, and provides feedback","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":" * about the status change.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"    private final int index;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"    private final boolean markDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"     * Constructs a MarkCommand with the specified index and markDone flag.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"     * @param index    The index of the task to be marked.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"     * @param markDone A boolean flag indicating whether to mark the task as done (true) or undone (false).","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"    public MarkCommand(int index, boolean markDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"        this.markDone \u003d markDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"     * Marks the task in the TaskList as done or undone based on the specified index and markDone flag,","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"     * updates the user interface, and provides feedback about the status change.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"     * @param tasks   The TaskList that stores the tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"     * @param ui      The user interface that outputs to the terminal.","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"     * @param storage The storage path to store persistent data.","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"        Task task \u003d tasks.get(this.index - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"        if (markDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"            task.markDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"            System.out.println(ui.getBot() + task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"            task.markUndone();","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"            System.out.println(ui.getBot() + task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"wolffe88":52}},{"path":"src/main/java/roland/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package roland;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"import command.*;","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import task.Deadlines;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import task.Events;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import task.ToDos;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":" * The Parser class is responsible for parsing user input and converting it into executable commands","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":" * in the task management application. It contains a static method, `parse`, which takes a full command string","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":" * and returns the corresponding Command object based on the recognized command keywords.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"public class Parser {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"     * Parses the given full command string and returns the corresponding Command object.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"     * @param fullCommand The user input representing a command.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"     * @return A Command object corresponding to the parsed command.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"     * @throws RolandException If the input command is not recognized or lacks necessary details.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"    public static Command parse(String fullCommand) throws RolandException {","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"        if (fullCommand.equals(\"bye\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"        } else if (fullCommand.startsWith(\"list\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"        } else if (fullCommand.startsWith(\"find\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"            String keyword \u003d fullCommand.substring(5, fullCommand.length());","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"        } else if (fullCommand.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"            int index \u003d Integer.parseInt(fullCommand.replaceAll(\"[\\\\D]\", \"\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"            return new MarkCommand(index, true);","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"        } else if (fullCommand.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"            int index \u003d Integer.parseInt(fullCommand.replaceAll(\"[\\\\D]\", \"\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"            return new MarkCommand(index, false);","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"        } else if (fullCommand.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"            int index \u003d Integer.parseInt(fullCommand.replaceAll(\"[\\\\D]\", \"\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"        } else if (fullCommand.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"            if (fullCommand.length() \u003c\u003d 5) {","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"                throw new RolandException(\"Please provide description for todo\");","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"            String description \u003d fullCommand.substring(5, fullCommand.length());","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"            return new AddCommand(new ToDos(description));","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"        } else if (fullCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"            try {","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"                if (fullCommand.length() \u003c\u003d 9) {","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"                    throw new RolandException(\"Please provide description for deadline\");","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"                if (fullCommand.split(\"/\").length \u003c 2) {","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"                    throw new RolandException(\"Please include when is the deadline by with /by \u003cYYYY-mm-dd\u003e\");","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"                String[] split \u003d fullCommand.split(\" /\");","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"                String description \u003d split[0].substring(9, split[0].length());","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"wolffe88"},"content":"                String by \u003d split[1].substring(3, split[1].length());","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"wolffe88"},"content":"                LocalDate date \u003d LocalDate.parse(by);","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"wolffe88"},"content":"                return new AddCommand(new Deadlines(description, date));","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"wolffe88"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"wolffe88"},"content":"                throw new RolandException(\"Please include when is the deadline with /by \u003cYYYY-mm-dd\u003e\");","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"wolffe88"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"wolffe88"},"content":"        } else if (fullCommand.startsWith(\"event\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"wolffe88"},"content":"            if (fullCommand.length() \u003c\u003d 6) {","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"wolffe88"},"content":"                throw new RolandException(\"Please provide description for event\");","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"wolffe88"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"wolffe88"},"content":"            if (fullCommand.split(\"/\").length !\u003d 3) {","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"wolffe88"},"content":"                throw new RolandException(","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"wolffe88"},"content":"                    \"Please include when is the start and end of the event with /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"wolffe88"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"wolffe88"},"content":"            String[] split \u003d fullCommand.split(\" /\");","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"wolffe88"},"content":"            String description \u003d split[0].substring(6, split[0].length());","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"wolffe88"},"content":"            String from \u003d split[1].substring(5, split[1].length());","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"wolffe88"},"content":"            String to \u003d split[2].substring(4, split[2].length());","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"wolffe88"},"content":"            return new AddCommand(new Events(description, from, to));","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"wolffe88"},"content":"        } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"wolffe88"},"content":"            throw new RolandException(\"I do not understand you :(.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"wolffe88":88}},{"path":"src/main/java/roland/RolandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package roland;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":" * The RolandException class is a custom exception that extends the base Exception class.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":" * It is used to represent exceptions specific to the Roland task management application.","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":" * Instances of this exception are thrown to indicate errors or exceptional conditions","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":" * during the application\u0027s execution.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"public class RolandException extends Exception {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"     * Constructs a new RolandException with the specified error message.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"     * @param message The detail message that describes the exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"    public RolandException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"wolffe88":21}},{"path":"src/main/java/roland/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package roland;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import java.io.File;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":" * The Storage class handles the loading of tasks from and saving of tasks to a specified file path.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":" * It is responsible for deserializing the task data from the file during application startup.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"public class Storage {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"    public final String filePath;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"     * @param filePath The file path where the task data is stored.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"     * Loads the ArrayList of tasks from the specified file path using object deserialization.","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"     * @return The ArrayList of tasks loaded from the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"     * @throws RolandException If the file is empty or does not exist, indicating a fresh start.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"    public ArrayList\u003cTask\u003e load() throws RolandException {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"        if (new File(filePath).length() !\u003d 0) {","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"            return deserializeArrayList(filePath);","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"        } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"            throw new RolandException(\"Let\u0027s get started shall we?\");","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"     * Deserializes the ArrayList of tasks from the specified file path.","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"     * @param filePath The file path from which to deserialize the tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"     * @return The deserialized ArrayList of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"    private static ArrayList\u003cTask\u003e deserializeArrayList(String filePath) {","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"        try (ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(filePath))) {","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"            return (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"wolffe88"},"content":"    public String getFilePath() {","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"wolffe88"},"content":"        return this.filePath;","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"wolffe88":65}},{"path":"src/main/java/roland/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package roland;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":" * The TaskList class represents a collection of tasks in the Roland task management application.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":" * It provides methods for managing tasks, such as adding, removing, and retrieving tasks from the list.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"public class TaskList {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"     * Constructs a new TaskList with the specified ArrayList of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"     * @param tasks The ArrayList of tasks to initialize the TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"     * Constructs a new TaskList with an empty ArrayList of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"     * Gets the ArrayList of tasks stored in the TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"     * @return The ArrayList of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"        return this.tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"     * Removes the task at the specified index from the TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"    public void remove(int index) {","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"     * Retrieves the task at the specified index from the TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"wolffe88"},"content":"     * Adds a new task to the TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"wolffe88"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"wolffe88"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"wolffe88"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"wolffe88"},"content":"     * Gets the number of tasks in the TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"wolffe88"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"wolffe88"},"content":"    public int size() {","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"wolffe88"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"wolffe88":82}},{"path":"src/main/java/roland/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package roland;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":" * The Ui class represents the user interface for the Roland task management application.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":" * It provides methods for displaying messages, reading user input, and showing errors.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"public class Ui {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"    private final String bot \u003d \"[ROLAND ⌐■-■] \";","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"     * Displays the application logo and welcome message.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"    public void boot() {","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"        this.spacer();","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"        String logo \u003d \"██████╗  ██████╗ ██╗      █████╗ ███╗   ██╗██████╗\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"                + \"██╔══██╗██╔═══██╗██║     ██╔══██╗████╗  ██║██╔══██╗\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"                + \"██████╔╝██║   ██║██║     ███████║██╔██╗ ██║██║  ██║\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"                + \"██╔══██╗██║   ██║██║     ██╔══██║██║╚██╗██║██║  ██║\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"                + \"██║  ██║╚██████╔╝███████╗██║  ██║██║ ╚████║██████╔╝\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"                + \"╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═════╝\\n\";","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"        System.out.println(bot + \"Hello! I am ROLAND\");","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"        System.out.println(bot + \"What can I do for you?\");","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"        this.spacer();","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"     * Prints a spacer line to the console for formatting purposes.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"    public void spacer() {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"     * Reads a line of user input from the console.","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"     * @return The user input as a String.","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"     * Displays an error message to the console with the bot identifier.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"        System.out.println(bot + message);","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"wolffe88"},"content":"     * Retrieves the bot identifier used in messages.","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"wolffe88"},"content":"     * @return The bot identifier.","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"wolffe88"},"content":"    public String getBot() {","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"wolffe88"},"content":"        return this.bot;","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"wolffe88"},"content":"     * Displays a loading error message to the console.","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"wolffe88"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"wolffe88"},"content":"        System.out.println(\"Let\u0027s get started with some tasks shall we?\");","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"wolffe88":76}},{"path":"src/main/java/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":" * The Deadlines class represents a task with a specific deadline in the Roland task management application.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":" * It extends the Task class and includes additional information about the deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"     * Constructs a new Deadlines task with the specified description and deadline date.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"     * @param by          The deadline date of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"    public Deadlines(String description, LocalDate by) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"     * Overrides the toString method to provide a formatted representation of the deadline task.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"     * @return The formatted string representation of the deadline task.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"wolffe88":37}},{"path":"src/main/java/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":" * The Events class represents a task with a specific start and end time in the Roland task management application.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":" * It extends the Task class and includes additional information about the event duration.","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"public class Events extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"    protected String from;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"    protected String to;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"     * Constructs a new Events task with the specified description, start time, and end time.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"    public Events(String description, String from, String to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"     * Overrides the toString method to provide a formatted representation of the event task.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"     * @return The formatted string representation of the event task.","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"wolffe88":39}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":" * The Task class represents a basic task in the Roland task management application.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":" * It includes information about the task\u0027s description and completion status.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"    protected String description;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"     * Constructs a new Task with the specified description and sets its completion status to false.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"     * Gets the status icon of the task (X if done, empty if not done).","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"     * @return The status icon as a String.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"wolffe88"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"wolffe88"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"wolffe88"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"wolffe88"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"wolffe88"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"wolffe88"},"content":"        return this.description;","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"wolffe88"},"content":"     * Gets the completion status of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"wolffe88"},"content":"     * @return The completion status as a boolean.","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"wolffe88"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"wolffe88"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"wolffe88"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"wolffe88"},"content":"    public void markDone() {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"wolffe88"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"wolffe88"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"wolffe88"},"content":"    public void markUndone() {","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"wolffe88"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"wolffe88"},"content":"     * Overrides the toString method to provide a formatted representation of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"wolffe88"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"wolffe88"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"wolffe88"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"wolffe88":76}},{"path":"src/main/java/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":" * The ToDos class represents a simple to-do task in the Roland task management application.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":" * It extends the Task class and does not include any additional information.","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":" * @author wolffe88","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"public class ToDos extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"     * Constructs a new ToDos task with the specified description.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"    public ToDos(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"     * Overrides the toString method to provide a formatted representation of the to-do task.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"     * @return The formatted string representation of the to-do task.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"wolffe88":30}},{"path":"src/test/task/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"import command.AddCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import command.Command;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import roland.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import roland.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"import roland.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"public class AddCommandTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"    public void executeTest() {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"        Task task \u003d new ToDos(\"assignment\");","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"        Command addToDo \u003d new AddCommand(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"        Storage storage \u003d new Storage(\"./src/main/java/data/roland.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"        addToDo.execute(taskList, ui, storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"        assertEquals(\"assignment\", taskList.get(0).getDescription());","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"wolffe88":29}},{"path":"src/test/task/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"package task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"import command.AddCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"import command.Command;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"import command.MarkCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"wolffe88"},"content":"import roland.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"wolffe88"},"content":"import roland.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"wolffe88"},"content":"import roland.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"wolffe88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"wolffe88"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"wolffe88"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"wolffe88"},"content":"    public void executeTest() {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"wolffe88"},"content":"        Task task \u003d new ToDos(\"assignment\");","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"wolffe88"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"wolffe88"},"content":"        Command addToDo \u003d new AddCommand(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"wolffe88"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"wolffe88"},"content":"        Storage storage \u003d new Storage(\"./src/main/java/data/roland.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"wolffe88"},"content":"        addToDo.execute(taskList, ui, storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"wolffe88"},"content":"        Command markDone \u003d new MarkCommand(0, true);","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"wolffe88"},"content":"        markDone.execute(taskList, ui, storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"wolffe88"},"content":"        assertEquals(true, taskList.get(0).getIsDone());","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"wolffe88"},"content":"        Command markUndone \u003d new MarkCommand(0, false);","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"wolffe88"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"wolffe88"},"content":"        assertEquals(false, taskList.get(0).getIsDone());","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"wolffe88"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"wolffe88"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"wolffe88":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wolffe88"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"wolffe88"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"wolffe88"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"wolffe88"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"wolffe88"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"wolffe88"},"content":"mark 2","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"wolffe88":6}},{"path":"src/main/java/data/roland.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"wolffe88":0}}]
