{"authorDailyContributionsMap":{"iamtr":[{"date":"2024-01-24","commitResults":[{"hash":"5d276a172a22042d9d0c4e1adb7d89b48aef2fbc","isMergeCommit":false,"messageTitle":"Changed greeting message for Duke","messageBody":"Changed name to Joseph and also added greeting messages for Level 0\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":6}}},{"hash":"ac93cde03bee3433454681ea869b92f23464d04d","isMergeCommit":false,"messageTitle":"Completed Level 1 - Echo","messageBody":"Program now will echo whatever user types\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":6}}},{"hash":"86788ad859a7734d927ec4cff3b6deb1f690040d","isMergeCommit":false,"messageTitle":"Created an todolist ArrayList and addItem method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}}]},{"date":"2024-01-25","commitResults":[{"hash":"e4145fae0dc843fa99529b9e9a382b9761c2b327","isMergeCommit":false,"messageTitle":"Implemented handleInput() method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":11}}},{"hash":"674bf59cc63dbc124fe093840af07cd432e13dd9","isMergeCommit":false,"messageTitle":"Handled issue where item is added even though there is no text","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":3}}},{"hash":"3c989048c41f662188d5df622ebd17d78c5d2145","isMergeCommit":false,"messageTitle":"Created Task.java for storing and managing task data","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"8127beac75d0e18f85009b9ab1a293c64359d10d","isMergeCommit":false,"messageTitle":"Removed extra newline where calling \u0027list\u0027 command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"96e0d6dfea113fcbe8149e2d7723103f3e9b15bd","isMergeCommit":false,"messageTitle":"Added getTaskDescription method for Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"fa18e362fa9a9819f1c6c6acb1a419cff468d8d6","isMergeCommit":false,"messageTitle":"Changed todolist from type string to a Task type","messageBody":"- Changed relevant helper methods as well\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":5}}}]},{"date":"2024-01-30","commitResults":[{"hash":"f3dd539abee610c2ed13882b27156e7f391d059e","isMergeCommit":false,"messageTitle":"Add markAsDone() method","messageBody":"This changes the isDone boolean in Task to true\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"883779902436f3f28843b6d217429e6e5dde6f9b","isMergeCommit":false,"messageTitle":"Refactor variable name \"command\" to \"input\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":4}}},{"hash":"f0eac32220f5941df4dbafd077dd6e89bce32739","isMergeCommit":false,"messageTitle":"Modify markAsDone() method to accept an argument","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"b0886e58349b4c1938613e0914d9df662336e355","isMergeCommit":false,"messageTitle":"Add mark and unmark functionality","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":15}}},{"hash":"458dbf76351024035ec01b47a146fe31e6f08f66","isMergeCommit":false,"messageTitle":"Rename getTaskDescription() to override toString()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":4}}},{"hash":"cb11657571766effd95e02c948eeb881b7d5cf87","isMergeCommit":false,"messageTitle":"Added Todo.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"360964a49aece33f2cc187fcaedd32e81662aa1a","isMergeCommit":false,"messageTitle":"Change toString() implementation for Todo.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"434ef0e87f13357ef54f5a7128903c8d257a1022","isMergeCommit":false,"messageTitle":"Create Deadline.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"aedc97c44df84aba4729c8113a1dd3f831efe73d","isMergeCommit":false,"messageTitle":"Create Event.java class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"2a32d1c3b03938ded0cdf06eeb597d94da653f19","isMergeCommit":false,"messageTitle":"Remove unneccessary space for toString() methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"50a6c08942df259fa2045cbf19622b19b02732bb","isMergeCommit":false,"messageTitle":"Add handling of todo, deadline and event commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":12}}},{"hash":"e22be7dcb8a9b33f3f84b9a7dfea10ef034b2727","isMergeCommit":false,"messageTitle":"Fix output when todolist is empty","messageBody":"When todolist is empty, the case is now handled by outputting \"Todolist is empty\"\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"35479b4225550f0f0acafc393aafc60100876e44","isMergeCommit":false,"messageTitle":"Add \"bye\" command","messageBody":"Check if command is bye, then exits program if command is bye\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}}]},{"date":"2024-01-31","commitResults":[{"hash":"749c6062612a17a69e2a448236ba6badf2862005","isMergeCommit":false,"messageTitle":"Add constructor to DukeException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"901907f04978f8309061768f5be243e973f8b0bc","isMergeCommit":false,"messageTitle":"Add exception handling using DukeException","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":6}}},{"hash":"7337addf5fc7bd99e479cd78a10bc9a92a53dc9b","isMergeCommit":false,"messageTitle":"Add case to handle delete command","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":7}}}]},{"date":"2024-02-02","commitResults":[{"hash":"a173d1968c2a0346ec82e60524aba8a85df82911","isMergeCommit":false,"messageTitle":"Create duke.txt to store todolist data","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0}}},{"hash":"ef345186c83d88b3b83c690e2c78716582dc4fb4","isMergeCommit":false,"messageTitle":"Import file writing libraries","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"d0858f363794947d106854583a907dd2c89c84d9","isMergeCommit":false,"messageTitle":"Create method getDataString() for all Tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"b37e75cd96a745756980b9aaf14a4bab0298d375","isMergeCommit":false,"messageTitle":"Add method saveData()","messageBody":"saveData() saves the todolist in a text file located at ip/data/duke.txt\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":2}}},{"hash":"5be242fa60ae229da4336eaf2ee05d5f8cd75bee","isMergeCommit":false,"messageTitle":"Add method saveData()","messageBody":"saveData() saves the todolist in a text file located at ip/data/duke.txt\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":6}}},{"hash":"bf64186ab7258e97f50f82afc08c6f573b3893a1","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027 of https://github.com/iamtr/ip into branch-Level-7","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"18bc520668443a123afd52958c6a5d1f9811b6bd","isMergeCommit":false,"messageTitle":"Change naming of constant from sep to SEP","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":8}}},{"hash":"842aa433c18b251d0de2f2c45a0a92e33a169dd9","isMergeCommit":false,"messageTitle":"Add file error handling for saveData() method","messageBody":"If directory or duke.txt is not present, it will be created by the error handling code\n","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":6}}},{"hash":"6849ae990851233c41642d7de64c0062da5017d7","isMergeCommit":false,"messageTitle":"Change isDone to show 0 or 1 instead of \"true\" or \"false\" in getDataString()","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"99213885c7e7b7f82d82a3bde4ee4e6fbab7fca6","isMergeCommit":false,"messageTitle":"Add basic test cases for automating the testing of text UI","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0}}}]},{"date":"2024-02-03","commitResults":[{"hash":"ebf054e8585b514169d8196c8af8016fc7d3b975","isMergeCommit":false,"messageTitle":"Change tasks to accept a date format for arguments","messageBody":"Example: deadline /by 2002-01-01. For invalid arguments, exception handling is being done\n","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":17}}},{"hash":"b012493454c036b7291eb4cd86787891ee426012","isMergeCommit":false,"messageTitle":"Handle bug where \\by is not specified in Deadline class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"d84adb6fc55e137ddebb0ea4c0b9a83dc3294b13","isMergeCommit":false,"messageTitle":"Remove unused imports","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}}]},{"date":"2024-02-04","commitResults":[{"hash":"b4119b91b2ec0cb9b242063b61cb8b7483e67d2a","isMergeCommit":false,"messageTitle":"Implement helper classes","messageBody":"Parser class: Interprets input\nStorage class: Handles storage of files\nTasklist class: Handles todolist\nUi class: Handles input and output to terminal\n","fileTypesAndContributionMap":{"java":{"insertions":217,"deletions":0}}},{"hash":"c44764a1e3bb35871cc0a0b1794c1c49913cdfc6","isMergeCommit":false,"messageTitle":"Refactor Duke.main() to use created classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":154}}},{"hash":"795e76b5cc21ccee6ecdb9078752187421ba3bac","isMergeCommit":false,"messageTitle":"Remove unnecessary imports and old code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":164}}},{"hash":"7b69bf76495e66c05677bd9951046244e692395b","isMergeCommit":true,"messageTitle":"Change Duke to use OOP classes created","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"a97e0c6c7c06b0a86772e18a700da2b83d4cf936","isMergeCommit":false,"messageTitle":"Remove unnecessary DukeException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":7}}},{"hash":"29eb70879a80cf62e1f2c83701b44be39cd25c97","isMergeCommit":false,"messageTitle":"Add getDescription() to Task","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":4,"deletions":0}}},{"hash":"b25129d339f8118ae37822d2bfc0c1da6268b4ad","isMergeCommit":false,"messageTitle":"Fix getDataString() output","messageBody":"Fixed getDataString() which output the correct string\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"dd014e411ea491864fcf048612110cfa51fdbf83","isMergeCommit":false,"messageTitle":"Add boolean isDone to task constructors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":3}}},{"hash":"a1762b00146140c3e79b219edd0eff9eb5535779","isMergeCommit":false,"messageTitle":"Add Tasklist in Duke constructor","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"c92aeb244e40eede35a2c1437795b1ff5eb78fa1","isMergeCommit":false,"messageTitle":"Add loadData() method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"10918c1bcda84c9f2c430bd2799336dcf94a6222","isMergeCommit":false,"messageTitle":"Add restoreData() method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":0}}},{"hash":"0c5d9b24f581991a57c46c2d6a61ba086b2087f6","isMergeCommit":false,"messageTitle":"Update Task constructors in Parser class","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":6}}},{"hash":"d7c5c179658031a8b6d453ad113645e55e685eef","isMergeCommit":false,"messageTitle":"Create new packages for seperate functionalities","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":2}}},{"hash":"956b886bcdd907bce599d1ad383be58bff3838ea","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027origin/add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2024-02-05","commitResults":[{"hash":"145d7ca1ecbb4c8d0ded0fd347c764ba00612215","isMergeCommit":false,"messageTitle":"Update build.gradle","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1}}},{"hash":"311e752bb83dcdffe00eb6585268dd4c92afaa96","isMergeCommit":false,"messageTitle":"Add ParserTest for testing Parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":0}}},{"hash":"2cdadc377f8c1ae262aac6c2107ead06edcdd2eb","isMergeCommit":false,"messageTitle":"Add UiTest for testing UI","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":0}}},{"hash":"7f63ff8159d538ed768c266984edda862614f858","isMergeCommit":false,"messageTitle":"Fix checkstyle errors","messageBody":"","tags":["A-JavaDoc","A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":280,"deletions":115}}},{"hash":"6c79483450bae9af93ff5b3e8c9fc6f1d1ae0e19","isMergeCommit":false,"messageTitle":"Modify Javadoc for run()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"414730a6e30595bb9bee962e22f88912cbccc670","isMergeCommit":false,"messageTitle":"Update run() JavaDoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}}]},{"date":"2024-02-13","commitResults":[{"hash":"d72285164e6aab0832558e5b62adb3d37a017cd5","isMergeCommit":false,"messageTitle":"Move parser to constructor instead of run()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"17597962f20954d1207daf551317e0fa6ebd59cd","isMergeCommit":false,"messageTitle":"Add Tasklist parameter for parseCommand()","messageBody":"parseCommand() now takes in a Tasklist parameter. Previously, Parser declares its own tasklist, which is not ideal as Parser should not have knowledge of tasklists, and its job is only to process commands\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":16}}},{"hash":"d3cfbff7a896d6d889b62d2e0204bf75291b3204","isMergeCommit":false,"messageTitle":"Refactor Task subclasses and Parser","messageBody":"If the description that a task is being given is empty, a DukeException will now be thrown\n\nparseCommand() from Parser is now split into smaller methods for readability. These two changes were done simultaneously as there was no way to refactor them separately.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":128,"deletions":99}}},{"hash":"3bb4c8c0a0fc38895643e3eaf38a49d9b5339be9","isMergeCommit":false,"messageTitle":"Refactor variable to smaller scope","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"32804acb93093c911b1b7bbc01844aaf93fa9d7e","isMergeCommit":false,"messageTitle":"Refactor restoreData() to smaller methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":22}}},{"hash":"65b47b8bc0d5880628f9df54f8e1a5f4125bc83c","isMergeCommit":false,"messageTitle":"Refactor parseCommand to return void","messageBody":"Checking if command is bye is now done by a seperate method commandIsBye()\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":7}}}]},{"date":"2024-02-14","commitResults":[{"hash":"1fd2ff21b795cfb4c0d24c1ed12b48ff24364607","isMergeCommit":false,"messageTitle":"Add method find","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":1}}},{"hash":"0f1ddef284625c18861fbb13bb9a549e93b6dd67","isMergeCommit":false,"messageTitle":"Add DukeException to findTask()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":2}}},{"hash":"e4300823fe087bf128c35f9de798fe1ac7b0a2c6","isMergeCommit":false,"messageTitle":"Add exception handling for handleDelete()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":4}}},{"hash":"0fcd857801addee47e523dcb9be2529bda16540c","isMergeCommit":false,"messageTitle":"Add exception handling","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":6}}},{"hash":"32e2de77c5d4c24117a0835e8c03e98057f85de8","isMergeCommit":false,"messageTitle":"Add dependencies for JavaFX on Gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0}}},{"hash":"338fef484eaef6cd14ca1d144c6fcd733c154efd","isMergeCommit":false,"messageTitle":"Add .fxml files for GUI","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":35,"deletions":0}}},{"hash":"80928a43529db0902b08caceaf591669e27349e5","isMergeCommit":false,"messageTitle":"Add Main and MainWindow class","messageBody":"These class facilitates the\n","fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":0}}},{"hash":"ec7a712f260d0bc2d8dfa71ae228d2ed9a60cb38","isMergeCommit":false,"messageTitle":"Add Launcher class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"26e13ebfaa73cb8cf3d322b5a6c43a2b0d571d5f","isMergeCommit":false,"messageTitle":"Change parseCommand to return String","messageBody":"I am aware that this is not an ideal way of doing things, since parseCommand is not supposed to interact with UI directly or return anything. However, given the scope of the project and the amount of time I want to spend here, I believe this amendment is fine for now. It is not good practice.\n","fileTypesAndContributionMap":{"java":{"insertions":104,"deletions":28}}},{"hash":"a0582c465697e88a3772f5e35285f2524cbe7c47","isMergeCommit":false,"messageTitle":"Add Javadocs for Launcher","messageBody":"","tags":["Level-10","A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}}]},{"date":"2024-02-15","commitResults":[{"hash":"60a66e2cb14a9a3a1c2f1aa51d410b4ebf270e7f","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":37,"deletions":24}}},{"hash":"0313b37f09a1325c97c13430cb610e47168f2fe7","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]},{"date":"2024-02-20","commitResults":[{"hash":"235f6f3db3e3fec55378fb63b8c133b29fe74db9","isMergeCommit":false,"messageTitle":"Add assert statements","messageBody":"","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"iamtr":{"java":957,"md":32,"fxml":35,"sh":0,"bat":0,"gradle":17,"txt":7}},"authorContributionVariance":{"iamtr":26175.473},"authorDisplayNameMap":{"iamtr":"CS2103T-F10-1 ONG .. JET"}}
