[{"path":"src/main/java/DeadLineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThitipatC"},"content":"public class DeadLineTask extends Task{","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"ThitipatC"},"content":"    private String deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"ThitipatC"},"content":"    public DeadLineTask(String dl,String task){","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"ThitipatC"},"content":"        super(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"ThitipatC"},"content":"        deadline \u003d dl;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ThitipatC"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ThitipatC"},"content":"    public String toString(){","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ThitipatC"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline+\")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ThitipatC"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ThitipatC":11}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThitipatC"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"ThitipatC"},"content":"    private String startTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"ThitipatC"},"content":"    private String endTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"ThitipatC"},"content":"    public EventTask(String startTime, String endTime, String task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"ThitipatC"},"content":"        super(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ThitipatC"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ThitipatC"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ThitipatC"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"ThitipatC"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"ThitipatC"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"ThitipatC"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ThitipatC":15}},{"path":"src/main/java/HASSTNT.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"ThitipatC"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"ThitipatC"},"content":"public class HASSTNT {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"ThitipatC"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"ThitipatC"},"content":"    private final ToDoList l;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ThitipatC"},"content":"    private static final String welcome_message \u003d \"HASSNT:\\n\" +","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"ThitipatC"},"content":"            \"Hello! I\u0027m HASSTNT \" + \"What can I do for you?\";","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"ThitipatC"},"content":"    private static final String goodbye_message \u003d \"HASSNT:\\n\" +","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"ThitipatC"},"content":"            \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"ThitipatC"},"content":"    public HASSTNT() {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"ThitipatC"},"content":"        // initialize a scanner","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"ThitipatC"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"ThitipatC"},"content":"        l \u003d new ToDoList();","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"ThitipatC"},"content":"    public void startConversation() {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"ThitipatC"},"content":"        // Method containing the conversation logic","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ThitipatC"},"content":"        System.out.println(welcome_message);","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"ThitipatC"},"content":"        String input;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"ThitipatC"},"content":"        while (true) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"ThitipatC"},"content":"            input \u003d scanner.nextLine().toLowerCase();","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"ThitipatC"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"ThitipatC"},"content":"                switch (input) {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"ThitipatC"},"content":"                    case \"bye\":","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"ThitipatC"},"content":"                        handleByeCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"ThitipatC"},"content":"                        return;","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"ThitipatC"},"content":"                    case \"list\":","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"ThitipatC"},"content":"                        l.showLists();","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"ThitipatC"},"content":"                        break;","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"ThitipatC"},"content":"                    default:","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"ThitipatC"},"content":"                        if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"ThitipatC"},"content":"                            handleMarkCommand(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"ThitipatC"},"content":"                        } else if (input.startsWith(\"remove\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"ThitipatC"},"content":"                            handleRemoveCommand(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"ThitipatC"},"content":"                        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"ThitipatC"},"content":"                            handleUnmarkCommand(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"ThitipatC"},"content":"                        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"ThitipatC"},"content":"                            l.addToList(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"ThitipatC"},"content":"                        }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"ThitipatC"},"content":"                        break;","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"ThitipatC"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"ThitipatC"},"content":"            } catch(Exception e){","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"ThitipatC"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"ThitipatC"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"ThitipatC"},"content":"    private void handleByeCommand() {","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"ThitipatC"},"content":"        System.out.println(goodbye_message);","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"ThitipatC"},"content":"    private void handleMarkCommand(String input) throws IllegalArgumentException{","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"ThitipatC"},"content":"        String numberString \u003d input.substring(\"mark\".length()).trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"ThitipatC"},"content":"        if (!numberString.matches(\"\\\\d+\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"ThitipatC"},"content":"            throw new IllegalArgumentException(\"Invalid input. Please enter mark followed by an integer.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"ThitipatC"},"content":"        int index \u003d Integer.parseInt(numberString);","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"ThitipatC"},"content":"        l.showMark(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"ThitipatC"},"content":"    private void handleUnmarkCommand(String input) throws IllegalArgumentException {","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"ThitipatC"},"content":"        {","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"ThitipatC"},"content":"            String numberString \u003d input.substring(\"unmark\".length()).trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"ThitipatC"},"content":"            if (!numberString.matches(\"\\\\d+\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"ThitipatC"},"content":"                throw new IllegalArgumentException(\"Invalid input. Please enter unmark followed by an integer.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"ThitipatC"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"ThitipatC"},"content":"            int index \u003d Integer.parseInt(numberString);","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"ThitipatC"},"content":"            l.showUnmark(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"ThitipatC"},"content":"        private void handleRemoveCommand(String input) throws IllegalArgumentException {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"ThitipatC"},"content":"            String numberString \u003d input.substring(\"remove\".length()).trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"ThitipatC"},"content":"            if (!numberString.matches(\"\\\\d+\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"ThitipatC"},"content":"                throw new IllegalArgumentException(\"Invalid input. Please enter remove followed by an integer.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"ThitipatC"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"ThitipatC"},"content":"            int index \u003d Integer.parseInt(numberString.trim());","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"ThitipatC"},"content":"            l.removeTask(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ThitipatC":85}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThitipatC"},"content":"public class Main {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"ThitipatC"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"ThitipatC"},"content":"        HASSTNT c \u003d new HASSTNT();","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"ThitipatC"},"content":"        c.startConversation();","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ThitipatC":8}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThitipatC"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"ThitipatC"},"content":"    private final String  name;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"ThitipatC"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"ThitipatC"},"content":"    public Task(String x){","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"ThitipatC"},"content":"        name \u003d x;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ThitipatC"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ThitipatC"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"ThitipatC"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"ThitipatC"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"ThitipatC"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"ThitipatC"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"ThitipatC"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + name;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"ThitipatC"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ThitipatC":20}},{"path":"src/main/java/ToDoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThitipatC"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"ThitipatC"},"content":"public class ToDoList {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"ThitipatC"},"content":"    private final ArrayList\u003cTask\u003e  tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ThitipatC"},"content":"    public void addToList(String s) throws IllegalArgumentException{","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"ThitipatC"},"content":"        //handling empty task","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ThitipatC"},"content":"        if (s.trim().isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ThitipatC"},"content":"            throw new IllegalArgumentException(\"Task cannot be empty. Please enter a valid task.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"ThitipatC"},"content":"        //regex to split type of task and possible dates for non-todo task","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"ThitipatC"},"content":"        String[] parts \u003d s.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"ThitipatC"},"content":"        String taskType \u003d parts[0].toLowerCase();","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"ThitipatC"},"content":"        String taskDescription \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"ThitipatC"},"content":"        switch (taskType) {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"ThitipatC"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"ThitipatC"},"content":"                tasks.add(new ToDoTask(taskDescription));","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"ThitipatC"},"content":"                System.out.println(\"HASSNT:\\n\"+\"Got it. I\u0027ve added this task:  \" + new ToDoTask(taskDescription));","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"ThitipatC"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ThitipatC"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"ThitipatC"},"content":"                //splitting event details from date details (using by)","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"ThitipatC"},"content":"                String[] deadlineParts \u003d taskDescription.split(\"\\\\s+by\\\\s+\", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"ThitipatC"},"content":"                //handling case that does not include by","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"ThitipatC"},"content":"                if (deadlineParts.length !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"ThitipatC"},"content":"                    throw new IllegalArgumentException(\"Invalid deadline format. Please specify the task following by its deadline using \u0027by\u0027 \");","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"ThitipatC"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"ThitipatC"},"content":"                tasks.add(new DeadLineTask(deadlineParts[1], deadlineParts[0]));","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"ThitipatC"},"content":"                System.out.println(\"HASSNT:\\n\" + \"Got it. I\u0027ve added this task:  \" + new DeadLineTask(deadlineParts[1], deadlineParts[0]));","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"ThitipatC"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"ThitipatC"},"content":"            case \"event\":","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"ThitipatC"},"content":"                //splitting event details from date details using whitespace between words and time","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"ThitipatC"},"content":"                String[] eventParts \u003d taskDescription.split(\"\\\\s+(?\u003d\\\\S+(-|\\\\sto\\\\s))\", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"ThitipatC"},"content":"                //handling case that does not include x to y or x-y","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"ThitipatC"},"content":"                if (eventParts.length !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"ThitipatC"},"content":"                    throw new IllegalArgumentException(\"Invalid event format. Please specify the task following by its event time using \\\"time1 to time2 or time1-time2\\\"\");","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"ThitipatC"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"ThitipatC"},"content":"                String[] eventTimingParts \u003d eventParts[1].split(\"(-|\\\\s+to\\\\s+)\", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"ThitipatC"},"content":"//                if (eventTimingParts.length !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"ThitipatC"},"content":"//                    System.out.println(\"Invalid event format. Please specify the event using to\");","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"ThitipatC"},"content":"//                    return;","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"ThitipatC"},"content":"//                }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"ThitipatC"},"content":"                tasks.add(new EventTask(eventTimingParts[0], eventTimingParts[1], eventParts[0]));","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"ThitipatC"},"content":"                System.out.println(\"HASSNT:\\n\"+\"Got it. I\u0027ve added this task:  \" + new EventTask(eventTimingParts[0], eventTimingParts[1], eventParts[0]));","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"ThitipatC"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"ThitipatC"},"content":"            default:","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"ThitipatC"},"content":"                throw new IllegalArgumentException(\"Invalid input. To add a task to the list, please type \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027 follow by your task requirement to add task to your list. \");","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"ThitipatC"},"content":"        System.out.println(\"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"ThitipatC"},"content":"    public void showLists(){","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"ThitipatC"},"content":"        if (tasks.size() \u003d\u003d 0){","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"ThitipatC"},"content":"            System.out.println( \"HASSNT:\\n\" + \"NO TASKS IN TO DO LIST 🎉\");","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"ThitipatC"},"content":"        } else{","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"ThitipatC"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"ThitipatC"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"ThitipatC"},"content":"            sb.append(i + 1).append(\u0027.\u0027).append(\"\\t\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"ThitipatC"},"content":"            System.out.println(\"HASSNT:\\n\" + \"Here are the tasks in your list:\\n \"+ sb);","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"ThitipatC"},"content":"    public void removeTask(int index) throws IllegalArgumentException{","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"ThitipatC"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"ThitipatC"},"content":"            throw new IllegalArgumentException(\"Please input valid number. to see the available number(s) of your task type list\");","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"ThitipatC"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"ThitipatC"},"content":"            String t \u003d tasks.get(index - 1).toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"ThitipatC"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"ThitipatC"},"content":"            System.out.println(\"HASSNT:\\n\" + \"Noted. I\u0027ve removed this task: \" + t);","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"ThitipatC"},"content":"    public void showMark(int taskNumber) throws IllegalArgumentException{","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"ThitipatC"},"content":"        //handling invalid index of taskNumber","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"ThitipatC"},"content":"        if (!isValidIndex(taskNumber)) {","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"ThitipatC"},"content":"            throw new IllegalArgumentException(\"Please input valid number. to see the available number(s) of your task type list\");","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"ThitipatC"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"ThitipatC"},"content":"            Task t \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"ThitipatC"},"content":"            t.markAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"ThitipatC"},"content":"            System.out.println(\"HASSNT:\\n\" + \"Nice! I\u0027ve marked this task as done: \" + t);","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"ThitipatC"},"content":"    public void showUnmark(int taskNumber) throws IllegalArgumentException{","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"ThitipatC"},"content":"        //handling invalid index of taskNumber","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"ThitipatC"},"content":"        if (!isValidIndex(taskNumber)) {","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"ThitipatC"},"content":"            throw new IllegalArgumentException(\"Please input valid number. to see the available number(s) for your task type list\");","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"ThitipatC"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"ThitipatC"},"content":"            Task t \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"ThitipatC"},"content":"            t.markAsNotDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"ThitipatC"},"content":"            System.out.println(\"HASSNT:\\n\" +  \"OK, I\u0027ve marked this task as not done yet:\\n\" + t);","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"ThitipatC"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"ThitipatC"},"content":"    private boolean isValidIndex(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"ThitipatC"},"content":"        return index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d tasks.size();","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"ThitipatC"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ThitipatC":103}},{"path":"src/main/java/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThitipatC"},"content":"public class ToDoTask extends Task{","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"ThitipatC"},"content":"    public ToDoTask(String task){","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"ThitipatC"},"content":"        super(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"ThitipatC"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ThitipatC"},"content":"    public String toString(){","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ThitipatC"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ThitipatC"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ThitipatC"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ThitipatC":10}},{"path":"src/text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ThitipatC"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"ThitipatC"},"content":"list","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ThitipatC":2}},{"path":"src/text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"ThitipatC"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"ThitipatC"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"ThitipatC"},"content":"if [ ! -d \"./bin\" ]","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"ThitipatC"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"ThitipatC"},"content":"    mkdir ./bin","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ThitipatC"},"content":"fi","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ThitipatC"},"content":"# delete output from previous run","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ThitipatC"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ThitipatC"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"ThitipatC"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"ThitipatC"},"content":"fi","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"ThitipatC"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"ThitipatC"},"content":"if ! javac -cp ../main/java -Xlint:none -d ./bin ../main/java/*.java","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"ThitipatC"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"ThitipatC"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"ThitipatC"},"content":"    exit 1","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"ThitipatC"},"content":"fi","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ThitipatC"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"ThitipatC"},"content":"java -classpath ./bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"ThitipatC"},"content":"# compare the output to the expected output","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"ThitipatC"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"ThitipatC"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"ThitipatC"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"ThitipatC"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"ThitipatC"},"content":"    exit 0","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"ThitipatC"},"content":"else","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"ThitipatC"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"ThitipatC"},"content":"    exit 1","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"ThitipatC"},"content":"fi","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"ThitipatC"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ThitipatC":35}}]
