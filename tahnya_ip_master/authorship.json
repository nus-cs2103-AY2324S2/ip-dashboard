[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"    public static class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"        protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"        protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"        protected int index;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"        public Task(String description, int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"            this.index \u003d index;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"            return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"        public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"            return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"        public String commandMark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"            String response \u003d this.isDone \u003d\u003d true","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"                    ? \"Task \" + (this.index + 1) + \" is already done! Yay!\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"                    : \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"            return response + \"  \" + toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"        public String commandUnmark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"            String response \u003d this.isDone \u003d\u003d false","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"                    ? \"Task \" + (this.index + 1) + \" is not done yet!\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"                    : \"OK, I\u0027ve marked this task as undone:\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"            return response + \"  \" + toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"        public void editIndex(int x) {","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"            this.index \u003d x;","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"        public void editDescription(String input) {","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"            this.description \u003d input;","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"    public static class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"        public ToDo(String description, int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"            super(description, index);","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"        @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"tahnya"},"content":"        public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"tahnya"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"tahnya"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"tahnya"},"content":"        protected String by;","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"tahnya"},"content":"        public Deadline(String description, String by, int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"tahnya"},"content":"            super(description, index);","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"tahnya"},"content":"            this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"tahnya"},"content":"        @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"tahnya"},"content":"        public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"tahnya"},"content":"            return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"tahnya"},"content":"    public static class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"tahnya"},"content":"        protected String start;","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"tahnya"},"content":"        protected String end;","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"tahnya"},"content":"        public Event(String description, String start, String end, int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"tahnya"},"content":"            super(description, index);","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"tahnya"},"content":"            this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"tahnya"},"content":"            this.end \u003d end;","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"tahnya"},"content":"        @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"tahnya"},"content":"        public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"tahnya"},"content":"            return \"[E]\" + super.toString() + \"(from: \" + start +  \" to: \" + end + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"tahnya"},"content":"    private static String logo \u003d \" _______  __                       __ \\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"tahnya"},"content":"            + \"|     __||__|.-----..-----..---.-.|  |\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"tahnya"},"content":"            + \"|__     ||  ||  _  ||     ||  _  ||  |\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"tahnya"},"content":"            + \"|_______||__||___  ||__|__||___._||__|\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"tahnya"},"content":"            + \"             |_____|                  \\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"tahnya"},"content":"    private static String div \u003d \"\\n\" + \"~~**~~\";","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"tahnya"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"tahnya"},"content":"    private static Task[] taskList \u003d new Task[100];","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"tahnya"},"content":"    private static int index \u003d 0;","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"tahnya"},"content":"     * Checks with the user if the input is a typo of a command.","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"tahnya"},"content":"     * @param input Input collected from the user.","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"tahnya"},"content":"     * @param command Command to check.","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"tahnya"},"content":"     * @return True if input is a typo of the command.","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"tahnya"},"content":"    public static boolean checkCommandTypo(String input, String command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"tahnya"},"content":"        if(!input.equals(command)) {","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"tahnya"},"content":"            signalSays(\"Did you mean \u0027\"+ command + \"\u0027? (y/n)\");","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"tahnya"},"content":"            String isCommandCheck \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"tahnya"},"content":"            if(isCommandCheck.equals(\"y\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"tahnya"},"content":"                return true;","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"tahnya"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"tahnya"},"content":"                return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"tahnya"},"content":"        return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"tahnya"},"content":"     * Check if the input is a permutation of the original.","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"tahnya"},"content":"     * @param input Input collected from the user.","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"tahnya"},"content":"     * @param original String to compare the input to.","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"tahnya"},"content":"     * @return True if input is a permutation of original.","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"tahnya"},"content":"    public static boolean isPermutationMatch(String input, String original) {","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"tahnya"},"content":"        // Check if user input is a permutation match","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"tahnya"},"content":"        char[] userInputArray \u003d input.toCharArray();","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"tahnya"},"content":"        char[] originalArray \u003d original.toCharArray();","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"tahnya"},"content":"        // Sort the arrays to compare","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"tahnya"},"content":"        java.util.Arrays.sort(userInputArray);","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"tahnya"},"content":"        java.util.Arrays.sort(originalArray);","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"tahnya"},"content":"        return java.util.Arrays.equals(userInputArray, originalArray);","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"tahnya"},"content":"     * Adds input to the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"tahnya"},"content":"     * @param input Input collected from the user.","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"tahnya"},"content":"    public static void taskAdded(String input) {","lastModifiedDate":"2024-01-25"},{"lineNumber":148,"author":{"gitId":"tahnya"},"content":"        taskList[index] \u003d new Task(input, index);","lastModifiedDate":"2024-01-25"},{"lineNumber":149,"author":{"gitId":"tahnya"},"content":"        index +\u003d 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"tahnya"},"content":"        signalSays(\"Added: \" + input);","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"tahnya"},"content":"    public static void commandAddTask(String type, String input) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"tahnya"},"content":"        if (input \u003d\u003d \"\") {","lastModifiedDate":"2024-01-25"},{"lineNumber":155,"author":{"gitId":"tahnya"},"content":"            throw new DukeException(\"Looks like you haven\u0027t entered a task description!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":156,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":157,"author":{"gitId":"tahnya"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":158,"author":{"gitId":"tahnya"},"content":"            taskList[index] \u003d new ToDo(input, index);","lastModifiedDate":"2024-01-25"},{"lineNumber":159,"author":{"gitId":"tahnya"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":160,"author":{"gitId":"tahnya"},"content":"            String command[] \u003d input.split(\"/\");","lastModifiedDate":"2024-01-25"},{"lineNumber":161,"author":{"gitId":"tahnya"},"content":"            if (type.equals(\"deadline\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":162,"author":{"gitId":"tahnya"},"content":"                if (command.length \u003c 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":163,"author":{"gitId":"tahnya"},"content":"                    throw new DukeException(\"Looks like you haven\u0027t added a deadline!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":164,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":165,"author":{"gitId":"tahnya"},"content":"                String deadline \u003d command[1] !\u003d null \u0026\u0026 command[1].length() \u003e 3 ? command[1].substring(3) : command[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":166,"author":{"gitId":"tahnya"},"content":"                taskList[index] \u003d new Deadline(command[0], deadline, index);","lastModifiedDate":"2024-01-25"},{"lineNumber":167,"author":{"gitId":"tahnya"},"content":"            } else if (type.equals(\"event\")){","lastModifiedDate":"2024-01-25"},{"lineNumber":168,"author":{"gitId":"tahnya"},"content":"                if (command.length \u003c 3) {","lastModifiedDate":"2024-01-25"},{"lineNumber":169,"author":{"gitId":"tahnya"},"content":"                    throw new DukeException(\"Looks like you haven\u0027t added a start or end time!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":170,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"tahnya"},"content":"                String start \u003d command[1] !\u003d null \u0026\u0026 command[1].length() \u003e 5 ? command[1].substring(5): command[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":172,"author":{"gitId":"tahnya"},"content":"                String end \u003d command[2] !\u003d null \u0026\u0026 command[2].length() \u003e 3 ? command[2].substring(3) : command[2];","lastModifiedDate":"2024-01-25"},{"lineNumber":173,"author":{"gitId":"tahnya"},"content":"                taskList[index] \u003d new Event(command[0], start, end, index);","lastModifiedDate":"2024-01-25"},{"lineNumber":174,"author":{"gitId":"tahnya"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":175,"author":{"gitId":"tahnya"},"content":"                taskList[index] \u003d new Task(input, index);","lastModifiedDate":"2024-01-25"},{"lineNumber":176,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":177,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":178,"author":{"gitId":"tahnya"},"content":"        taskAdded((taskList[index]));","lastModifiedDate":"2024-01-25"},{"lineNumber":179,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":180,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":181,"author":{"gitId":"tahnya"},"content":"    public static void taskAdded(Task t) {","lastModifiedDate":"2024-01-25"},{"lineNumber":182,"author":{"gitId":"tahnya"},"content":"        index +\u003d 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":183,"author":{"gitId":"tahnya"},"content":"        signalSays(\"Got it! I\u0027ve added this task to your list: \\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":184,"author":{"gitId":"tahnya"},"content":"                + \"  \" + t.toString() + \"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":185,"author":{"gitId":"tahnya"},"content":"                + \"Now you have \" + (t.index + 1) + (t.index \u003d\u003d 0 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":186,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":187,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":188,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":189,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":190,"author":{"gitId":"tahnya"},"content":"     * Prints the list of inputs collected from the user.","lastModifiedDate":"2024-01-25"},{"lineNumber":191,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":192,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":193,"author":{"gitId":"tahnya"},"content":"    public static void commandList() {","lastModifiedDate":"2024-01-25"},{"lineNumber":194,"author":{"gitId":"tahnya"},"content":"        System.out.println(div);","lastModifiedDate":"2024-01-25"},{"lineNumber":195,"author":{"gitId":"tahnya"},"content":"        System.out.println(\"Here is your tasklist!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":196,"author":{"gitId":"tahnya"},"content":"        for (int i \u003d 0; i \u003c index; i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":197,"author":{"gitId":"tahnya"},"content":"            System.out.println((i + 1) + \". \" + taskList[i].toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":198,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":199,"author":{"gitId":"tahnya"},"content":"        System.out.println(div);","lastModifiedDate":"2024-01-25"},{"lineNumber":200,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":201,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":202,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-01-26"},{"lineNumber":203,"author":{"gitId":"tahnya"},"content":"     * Deletes the task from the list and shifts the subsequent tasks forward.","lastModifiedDate":"2024-01-26"},{"lineNumber":204,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-01-26"},{"lineNumber":205,"author":{"gitId":"tahnya"},"content":"     * @param t The task to be deleted.","lastModifiedDate":"2024-01-26"},{"lineNumber":206,"author":{"gitId":"tahnya"},"content":"     * @throws DukeException","lastModifiedDate":"2024-01-26"},{"lineNumber":207,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-01-26"},{"lineNumber":208,"author":{"gitId":"tahnya"},"content":"    public static void commandDelete(Task t) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":209,"author":{"gitId":"tahnya"},"content":"        if (index \u003d\u003d 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":210,"author":{"gitId":"tahnya"},"content":"            throw new DukeException(\"Looks like there\u0027s nothing here to remove. Better get on those tasks!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":211,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":212,"author":{"gitId":"tahnya"},"content":"        if (t.index \u003e\u003d 0 \u0026\u0026 t.index \u003c\u003d index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":213,"author":{"gitId":"tahnya"},"content":"            // Shift the remaining elements up","lastModifiedDate":"2024-01-25"},{"lineNumber":214,"author":{"gitId":"tahnya"},"content":"            for (int i \u003d t.index; i \u003c\u003d index - 1; i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":215,"author":{"gitId":"tahnya"},"content":"                // Adjust the index of each element","lastModifiedDate":"2024-01-25"},{"lineNumber":216,"author":{"gitId":"tahnya"},"content":"                taskList[i] \u003d taskList[i + 1];","lastModifiedDate":"2024-01-25"},{"lineNumber":217,"author":{"gitId":"tahnya"},"content":"                taskList[i].index \u003d i;","lastModifiedDate":"2024-01-26"},{"lineNumber":218,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":219,"author":{"gitId":"tahnya"},"content":"            index -\u003d 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":220,"author":{"gitId":"tahnya"},"content":"            signalSays(\"Noted, I\u0027ve deleted this task from your list: \\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":221,"author":{"gitId":"tahnya"},"content":"                    + \"  \" + t.toString() + \"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":222,"author":{"gitId":"tahnya"},"content":"                    + \"Now you have \" + (index) + (index \u003d\u003d 0 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":223,"author":{"gitId":"tahnya"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":224,"author":{"gitId":"tahnya"},"content":"            throw new DukeException(\"I\u0027d say shoot for the stars but in this case there are only \"","lastModifiedDate":"2024-01-25"},{"lineNumber":225,"author":{"gitId":"tahnya"},"content":"                    + (index - 1) + ((index - 1) \u003d\u003d 1 ? \" item\" : \" items\") + \" in this list\");","lastModifiedDate":"2024-01-25"},{"lineNumber":226,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":227,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":228,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":229,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-01-26"},{"lineNumber":230,"author":{"gitId":"tahnya"},"content":"     * Handles negative and out-of-bounds inputs for deleting tasks.","lastModifiedDate":"2024-01-26"},{"lineNumber":231,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-01-26"},{"lineNumber":232,"author":{"gitId":"tahnya"},"content":"     * @param x","lastModifiedDate":"2024-01-26"},{"lineNumber":233,"author":{"gitId":"tahnya"},"content":"     * @throws DukeException","lastModifiedDate":"2024-01-26"},{"lineNumber":234,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-01-26"},{"lineNumber":235,"author":{"gitId":"tahnya"},"content":"    public static void commandDeleteInvalid(int x) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":236,"author":{"gitId":"tahnya"},"content":"        if (x \u003c 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":237,"author":{"gitId":"tahnya"},"content":"            throw new DukeException(\"Negative numbers might exist in maths but not in this list!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":238,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":239,"author":{"gitId":"tahnya"},"content":"        if (x \u003e 100) {","lastModifiedDate":"2024-01-25"},{"lineNumber":240,"author":{"gitId":"tahnya"},"content":"            throw new DukeException(\"Oops! You only have \" + (index) + (index \u003d\u003d 0 ? \" task\" : \" tasks\") + \". Better get on it then!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":241,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":242,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":243,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":244,"author":{"gitId":"tahnya"},"content":"    public static void commandBlah() throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":245,"author":{"gitId":"tahnya"},"content":"        throw new DukeException(\"All words are made up, but this one seems more nonsensical than usual. Try something else!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":246,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":247,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":248,"author":{"gitId":"tahnya"},"content":"    public static void commandSomethingelse() throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":249,"author":{"gitId":"tahnya"},"content":"        throw new DukeException(\"Haha, very funny. Nice try my guy!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":250,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":251,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":252,"author":{"gitId":"tahnya"},"content":"    public static void commandHelp() {","lastModifiedDate":"2024-01-26"},{"lineNumber":253,"author":{"gitId":"tahnya"},"content":"        signalSays(\"Note: Entering any text besides the following creates a new generic task. \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":254,"author":{"gitId":"tahnya"},"content":"                \"The round brackets indicate you can enter any text, square brackets indicate you should enter a number, without the brackets. \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":255,"author":{"gitId":"tahnya"},"content":"                \"\\nCREATING TASKS: \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":256,"author":{"gitId":"tahnya"},"content":"                \"* todo () -- creates a To Do task, which has no deadline. \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":257,"author":{"gitId":"tahnya"},"content":"                \"* deadline () \\\\by () -- creates a Deadline task, indicate its deadline after \u0027\\\\by\u0027. \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":258,"author":{"gitId":"tahnya"},"content":"                \"* event () \\\\from () \\\\to () -- creates an Event task, indicate its start and end after \u0027\\\\from\u0027 and \u0027\\\\to\u0027. \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":259,"author":{"gitId":"tahnya"},"content":"                \"\\nCOMMANDS: \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":260,"author":{"gitId":"tahnya"},"content":"                \"* list -- prints a numbered list of the tasks created, in input order.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":261,"author":{"gitId":"tahnya"},"content":"                \"* mark [] -- marks the task at index [] as completed. \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":262,"author":{"gitId":"tahnya"},"content":"                \"* unmark [] -- marks the task at index [] as uncompleted. \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":263,"author":{"gitId":"tahnya"},"content":"                \"* delete [] -- removes the task at index [] from the list.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":264,"author":{"gitId":"tahnya"},"content":"                \"* bye -- exits the program.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":265,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":266,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":267,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":268,"author":{"gitId":"tahnya"},"content":"     * Prints Signal\u0027s response enclosed in the dividers.","lastModifiedDate":"2024-01-25"},{"lineNumber":269,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":270,"author":{"gitId":"tahnya"},"content":"     * @param response The message that is printed.","lastModifiedDate":"2024-01-25"},{"lineNumber":271,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":272,"author":{"gitId":"tahnya"},"content":"    public static void signalSays(String response) {","lastModifiedDate":"2024-01-25"},{"lineNumber":273,"author":{"gitId":"tahnya"},"content":"        System.out.println(div);","lastModifiedDate":"2024-01-25"},{"lineNumber":274,"author":{"gitId":"tahnya"},"content":"        System.out.println(response);","lastModifiedDate":"2024-01-25"},{"lineNumber":275,"author":{"gitId":"tahnya"},"content":"        System.out.println(div);","lastModifiedDate":"2024-01-25"},{"lineNumber":276,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":277,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":278,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":280,"author":{"gitId":"tahnya"},"content":"        System.out.println(\"Hello! My name is\\n\" + logo);","lastModifiedDate":"2024-01-25"},{"lineNumber":281,"author":{"gitId":"tahnya"},"content":"        System.out.println(\"How can I help?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":282,"author":{"gitId":"tahnya"},"content":"        System.out.println(\"Enter \u0027help\u0027 to see the list of commands available :D\");","lastModifiedDate":"2024-01-26"},{"lineNumber":283,"author":{"gitId":"tahnya"},"content":"        System.out.println(div);","lastModifiedDate":"2024-01-25"},{"lineNumber":284,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":285,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":286,"author":{"gitId":"tahnya"},"content":"        while(true) {","lastModifiedDate":"2024-01-25"},{"lineNumber":287,"author":{"gitId":"tahnya"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":288,"author":{"gitId":"tahnya"},"content":"            String[] inputArray \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-25"},{"lineNumber":289,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":290,"author":{"gitId":"tahnya"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":291,"author":{"gitId":"tahnya"},"content":"                // Exit program","lastModifiedDate":"2024-01-25"},{"lineNumber":292,"author":{"gitId":"tahnya"},"content":"                System.out.println(div);","lastModifiedDate":"2024-01-25"},{"lineNumber":293,"author":{"gitId":"tahnya"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":294,"author":{"gitId":"tahnya"},"content":"            } else if (userInput.equals(\"\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":295,"author":{"gitId":"tahnya"},"content":"                // input is blank","lastModifiedDate":"2024-01-25"},{"lineNumber":296,"author":{"gitId":"tahnya"},"content":"                signalSays(\"Brevity is the soul of wit, but you have to tell me something still!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":297,"author":{"gitId":"tahnya"},"content":"            } else if (inputArray.length \u003d\u003d 2 \u0026\u0026 inputArray[0].equals(\"mark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":298,"author":{"gitId":"tahnya"},"content":"                // Mark item at index as done","lastModifiedDate":"2024-01-25"},{"lineNumber":299,"author":{"gitId":"tahnya"},"content":"                int itemIndex \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":300,"author":{"gitId":"tahnya"},"content":"                signalSays(taskList[itemIndex].commandMark());","lastModifiedDate":"2024-01-25"},{"lineNumber":301,"author":{"gitId":"tahnya"},"content":"            } else if (inputArray.length \u003d\u003d 2 \u0026\u0026 inputArray[0].equals(\"unmark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":302,"author":{"gitId":"tahnya"},"content":"                // Mark item at index as done","lastModifiedDate":"2024-01-25"},{"lineNumber":303,"author":{"gitId":"tahnya"},"content":"                int itemIndex \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":304,"author":{"gitId":"tahnya"},"content":"                signalSays(taskList[itemIndex].commandUnmark());","lastModifiedDate":"2024-01-25"},{"lineNumber":305,"author":{"gitId":"tahnya"},"content":"            } else if (inputArray.length \u003d\u003d 2 \u0026\u0026 (isPermutationMatch(inputArray[0], \"mark\") || isPermutationMatch(inputArray[0], \"unmark\"))) {","lastModifiedDate":"2024-01-25"},{"lineNumber":306,"author":{"gitId":"tahnya"},"content":"                // check typo of \"mark\" or \"unmark\"","lastModifiedDate":"2024-01-25"},{"lineNumber":307,"author":{"gitId":"tahnya"},"content":"                if (checkCommandTypo(inputArray[0], \"mark\")) { // command mark typo","lastModifiedDate":"2024-01-25"},{"lineNumber":308,"author":{"gitId":"tahnya"},"content":"                    int itemIndex \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":309,"author":{"gitId":"tahnya"},"content":"                    signalSays(taskList[itemIndex].commandMark());","lastModifiedDate":"2024-01-25"},{"lineNumber":310,"author":{"gitId":"tahnya"},"content":"                } else if (checkCommandTypo(inputArray[0], \"unmark\")) { // command unmark typo","lastModifiedDate":"2024-01-25"},{"lineNumber":311,"author":{"gitId":"tahnya"},"content":"                    int itemIndex \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":312,"author":{"gitId":"tahnya"},"content":"                    signalSays(taskList[itemIndex].commandUnmark());","lastModifiedDate":"2024-01-25"},{"lineNumber":313,"author":{"gitId":"tahnya"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":314,"author":{"gitId":"tahnya"},"content":"                    signalSays(\"Do you want to add \u0027\" + userInput + \"\u0027? (y/n)\");","lastModifiedDate":"2024-01-25"},{"lineNumber":315,"author":{"gitId":"tahnya"},"content":"                    String addCommandCheck \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":316,"author":{"gitId":"tahnya"},"content":"                    if (addCommandCheck.equals(\"n\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":317,"author":{"gitId":"tahnya"},"content":"                        signalSays(\"What else can I help you with?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":318,"author":{"gitId":"tahnya"},"content":"                    } else if (addCommandCheck.equals(\"y\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":319,"author":{"gitId":"tahnya"},"content":"                        taskAdded(userInput);","lastModifiedDate":"2024-01-25"},{"lineNumber":320,"author":{"gitId":"tahnya"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":321,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":322,"author":{"gitId":"tahnya"},"content":"            } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":323,"author":{"gitId":"tahnya"},"content":"                // command list","lastModifiedDate":"2024-01-25"},{"lineNumber":324,"author":{"gitId":"tahnya"},"content":"                if (taskList[0] \u003d\u003d null) {","lastModifiedDate":"2024-01-25"},{"lineNumber":325,"author":{"gitId":"tahnya"},"content":"                    signalSays(\"Oops, looks like you haven\u0027t added any tasks!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":326,"author":{"gitId":"tahnya"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":327,"author":{"gitId":"tahnya"},"content":"                    commandList();","lastModifiedDate":"2024-01-25"},{"lineNumber":328,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":329,"author":{"gitId":"tahnya"},"content":"            } else if (isPermutationMatch(userInput, \"list\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":330,"author":{"gitId":"tahnya"},"content":"                // check typo of command list","lastModifiedDate":"2024-01-25"},{"lineNumber":331,"author":{"gitId":"tahnya"},"content":"                if (checkCommandTypo(userInput, \"list\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":332,"author":{"gitId":"tahnya"},"content":"                    commandList();","lastModifiedDate":"2024-01-25"},{"lineNumber":333,"author":{"gitId":"tahnya"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":334,"author":{"gitId":"tahnya"},"content":"                    signalSays(\"Do you want to add \" + userInput + \"? (y/n)\");","lastModifiedDate":"2024-01-25"},{"lineNumber":335,"author":{"gitId":"tahnya"},"content":"                    String addCommandCheck \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":336,"author":{"gitId":"tahnya"},"content":"                    if(addCommandCheck.equals(\"n\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":337,"author":{"gitId":"tahnya"},"content":"                        signalSays(\"What else can I help you with?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":338,"author":{"gitId":"tahnya"},"content":"                    } else if(addCommandCheck.equals(\"y\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":339,"author":{"gitId":"tahnya"},"content":"                        taskAdded(userInput);","lastModifiedDate":"2024-01-25"},{"lineNumber":340,"author":{"gitId":"tahnya"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":341,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":342,"author":{"gitId":"tahnya"},"content":"            } else if (inputArray[0].equals(\"todo\") || inputArray[0].equals(\"deadline\") || inputArray[0].equals(\"event\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":343,"author":{"gitId":"tahnya"},"content":"                String task \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, inputArray.length));","lastModifiedDate":"2024-01-25"},{"lineNumber":344,"author":{"gitId":"tahnya"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":345,"author":{"gitId":"tahnya"},"content":"                    commandAddTask(inputArray[0], task);","lastModifiedDate":"2024-01-25"},{"lineNumber":346,"author":{"gitId":"tahnya"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":347,"author":{"gitId":"tahnya"},"content":"                    signalSays(\"WHOOPSIE! \" + e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":348,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":349,"author":{"gitId":"tahnya"},"content":"            } else if (userInput.equals(\"blah\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":350,"author":{"gitId":"tahnya"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":351,"author":{"gitId":"tahnya"},"content":"                    commandBlah();","lastModifiedDate":"2024-01-25"},{"lineNumber":352,"author":{"gitId":"tahnya"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":353,"author":{"gitId":"tahnya"},"content":"                    signalSays(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":354,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":355,"author":{"gitId":"tahnya"},"content":"            } else if (userInput.equals(\"something else\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":356,"author":{"gitId":"tahnya"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":357,"author":{"gitId":"tahnya"},"content":"                    commandSomethingelse();","lastModifiedDate":"2024-01-25"},{"lineNumber":358,"author":{"gitId":"tahnya"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":359,"author":{"gitId":"tahnya"},"content":"                    signalSays(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":360,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":361,"author":{"gitId":"tahnya"},"content":"            } else if (inputArray.length \u003d\u003d 2 \u0026\u0026 inputArray[0].equals(\"delete\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":362,"author":{"gitId":"tahnya"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":363,"author":{"gitId":"tahnya"},"content":"                    int itemIndex \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":364,"author":{"gitId":"tahnya"},"content":"                    if (itemIndex \u003e index - 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":365,"author":{"gitId":"tahnya"},"content":"                        commandDeleteInvalid(101);","lastModifiedDate":"2024-01-25"},{"lineNumber":366,"author":{"gitId":"tahnya"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":367,"author":{"gitId":"tahnya"},"content":"                    if (itemIndex \u003c 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":368,"author":{"gitId":"tahnya"},"content":"                        commandDeleteInvalid(-1);","lastModifiedDate":"2024-01-25"},{"lineNumber":369,"author":{"gitId":"tahnya"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":370,"author":{"gitId":"tahnya"},"content":"                    commandDelete(taskList[itemIndex]);","lastModifiedDate":"2024-01-25"},{"lineNumber":371,"author":{"gitId":"tahnya"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":372,"author":{"gitId":"tahnya"},"content":"                    signalSays(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":373,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":374,"author":{"gitId":"tahnya"},"content":"            } else if (userInput.equals(\"help\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":375,"author":{"gitId":"tahnya"},"content":"                commandHelp();","lastModifiedDate":"2024-01-26"},{"lineNumber":376,"author":{"gitId":"tahnya"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":377,"author":{"gitId":"tahnya"},"content":"                taskAdded(userInput);","lastModifiedDate":"2024-01-25"},{"lineNumber":378,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":379,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":380,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":381,"author":{"gitId":"tahnya"},"content":"        System.out.println(\"Bye! Hope you come back soon :D\");","lastModifiedDate":"2024-01-25"},{"lineNumber":382,"author":{"gitId":"tahnya"},"content":"        System.out.println(div);","lastModifiedDate":"2024-01-25"},{"lineNumber":383,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":386,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":387,"author":{"gitId":"tahnya"},"content":"class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":388,"author":{"gitId":"tahnya"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":389,"author":{"gitId":"tahnya"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":390,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":391,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tahnya":387,"-":4}}]
