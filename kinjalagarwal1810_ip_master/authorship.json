[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kinjalagarwal1810":2,"-":22}},{"path":"data/jamie.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"T | 0 | borrow book","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (IOException ie) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (JamieException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void run() throws IOException{","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"            } catch (JamieException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui.showExitMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"        scanner.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        new Duke(\"data/Jamie.txt\").run();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"kinjalagarwal1810":46,"-":1}},{"path":"src/main/java/duke/JamieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"public class JamieException extends Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"    public JamieException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.command.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"    private String userInput;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Parser(String userInput) {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static Command parse(String userInput) throws JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"        String[] words \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (words.length \u003c 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        String command \u003d words[0].toLowerCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        String details \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        switch (command) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"                return new ExitTaskCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"            case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"                return new ListTasksCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"            case \"done\":","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"                return new CompleteTaskCommand(Integer.parseInt(details));","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"                return new DeleteTaskCommand(Integer.parseInt(details));","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"                if (details.trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"                    throw new JamieException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"                return new AddTaskCommand(new ToDo(details));","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"                String[] deadlineDetails \u003d details.split(\" /by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"                if (deadlineDetails.length !\u003d 2 || deadlineDetails[0].trim().isEmpty() || deadlineDetails[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"                    throw new JamieException(\"OOPS!!! Invalid format for deadline. Please use: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"                return new AddTaskCommand(new Deadline(deadlineDetails[0], deadlineDetails[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"            case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"                String[] eventDetails \u003d details.split(\" /from \");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"                if (eventDetails.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"                    throw new JamieException(\"OOPS!!! Invalid format for event. Please use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"                String[] eventTiming \u003d eventDetails[1].split(\" /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"                if (eventTiming.length !\u003d 2 || eventTiming[0].trim().isEmpty() || eventTiming[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"                    throw new JamieException(\"OOPS!!! Invalid format for event timing. Please use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"                return new AddTaskCommand(new Event(eventDetails[0], eventTiming[0], eventTiming[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"                default:","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"                    throw new JamieException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":64}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final String file;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final String FILE_PATH \u003d \"./data/jamie.txt\";","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Storage(String file) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.file \u003d file;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        File file \u003d new File(this.file);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"            return loadedTasks; // Return an empty list if the file doesn\u0027t exist","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"            String taskString \u003d scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"            String[] splits \u003d taskString.split(\" \\\\| \"); // Splitting each part of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"            switch (splits[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"                case \"T\": {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"                    Task toAdd \u003d new ToDo(splits[2], splits[1].equals(\"1\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"                    loadedTasks.add(toAdd);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"                case \"E\": {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"                    // Assuming splits[2] is the description, splits[3] is the fromDateTime, and splits[4] is the toDateTime","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"                    Task toAdd \u003d new Event(splits[2], splits[3], splits[4], splits[1].equals(\"1\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"                    loadedTasks.add(toAdd);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"                case \"D\": {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"                    // Assuming splits[2] is the description and splits[3] is the byDateTime","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"                    Task toAdd \u003d new Deadline(splits[2], splits[3], splits[1].equals(\"1\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"                    loadedTasks.add(toAdd);","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"                default: {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"                    throw new JamieException(\"Error occurred when reading data from storage file.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"                            + \"Therefore, creating a new task list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"        scanner.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"        return loadedTasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"        FileWriter writer \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"        String textToAdd \u003d convertToString((tasks.getTasks()));","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"        writer.write(textToAdd);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"        writer.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String convertToString(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"        StringBuilder textToAdd \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"        for (Task curr : taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (curr instanceof ToDo) {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"                textToAdd.append(curr.toFileString()).append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"        return textToAdd.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String caseTodo(ToDo todo) {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"        String toReturn \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"        toReturn +\u003d \"T \";","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"        toReturn +\u003d todo.getIsDone() ? \"1 \" : \"0 \";","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"        toReturn +\u003d todo.getDescription() + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"        return toReturn;","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String caseDeadline(Deadline deadline) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"        String toReturn \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"        toReturn +\u003d \"D \";","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"        toReturn +\u003d deadline.getIsDone() ? \"1 \" : \"0 \";","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"        toReturn +\u003d deadline.getDescription() + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"        toReturn +\u003d deadline.getBy() + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"        return toReturn;","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String caseEvent(Event event) {","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"        String toReturn \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"        toReturn +\u003d \"E \";","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"kinjalagarwal1810"},"content":"        toReturn +\u003d event.getIsDone() ? \"1 \" : \"0 \";","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"kinjalagarwal1810"},"content":"        toReturn +\u003d event.getIsDone() + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"kinjalagarwal1810"},"content":"        toReturn +\u003d event.getTo() + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"        toReturn +\u003d event.getFrom() + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"kinjalagarwal1810"},"content":"        return toReturn;","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":105}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void completeTask(int taskIndex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"            Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.out.println(\"Invalid task index.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void listTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.out.println(\"No tasks to display.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"                System.out.println(\" \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"    public int getTasksSize() {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"    // Other methods related to task management","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void loadTasks(List\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.addAll(loadedTasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"    // For example, you can add a method to get a specific task by index","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"            return tasks.get(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"        return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":67}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\");","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\"Error: \" + errorMessage);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\"Error loading tasks from file. Starting with an empty task list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showExitMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d tasks.getTasks();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (taskArrayList.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.out.println(\"The task list is empty.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"            for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"                System.out.println(\" \" + (i + 1) + \". \" + tasks.getTask(i).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showNumTasks(TaskList tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\"Now you have \" + tasks.getTasksSize() + \" tasks in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showMarkAsDoneMessage(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String showMarkAsUndoneMessage(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"Ok, I\u0027ve marked this task as not done yet:\\n\" + task.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showDeleteMessage(Task removedTask, TaskList tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + removedTask.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"        showNumTasks(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showAddTaskMessage(Task newTask, TaskList tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n \" + newTask.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"        showNumTasks(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":60}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Task taskToAdd;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    public AddTaskCommand(Task taskToAdd) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.taskToAdd \u003d taskToAdd;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.addTask(taskToAdd);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui.showAddTaskMessage(taskToAdd, tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":24}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void exit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isExit \u003d !this.isExit;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        return false; // Default implementation, can be overridden by subclasses","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":20}},{"path":"src/main/java/duke/command/CompleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"public class CompleteTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    public CompleteTaskCommand(int taskIndex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.completeTask(this.taskIndex - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui.showMarkAsDoneMessage(tasks.getTask(this.taskIndex - 1));","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":21}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final int taskNum;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    public DeleteTaskCommand(int taskNum) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException{","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        assert this.taskNum \u003e 0 : \"Input task number cannot be less than 1\";","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"        assert this.taskNum \u003c\u003d tasks.getTasksSize()","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"                : \"Input duke.task.Task number cannot be more than total number of Tasks.\";","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        Task toDelete \u003d tasks.getTask(this.taskNum - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.deleteTask(this.taskNum - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui.showDeleteMessage(toDelete, tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":26}},{"path":"src/main/java/duke/command/ExitTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"public class ExitTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"        super.exit();","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    //@Override","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"        return true; // This will signal that it\u0027s time to exit the application","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":17}},{"path":"src/main/java/duke/command/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"    public ListTasksCommand() {}","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage){","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.JamieException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    protected LocalDateTime byDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Deadline(String description, String by) throws JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.byDateTime \u003d parseDateTime(by);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Deadline(String description, String by, boolean isDone) throws JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.byDateTime \u003d parseDateTime(by);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    private LocalDateTime parseDateTime(String by) throws JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Assuming that the date/time format is \"dd/MM/yyyy HHmm\"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"            return LocalDateTime.parse(by, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"Invaild date format. Please use \u0027dd/MM/yyyy HHmm\u0027.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.byDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"D | \" + (getIsDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + byDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"    protected LocalDateTime fromDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"    protected LocalDateTime toDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.fromDateTime \u003d parseDateTime(from);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.toDateTime \u003d parseDateTime(to);","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.fromDateTime \u003d parseDateTime(from);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.toDateTime \u003d parseDateTime(to);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    private LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Assuming that the date/time format is \"dd/MM/yyyy HHmm\"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"        return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.toDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"    public  LocalDateTime getFrom() {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.fromDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        return  \"[E]\" + super.toString() +","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"                \" (from: \" + fromDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) +","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"                \" to: \" + toDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"E | \" + (getIsDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"                fromDateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")) + \" | \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"                toDateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"filestring\";","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":47}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.JamieException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"    public ToDo(String description)  throws JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"The description of a todo task cannot be empty.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"T | \" + (getIsDone() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"todo borrow book","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"todo buy groceries","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"event project meeting /from 7pm /to 8pm","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"deadline assignment /by sun 5pm","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"event dinner /from 6pm /to 10pm","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"mark 2","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"mark 3","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"list","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"kinjalagarwal1810":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kinjalagarwal1810":1,"-":20}}]
