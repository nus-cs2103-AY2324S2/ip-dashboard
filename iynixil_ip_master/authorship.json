[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"    // id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"// checkstyle {","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"//     toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"// }","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"    mainClass.set(\"dave.gui.Launcher\")","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"    archiveBaseName \u003d \"Dave\"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"iynixil":22,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"# Dave User Guide","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"![Screenshot of chatbot Dave in action, showcasing its greeting, \"list\" and \"remind\" functions.](Ui.png)","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"## `Dave`: Your Companion For Recording Tasks :dependabot:","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"Dave is a chill and caring companion that helps you note down tasks you need to complete.","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"Dave provides the following services:","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"- Record **to-dos**","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"- Record **deadlines**","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"- Record **events**","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"- Mark/unmark tasks","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"- Delete tasks","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"- Save your task list","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"- Search for tasks","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"- Show task list","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"- Show reminders for upcoming tasks due in a week","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"\u003e Note: Users need to enter the appropriate commands in a valid format to command Dave.","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"To start operating your own Dave,","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"1. Download the latest release [here](https://github.com/iynixil/ip/releases).","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"2. Execute the \"Dave.jar\" file either by double-clicking it, or using the command \"java -jar Dave.jar\" in your preferred terminal.","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"\u003e [!NOTE]","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"\u003e Either way of execution requires the user to be in the folder that Dave.jar was downloaded in.","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"3. Execute commands. (simply press \"Enter\" as your first input to Dave to see all available commands)","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"4. You\u0027re all set! Now you have your very own Dave to command.","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"## Recording to-dos","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"Records a single to-do task.","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"Input: `todo \u003ctask name\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"Examples: `todo eat cake`, `todo read book`, `todo homework`","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"When the command succeeds, Dave will let you know by saying that it has been added.","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"Otherwise, Dave will let you know why the command failed.","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"On successful command:","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"Dave added the task:","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"  [To-do][ ] read book","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"You now have 1 task(s).","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"## Recording deadlines","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"Records a single deadline task.","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"Input: `deadline \u003ctask name\u003e /by dd/mm/yyyy hhmm`","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"Examples: `deadline eat cake /by 12/12/2024 1800`, `deadline read book /by 08/08/2024 1900`, `deadline homework /by 12/08/2024 2359`","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"When the command succeeds, Dave will let you know by saying that it has been added.","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"Otherwise, Dave will let you know why the command failed.","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"On successful command:","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"Dave added the task:","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"  [Deadline][ ] homework (by: Aug 12 2024 11PM)","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"You now have 1 task(s).","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"## Recording events","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"Records a single event task.","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"Input: `event \u003ctask name\u003e /from dd/mm/yyyy hhmm /to dd/mm/yyyy hhmm`","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"Examples: `event eat cake /from 12/12/2024 1800 /to 12/12/2024 2000`, `event read book /from 08/08/2024 1900 /to 12/12/2024 1945`, `event homework /from 12/08/2024 0000 /to 12/12/2024 1800`","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"iynixil"},"content":"When the command succeeds, Dave will let you know by saying that it has been added.","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"iynixil"},"content":"Otherwise, Dave will let you know why the command failed.","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"iynixil"},"content":"On successful command:","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"iynixil"},"content":"Dave added the task:","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"iynixil"},"content":"  [Event][ ] homework (from: Aug 12 2024 12AM to: Dec 12 2024 6PM)","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"iynixil"},"content":"You now have 1 task(s).","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"iynixil"},"content":"## Mark/unmark tasks","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"iynixil"},"content":"Marks or unmarks a single task.","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"iynixil"},"content":"Input: `mark \u003ctask number\u003e` / `unmark \u003ctask number\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"iynixil"},"content":"\u003e [!IMPORTANT]","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"iynixil"},"content":"\u003e The task number given is based on how tasks are ordered in the \"list\" command.","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"iynixil"},"content":"Examples: `mark 1`, `unmark 1`","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"iynixil"},"content":"When the command succeeds, Dave will let you know by saying that the task has been marked.","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"iynixil"},"content":"Otherwise, Dave will let you know why the command failed.","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"iynixil"},"content":"On successful command for \"mark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"iynixil"},"content":"Good job! Dave will mark this task as done","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"iynixil"},"content":"  [To-do][X] read book","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"iynixil"},"content":"On successful command for \"unmark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":105,"author":{"gitId":"iynixil"},"content":"Alright, Dave believes you\u0027ll get this done eventually:","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"iynixil"},"content":"  [To-do][ ] read book","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"iynixil"},"content":"## Delete tasks","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"iynixil"},"content":"Deletes a single task.","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"iynixil"},"content":"Input: `delete \u003ctask number\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"iynixil"},"content":"\u003e [!IMPORTANT]","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"iynixil"},"content":"\u003e The task number given is based on how tasks are ordered in the \"list\" command.","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":117,"author":{"gitId":"iynixil"},"content":"Examples: `delete 1`, `delete 2`","lastModifiedDate":"2024-02-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":119,"author":{"gitId":"iynixil"},"content":"When the command succeeds, Dave will let you know by saying that the task has been marked.","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"iynixil"},"content":"Otherwise, Dave will let you know why the command failed.","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":122,"author":{"gitId":"iynixil"},"content":"On successful command:","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"iynixil"},"content":"Dave removed the task:","lastModifiedDate":"2024-02-18"},{"lineNumber":125,"author":{"gitId":"iynixil"},"content":"  [To-do][ ] read book","lastModifiedDate":"2024-02-18"},{"lineNumber":126,"author":{"gitId":"iynixil"},"content":"You now have 1 task(s).","lastModifiedDate":"2024-02-18"},{"lineNumber":127,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":129,"author":{"gitId":"iynixil"},"content":"## Save your task list","lastModifiedDate":"2024-02-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":131,"author":{"gitId":"iynixil"},"content":"Saves the task list whenever it is modified.","lastModifiedDate":"2024-02-18"},{"lineNumber":132,"author":{"gitId":"iynixil"},"content":"This is an automatic action by Dave and is not a command.","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"iynixil"},"content":"Saved tasks will appear in the \"data\" folder that Dave.jar is located in, under \"data/tasks.txt\".","lastModifiedDate":"2024-02-18"},{"lineNumber":135,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":136,"author":{"gitId":"iynixil"},"content":"## Search for tasks","lastModifiedDate":"2024-02-18"},{"lineNumber":137,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":138,"author":{"gitId":"iynixil"},"content":"Searches for task names that contain the keyword given.","lastModifiedDate":"2024-02-18"},{"lineNumber":139,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":140,"author":{"gitId":"iynixil"},"content":"Input: `find \u003ckeyword\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"iynixil"},"content":"Examples: `find r`, `find e`","lastModifiedDate":"2024-02-18"},{"lineNumber":143,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":144,"author":{"gitId":"iynixil"},"content":"When the command succeeds, Dave will show the tasks containing the keyword.","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"iynixil"},"content":"Otherwise, Dave will let you know why the command failed.","lastModifiedDate":"2024-02-18"},{"lineNumber":146,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":147,"author":{"gitId":"iynixil"},"content":"On successful command:","lastModifiedDate":"2024-02-18"},{"lineNumber":148,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":149,"author":{"gitId":"iynixil"},"content":"Dave has found the following matching tasks:","lastModifiedDate":"2024-02-18"},{"lineNumber":150,"author":{"gitId":"iynixil"},"content":"1.  [To-do][ ] read book","lastModifiedDate":"2024-02-18"},{"lineNumber":151,"author":{"gitId":"iynixil"},"content":"You now have 1 task(s).","lastModifiedDate":"2024-02-18"},{"lineNumber":152,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":153,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":154,"author":{"gitId":"iynixil"},"content":"## Show task list","lastModifiedDate":"2024-02-18"},{"lineNumber":155,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":156,"author":{"gitId":"iynixil"},"content":"Lists all tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":157,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":158,"author":{"gitId":"iynixil"},"content":"Input: `list`","lastModifiedDate":"2024-02-18"},{"lineNumber":159,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":160,"author":{"gitId":"iynixil"},"content":"When the command succeeds, Dave will show all tasks and their information.","lastModifiedDate":"2024-02-18"},{"lineNumber":161,"author":{"gitId":"iynixil"},"content":"Otherwise, Dave will let you know why the command failed.","lastModifiedDate":"2024-02-18"},{"lineNumber":162,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":163,"author":{"gitId":"iynixil"},"content":"On successful command:","lastModifiedDate":"2024-02-18"},{"lineNumber":164,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":165,"author":{"gitId":"iynixil"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-18"},{"lineNumber":166,"author":{"gitId":"iynixil"},"content":"1.  [To-do][ ] read book","lastModifiedDate":"2024-02-18"},{"lineNumber":167,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":168,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":169,"author":{"gitId":"iynixil"},"content":"## Show reminders for upcoming tasks due in a week","lastModifiedDate":"2024-02-18"},{"lineNumber":170,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":171,"author":{"gitId":"iynixil"},"content":"Shows deadline or event tasks that are due in a week but not yet done.","lastModifiedDate":"2024-02-18"},{"lineNumber":172,"author":{"gitId":"iynixil"},"content":"It also shows to-do tasks and expired tasks if they are not yet done.","lastModifiedDate":"2024-02-18"},{"lineNumber":173,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":174,"author":{"gitId":"iynixil"},"content":"Input: `remind`","lastModifiedDate":"2024-02-18"},{"lineNumber":175,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":176,"author":{"gitId":"iynixil"},"content":"When the command succeeds, Dave will show all deadline, event, to-dos and expired tasks not yet done.","lastModifiedDate":"2024-02-18"},{"lineNumber":177,"author":{"gitId":"iynixil"},"content":"Otherwise, Dave will let you know why the command failed.","lastModifiedDate":"2024-02-18"},{"lineNumber":178,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":179,"author":{"gitId":"iynixil"},"content":"On successful command:","lastModifiedDate":"2024-02-18"},{"lineNumber":180,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":181,"author":{"gitId":"iynixil"},"content":"These are the tasks due within a week","lastModifiedDate":"2024-02-18"},{"lineNumber":182,"author":{"gitId":"iynixil"},"content":"(Feb 18 2024 7PM - Feb 25 2024 7PM):","lastModifiedDate":"2024-02-18"},{"lineNumber":183,"author":{"gitId":"iynixil"},"content":"    - [Deadline][ ] eat (by: Feb 18 2024 8PM)","lastModifiedDate":"2024-02-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":185,"author":{"gitId":"iynixil"},"content":"You still have the following TODO/expired tasks not done yet:","lastModifiedDate":"2024-02-18"},{"lineNumber":186,"author":{"gitId":"iynixil"},"content":"    - [Deadline][ ] eat cake (by: Dec 12 2022 6PM)","lastModifiedDate":"2024-02-18"},{"lineNumber":187,"author":{"gitId":"iynixil"},"content":"    - [To-do][ ] read book","lastModifiedDate":"2024-02-18"},{"lineNumber":188,"author":{"gitId":"iynixil"},"content":"    - [Deadline][ ] eat (by: Feb 12 2024 6PM)","lastModifiedDate":"2024-02-18"},{"lineNumber":189,"author":{"gitId":"iynixil"},"content":"    - [To-do][ ] read book","lastModifiedDate":"2024-02-18"},{"lineNumber":190,"author":{"gitId":"iynixil"},"content":"    - [Deadline][ ] homework (by: Aug 12 2024 11PM)","lastModifiedDate":"2024-02-18"},{"lineNumber":191,"author":{"gitId":"iynixil"},"content":"    - [Event][ ] homework (from: Aug 12 2024 12AM to: Dec 12 2024 6PM)","lastModifiedDate":"2024-02-18"},{"lineNumber":192,"author":{"gitId":"iynixil"},"content":"```","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"iynixil":172,"-":20}},{"path":"src/main/java/dave/Dave.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.commands.Command;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import dave.exceptions.ChatbotException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"public class Dave {","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"    /** The output file. */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    /** The task list to record tasks. */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    /** The UI to print feedback to user. */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"    private Ui daveUi;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"    /** The filepath where task(s) are saved. */","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"    private static final String SAVE_FILE \u003d \"data/tasks.txt\";","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"     * The constructor for Dave chatbot.","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"     * This is the chatbot Dave.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"    public Dave() {","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"        daveUi \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"        storage \u003d new Storage(SAVE_FILE);","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"            assert taskList.getNumberOfTasks() !\u003d 0;","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"        } catch (IOException exc) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"            assert taskList.getNumberOfTasks() \u003d\u003d 0;","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"    public String getLoadResult() {","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"        if (taskList.getNumberOfTasks() !\u003d 0) {","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"            return daveUi.showLoadingSuccess(taskList.getNumberOfTasks());","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"            return daveUi.showLoadingError();","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"     * Runs the chatbot Dave.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"     * Operations do not stop until the user has given the exit command, \"bye\".","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"    public void run() {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"        if (taskList.getNumberOfTasks() !\u003d 0) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"            daveUi.showLoadingSuccess(taskList.getNumberOfTasks());","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"            daveUi.showLoadingError();","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"                String fullCommand \u003d daveUi.readCommand();","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"                c.execute(taskList, daveUi, storage);","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"            } catch (ChatbotException exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"                daveUi.showError(exc.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"     * Get responses from the Chatbot Dave.","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"     * Operations do not stop until the user has given the exit command, \"bye\".","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"     * @return The message to show to the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"iynixil"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"iynixil"},"content":"            return c.execute(taskList, daveUi, storage);","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"iynixil"},"content":"        } catch (ChatbotException exc) {","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"iynixil"},"content":"            return daveUi.showError(exc.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"iynixil":80,"-":2}},{"path":"src/main/java/dave/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import dave.commands.AddTodoCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import dave.commands.AddDeadlineCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.commands.AddEventCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import dave.commands.Command;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import dave.commands.DeleteTaskCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"import dave.commands.ExitCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import dave.commands.FindTaskCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"import dave.commands.InvalidCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import dave.commands.ListTasksCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"import dave.commands.TaskRemindersCommand;","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"import dave.commands.ToggleTaskDoneCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"import dave.common.Messages;","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"import dave.exceptions.ChatbotException;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"import dave.exceptions.EmptyTaskException;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"import dave.exceptions.InvalidInputException;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    private enum CommandType {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"        LIST,","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"        FIND,","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"        REMIND,","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"        DELETE,","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"        MARK,","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"        UNMARK,","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"        TODO,","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"        DEADLINE,","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"        EVENT,","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"        BYE","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"     * Parses inputs from user.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"     * @param input User input.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"     * @return A command that executes operations according to the user\u0027s input.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"     * @throws ChatbotException If unrecognisable or invalid input is given.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"    public static Command parse(String input) throws ChatbotException {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"        CommandType commandStr \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"            commandStr \u003d CommandType.valueOf(inputArr[0].toUpperCase()); // Solution inspired by https://www.tutorialspoint.com/java/lang/enum_valueof.htm","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"        } catch (IllegalArgumentException exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"            return new InvalidCommand(new InvalidInputException());","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"        } finally {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"            if (commandStr !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"                switch (commandStr) {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"                case LIST:","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"                    assert commandStr.equals(CommandType.LIST);","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"                    return new ListTasksCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"                case FIND:","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"                    assert commandStr.equals(CommandType.FIND);","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"                    return parseFindTaskCommand(input);","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"                case REMIND:","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"                    assert commandStr.equals(CommandType.REMIND);","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"                    return new TaskRemindersCommand();","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"                case DELETE:","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"                    assert commandStr.equals(CommandType.DELETE);","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"                    return parseDeleteTaskCommand(inputArr[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"                case MARK:","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"                    assert commandStr.equals(CommandType.MARK);","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"                    return parseToggleTaskDoneCommand(inputArr[1], true);","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"                case UNMARK:","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"                    assert commandStr.equals(CommandType.UNMARK);","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"                    return parseToggleTaskDoneCommand(inputArr[1], false);","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"                case TODO:","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"                    assert commandStr.equals(CommandType.TODO);","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"                    return parseAddTodoCommand(input);","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"                case DEADLINE:","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"iynixil"},"content":"                    assert commandStr.equals(CommandType.DEADLINE);","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"iynixil"},"content":"                    return parseAddDeadlineCommand(input);","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"iynixil"},"content":"                case EVENT:","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"iynixil"},"content":"                    assert commandStr.equals(CommandType.EVENT);","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"iynixil"},"content":"                    return parseAddEventCommand(input);","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"iynixil"},"content":"                case BYE:","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"iynixil"},"content":"                    assert commandStr.equals(CommandType.BYE);","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"iynixil"},"content":"                    return new ExitCommand();","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"iynixil"},"content":"                default:","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"iynixil"},"content":"                    return new InvalidCommand(new InvalidInputException());","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"iynixil"},"content":"                }","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"iynixil"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"iynixil"},"content":"        return new InvalidCommand(new InvalidInputException());","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"iynixil"},"content":"     * Parses a find task command.","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"iynixil"},"content":"     * @param command The command string.","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"iynixil"},"content":"     * @return A find task command using the parsed keyword. If invalid keyword,","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"iynixil"},"content":"     *         return an invalid command.","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"iynixil"},"content":"     * @throws ChatbotException If invalid keyword is given.","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"iynixil"},"content":"    public static Command parseFindTaskCommand(String command) throws ChatbotException {","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"iynixil"},"content":"            String keyword \u003d command.substring(5);","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"iynixil"},"content":"            return new FindTaskCommand(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"iynixil"},"content":"        } catch (Exception exc) {","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"iynixil"},"content":"            return new InvalidCommand(new EmptyTaskException(Messages.INVALID_KEYWORD_MESSAGE));","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"iynixil"},"content":"     * Parses a delete task command.","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"iynixil"},"content":"     * @param taskNumber The task number as a String.","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"iynixil"},"content":"     * @return A delete task command using the task number. If invalid task number,","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"iynixil"},"content":"     *         return an invalid command.","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"iynixil"},"content":"     * @throws ChatbotException If invalid task number is given.","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"iynixil"},"content":"    public static Command parseDeleteTaskCommand(String taskNumber) throws ChatbotException {","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"iynixil"},"content":"        int deleteNumber \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":118,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"iynixil"},"content":"            return new DeleteTaskCommand(deleteNumber);","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"iynixil"},"content":"        } catch (Exception exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"iynixil"},"content":"            return new InvalidCommand(new ChatbotException(exc.getMessage()));","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":125,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":126,"author":{"gitId":"iynixil"},"content":"     * Parses a toggle task done command.","lastModifiedDate":"2024-02-18"},{"lineNumber":127,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"iynixil"},"content":"     * @param taskNumber The task number as a String.","lastModifiedDate":"2024-02-18"},{"lineNumber":129,"author":{"gitId":"iynixil"},"content":"     * @param isDone     The boolean to mark a task. If true, task is marked.","lastModifiedDate":"2024-02-18"},{"lineNumber":130,"author":{"gitId":"iynixil"},"content":"     *                   Otherwise, task is unmarked.","lastModifiedDate":"2024-02-18"},{"lineNumber":131,"author":{"gitId":"iynixil"},"content":"     * @return A toggle task done command using the task number. If invalid task","lastModifiedDate":"2024-02-18"},{"lineNumber":132,"author":{"gitId":"iynixil"},"content":"     *         number, return an invalid command.","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"iynixil"},"content":"     * @throws ChatbotException If invalid task number is given.","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":135,"author":{"gitId":"iynixil"},"content":"    public static Command parseToggleTaskDoneCommand(String taskNumber, boolean isDone) throws ChatbotException {","lastModifiedDate":"2024-02-18"},{"lineNumber":136,"author":{"gitId":"iynixil"},"content":"        int toggleNumber \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":137,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":138,"author":{"gitId":"iynixil"},"content":"            return new ToggleTaskDoneCommand(toggleNumber, isDone);","lastModifiedDate":"2024-02-18"},{"lineNumber":139,"author":{"gitId":"iynixil"},"content":"        } catch (Exception exc) {","lastModifiedDate":"2024-02-18"},{"lineNumber":140,"author":{"gitId":"iynixil"},"content":"            return new InvalidCommand(new ChatbotException(exc.getMessage()));","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":143,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":144,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"iynixil"},"content":"     * Parses an add todo command.","lastModifiedDate":"2024-02-18"},{"lineNumber":146,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-18"},{"lineNumber":147,"author":{"gitId":"iynixil"},"content":"     * @param command The command string.","lastModifiedDate":"2024-02-18"},{"lineNumber":148,"author":{"gitId":"iynixil"},"content":"     * @return An add todo command. If invalid task name, return an invalid command.","lastModifiedDate":"2024-02-18"},{"lineNumber":149,"author":{"gitId":"iynixil"},"content":"     * @throws ChatbotException If invalid task name is given.","lastModifiedDate":"2024-02-18"},{"lineNumber":150,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":151,"author":{"gitId":"iynixil"},"content":"    public static Command parseAddTodoCommand(String command) throws ChatbotException {","lastModifiedDate":"2024-02-18"},{"lineNumber":152,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"iynixil"},"content":"            String todoName \u003d command.substring(5);","lastModifiedDate":"2024-02-18"},{"lineNumber":154,"author":{"gitId":"iynixil"},"content":"            return new AddTodoCommand(todoName);","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"iynixil"},"content":"        } catch (Exception exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"iynixil"},"content":"            return new InvalidCommand(","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"iynixil"},"content":"                    new EmptyTaskException(Messages.INVALID_TODO_NAME));","lastModifiedDate":"2024-02-18"},{"lineNumber":158,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":160,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":161,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":162,"author":{"gitId":"iynixil"},"content":"     * Parses an add deadline command.","lastModifiedDate":"2024-02-18"},{"lineNumber":163,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-18"},{"lineNumber":164,"author":{"gitId":"iynixil"},"content":"     * @param command The command string.","lastModifiedDate":"2024-02-18"},{"lineNumber":165,"author":{"gitId":"iynixil"},"content":"     * @return An add deadline command. If invalid task name or deadline, return an","lastModifiedDate":"2024-02-18"},{"lineNumber":166,"author":{"gitId":"iynixil"},"content":"     *         invalid command.","lastModifiedDate":"2024-02-18"},{"lineNumber":167,"author":{"gitId":"iynixil"},"content":"     * @throws ChatbotException If invalid task name or deadline is given.","lastModifiedDate":"2024-02-18"},{"lineNumber":168,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":169,"author":{"gitId":"iynixil"},"content":"    public static Command parseAddDeadlineCommand(String command) throws ChatbotException {","lastModifiedDate":"2024-02-18"},{"lineNumber":170,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"iynixil"},"content":"            int idxDeadline \u003d command.indexOf(\"/by\");","lastModifiedDate":"2024-02-18"},{"lineNumber":172,"author":{"gitId":"iynixil"},"content":"            String deadlineName \u003d command.substring(9, idxDeadline - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":173,"author":{"gitId":"iynixil"},"content":"            String deadline \u003d command.substring(idxDeadline + \"/by \".length());","lastModifiedDate":"2024-02-18"},{"lineNumber":174,"author":{"gitId":"iynixil"},"content":"            return new AddDeadlineCommand(deadlineName, deadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"iynixil"},"content":"        } catch (Exception exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"iynixil"},"content":"            return new InvalidCommand(","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"iynixil"},"content":"                    new EmptyTaskException(Messages.INVALID_DEADLINE_NAME_OR_DEADLINE));","lastModifiedDate":"2024-02-18"},{"lineNumber":178,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":180,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":181,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":182,"author":{"gitId":"iynixil"},"content":"     * Parses an add event command.","lastModifiedDate":"2024-02-18"},{"lineNumber":183,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-18"},{"lineNumber":184,"author":{"gitId":"iynixil"},"content":"     * @param command The command string.","lastModifiedDate":"2024-02-18"},{"lineNumber":185,"author":{"gitId":"iynixil"},"content":"     * @return An add event command. If invalid task name or event duration, return","lastModifiedDate":"2024-02-18"},{"lineNumber":186,"author":{"gitId":"iynixil"},"content":"     *         an invalid command.","lastModifiedDate":"2024-02-18"},{"lineNumber":187,"author":{"gitId":"iynixil"},"content":"     * @throws ChatbotException If invalid task name or event duration is given.","lastModifiedDate":"2024-02-18"},{"lineNumber":188,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":189,"author":{"gitId":"iynixil"},"content":"    public static Command parseAddEventCommand(String command) throws ChatbotException {","lastModifiedDate":"2024-02-18"},{"lineNumber":190,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"iynixil"},"content":"            int idxFrom \u003d command.indexOf(\"/from\");","lastModifiedDate":"2024-02-18"},{"lineNumber":192,"author":{"gitId":"iynixil"},"content":"            int idxTo \u003d command.indexOf(\"/to\");","lastModifiedDate":"2024-02-18"},{"lineNumber":193,"author":{"gitId":"iynixil"},"content":"            String eventName \u003d command.substring(6, idxFrom - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":194,"author":{"gitId":"iynixil"},"content":"            String from \u003d command.substring(idxFrom + \"/from \".length(), idxTo - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":195,"author":{"gitId":"iynixil"},"content":"            String to \u003d command.substring(idxTo + \"/to \".length());","lastModifiedDate":"2024-02-18"},{"lineNumber":196,"author":{"gitId":"iynixil"},"content":"            return new AddEventCommand(eventName, from, to);","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"iynixil"},"content":"        } catch (Exception exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":198,"author":{"gitId":"iynixil"},"content":"            return new InvalidCommand(","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"iynixil"},"content":"                    new EmptyTaskException(Messages.INVALID_EVENT_NAME_OR_DURATION));","lastModifiedDate":"2024-02-18"},{"lineNumber":200,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":202,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":203}},{"path":"src/main/java/dave/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"    /** The filepath to store tasks. */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"    private String storageFilepath;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    /** The type of tasks. */","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"    private enum TaskType {","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"        TODO,","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"        DEADLINE,","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"        EVENT","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"     * Creates new Storage object.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"     * @param filepath Output file to operate on for storing and updating tasks in.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"        storageFilepath \u003d filepath;","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"     * Loads the tasks stored, if any.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"     * @return An ArrayList\u003cTask\u003e to be used as the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"     * @throws IOException If output file is not found or corrupted.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(storageFilepath));","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"        String line \u003d br.readLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"            String[] taskDescription \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"            TaskType type \u003d TaskType.valueOf(taskDescription[0].toUpperCase()); // Solution inspired by https://www.tutorialspoint.com/java/lang/enum_valueof.htm","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"            switch (type) {","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"            case TODO:","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"                assert type.equals(TaskType.TODO);","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"                taskList.add(new Todo(taskDescription[2]));","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"                assert type.equals(TaskType.DEADLINE);","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"                taskList.add(new Deadline(taskDescription[2], taskDescription[3]));","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"            case EVENT:","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"                assert type.equals(TaskType.EVENT);","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"                taskList.add(new Event(taskDescription[2], taskDescription[3], taskDescription[4]));","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"            default:","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"                throw new IOException();","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"            if (isSavedTaskMarked(taskDescription[1])) {","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"                assert taskDescription[1].equals(\"COMPLETED\");","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"                taskList.get(taskList.size() - 1).setDone(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"iynixil"},"content":"            line \u003d br.readLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"iynixil"},"content":"        br.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"iynixil"},"content":"        return taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"iynixil"},"content":"    public boolean isSavedTaskMarked(String completedInfo) {","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"iynixil"},"content":"        return completedInfo.equals(\"COMPLETED\");","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"iynixil"},"content":"     * Saves the task to output file if user adds a task in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"iynixil"},"content":"     * @throws IOException If output file is not found.","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"iynixil"},"content":"    public void saveTask(Task newTask) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"iynixil"},"content":"        File fileToWrite \u003d new File(storageFilepath);","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"iynixil"},"content":"        if (!fileToWrite.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"iynixil"},"content":"            fileToWrite.getParentFile().mkdir();","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"iynixil"},"content":"            fileToWrite.createNewFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"iynixil"},"content":"        assert fileToWrite.exists();","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"iynixil"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(storageFilepath, true));","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"iynixil"},"content":"        writer.append(newTask.fileString());","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"iynixil"},"content":"        writer.newLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"iynixil"},"content":"        writer.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"iynixil"},"content":"     * Rewrites the tasks to the output file when the task list changes.","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"iynixil"},"content":"     * Changes to task list include marking, unmarking and deletion of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"iynixil"},"content":"     * @param taskList Current task list to read from.","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"iynixil"},"content":"    public void rewriteOutput(TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"iynixil"},"content":"        File fileToDelete \u003d new File(storageFilepath);","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"iynixil"},"content":"            fileToDelete.delete();","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"iynixil"},"content":"            for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"iynixil"},"content":"                saveTask(taskList.getTask(i));","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"iynixil"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"iynixil"},"content":"        } catch (IOException exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"iynixil"},"content":"            System.out.println(String.format(\"Dave had a problem updating the output file.\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"iynixil":121}},{"path":"src/main/java/dave/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    /** The tasks. */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"     * Creates an empty TaskList object.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"     * Initializes a TaskList object, given a list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"     * @param taskList Task list to initialize contents from.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskListInput) {","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"        taskList \u003d taskListInput;","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"        return taskList.size();","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"     * @param taskNumber Index of task to delete.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"        taskList.remove(taskNumber);","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"     * Adds a Todo task to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"     * @param newTask The new Todo task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"    public void addTask(Todo newTask) {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"     * Adds a Deadline task to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"     * @param newTask The new Deadline task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"    public void addTask(Deadline newTask) {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"     * Adds a Event task to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"     * @param newTask The new Event task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"    public void addTask(Event newTask) {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":73}},{"path":"src/main/java/dave/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"    /** The user input scanner. */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"    private Scanner sc;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    /** Name of the chatbot, Dave. */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"    static final String NAME \u003d \"Dave\";","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"    /** Horizontal line divider for output. */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"    static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"    /** Greeting message shown to user. */","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"    public static final String GREETING \u003d String.format(\"%s: Nice to meet you,\"","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"            + \" I\u0027m the ever-helpful %s!\\nHow may I be of service today?\\n\",","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"            NAME, NAME);","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"    /** Farewell message shown to user. */","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"    public static final String FAREWELL \u003d \"\\nDave: Thank you for your patronage,\"","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"            + \" goodbye and have a nice day!\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"    /** Message to show upon successful load. */","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"    public static final String LOAD_SUCCESS \u003d \"Dave has found %s existing tasks and loaded them.\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"    /** Message to show upon loading error. */","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"    public static final String LOAD_ERROR \u003d \"Dave did not find any existing tasks to load.\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"    /** Message to show upon adding a task. */","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"    public static final String TASK_ADDED \u003d \"Dave added the task:\\n  %s\\n\"","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"            + \"You now have %d task(s).\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"    /** Message to show upon task deletion. */","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"    public static final String TASK_DELETED \u003d \"Dave removed the task:\\n  %s\\n\"","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"            + \"You now have %d task(s).\\n\";","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"    /** Message to show upon marking a task. */","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"    public static final String TASK_MARKED \u003d \"Good job! Dave will mark this task as done:\\n  %s\";","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"    ","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"    /** Message to show upon unmarking a task. */","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"    public static final String TASK_UNMARKED \u003d \"Alright, Dave believes you\u0027ll get this done eventually:\\n  %s\";","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"     * Creates new UI object.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"    public Ui() {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"     * Welcomes the user with a message.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"     * @return The greeting string.","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"    public String sayHello() {","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"        return GREETING;","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"     * Says bye to the user with a message.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"     * @return The farewell string.","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"    public String sayBye() {","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"        return FAREWELL;","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"     * Shows that tasks from an existing task list have been loaded in the chatbot","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"     * program, if any.","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"iynixil"},"content":"     * @return Feedback to user about successful loading of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"iynixil"},"content":"    public String showLoadingSuccess(int noOfTasks) {","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"iynixil"},"content":"        return String.format(LOAD_SUCCESS, noOfTasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"iynixil"},"content":"     * Shows that there is no existing task list to load tasks from.","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"iynixil"},"content":"     * @return Feedback to user about no existing tasks to load.","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"iynixil"},"content":"    public String showLoadingError() {","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"iynixil"},"content":"        return String.format(LOAD_ERROR);","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"iynixil"},"content":"     * Shows error from any user-chatbot interaction.","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"iynixil"},"content":"     * @param msg The error output.","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"iynixil"},"content":"     * @return The error message string.","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"iynixil"},"content":"    public String showError(String msg) {","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"iynixil"},"content":"        return msg;","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"iynixil"},"content":"     * Reads user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"iynixil"},"content":"     * @return The user input to the chatbot program.","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"iynixil"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"iynixil"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"iynixil"},"content":"     * Shows user feedback when a new task is successfully added into the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"iynixil"},"content":"     * @param newTask  Information about the new task added.","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"iynixil"},"content":"     * @param taskList Current task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"iynixil"},"content":"     * @return Feedback to user about successful task addition.","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"iynixil"},"content":"    public String showTaskAdded(Task newTask, TaskList taskList) {","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"iynixil"},"content":"        return String.format(TASK_ADDED, newTask.toString(), taskList.getNumberOfTasks());","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"iynixil"},"content":"     * Shows user feedback when a task is successfully deleted from the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"iynixil"},"content":"     * @param deletedTask Information about the deleted task.","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"iynixil"},"content":"     * @param taskList    Current task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":128,"author":{"gitId":"iynixil"},"content":"     * @return Feedback to user about successful task deletion.","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"iynixil"},"content":"    public String showTaskDeleted(Task deletedTask, TaskList taskList) {","lastModifiedDate":"2024-02-15"},{"lineNumber":131,"author":{"gitId":"iynixil"},"content":"        return String.format(TASK_DELETED, deletedTask.toString(), taskList.getNumberOfTasks());","lastModifiedDate":"2024-02-15"},{"lineNumber":132,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"iynixil"},"content":"     * Shows user feedback when a task is successfully marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"iynixil"},"content":"     * @param markedTask The task marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"iynixil"},"content":"     * @return Feedback to user about successful marking of task.","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"iynixil"},"content":"    public String showTaskMarked(Task markedTask) {","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"iynixil"},"content":"        return String.format(TASK_MARKED, markedTask.toString());","lastModifiedDate":"2024-02-15"},{"lineNumber":143,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"iynixil"},"content":"     * Shows user feedback when a task is successfully unmarked as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"iynixil"},"content":"     * @param unmarkedTask The task unmarked as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":150,"author":{"gitId":"iynixil"},"content":"     * @return Feedback to user about successful unmarking of task.","lastModifiedDate":"2024-02-15"},{"lineNumber":151,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"iynixil"},"content":"    public String showTaskUnmarked(Task unmarkedTask) {","lastModifiedDate":"2024-02-15"},{"lineNumber":153,"author":{"gitId":"iynixil"},"content":"        return String.format(TASK_UNMARKED, unmarkedTask.toString());","lastModifiedDate":"2024-02-15"},{"lineNumber":154,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":156}},{"path":"src/main/java/dave/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import dave.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import dave.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"    /** The Deadline object to be added. */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    private Deadline toAdd;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     * Creates new AddDeadlineCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"     * Parameters taken in are used to create the Deadline object.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"     * @param taskName Name or description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"     * @param deadline Deadline to finish the task by.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"    public AddDeadlineCommand(String taskName, String deadline) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"        toAdd \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"     * Adds a Deadline task to the task list and saves it to output file.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"     * @return Feedback to user about successful task addition or error.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"        taskList.addTask(toAdd);","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"            storage.saveTask(toAdd);","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"        } catch (IOException exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"            return \"Dave could not write the new task to the output file\";","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"        return ui.showTaskAdded(toAdd, taskList);","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"     * Not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":51}},{"path":"src/main/java/dave/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import dave.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import dave.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"    /** The Event object to be added. */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    private Event toAdd;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     * Creates new AddEventCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"     * Parameters taken in are used to create the Event object.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"     * @param taskName Name or description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"     * @param from Time when event starts.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"     * @param to Time when event ends.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"    public AddEventCommand(String taskName, String from, String to) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"        toAdd \u003d new Event(taskName, from, to);","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"     * Adds an Event task to the task list and saves it to output file.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"     * @return Feedback to user about successful task addition or error.","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"        taskList.addTask(toAdd);","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"            storage.saveTask(toAdd);","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"        } catch (IOException exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"            return \"Dave could not write the new task to the output file\";","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"        return ui.showTaskAdded(toAdd, taskList);","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"     * Not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":52}},{"path":"src/main/java/dave/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import dave.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import dave.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"    /** The Todo object to be added. */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    private Todo toAdd;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     * Creates new AddTodoCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"     * Parameters taken in are used to create the Todo object.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"     * @param taskName Name or description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"    public AddTodoCommand(String taskName) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"        toAdd \u003d new Todo(taskName);","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"     * Creates new AddTodoCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"     * Adds a Todo task to the task list and saves it to output file.","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"     * @return Feedback to user about successful task addition or error.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"        taskList.addTask(toAdd);","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"            storage.saveTask(toAdd);","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"        } catch (IOException exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"            return \"Dave could not write the new task to the output file\";","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"        return ui.showTaskAdded(toAdd, taskList);","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"     * Not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":51}},{"path":"src/main/java/dave/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import dave.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import dave.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import dave.exceptions.ChatbotException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"     * Executes the command.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"     * @param taskList Task list to add task to.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"     * @param ui User interface to display some feedback after executing the command.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"     * @param storage Storage to store task information when tasks are modified/deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     * @throws ChatbotException","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"     * @return Feedback to user about successful command execution.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws ChatbotException;","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"     * Checks if the command is the exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"     * @return True only if it is an exit command, false otherwise.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":27}},{"path":"src/main/java/dave/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import dave.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import dave.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"import dave.exceptions.UnableToFindTaskException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    /** The index of the task to be deleted. */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"    private int taskNumber;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"     * Creates new DeleteTaskCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     * Takes in the index of the task to be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"     * @param taskNumber Index of task in task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    public DeleteTaskCommand(int taskNumberInput) {","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"        taskNumber \u003d taskNumberInput;","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"     * Deletes the task from the task list and output file.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"     * @return Feedback to user about successful task deletion or error.","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"            Task toDelete \u003d taskList.getTask(taskNumber);","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"            taskList.deleteTask(taskNumber);","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"            storage.rewriteOutput(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"            return ui.showTaskDeleted(toDelete, taskList);    ","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"        } catch (Exception exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"            return new UnableToFindTaskException(taskList).getMessage();","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"     * Not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":50}},{"path":"src/main/java/dave/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import dave.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import dave.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"     * Outputs exit message.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"     * @return Message to show user when exiting.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"        return ui.sayBye();","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"     * Exits the program.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"        return true;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"    }    ","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":28}},{"path":"src/main/java/dave/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import dave.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import dave.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"    /** The keyword to use for finding tasks. */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"    private String keyword;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"     * Creates new FindTaskCommand.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"     * @param keyword The keyword to use for searching.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"    public FindTaskCommand(String keywordToFind) {","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"        keyword \u003d keywordToFind.trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"     * Finds the tasks in the task list that contain the keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"     * @return Show tasks matching the keyword.","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"        String loadResult \u003d \"Dave has found the following matching tasks:\";","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"        int noOfResults \u003d 0;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"        for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"            Task currTask \u003d taskList.getTask(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"            if (currTask.getTaskName().contains(keyword)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"                loadResult +\u003d String.format(\"\\n%d. %s\", noOfResults+1, taskList.getTask(i).toString());","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"                noOfResults++;","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"        return loadResult;","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"     * Not an exit command.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"iynixil":49}},{"path":"src/main/java/dave/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import dave.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import dave.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import dave.exceptions.ChatbotException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"    /** The Exception that happens due to an invalid command. */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    private ChatbotException exc;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"     * Creates new InvalidCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"     * Takes in the Exception to show the error or message to user.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"     * @param exc Exception that occurred.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"    public InvalidCommand(ChatbotException cbExc) {","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"        exc \u003d cbExc;","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"     * Prints the error or message to user on why the command was invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"     * @return Show the error that occurred due to invalid command execution.","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"        return exc.getMessage();","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"     * Not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":42}},{"path":"src/main/java/dave/commands/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import dave.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import dave.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"    private static final String LIST_TASKS_MSG \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"     * Lists the current tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"     * @return Show task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"        String listTasks \u003d LIST_TASKS_MSG;","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"        for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"            listTasks +\u003d String.format(\"\\n%d. %s\", i+1, taskList.getTask(i).toString());","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"        return listTasks;","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"     * Not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":33}},{"path":"src/main/java/dave/commands/TaskRemindersCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.commands;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import dave.Storage;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import dave.Ui;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.TaskList;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Task;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import dave.utils.DateTimeUtil;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"public class TaskRemindersCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"    /** Beginning of reminder message. */","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    private static final String REMINDER_MSG \u003d String.format(","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"            \"These are the tasks due within a week\\n(%s - %s):\",","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"            DateTimeUtil.getCurrentTimeAsString(), DateTimeUtil.getAWeekFromNowAsString());","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"    /** Beginning of no tasks due message. */","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"    private static final String NO_TASKS_DUE_MSG \u003d \"Dave did not find any tasks due within a week.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"            + \"\\nGood job for completing todo tasks and upcoming tasks early!\";","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"    /** Beginning of todo or expired tasks due message. */","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    private static final String TODO_OR_EXPIRED_TASKS_DUE_MSG \u003d \"You still have the following\"","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"            + \" TODO/expired tasks not done yet:\";","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"    /** Format of printing tasks as string. */","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"    private static final String TASK_AS_STRING \u003d \"\\n    - %s\";","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"     * Shows tasks due in a week alongside todo tasks not done and expired tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"     * @return Message to user showing tasks due in a week alongside todo tasks not","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"     *         done and expired tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"        String tasksWithDueDateMsg \u003d REMINDER_MSG;","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"        String todoOrExpiredTasksReminderMsg \u003d TODO_OR_EXPIRED_TASKS_DUE_MSG;","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"        String remindersMsg \u003d \"\";","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"        boolean haveTasksDue \u003d false;","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"        boolean haveTodosOrExpiredTasks \u003d false;","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"        for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"            Task currentTask \u003d taskList.getTask(i);","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"            if (currentTask.isTaskDueWithinAWeek()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"                if (!currentTask.getIsDone()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"                    haveTasksDue \u003d true;","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"                    tasksWithDueDateMsg +\u003d String.format(TASK_AS_STRING, currentTask.toString());","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"                }","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"                continue;","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"            if (!currentTask.getIsDone()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"                haveTodosOrExpiredTasks \u003d true;","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"                todoOrExpiredTasksReminderMsg +\u003d String.format(TASK_AS_STRING, currentTask.toString());","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"        if (haveTasksDue) {","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"            remindersMsg +\u003d tasksWithDueDateMsg + \"\\n\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"        if (haveTodosOrExpiredTasks) {","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"            remindersMsg +\u003d todoOrExpiredTasksReminderMsg;","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"        if (!haveTasksDue \u0026\u0026 !haveTodosOrExpiredTasks) {","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"            return NO_TASKS_DUE_MSG;","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"        return remindersMsg;","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"     * Not an exit command.","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"        return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"iynixil":74}},{"path":"src/main/java/dave/commands/ToggleTaskDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import dave.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import dave.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import dave.exceptions.UnableToFindTaskException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"public class ToggleTaskDoneCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"    /** The task to mark/unmark as done/not done. */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    private int taskNumber;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"    /** The status of the task. True if done, false otherwise. */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     * Creates new ToggleTaskDoneCommand.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"     * @param taskNumber Index of task to mark/unmark.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"     * @param isDone Status of task to set to.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"    public ToggleTaskDoneCommand(int taskNumberInput, boolean isDoneInput) {","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"        taskNumber \u003d taskNumberInput;","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"        isDone \u003d isDoneInput;","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"     * Marks the task as done if isDone \u003d true, unmarks the task as not done otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"     * @return Feedback to user about successful marking/unmarking of task.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"            taskList.getTask(taskNumber).setDone(isDone);","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"            storage.rewriteOutput(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"                return ui.showTaskMarked(taskList.getTask(taskNumber));","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"                return ui.showTaskUnmarked(taskList.getTask(taskNumber));","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"        } catch (Exception exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"            return new UnableToFindTaskException(taskList).getMessage();","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"     * Not an exit command.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":55}},{"path":"src/main/java/dave/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.common;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"public class Messages {","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"     * The feedback to show to user when given an invalid keyword for the FIND","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"     * command.","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"    public static final String INVALID_KEYWORD_MESSAGE \u003d \"Dave cannot find a task without a keyword.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"            + \"\\nPlease help Dave by entering your search as follows:\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"            + \"\\nfind \u003ckeyword\u003e\";","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"     * The feedback to show to user when given an invalid task name for the addTodo","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"     * command.","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"    public static final String INVALID_TODO_NAME \u003d \"Dave cannot record a TODO task without a name.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"            + \"\\nPlease help Dave by entering your TODO name as follows:\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"            + \"\\ntodo \u003cname\u003e\";","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"     * The feedback to show to user when given an invalid task name or deadline for","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"     * the addDeadline command.","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"    public static final String INVALID_DEADLINE_NAME_OR_DEADLINE \u003d \"Dave cannot record a DEADLINE task\"","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"            + \" without a name/deadline.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"            + \"\\nPlease help Dave by entering your DEADLINE task as follows:\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"            + \"\\ndeadline \u003cname\u003e /by dd-mm-yyyy hhmm\";","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"     * The feedback to show to user when given an invalid event name or duration for","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"     * the addEvent command.","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"    public static final String INVALID_EVENT_NAME_OR_DURATION \u003d \"Dave cannot record an EVENT task\"","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"            + \" without a name/duration.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"            + \"\\nPlease help Dave by entering your EVENT task as follows:\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"            + \"\\nevent \u003cname\u003e /from dd-mm-yyy hhmm /to dd-mm-yyyy hhmm\";","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"iynixil":37}},{"path":"src/main/java/dave/exceptions/ChatbotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.exceptions;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"public class ChatbotException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"     * Creates new ChatbotException.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"     * ChatbotException are those that occurred from interactions with the chatbot Dave.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"     * @param msg The message to show to the user to help them interact with Dave.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    public ChatbotException(String msg) {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"        super(msg);","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"iynixil":14}},{"path":"src/main/java/dave/exceptions/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.exceptions;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"public class EmptyTaskException extends ChatbotException {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"     * Creates new EmptyTaskException.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"     * EmptyTaskExceptions are those that occurred from not giving tasks a name after giving the command type.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"     * @param msg The message to show to the user to help them enter the command correctly.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    public EmptyTaskException(String msg) {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"        super(msg);","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":14}},{"path":"src/main/java/dave/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.exceptions;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"public class InvalidInputException extends ChatbotException {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"     * Creates new InvalidInputException.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"     * InvalidInputExceptions are those that occur from unrecognisable commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"     * Prints a message to let the user know the available commands and the parameters for each command.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"    public InvalidInputException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"        super(\"Dave does not know what to do.\"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"                + \"\\nPlease help Dave by only entering the available commands.\"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"                + \"\\n\\nCommands available:\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"                + \"- todo \u003ctask\u003e,\\n- deadline \u003ctask\u003e /by \u003cdd/mm/yyyy hhmm\u003e,\"","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"                + \"\\n- event \u003ctask\u003e /from \u003cdd/mm/yyyy hhmm\u003e /to \u003cdd/mm/yyyy hhmm\u003e,\"","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"                + \"\\n- mark \u003ctask number\u003e,\\n- delete \u003ctask number\u003e,\\n- find \u003ckeyword\u003e,\\n- list,\"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"                + \"\\n- remind\");","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":19}},{"path":"src/main/java/dave/exceptions/UnableToFindTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.exceptions;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import dave.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"public class UnableToFindTaskException extends ChatbotException {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"     * Creates new UnableToFindTaskException.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"     * UnableToFindTaskExceptions are those that occur when the user wants to delete/mark/unmark an invalid task.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"     * @param taskList Current task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    public UnableToFindTaskException(TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"        super(\"Dave could not find the specified task.\" + \"\\nNote that there are \"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"        + taskList.getNumberOfTasks() + \" task(s) currently.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":17}},{"path":"src/main/java/dave/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.gui;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"// import javafx.scene.control.Label;","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"//@@author iynixil-reused","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"//    from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"//    (all parts of the tutorial) with minor modifications","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * This control represents a dialog box consisting of an ImageView to","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Text dialog;","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        dialog.setFont(Font.font(\"Consolas\", 12));","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * right.","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DialogBox userDb \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        userDb.setStyle(\"-fx-background-color: #f5f19f;\"); // Solution adapted from","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                                                           // https://github.com/alfaloo/ip/blob/master/src/main/java/javafxgui/DialogBox.java","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userDb;","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static DialogBox getDaveDialog(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        var daveDb \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        daveDb.flip();","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        daveDb.setStyle(\"-fx-background-color: #dbae81;\"); // Solution adapted from","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                                                           // https://github.com/alfaloo/ip/blob/master/src/main/java/javafxgui/DialogBox.java","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return daveDb;","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"iynixil":19,"-":57}},{"path":"src/main/java/dave/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.gui;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"import dave.gui.Main;","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"public class Launcher {","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"iynixil":9}},{"path":"src/main/java/dave/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.gui;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import dave.Dave;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// @@author iynixil-reused","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"//     from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"//     (all parts of the tutorial) with minor modifications","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A GUI for Dave using FXML.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Dave dave \u003d new Dave();","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String APP_NAME \u003d \"Dave\";","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            stage.setTitle(APP_NAME);","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDave(dave);","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showGreeting();","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            stage.show();","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"iynixil":12,"-":28}},{"path":"src/main/java/dave/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.gui;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"import dave.Dave;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"import dave.Ui;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"import dave.gui.DialogBox;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// @@author iynixil-reused","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"//     from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"//     (all parts of the tutorial) with minor modifications","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Dave dave;","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Ui daveUi;","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Image daveImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dave.png\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setDave(Dave d) {","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        dave \u003d d;","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        daveUi \u003d new Ui();","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void showGreeting() {","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                DialogBox.getDaveDialog(String.format(\"%s\\n%s\", daveUi.sayHello(), dave.getLoadResult()), daveImage));","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String response \u003d dave.getResponse(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                DialogBox.getDaveDialog(response, daveImage));","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"iynixil":14,"-":52}},{"path":"src/main/java/dave/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import dave.utils.DateTimeUtil;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"    /** The deadline of the task. */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"     * Creates new Deadline object.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"     * @param desc     Name or description of Deadline object.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"     * @param deadline Deadline of task.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"    public Deadline(String desc, String deadlineInput) {","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"        super(desc);","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"        deadline \u003d LocalDateTime.parse(deadlineInput, DateTimeUtil.FORMATTER_INPUT);","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"        return deadline;","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"     * Formats the printing of the Deadline object when shown to user.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"     * @return Printing of the Deadline object.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"        return String.format(\"[Deadline]%s (by: %s)\", super.toString(),","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"                deadline.format(DateTimeUtil.FORMATTER_OUTPUT));","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"     * Formats the output of the Deadline object in output file.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"     * @return The output to be written in the output file.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"    public String fileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"        return String.format(\"DEADLINE | %s | %s\", super.fileString(),","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"                deadline.format(DateTimeUtil.FORMATTER_INPUT));","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"iynixil":48}},{"path":"src/main/java/dave/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import dave.utils.DateTimeUtil;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"    /** Time when event starts. */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"    /** Time when event ends. */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"     * Creates new Event object.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     * @param desc Name or description of Event object.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"     * @param from Time when event starts.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"     * @param to   Time when event ends.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    public Event(String desc, String fromInput, String toInput) {","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"        super(desc);","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"        from \u003d LocalDateTime.parse(fromInput, DateTimeUtil.FORMATTER_INPUT);","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"        to \u003d LocalDateTime.parse(toInput, DateTimeUtil.FORMATTER_INPUT);","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"        return from;","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"     * Formats the printing of the Event object when shown to user.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"     * @return Printing of the Event object.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"        return String.format(\"[Event]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"                from.format(DateTimeUtil.FORMATTER_OUTPUT), to.format(DateTimeUtil.FORMATTER_OUTPUT));","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"     * Formats the output of the Event object in output file.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"     * @return The output to be written in the output file.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"    public String fileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"        return String.format(\"EVENT | %s | %s | %s\", super.fileString(), from.format(DateTimeUtil.FORMATTER_INPUT),","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"                to.format(DateTimeUtil.FORMATTER_INPUT));","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"iynixil":53}},{"path":"src/main/java/dave/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.utils.DateTimeUtil;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"public class Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"    /** Name or description of task. */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"    protected String desc;","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"    /** Completion status of task. */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"     * Creates new Task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     * @param desc Name or description of Task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"    public Task(String descInput) {","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"        desc \u003d descInput;","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"        /**","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"         * Solution below inspired by","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"         * https://nus-cs2103-ay2324s2.github.io/website/schedule/week2/project.html","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"         * partial solution under Duke Level-3: Mark as Done","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"         */","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"        return (isDone ? \"X\" : \" \"); // mark X if task is completed","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"        return desc;","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"    public void setDone(boolean isDoneInput) {","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"        isDone \u003d isDoneInput;","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"     * Checks if a task has a due date.","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"     * Only applicable for deadline or event tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"     * @return True for deadline or event tasks, false otherwise.","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"    public boolean isTaskWithDueDate() {","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"        return true;","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"        return null;","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"        return isDone;","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"     * Checks if a given deadline or event task is due within a week.","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"     * @return True if deadline or event task is due within a week, false otherwise.","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"    public boolean isTaskDueWithinAWeek() {","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"        if (isTaskWithDueDate()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"            return DateTimeUtil.isWithinAWeekFromNow(getDueDate());","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"iynixil"},"content":"        return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"iynixil"},"content":"     * Formats the printing of the Task object when shown to user.","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"iynixil"},"content":"     * @return Printing of the Task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":76,"author":{"gitId":"iynixil"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":77,"author":{"gitId":"iynixil"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), desc);","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":79,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"iynixil"},"content":"     * Formats the output of the Task object in output file.","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"iynixil"},"content":"     * @return The output to be written in the output file.","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"iynixil"},"content":"    public String fileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"iynixil"},"content":"        return String.format(\"%s | %s\", getStatusIcon().equals(\"X\") ? \"COMPLETED\" : \"INCOMPLETE\", desc);","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"iynixil":88}},{"path":"src/main/java/dave/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"     * Creates new Todo object.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"     * @param desc Name or description of Todo object.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"    public Todo(String desc) {","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"        super(desc);","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"     * @{inheritDoc}","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"    public boolean isTaskWithDueDate() {","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"        return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"     * Formats the printing of the Todo object when shown to user.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"     * @return Printing of the Todo object.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"        return String.format(\"[To-do]%s\", super.toString());","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"     * Formats the output of the Todo object in output file.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"     * @return The output to be written in the output file.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"    public String fileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"        return String.format(\"TODO | %s\", super.fileString());","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"iynixil":42}},{"path":"src/main/java/dave/utils/DateTimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave.utils;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"public class DateTimeUtil {","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"    /** The format of the input. */","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"    public static final DateTimeFormatter FORMATTER_INPUT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"    /** The format of the output. */","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"    public static final DateTimeFormatter FORMATTER_OUTPUT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy ha\");","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"     * Get the current system time.","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"     * @return The current system time.","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"    public static LocalDateTime getCurrentTime() {","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"        return LocalDateTime.now();","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"     * Get the time a week later from now.","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"     * @return The system time a week later from now.","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"    public static LocalDateTime getAWeekFromNow() {","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"        return LocalDateTime.now().plusWeeks(1);","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"     * Format the current time.","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"     * @return The formatted string of the current time.","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"    public static String getCurrentTimeAsString() {","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"        return getCurrentTime().format(FORMATTER_OUTPUT);","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"iynixil"},"content":"     * Format the time a week later from now.","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"iynixil"},"content":"     * @return The formatted string of the time a week later from now.","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"iynixil"},"content":"    public static String getAWeekFromNowAsString() {","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"iynixil"},"content":"        return getAWeekFromNow().format(FORMATTER_OUTPUT);","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"iynixil"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"iynixil"},"content":"     * Checks if a given due date for a task is within a week from now.","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"iynixil"},"content":"     * ","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"iynixil"},"content":"     * @param taskDate The due date of a task.","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"iynixil"},"content":"     * @return True if the due date of a task is within a week from now, false","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"iynixil"},"content":"     *         otherwise.","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"iynixil"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"iynixil"},"content":"    public static boolean isWithinAWeekFromNow(LocalDateTime taskDate) {","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"iynixil"},"content":"        int dayOfYearNow \u003d getCurrentTime().getDayOfYear();","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"iynixil"},"content":"        int dayOfYearAWeekLater \u003d getAWeekFromNow().getDayOfYear();","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"iynixil"},"content":"        if (taskDate.getYear() \u003d\u003d getCurrentTime().getYear()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"iynixil"},"content":"            int dayOfYearOfTask \u003d taskDate.getDayOfYear();","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"iynixil"},"content":"            if (dayOfYearOfTask \u003e\u003d dayOfYearNow \u0026\u0026 dayOfYearOfTask \u003c\u003d dayOfYearAWeekLater) {","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"iynixil"},"content":"                return true;","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"iynixil"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"iynixil"},"content":"        return false;","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"iynixil":66}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- @@author iynixil-reused","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    (part 4 of the tutorial) with minor modifications","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003c!-- @@author iynixil-reused","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            from https://github.com/alfaloo/ip/blob/master/src/main/resources/view/DialogBox.fxml","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            with minor modifications","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cTextFlow\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cText fx:id\u003d\"dialog\" text\u003d\"Text\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cInsets bottom\u003d\"0\" left\u003d\"10.0\" right\u003d\"0.0\" top\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/TextFlow\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cclip\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \u003cCircle radius\u003d\"50\" centerX\u003d\"50\" centerY\u003d\"50\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"iynixil":10,"-":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- @@author iynixil-reused","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    (part 4 of the tutorial) with minor modifications","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"dave.gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"iynixil":8,"-":15}},{"path":"src/test/java/dave/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.exceptions.ChatbotException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    public void parse_deleteCommand_exceptionThrown() {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"            Parser.parse(\"delete 1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"        } catch (ChatbotException exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"            assertEquals(\"__________________________________________________\\r\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"                    + \"\\r\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"                    + \"Dave could not find the specified task.\\r\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"                    + \"Note that there are 0 task(s) currently.\\r\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"                    + \"____________________________________________________________\\r\\n\",","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"                    exc.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"    public void parse_newDeadlineCommand_exceptionThrown() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"iynixil"},"content":"            Parser.parse(\"deadline\");","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"iynixil"},"content":"        } catch (ChatbotException exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"iynixil"},"content":"            assertEquals(\"____________________________________________________________\"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"iynixil"},"content":"                    + \"\\nDave cannot record a DEADLINE task without a name/deadline.\"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"iynixil"},"content":"                    + \"\\nPlease help Dave by entering your DEADLINE task as follows:\"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"iynixil"},"content":"                    + \"\\n\\ndeadline \u003cname\u003e /by dd-mm-yyyy hhmm\"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"iynixil"},"content":"                    + \"\\n____________________________________________________________\",","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"iynixil"},"content":"                    exc.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":37}},{"path":"src/test/java/dave/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"package dave;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"import dave.tasks.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"iynixil"},"content":"    public void taskList_getTask_exceptionThrown() {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"iynixil"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"iynixil"},"content":"            new TaskList().getTask(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"iynixil"},"content":"        } catch (Exception exc) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"            assertEquals(\"Index 1 out of bounds for length 0\",","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"                        exc.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"    public void taskList_getTask_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"iynixil"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"iynixil"},"content":"        taskList.addTask(new Todo(\"read book\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"iynixil"},"content":"        assertEquals(\"[To-do][ ] read book\", taskList.getTask(0).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"iynixil"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iynixil"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"iynixil"},"content":"todo","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iynixil"},"content":"deadline return book by Sunday","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iynixil"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"iynixil"},"content":"todo read book","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"iynixil"},"content":"deadline return book /by 02/02/2012 1800","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"iynixil"},"content":"mark 2","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"iynixil"},"content":"event proj meeting /from 02/02/2012 1900 /to 02/02/2012 2000","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"iynixil"},"content":"delete 4","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"iynixil"},"content":"bye","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iynixil":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"iynixil"},"content":"# delete output from previous run","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"iynixil"},"content":"if [ -d \"./data\" ]","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"iynixil"},"content":"then","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"iynixil"},"content":"    rm -rf data","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"iynixil"},"content":"fi","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"iynixil"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"iynixil":7,"-":38}}]
