[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"# Test generation setup help","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"Only run this if you\u0027re sure your program works as intended `./text-ui-test/runtest.sh \u003e ./text-ui-test/EXPECTED.txt`","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tankh99":5,"-":24}},{"path":"src/main/java/Dao/DeadlineDao.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Dao;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import Database.Database;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"import Enums.TaskType;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"import Models.Deadline;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"import Models.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"import Utils.DateUtils;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"import Utils.StringUtils;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"import java.util.List;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"public class DeadlineDao extends TaskDao {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"  public static final String NAME \u003d TaskType.DEADLINE.getCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"  private static final String byString \u003d \"/by\";","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"  public static Deadline getFrom(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"    String name \u003d getName(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"    LocalDateTime deadline \u003d getDeadline(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"    Deadline deadlineTask \u003d new Deadline(name, deadline);","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"    return deadlineTask;","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"  private static String getName(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"    String name \u003d StringUtils.getValueOfCommand(input, DeadlineDao.NAME, byString);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"    return name;","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"tankh99"},"content":"  private static LocalDateTime getDeadline(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"tankh99"},"content":"    String deadlineString \u003d StringUtils.getValueOfCommand(input, byString, null);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"tankh99"},"content":"    LocalDateTime deadline \u003d DateUtils.parseDate(deadlineString);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"tankh99"},"content":"    return deadline;","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"tankh99"},"content":"  public static List\u003cDeadline\u003e getDeadlines() {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"tankh99"},"content":"    File table \u003d Database.getTable(NAME);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"tankh99"},"content":"    List\u003cDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"tankh99"},"content":"    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"tankh99"},"content":"      Files.lines(table.toPath()).forEach(line -\u003e {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"tankh99"},"content":"        Deadline deadline \u003d Deadline.fromDataString(line);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"tankh99"},"content":"        deadlines.add(deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"tankh99"},"content":"      });","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"tankh99"},"content":"    } catch (IOException ex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"tankh99"},"content":"      ex.printStackTrace();","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"tankh99"},"content":"    return deadlines;","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tankh99":53}},{"path":"src/main/java/Dao/EventDao.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Dao;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import Database.Database;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"import Enums.TaskType;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"import Models.Event;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"import Utils.StringUtils;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"import java.util.List;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"public class EventDao extends TaskDao {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"  public static final String NAME \u003d TaskType.EVENT.getCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"  private static final String FROM_STRING \u003d \"/from\";","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"  private static final String TO_STRING \u003d \"/to\";","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"  public static Event getFrom(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"    String name \u003d getEventName(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"    String startDate \u003d getEventFrom(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"    String endDate \u003d getEventTo(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"    Event event \u003d new Event(name, startDate, endDate);","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"    return event;","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"  public static List\u003cEvent\u003e getEvents() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"    File table \u003d Database.getTable(NAME);","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"    List\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"      Files.lines(table.toPath()).forEach(line -\u003e {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"        Event event \u003d Event.fromDataString(line);","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"tankh99"},"content":"        events.add(event);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"tankh99"},"content":"      });","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"tankh99"},"content":"    } catch (IOException ex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"tankh99"},"content":"      ex.printStackTrace();","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"tankh99"},"content":"    return events;","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"tankh99"},"content":"  private static String getEventName(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"tankh99"},"content":"    return StringUtils.getValueOfCommand(input, EventDao.NAME, EventDao.FROM_STRING);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"tankh99"},"content":"  private static String getEventTo(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"tankh99"},"content":"    return StringUtils.getValueOfCommand(input, EventDao.TO_STRING, null);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"tankh99"},"content":"  private static String getEventFrom(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"tankh99"},"content":"    return StringUtils.getValueOfCommand(input, EventDao.FROM_STRING, EventDao.TO_STRING);","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tankh99":51}},{"path":"src/main/java/Dao/TaskDao.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Dao;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import Database.Database;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"import Models.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":" * This class offers more general functions that encompasses the different Task inheritors like marking as done","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"public class TaskDao {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"     * @param id the id of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"     * @param NAME the file name of the object to update. e.g. if marking a todo, then it should be value of","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"     *             TodoDao NAME","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"     * @param task The task to modify and update","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"     * @param done Whether it should be marked as done or not","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"     * @return","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"    public static Task mark(long id, String NAME, Task task, boolean done) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"        File table \u003d Database.getTable(NAME);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"        task.setDone(done);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"        String data \u003d task.toDataString();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"        Database.updateById(table.toPath(), id, data);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"        return task;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"    public static void add(String NAME, Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"        File table \u003d Database.getTable(NAME);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"tankh99"},"content":"        String data \u003d task.toDataString();","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"tankh99"},"content":"        long id \u003d Database.create(table.toPath(), data);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"tankh99"},"content":"        task.setId(id);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"tankh99"},"content":"    public static void delete(String NAME, long id) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"tankh99"},"content":"        File table \u003d Database.getTable(NAME);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"tankh99"},"content":"        Database.delete(table.toPath(), id);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tankh99":41}},{"path":"src/main/java/Dao/TodoDao.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Dao;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import Database.Database;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"import Enums.TaskType;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"import Models.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"import Models.Todo;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"import Utils.StringUtils;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"import java.util.List;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"public class TodoDao extends TaskDao {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"  public static final String NAME \u003d TaskType.TODO.getCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"  public static Todo getFrom(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"    String value \u003d StringUtils.getValueOfCommand(input, TodoDao.NAME, null);","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"    return new Todo(value);","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"  public static List\u003cTodo\u003e getTodos() {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"    File table \u003d Database.getTable(NAME);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"    List\u003cTodo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"      Files.lines(table.toPath()).forEach(line -\u003e {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"        Todo todo \u003d Todo.fromDataString(line);","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"        todos.add(todo);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"      });","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"    } catch (IOException ex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"      ex.printStackTrace();","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"tankh99"},"content":"    return todos;","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tankh99":35}},{"path":"src/main/java/Database/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Database;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import Utils.FileUtils;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"import Utils.StringUtils;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"import java.io.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"public class Database {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"    private static final String FILE_PATH \u003d \"database.db\";","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"    public static File getTable(String fileName) {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"        String baseDir \u003d System.getProperty(\"user.dir\") + \"/src/main/java/Database\";","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"            String filePath \u003d baseDir + \"/\" + fileName + \".txt\";","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"            File db \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"            if (!db.exists() \u0026\u0026 db.createNewFile()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"                System.out.println(\"Creating new file\");","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"            return db;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"            ex.printStackTrace();","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"        return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"    public static long create(Path filePath, String line) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"            long count \u003d Files.lines(filePath).count();","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"            long id \u003d count;","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"tankh99"},"content":"            line \u003d id + \" | \" + line;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"tankh99"},"content":"            List\u003cString\u003e lines \u003d FileUtils.read(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"tankh99"},"content":"            lines.add(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"tankh99"},"content":"            FileUtils.write(filePath, lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"tankh99"},"content":"            return id;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"tankh99"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"tankh99"},"content":"            ex.printStackTrace();","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"tankh99"},"content":"            System.err.println(\"Error occurred when writing to \" + filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"tankh99"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"tankh99"},"content":"        return -1; // -1 indicates error","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"tankh99"},"content":"    public static String findById(String filePath, int id) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"tankh99"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"tankh99"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"tankh99"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"tankh99"},"content":"            do {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"tankh99"},"content":"                int lineId \u003d findId(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"tankh99"},"content":"                if (lineId \u003d\u003d id) return line;","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"tankh99"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"tankh99"},"content":"            } while (line !\u003d null);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"tankh99"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"tankh99"},"content":"            ex.printStackTrace();","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"tankh99"},"content":"            System.err.println(\"Error occurred when writing to \" + filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"tankh99"},"content":"        } finally {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"tankh99"},"content":"            return null;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"tankh99"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"tankh99"},"content":"    public static void updateById(Path filePath, long id, String newLine) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"tankh99"},"content":"        newLine \u003d id + \" | \" + newLine;","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"tankh99"},"content":"        List\u003cString\u003e lines \u003d FileUtils.read(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"tankh99"},"content":"        for (int i \u003d 0; i \u003c lines.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"tankh99"},"content":"            String line \u003d lines.get(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"tankh99"},"content":"            long taskId \u003d findId(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"tankh99"},"content":"            if (taskId \u003d\u003d id) {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"tankh99"},"content":"                lines.set(i, newLine);","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"tankh99"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"tankh99"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"tankh99"},"content":"        FileUtils.write(filePath, lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"tankh99"},"content":"    public static void delete(Path filePath, long id) {","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"tankh99"},"content":"        List\u003cString\u003e lines \u003d FileUtils.read(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"tankh99"},"content":"        int idToDelete \u003d -1;","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"tankh99"},"content":"        for (int i \u003d 0; i \u003c lines.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"tankh99"},"content":"            String line \u003d lines.get(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"tankh99"},"content":"            long taskId \u003d findId(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"tankh99"},"content":"            if (taskId \u003d\u003d id) {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"tankh99"},"content":"                // Avoid concurrent moficiation","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"tankh99"},"content":"                idToDelete \u003d i;","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"tankh99"},"content":"                break; // Breaking because we assume that ID is unique","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"tankh99"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"tankh99"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"tankh99"},"content":"        lines.remove(idToDelete);","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"tankh99"},"content":"        FileUtils.write(filePath, lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"tankh99"},"content":"    private static int findId(String line) {","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"tankh99"},"content":"        String[] segments \u003d StringUtils.splitDataString(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"tankh99"},"content":"        return Integer.parseInt(segments[0]);","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"tankh99":96}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-19"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-19"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"import Managers.TaskManager;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"        System.out.println(\"Hello, I\u0027m Baron. What can I do for you?\");","lastModifiedDate":"2024-01-19"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-19"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"        String input;","lastModifiedDate":"2024-01-19"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2024-01-19"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"        do {","lastModifiedDate":"2024-01-19"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-19"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"            taskManager.handleInput(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"        } while (!input.equals(\"bye\"));","lastModifiedDate":"2024-01-19"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"        ","lastModifiedDate":"2024-01-19"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"        scanner.close();","lastModifiedDate":"2024-01-19"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"        System.out.println(\"Bye, good riddance\");","lastModifiedDate":"2024-01-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tankh99":18,"-":10}},{"path":"src/main/java/Enums/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Enums;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"public enum Commands {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"  LIST(\"list\"),","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"  MARK(\"mark\"),","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"  UNMARK(\"unmark\"),","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"  DELETE(\"delete\"),","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"  BYE(\"bye\");","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"  private final String command;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"  Commands(String command) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"      this.command \u003d command;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"  public String getCommand() {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"      return command;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"tankh99":20}},{"path":"src/main/java/Enums/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Enums;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"public enum TaskType {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"    EVENT(\"event\");","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"    private final String command;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"    TaskType(String command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"    public String getCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"        return command;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tankh99":18}},{"path":"src/main/java/Managers/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Managers;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import java.util.List;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"import Dao.DeadlineDao;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"import Dao.EventDao;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"import Dao.TaskDao;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"import Dao.TodoDao;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"import Enums.Commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"import Enums.TaskType;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"import Models.Deadline;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"import Models.Event;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"import Models.Task;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"import Models.Todo;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"import Utils.StringUtils;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"// TODO: Stretch goal: add exceptions for marking and listing non-existent indexes","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"public class TaskManager {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"  private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"  public TaskManager() {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"    List\u003cTodo\u003e todos \u003d TodoDao.getTodos();","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"    tasks.addAll(todos);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"    List\u003cDeadline\u003e deadlines \u003d DeadlineDao.getDeadlines();","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"    tasks.addAll(deadlines);","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"    List\u003cEvent\u003e events \u003d EventDao.getEvents();","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"    tasks.addAll(events);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"  private Task get(int i) {","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"tankh99"},"content":"    return this.tasks.get(i);","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"tankh99"},"content":"  protected void add(Task task) {","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"tankh99"},"content":"    tasks.add(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"tankh99"},"content":"    UIManager.add(task, tasks.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"tankh99"},"content":"  protected void delete(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"tankh99"},"content":"    int i \u003d Integer.parseInt(StringUtils.getValueOfCommand(input, Commands.DELETE.getCommand(), null)) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"tankh99"},"content":"    Task task \u003d this.tasks.remove(i);","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"tankh99"},"content":"    TaskType type \u003d getTaskType(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"tankh99"},"content":"    TaskDao.delete(type.getCommand(), task.getId());","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"tankh99"},"content":"    UIManager.delete(task, this.tasks.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"tankh99"},"content":"  protected static String getCommand(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"tankh99"},"content":"    return input.split(\" \")[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"tankh99"},"content":"  protected static String getValue(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"tankh99"},"content":"    if (input.split(\" \").length \u003c\u003d 1) throw new IllegalArgumentException(\"Value expected but not found\");","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"tankh99"},"content":"    return input.split(\" \")[1];","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"tankh99"},"content":"  public void handleInput(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"tankh99"},"content":"    try {","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"tankh99"},"content":"      input \u003d input.trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"tankh99"},"content":"      String command \u003d getCommand(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"tankh99"},"content":"      // Decided to pass the entire input instead because otherwise we would have to parse the input into command and value","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"tankh99"},"content":"      // which would not be appropriate here since it includes a list() function too","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"tankh99"},"content":"      if (command.equals(TodoDao.NAME)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"tankh99"},"content":"        addTodo(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"tankh99"},"content":"      } else if (command.equals(DeadlineDao.NAME)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"tankh99"},"content":"        addDeadline(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"tankh99"},"content":"      } else if (command.equals(EventDao.NAME)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"tankh99"},"content":"        addEvent(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"tankh99"},"content":"      } else if (command.equals(Commands.LIST.getCommand())) {","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"tankh99"},"content":"        UIManager.list(this.tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"tankh99"},"content":"      } else if (command.equals(Commands.MARK.getCommand())) {","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"tankh99"},"content":"        mark(input, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"tankh99"},"content":"      } else if (command.equals(Commands.UNMARK.getCommand())) {","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"tankh99"},"content":"        mark(input, false);","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"tankh99"},"content":"      }  else if (command.equals(Commands.DELETE.getCommand())) {","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"tankh99"},"content":"        delete(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"tankh99"},"content":"      } else if (command.equals(Commands.BYE.getCommand())) {","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"tankh99"},"content":"        return;","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"tankh99"},"content":"      } else if (command.equals(\"text\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"tankh99"},"content":"        EventDao.getEvents();","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"tankh99"},"content":"      } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"tankh99"},"content":"        throw new IllegalArgumentException(\"Command not recognized\");","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"tankh99"},"content":"      }","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"tankh99"},"content":"    } catch (Exception ex) {","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"tankh99"},"content":"      System.out.println(ex.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"tankh99"},"content":"  private void addTodo(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"tankh99"},"content":"    Todo todo \u003d TodoDao.getFrom(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"tankh99"},"content":"    TaskDao.add(TodoDao.NAME, todo);","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"tankh99"},"content":"    this.add(todo);","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"tankh99"},"content":"  private void addDeadline(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"tankh99"},"content":"    Deadline deadline \u003d DeadlineDao.getFrom(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"tankh99"},"content":"    DeadlineDao.add(DeadlineDao.NAME, deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"tankh99"},"content":"    this.add(deadline);","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"tankh99"},"content":"  private void addEvent(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"tankh99"},"content":"    Event event \u003d EventDao.getFrom(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"tankh99"},"content":"    EventDao.add(EventDao.NAME, event);","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"tankh99"},"content":"    this.add(event);","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"tankh99"},"content":"  private void mark(String input, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"tankh99"},"content":"    int taskIndex \u003d Integer.parseInt(StringUtils.getValueOfCommand(input, Commands.MARK.getCommand(), null)) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"tankh99"},"content":"    Task task \u003d this.get(taskIndex);","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"tankh99"},"content":"    TaskType type \u003d getTaskType(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"tankh99"},"content":"    task \u003d TaskDao.mark(task.getId(), type.getCommand(), task, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"tankh99"},"content":"    UIManager.mark(task, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"tankh99"},"content":"  /**","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"tankh99"},"content":"   * Determines type of task (todo, event) based off the command line string","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"tankh99"},"content":"   * Very simplistic, TODO: Validate against inputs with [T[ to avoid invalid clasification","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"tankh99"},"content":"   * @param input the formatted line, e.g. [T][X} Wash dishes","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"tankh99"},"content":"   * @return The type of task","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"tankh99"},"content":"   */","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"tankh99"},"content":"  private TaskType getTaskType(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"tankh99"},"content":"    if (input.contains(\"[T]\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"tankh99"},"content":"      return TaskType.TODO;","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"tankh99"},"content":"    } else if (input.contains(\"[D]\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"tankh99"},"content":"      return TaskType.DEADLINE;","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"tankh99"},"content":"    } else if (input.contains(\"[E]\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"tankh99"},"content":"      return TaskType.EVENT;","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"tankh99"},"content":"    throw new IllegalArgumentException(\"Could not find task type for input \" + input);","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":132,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tankh99":132}},{"path":"src/main/java/Managers/UIManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Managers;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import Models.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"public class UIManager {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"    public static void printSeparator() {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"    public static void add(Task task, int count) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"        printSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"        System.out.println(\"Got it, I\u0027ve added this task: \\n  \" + task);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"        System.out.println(\"Now you have \" + count + \" tasks in the list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"        printSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"    public static void delete(Task task, int count) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"        printSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"        System.out.println(\"Noted, I\u0027ve removed this task: \\n  \" + task);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"        System.out.println(\"Now you have \" + count + \" tasks in the list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"        printSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"    public static void list(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"        printSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"        printSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"tankh99"},"content":"    public static void mark(Task task, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"tankh99"},"content":"        printSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"tankh99"},"content":"        String doneStr \u003d isDone ? \"done\" : \"not done\";","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"tankh99"},"content":"        System.out.println(\"Okay, I\u0027ve marked this task as \" + doneStr + \": \\n\" + task);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"tankh99"},"content":"        printSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tankh99":40}},{"path":"src/main/java/Models/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Models;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import Utils.DateUtils;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-19"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"  private LocalDateTime deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"  public Deadline(String name, LocalDateTime deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"    super(name);","lastModifiedDate":"2024-01-19"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"    this.deadline \u003d deadline;","lastModifiedDate":"2024-01-19"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"  public Deadline(int id, String name, boolean done, LocalDateTime deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"    super(id, name, done);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"    this.deadline \u003d deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"  @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"  public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"    return \"[D]\" + super.toString() + \" (by: \" + DateUtils.formatDate(deadline) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"  public String toDataString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"    return super.toDataString() + \" | \"  + this.deadline.format(DateUtils.INPUT_FORMATTER);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"  public static Deadline fromDataString(String data) {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"    String[] segments \u003d data.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"    int id \u003d Integer.parseInt(segments[0]);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"    boolean done \u003d Long.parseLong(segments[1]) \u003d\u003d 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"tankh99"},"content":"    // Strong assumption that there is no | in the data","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"tankh99"},"content":"    String name \u003d segments[2];","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"tankh99"},"content":"    LocalDateTime deadline \u003d DateUtils.parseDate(segments[3]);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"tankh99"},"content":"    return new Deadline(id, name, done, deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"tankh99":37}},{"path":"src/main/java/Models/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Models;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-19"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"  private String startDate;","lastModifiedDate":"2024-01-19"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"  private String endDate;","lastModifiedDate":"2024-01-19"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"  public Event(String name, String startDate, String endDate) {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"    super(name);","lastModifiedDate":"2024-01-19"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"    this.startDate \u003d startDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"    this.endDate \u003d endDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"  public Event(int id, String name, boolean done, String startDate, String endDate) {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"    super(id, name, done);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"    this.startDate \u003d startDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"    this.endDate \u003d endDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"  public String getStartDate() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"    return this.startDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"  public void setStartDate(String startDate) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"    this.startDate \u003d startDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"  public String getEndDate() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"    return this.endDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"  public void setEndDate(String endDate) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"    this.endDate \u003d endDate;","lastModifiedDate":"2024-01-19"},{"lineNumber":32,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":33,"author":{"gitId":"tankh99"},"content":"  ","lastModifiedDate":"2024-01-19"},{"lineNumber":34,"author":{"gitId":"tankh99"},"content":"  @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":35,"author":{"gitId":"tankh99"},"content":"  public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":36,"author":{"gitId":"tankh99"},"content":"    return \"[E]\" + super.toString() + \" (from: \" + startDate + \" to: \" + endDate + \")\";","lastModifiedDate":"2024-01-19"},{"lineNumber":37,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":38,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"tankh99"},"content":"  public String toDataString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"tankh99"},"content":"    return super.toDataString() + \" | \" + this.startDate + \" | \" + this.endDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"tankh99"},"content":"  public static Event fromDataString(String data) {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"tankh99"},"content":"    String[] segments \u003d data.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"tankh99"},"content":"    int id \u003d Integer.parseInt(segments[0]);","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"tankh99"},"content":"    boolean done \u003d Long.parseLong(segments[1]) \u003d\u003d 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"tankh99"},"content":"    // Strong assumption that there are not | in the data","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"tankh99"},"content":"    String name \u003d segments[2];","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"tankh99"},"content":"    String from \u003d segments[3];","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"tankh99"},"content":"    String to \u003d segments[4];","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"tankh99"},"content":"    Event event \u003d new Event(id, name, done, from, to);","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"tankh99"},"content":"    return event;","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"tankh99":55}},{"path":"src/main/java/Models/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Models;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import Database.Database;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"public class Task {","lastModifiedDate":"2024-01-19"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"  private long id;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"  private String name;","lastModifiedDate":"2024-01-19"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"  private boolean isDone;","lastModifiedDate":"2024-01-19"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"  public Task(String name) {","lastModifiedDate":"2024-01-19"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"    this.name \u003d name;","lastModifiedDate":"2024-01-19"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2024-01-19"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"  public Task(String name, boolean isDone) {","lastModifiedDate":"2024-01-19"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"    this.name \u003d name;","lastModifiedDate":"2024-01-19"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"    this.isDone \u003d isDone;","lastModifiedDate":"2024-01-19"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"  public Task(int id, String name, boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"    this.id \u003d id;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"    this.name \u003d name;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"    this.isDone \u003d isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"  public long getId() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"    return this.id;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"tankh99"},"content":"  public void setId(long id) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"tankh99"},"content":"    this.id \u003d id;","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"tankh99"},"content":"  public String getName() {","lastModifiedDate":"2024-01-19"},{"lineNumber":37,"author":{"gitId":"tankh99"},"content":"    return name;","lastModifiedDate":"2024-01-19"},{"lineNumber":38,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":39,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":40,"author":{"gitId":"tankh99"},"content":"  public boolean isDone() {","lastModifiedDate":"2024-01-19"},{"lineNumber":41,"author":{"gitId":"tankh99"},"content":"    return isDone;","lastModifiedDate":"2024-01-19"},{"lineNumber":42,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":43,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":44,"author":{"gitId":"tankh99"},"content":"  public void setDone(boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"tankh99"},"content":"    this.isDone \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":47,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":48,"author":{"gitId":"tankh99"},"content":"  @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":49,"author":{"gitId":"tankh99"},"content":"  public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":50,"author":{"gitId":"tankh99"},"content":"    String done \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-19"},{"lineNumber":51,"author":{"gitId":"tankh99"},"content":"    return \"[\" + done + \"] \" + name;","lastModifiedDate":"2024-01-19"},{"lineNumber":52,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":53,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"tankh99"},"content":"  public String toDataString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"tankh99"},"content":"    String done \u003d this.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"tankh99"},"content":"    return done + \" | \" + this.getName();","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"tankh99":58}},{"path":"src/main/java/Models/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Models;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-19"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"  public Todo(String name) {","lastModifiedDate":"2024-01-19"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"    super(name);","lastModifiedDate":"2024-01-19"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"  public Todo(int id, String name, boolean done) {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"    super(id, name, done);","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"  @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"  public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-19"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-19"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"  public String toDataString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"    return super.toDataString();","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"  public static Todo fromDataString(String data) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"    String[] segments \u003d data.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"    int id \u003d Integer.parseInt(segments[0]);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"    boolean done \u003d Long.parseLong(segments[1]) \u003d\u003d 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"    // Strong assumption that there is no | in the data","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"    String name \u003d segments[2];","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"    return new Todo(id, name, done);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"tankh99":30}},{"path":"src/main/java/Utils/DateUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Utils;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"public class DateUtils {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"    // 03/21/1999 1600","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"    public static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"    public static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy, ha\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"    public static LocalDateTime parseDate(String dateString) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"            return LocalDateTime.parse(dateString, INPUT_FORMATTER);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"            throw new IllegalArgumentException(\"Invalid date string given. Expected format is d/M/yyyy HHmm (e.g. 21/10/1999 1600)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"    public static String formatDate(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"            return dateTime.format(OUTPUT_FORMATTER);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"            throw new IllegalArgumentException(\"Invalid date string given. Expected format is d/M/yyyy HHmm (e.g. 21/10/1999 1600)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tankh99":27}},{"path":"src/main/java/Utils/FileUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Utils;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"public class FileUtils {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"    public static List\u003cString\u003e read(Path filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"             lines \u003d Files.readAllLines(filePath, StandardCharsets.UTF_8);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"            ex.printStackTrace();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"        return lines;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"    public static void write(Path filePath, List\u003cString\u003e lines) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"            Files.write(filePath, lines, StandardCharsets.UTF_8);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"            ex.printStackTrace();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"tankh99":31}},{"path":"src/main/java/Utils/StringUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"package Utils;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"public class StringUtils {","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"  public static int getIndexOf(String input, String toFind) {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"    int index \u003d input.indexOf(toFind);","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"    if (index \u003d\u003d -1) throw new IllegalArgumentException(\"No \" + toFind + \" specified\");","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"    return index;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"  public static int getIndexOf(String input, String toFind, int offset) {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"    int index \u003d input.indexOf(toFind) + offset;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"    if (index \u003c 0 || index \u003e\u003d input.length()) throw new IllegalArgumentException(\"No \" + toFind + \" specified\");","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"    return index;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"  /**","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"   * This function gets the value of a specified command string. ","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"   * @param input The entire string","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"   * @param command Command string to start search from. Search index is offset by the command\u0027s length","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"   * @param stopWord Optional parameter to indicate to the function that anything beyond this stopword\u0027s start index ","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"   * will not be the value of the command. Search index is offset by -1 to avoid collecting the stopwrod too","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"   * @return","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"   */","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"  public static String getValueOfCommand(String input, String command, String stopWord)  {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"    int commandIndex \u003d getIndexOf(input, command);","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"    // Validates against command that is at the end of the string","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"    if (commandIndex + command.length() \u003e\u003d input.length()) throw new IllegalArgumentException(\"No valid value found after \" + command);","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"tankh99"},"content":"    commandIndex +\u003d command.length();","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"    String value \u003d \"\";","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"tankh99"},"content":"    if (stopWord !\u003d null) {","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"tankh99"},"content":"      int endIndex \u003d getIndexOf(input, stopWord, -1);","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"tankh99"},"content":"      value \u003d input.substring(commandIndex, endIndex);","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"tankh99"},"content":"    } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"tankh99"},"content":"      value \u003d input.substring(commandIndex);","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"tankh99"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"tankh99"},"content":"    value \u003d value.trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"tankh99"},"content":"    if (value.isEmpty()) throw new IllegalArgumentException(\"No valid value found after \" + command);","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"tankh99"},"content":"    return value;","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"tankh99"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"tankh99"},"content":"  /**","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"tankh99"},"content":"   * This function simply abstracts out the splitting logic of the data string","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"tankh99"},"content":"   * @param data","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"tankh99"},"content":"   * @return","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"tankh99"},"content":"   */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"tankh99"},"content":"  public static String[] splitDataString(String data) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"tankh99"},"content":"    String[] segments \u003d data.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"tankh99"},"content":"    return segments;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"tankh99"},"content":"  }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"tankh99"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tankh99":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tankh99"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"todo eat something nice","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"deadline cs2103 assignment /by tomorrow","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"event clubbing all night /from tonight /to tomorrow morning","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"tankh99"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"tankh99"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"tankh99"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"tankh99"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"tankh99"},"content":"unmark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"tankh99"},"content":"deadline","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"deadline name name /by ","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"tankh99"},"content":"deadline name name /by tonight","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"tankh99"},"content":"event ","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"tankh99"},"content":"event name name /from","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"event /from tonight","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"tankh99"},"content":"event name name /from tonight","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"tankh99"},"content":"event name name /to","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"tankh99"},"content":"event name name /to tonight","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"tankh99"},"content":"event name name /from tonight yo /to","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"tankh99"},"content":"event name name /from /to","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"tankh99"},"content":"delete 1","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"delete 3","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"tankh99"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"tankh99":26}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"tankh99"},"content":"# Reference: https://stackoverflow.com/questions/59895/how-do-i-get-the-directory-where-a-bash-script-is-located-from-within-the-script","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"tankh99"},"content":"SCRIPT_DIR\u003d$( cd -- \"$( dirname -- \"${BASH_SOURCE[0]}\" )\" \u0026\u003e /dev/null \u0026\u0026 pwd )","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"tankh99"},"content":"echo $SCRIPT_DIR","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"tankh99"},"content":"if [ ! -d \"$SCRIPT_DIR/../bin\" ]","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"tankh99"},"content":"    mkdir $SCRIPT_DIR/../bin","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"tankh99"},"content":"if [ -e \"$SCRIPT_DIR/ACTUAL.TXT\" ]","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"tankh99"},"content":"    rm $SCRIPT_DIR/ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tankh99"},"content":"if ! javac -cp $SCRIPT_DIR/../src/main/java -Xlint:none -d $SCRIPT_DIR/../bin $SCRIPT_DIR/../src/main/java/Duke.java","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"tankh99"},"content":"java -classpath $SCRIPT_DIR/../bin Duke \u003c $SCRIPT_DIR/input.txt \u003e $SCRIPT_DIR/ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"tankh99"},"content":"diff $SCRIPT_DIR/ACTUAL.TXT $SCRIPT_DIR/EXPECTED.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tankh99":10,"-":26}}]
