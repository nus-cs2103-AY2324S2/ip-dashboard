[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"# Huyang Chatbot ðŸ¤–","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"\u003e \"Your mind is for having ideas, not holding them.\" â€“ David Allen ([source](https://gettingthingsdone.com/))","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"**Huyang** frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"- *text-based*","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"- **easy to learn**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"- ***FAST SUPER FAST*** to use","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"And it is **FREE** (for now)!","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"![Huyang](docs/Ui.png)","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"### Features:","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"- [x] Managing tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"- [x] Managing deadlines","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"- [x] Managing events","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"- [x] `delete`, `find`, `list` functions","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"## Installation","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"To create a JAR file, run `./gradlew shadowJar` in your terminal. Alternatively, you may download the JAR file directly.","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"### Download JAR File","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"You can download the latest version of our application from the [releases page](https://github.com/YourUsername/YourRepository/releases).","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"1. Navigate to the [releases page](https://github.com/hiivan/ip/releases).","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"2. Find the latest release version (e.g., v0.2) and click on it.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"3. Download the JAR file from the assets section.","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"### Usage","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"Once you\u0027ve downloaded the JAR file, you can use it in your project by including it in your classpath or running it using the `java -jar huyang.jar` command.","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"hiivan":34}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"checkstyle {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"    mainClass.set(\"huyang.Launcher\")","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"    archiveBaseName \u003d \"huyang\"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hiivan":22,"-":40}},{"path":"data/huyang_tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"D | 1 | read NGT readings | 2024-01-31T14:00:00","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"T | 1 | Read a book","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"E | 0 | Project meeting | 2023-03-20T14:00:00 to 2023-03-20T16:00:00","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"T | 0 | buy CNY goodies","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"T | 0 | grocery shopping","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"hiivan":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"# Huyang Chatbot ðŸ¤–","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"\u003e \"Your mind is for having ideas, not holding them.\" â€“ David Allen ([source](https://gettingthingsdone.com/))","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"**Huyang** frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"- *text-based*","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"- **easy to learn**","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"- ***FAST SUPER FAST*** to use","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"And it is **FREE** (for now)!","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"![Huyang](Ui.png)","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"### Features:","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"- [x] Managing tasks","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"- [x] Managing deadlines","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"- [x] Managing events","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"- [x] `delete`, `find`, `list` functions","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"## Installation","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"To create a JAR file, run `./gradlew shadowJar` in your terminal. Alternatively, you may download the JAR file directly.","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"### Download JAR File","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"You can download the latest version of our application from the [releases page](https://github.com/YourUsername/YourRepository/releases).","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"1. Navigate to the [releases page](https://github.com/hiivan/ip/releases).","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"2. Find the latest release version (e.g., v0.2) and click on it.","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"3. Download the JAR file from the assets section.","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"### Usage","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"Once you\u0027ve downloaded the JAR file, you can use it in your project by including it in your classpath or running it using the `java -jar huyang.jar` command.","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"## Commands to Manage Your Tasks","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"Interact with Huyang through typed commands in the following format: `COMMANDNAME ... /OPTION ...`","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"### `list`: View your tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"- **Usage**: `list`","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"  - Displays all tasks on your list.","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"### `todo`, `deadline`, `event`: Add a task to your list.","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"- **Usage**: `todo NAME`","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"  - Adds a todo task named `NAME` to your list.","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"- **Usage**: `deadline NAME /by DATE`","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"  - Adds a deadline task named `NAME` to your list, due by `DATE` in the format `YYYY-MM-DD HHMM`.","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"  - **Example**: `deadline Homework /by 2024-03-12 2359`","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"- **Usage**: `event NAME /from START_DATE /to END_DATE`","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"  - Adds an event task named `NAME` to your list, from `START_DATE` to `END_DATE`.","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"  - **Example**: `event Hackathon /from 2024-03-11 0000 /to 2024-03-12 2359`","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"### `mark`, `unmark`: Mark a task as done or not done.","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"- **Usage**: `mark INDEX`","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"  - Marks the task at `INDEX` as done.","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"- **Usage**: `unmark INDEX`","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"  - Reverses the action, marking the task as not done.","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"hiivan"},"content":"### `delete`: Remove a task from your list.","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"hiivan"},"content":"- **Usage**: `delete INDEX`","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"hiivan"},"content":"  - Removes the task at `INDEX`.","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"### `find`: Filter tasks by their names.","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"hiivan"},"content":"- **Usage**: `find TEXT`","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"hiivan"},"content":"  - Displays tasks that contain `TEXT` in their names.","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"hiivan"},"content":"### `bye`: Exit the app.","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"hiivan"},"content":"- **Usage**: `bye`","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"hiivan"},"content":"These commands are designed to make task management efficient and intuitive, allowing you to focus more on what matters most.","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"hiivan":59,"-":14}},{"path":"src/main/java/huyang/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":" * Represents a deadline task with a specified deadline time.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"     * @param taskName The name of the deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"     * @param by       The deadline time for the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"    public Deadline(String taskName, LocalDateTime by) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"        super(taskName);","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"    private String getTypeIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"        return \"[D]\";","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"     * Gets the deadline time for the task.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"     * @return The deadline time as a LocalDateTime object.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"        return by;","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"     * Converts the deadline task to a formatted string for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"     * @return A string in file format representing the deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + taskName + \" | \" + by.format(formatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"     * Creates a Deadline object from a string in file format.","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"     * @param fileFormat A string in file format representing a deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"     * @return A Deadline object created from the file format string.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"     * @throws TaskException if the file format is invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"    public static Deadline fromFileFormat(String fileFormat) throws TaskException {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"        String[] parts \u003d fileFormat.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"        LocalDateTime byTime \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"        Deadline deadline \u003d new Deadline(parts[2], byTime);","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"            deadline.setDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"hiivan"},"content":"        return deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"     * Converts the deadline task to a formatted string for displaying to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"hiivan"},"content":"     * @return A string representing the formatted deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"hiivan"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"hiivan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"hiivan"},"content":"        return getTypeIcon() + super.getStatusIcon() + \" \" + taskName","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"hiivan"},"content":"                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"hiivan":75}},{"path":"src/main/java/huyang/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"    private void flip() {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"    public static DialogBox getHuyangDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"        db.flip();","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"        return db;","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"hiivan":61}},{"path":"src/main/java/huyang/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"     * @param taskName The name of the event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"     * @param start    The start time of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"     * @param end      The end time of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"    public Event(String taskName, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"        super(taskName);","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"        assert start.isBefore(end) : \"Start time must be before end time.\";","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"     * Gets the start time of the event.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"     * @return The start time as a LocalDateTime object.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"        return start;","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"     * Gets the end time of the event.","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"     * @return The end time as a LocalDateTime object.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"        return end;","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"    private String getTypeIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"        return \"[E]\";","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"     * Converts the event task to a formatted string for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"     * @return A string in file format representing the event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + taskName + \" | \"","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"                + start.format(formatter) + \" to \" + end.format(formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"hiivan"},"content":"     * Creates an Event object from a string in file format.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"hiivan"},"content":"     * @param fileFormat A string in file format representing an event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"     * @return An Event object created from the file format string.","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"hiivan"},"content":"     * @throws TaskException if the file format is invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"hiivan"},"content":"    public static Event fromFileFormat(String fileFormat) throws TaskException {","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"hiivan"},"content":"        String[] parts \u003d fileFormat.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"hiivan"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"hiivan"},"content":"        String[] times \u003d parts[3].split(\" to \"); // Split by \" to \"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"hiivan"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(times[0], DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"hiivan"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(times[1], DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"hiivan"},"content":"        Event event \u003d new Event(description, start, end);","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"hiivan"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"hiivan"},"content":"            event.setDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"hiivan"},"content":"        return event;","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"hiivan"},"content":"     * Converts the event task to a formatted string for displaying to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"hiivan"},"content":"     * @return A string representing the formatted event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"hiivan"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"hiivan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"hiivan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"hiivan"},"content":"        return getTypeIcon() + super.getStatusIcon() + \" \" + taskName","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"hiivan"},"content":"                + \" (from: \" + start.format(formatter) + \" to: \" + end.format(formatter) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"hiivan":94}},{"path":"src/main/java/huyang/Huyang.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":" * The main class for the Huyang CLI chatbot that allows user","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":" * input to keep track of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"public class Huyang {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"     * Storage for handling the saving and loading of tasks from a file.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"     * It abstracts the details of how tasks are persisted in local storage.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"     * TaskList for managing the in-memory list of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"     * It provides operations such as add, delete, and search tasks within the list.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"     * Ui for handling user interactions.","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"     * It manages input reading and output formatting to present information to the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"     * Parser for interpreting user commands.","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"     * It translates user input into commands that can be executed by the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"     * Constructor for the Huyang class.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"     * Initializes the user interface, parser, and storage, and loads tasks from a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"    public Huyang() {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"        String relativePath \u003d \"data/huyang_tasks.txt\";","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"        this.storage \u003d new Storage(relativePath);","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"            this.tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"        } catch (IOException | TaskException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"            Ui.print(Ui.getErrorMessage(\"Error initializing tasks: \" + e.getMessage()));","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"            this.tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"     * Processes user commands and saves tasks to local storage. Generates a response based on the given command.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"     * @param input The user\u0027s input command.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"     * @return A response message generated based on the input.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"hiivan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"hiivan"},"content":"        Parser.CommandType command \u003d parser.parseCommand(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"hiivan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"hiivan"},"content":"            switch (command) {","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"            case LIST:","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"hiivan"},"content":"                return Ui.getTasksMessage(tasks.getTasks());","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"hiivan"},"content":"            case MARK:","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"hiivan"},"content":"                Task markedTask \u003d tasks.markOrUnmarkTask(input, true);","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"hiivan"},"content":"                storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"hiivan"},"content":"                return Ui.getMarkOrUnmarkMessage(markedTask, true);","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"hiivan"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"hiivan"},"content":"                Task unmarkedTask \u003d tasks.markOrUnmarkTask(input, false);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"hiivan"},"content":"                storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"hiivan"},"content":"                return Ui.getMarkOrUnmarkMessage(unmarkedTask, false);","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"hiivan"},"content":"            case TODO:","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"hiivan"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"hiivan"},"content":"            case EVENT:","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"hiivan"},"content":"                Task addedTask \u003d tasks.addTask(input, command);","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"hiivan"},"content":"                storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"hiivan"},"content":"                return Ui.getAddTaskMessage(addedTask, tasks.getSize());","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"hiivan"},"content":"            case DELETE:","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"hiivan"},"content":"                Task deletedTask \u003d tasks.deleteTask(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"hiivan"},"content":"                storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"hiivan"},"content":"                return Ui.getDeleteTaskMessage(deletedTask, tasks.getSize());","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"hiivan"},"content":"            case FIND:","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"hiivan"},"content":"                String keyword \u003d input.substring(5).trim().toLowerCase();","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"hiivan"},"content":"                ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"hiivan"},"content":"                return Ui.getFoundTasksMessage(foundTasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"hiivan"},"content":"            case BYE:","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"hiivan"},"content":"                PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"hiivan"},"content":"                delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"hiivan"},"content":"                delay.play();","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"hiivan"},"content":"                return Ui.getFarewellMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"hiivan"},"content":"            case UNKNOWN:","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"hiivan"},"content":"            default:","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"hiivan"},"content":"                return Ui.getUnknownCommandMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"hiivan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"hiivan"},"content":"        } catch (TaskException | IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"hiivan"},"content":"            return Ui.getErrorMessage(e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"hiivan"},"content":"     * Starts the Huyang chatbot.","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"hiivan"},"content":"     * Displays a greeting, processes user commands, and saves tasks to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"hiivan"},"content":"     * Supports other features such as list, mark, unmark and delete.","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"hiivan"},"content":"    public void runCli() {","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"hiivan"},"content":"        Ui.print(Ui.getGreetingMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"hiivan"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"hiivan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"hiivan"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"hiivan"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"hiivan"},"content":"            Parser.CommandType command \u003d parser.parseCommand(input);","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":118,"author":{"gitId":"hiivan"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"hiivan"},"content":"                switch (command) {","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"hiivan"},"content":"                case LIST:","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"hiivan"},"content":"                    Ui.print(Ui.getTasksMessage(tasks.getTasks()));","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"hiivan"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"hiivan"},"content":"                case MARK:","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"hiivan"},"content":"                    Task markedTask \u003d tasks.markOrUnmarkTask(input, true);","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"hiivan"},"content":"                    Ui.print(Ui.getMarkOrUnmarkMessage(markedTask, true));","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"hiivan"},"content":"                    storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"hiivan"},"content":"                    break;","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"hiivan"},"content":"                case UNMARK:","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"hiivan"},"content":"                    Task unmarkedTask \u003d tasks.markOrUnmarkTask(input, false);","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"hiivan"},"content":"                    Ui.print(Ui.getMarkOrUnmarkMessage(unmarkedTask, false));","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"hiivan"},"content":"                    storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"hiivan"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":133,"author":{"gitId":"hiivan"},"content":"                case TODO:","lastModifiedDate":"2024-01-23"},{"lineNumber":134,"author":{"gitId":"hiivan"},"content":"                case DEADLINE:","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"hiivan"},"content":"                case EVENT:","lastModifiedDate":"2024-01-23"},{"lineNumber":136,"author":{"gitId":"hiivan"},"content":"                    Task addedTask \u003d tasks.addTask(input, command);","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"hiivan"},"content":"                    Ui.print(Ui.getAddTaskMessage(addedTask, tasks.getSize()));","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"hiivan"},"content":"                    storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"hiivan"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":140,"author":{"gitId":"hiivan"},"content":"                case DELETE:","lastModifiedDate":"2024-01-23"},{"lineNumber":141,"author":{"gitId":"hiivan"},"content":"                    Task deletedTask \u003d tasks.deleteTask(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"hiivan"},"content":"                    Ui.print(Ui.getDeleteTaskMessage(deletedTask, tasks.getSize()));","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"hiivan"},"content":"                    storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"hiivan"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"hiivan"},"content":"                case FIND:","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"hiivan"},"content":"                    String keyword \u003d input.substring(5).trim().toLowerCase();","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"hiivan"},"content":"                    ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"hiivan"},"content":"                    Ui.print(Ui.getFoundTasksMessage(foundTasks));","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"hiivan"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"hiivan"},"content":"                case BYE:","lastModifiedDate":"2024-01-23"},{"lineNumber":151,"author":{"gitId":"hiivan"},"content":"                    isExit \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"hiivan"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"hiivan"},"content":"                case UNKNOWN:","lastModifiedDate":"2024-01-23"},{"lineNumber":154,"author":{"gitId":"hiivan"},"content":"                default:","lastModifiedDate":"2024-01-23"},{"lineNumber":155,"author":{"gitId":"hiivan"},"content":"                    Ui.print(Ui.getUnknownCommandMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":156,"author":{"gitId":"hiivan"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"hiivan"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"hiivan"},"content":"            } catch (TaskException | IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"hiivan"},"content":"                Ui.print(Ui.getErrorMessage(e.getMessage()));","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"hiivan"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":161,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":162,"author":{"gitId":"hiivan"},"content":"        scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"hiivan"},"content":"        Ui.print(Ui.getFarewellMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":164,"author":{"gitId":"hiivan"},"content":"        Ui.print(\"Success\");","lastModifiedDate":"2024-02-19"},{"lineNumber":165,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":166,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":167,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"hiivan"},"content":"     * Main method to start the Huyang chatbot.","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"hiivan"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"hiivan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":173,"author":{"gitId":"hiivan"},"content":"        new Huyang().runCli();","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"hiivan"},"content":"        System.exit(0);","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":176,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"hiivan":176}},{"path":"src/main/java/huyang/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"public class Launcher {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"hiivan":12}},{"path":"src/main/java/huyang/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":" * A GUI for Huyang using FXML.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"    private Huyang huyang \u003d new Huyang();","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"     * The main entry point of the JavaFX application.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"     * @param stage The primary stage for the JavaFX application, where the GUI will be displayed.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setHuyang(huyang);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"            stage.show();","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"hiivan":36}},{"path":"src/main/java/huyang/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"    private Huyang huyang;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Minion.png\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"    private Image huyangImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Huyang.png\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"     * Initializes the MainWindow controller.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"     * This method is automatically called after the FXML layout is loaded and all @FXML-annotated fields are initialized.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"     * It sets up the scroll pane to automatically scroll to the bottom of the dialog container and displays a greeting","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"     * message from Huyang in the dialog container.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"        String greetingMessage \u003d Ui.getGreetingMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"        dialogContainer.getChildren().add(DialogBox.getHuyangDialog(greetingMessage, huyangImage));","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"     * Sets the Huyang instance for the MainWindow controller.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"     * @param h The Huyang instance to associate with this controller.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"    public void setHuyang(Huyang h) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"        huyang \u003d h;","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Huyang\u0027s reply and then appends them to","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"        String response \u003d huyang.getResponse(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"hiivan"},"content":"                DialogBox.getHuyangDialog(response, huyangImage)","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"hiivan"},"content":"        );","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"hiivan"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"hiivan":66}},{"path":"src/main/java/huyang/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":" * Parser class responsible for parsing user input commands.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"     * Enumeration representing the possible command types.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"    public enum CommandType {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, BYE, UNKNOWN;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"     * Parses a user input command and determines its CommandType.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"     * @param input The user input command string.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"     * @return The CommandType corresponding to the parsed input.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"    public CommandType parseCommand(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"        input \u003d input.toLowerCase();","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"            return CommandType.LIST;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"        } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"            return CommandType.MARK;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"        } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"            return CommandType.UNMARK;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"        } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"            return CommandType.TODO;","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"        } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"            return CommandType.DEADLINE;","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"        } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"            return CommandType.EVENT;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"            return CommandType.DELETE;","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"        } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"            return CommandType.FIND;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"            return CommandType.BYE;","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"            return CommandType.UNKNOWN;","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"hiivan":44}},{"path":"src/main/java/huyang/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":" * Storage class responsible for loading and saving tasks from/to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"    private String filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"    private File file;","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"     * @param filePath The file path to the storage file, including directory and file name.","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"        createDirectoryIfNeeded(file.getParentFile());","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"        createFileIfNeeded(this.file);","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"     * Creates the directory if it does not exist.","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"     * @param directory The directory file to check and create.","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"    private void createDirectoryIfNeeded(File directory) {","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"        if (!directory.exists() \u0026\u0026 !directory.mkdirs()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"            Ui.print(\"Failed to create directory: \" + directory.getAbsolutePath());","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"     * Creates the file if it does not exist.","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"     * @param file The file to check and create.","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"    private void createFileIfNeeded(File file) {","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"            try {","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"                    Ui.print(\"File created: \" + file.getAbsolutePath());","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"                } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"                    Ui.print(\"Failed to create file: \" + file.getAbsolutePath());","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"                }","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"                Ui.print(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"hiivan"},"content":"     * Loads tasks from the storage file and returns them as an ArrayList.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"hiivan"},"content":"     * @return An ArrayList of loaded tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"     * @throws IOException     If an I/O error occurs while reading the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"hiivan"},"content":"     * @throws TaskException  If there is an issue parsing the file content into tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"hiivan"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException, TaskException {","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"hiivan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"hiivan"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"hiivan"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"hiivan"},"content":"            return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"hiivan"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"hiivan"},"content":"            String line;","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"hiivan"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"hiivan"},"content":"                tasks.add(parseLineToTask(line));","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"hiivan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"hiivan"},"content":"        return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"hiivan"},"content":"     * Saves tasks to the storage file.","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"hiivan"},"content":"     * @param tasks An ArrayList of tasks to be saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"hiivan"},"content":"     * @throws IOException     If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"hiivan"},"content":"     * @throws TaskException  If there is an issue formatting tasks for saving.","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"hiivan"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException, TaskException {","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"hiivan"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"hiivan"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"hiivan"},"content":"                bw.write(task.toFileFormat());","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"hiivan"},"content":"                bw.newLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"hiivan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"hiivan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"hiivan"},"content":"            throw new IOException(\"Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"hiivan"},"content":"     * Parses a line of text from the storage file into a Task object.","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"hiivan"},"content":"     * @param line A line of text from the storage file.","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"hiivan"},"content":"     * @return A Task object representing the parsed line.","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"hiivan"},"content":"     * @throws TaskException If there is an issue parsing the line into a Task object.","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"hiivan"},"content":"    private Task parseLineToTask(String line) throws TaskException {","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"hiivan"},"content":"        String type \u003d line.substring(0, 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"hiivan"},"content":"        switch (type) {","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"hiivan"},"content":"        case \"T\":","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"hiivan"},"content":"            return ToDo.fromFileFormat(line);","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"hiivan"},"content":"        case \"D\":","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"hiivan"},"content":"            return Deadline.fromFileFormat(line);","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"hiivan"},"content":"        case \"E\":","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"hiivan"},"content":"            return Event.fromFileFormat(line);","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"hiivan"},"content":"        default:","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"hiivan"},"content":"            throw new TaskException(\"Unknown task type in file: \" + type);","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"hiivan":124}},{"path":"src/main/java/huyang/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":" * An abstract class representing a task with a name and completion status.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"    protected String taskName;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"     * Checks if the task is done.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"     * @return True if the task is marked as done, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"     * Gets the name of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"     * @return The name of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"        return this.taskName;","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"     * Gets the status icon for the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"     * @return The status icon, [X] if done, [ ] if not done.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"     * Converts the task to a formatted string for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"     * @return A string in file format representing the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"     * @return A string representation of the task, including its status icon and name.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"hiivan"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"hiivan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"hiivan"},"content":"        return getStatusIcon() + \" \" + taskName;","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"hiivan":67}},{"path":"src/main/java/huyang/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":" * Custom exception class for handling task-related exceptions.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"public class TaskException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"     * Constructor for the TaskException class.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"    public TaskException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"     * Creates a TaskException for an empty task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"     * @return A TaskException indicating that a task description is required.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"    public static TaskException forEmptyTaskDescription() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"        return new TaskException(\"A task description is required. Please try adding a task with a description.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"     * Creates a TaskException for an invalid task format.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"     * @param taskType The type of the task for which the format is incorrect.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"     * @return A TaskException indicating that the format for the task is incorrect.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"    public static TaskException forInvalidTaskFormat(String taskType) {","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"        return new TaskException(\"The format for the \" + taskType + \" task is incorrect. Please check and try again.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"     * Creates a TaskException for an unknown command.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"     * @return A TaskException indicating that the command is invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"    public static TaskException forUnknownCommand() {","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"        return new TaskException(\"Sorry, invalid command. Please try again.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"     * Creates a TaskException for an invalid task number.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"     * @return A TaskException indicating that the task number is invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"    public static TaskException forInvalidTaskNumber() {","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"        return new TaskException(\"Invalid task number. Please check and try again.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"hiivan":53}},{"path":"src/main/java/huyang/TaskFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"public class TaskFactory {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"    private static final String DATE_PATTERN \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"    public static Task createTask(String input, Parser.CommandType commandType) throws TaskException {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"        switch (commandType) {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"        case TODO:","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"            return createTodoTask(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"            return createDeadlineTask(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"        case EVENT:","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"            return createEventTask(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"        default:","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"            throw new TaskException(\"Invalid task type.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"    private static ToDo createTodoTask(String input) throws TaskException {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"        if (input.strip().length() \u003c\u003d 5) {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"            throw TaskException.forEmptyTaskDescription();","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"        return new ToDo(input.substring(5).trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"    private static Deadline createDeadlineTask(String input) throws TaskException {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"        if (input.strip().length() \u003c\u003d 9) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"            throw TaskException.forEmptyTaskDescription();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"        int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"            throw TaskException.forInvalidTaskFormat(\"deadline\");","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"            String description \u003d input.substring(9, byIndex).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"            String by \u003d input.substring(byIndex + 4).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"            LocalDateTime byTime \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(DATE_PATTERN));","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"            return new Deadline(description, byTime);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"            throw new TaskException(\"Invalid date format. Please use \" + DATE_PATTERN + \", e.g., 2020-12-02 1800.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"    private static Event createEventTask(String input) throws TaskException {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"        if (input.strip().length() \u003c\u003d 6) {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"            throw TaskException.forEmptyTaskDescription();","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"        int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"        int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"            throw TaskException.forInvalidTaskFormat(\"event\");","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"            String description \u003d input.substring(6, fromIndex).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"            String start \u003d input.substring(fromIndex + 6, toIndex).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"            String end \u003d input.substring(toIndex + 4).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"            LocalDateTime startTime \u003d LocalDateTime.parse(start, DateTimeFormatter.ofPattern(DATE_PATTERN));","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"hiivan"},"content":"            LocalDateTime endTime \u003d LocalDateTime.parse(end, DateTimeFormatter.ofPattern(DATE_PATTERN));","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"hiivan"},"content":"            return new Event(description, startTime, endTime);","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"hiivan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"hiivan"},"content":"            throw new TaskException(\"Invalid date format. Please use \" + DATE_PATTERN + \", e.g., 2020-12-02 1800.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"hiivan":68}},{"path":"src/main/java/huyang/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":" * Represents a collection of tasks in a task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"     * Retrieves the list of tasks stored in this TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"     * @return An ArrayList containing the tasks in the TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"        return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"     * Gets the number of tasks in the TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"     * Gets a task at the specified index in the TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"     * Adds a new task to the TaskList based on the input command and type.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"     * @param input       The input string describing the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"     * @param commandType The type of command associated with the input.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"     * @return The added task.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"     * @throws TaskException If there is an issue creating or adding the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"    public Task addTask(String input, Parser.CommandType commandType) throws TaskException {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"        Task task \u003d TaskFactory.createTask(input, commandType);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"        return task;","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"hiivan"},"content":"     * Marks or unmarks a task in the TaskList as done based on the input.","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"     * @param input  The input string specifying the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"hiivan"},"content":"     * @param isDone A boolean indicating whether the task should be marked as done or not.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"hiivan"},"content":"     * @return The modified task.","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"hiivan"},"content":"     * @throws TaskException If there is an issue marking or unmarking the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"hiivan"},"content":"    public Task markOrUnmarkTask(String input, boolean isDone) throws TaskException {","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"hiivan"},"content":"        Task task \u003d getTaskByNumber(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"hiivan"},"content":"        task.setDone(isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"hiivan"},"content":"        return task;","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"hiivan"},"content":"     * Deletes a task from the TaskList based on the input.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"hiivan"},"content":"     * @param input The input string specifying the task to delete.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"hiivan"},"content":"     * @return The deleted task.","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"hiivan"},"content":"     * @throws TaskException If there is an issue deleting the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"hiivan"},"content":"    public Task deleteTask(String input) throws TaskException {","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"hiivan"},"content":"        Task task \u003d getTaskByNumber(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"hiivan"},"content":"        tasks.remove(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"hiivan"},"content":"        return task;","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"hiivan"},"content":"     * Finds tasks in the TaskList that contain the specified keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"hiivan"},"content":"     * @param keyword The keyword to search for in task names.","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"hiivan"},"content":"     * @return An ArrayList of tasks matching the keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"hiivan"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"hiivan"},"content":"        return tasks.stream()","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"hiivan"},"content":"                .filter(task -\u003e task.getTaskName().toLowerCase()","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"hiivan"},"content":"                        .contains(keyword.toLowerCase()))","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"hiivan"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"hiivan"},"content":"    private Task getTaskByNumber(String input) throws TaskException {","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"hiivan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"hiivan"},"content":"            int taskNumber \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"hiivan"},"content":"            assert (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) : \"Invalid task number.\";","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"hiivan"},"content":"            if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"hiivan"},"content":"                throw TaskException.forInvalidTaskNumber();","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"hiivan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"hiivan"},"content":"            return tasks.get(taskNumber - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"hiivan"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"hiivan"},"content":"            throw TaskException.forInvalidTaskNumber();","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"hiivan":115}},{"path":"src/main/java/huyang/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":" * Represents a to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"     * Constructor for the ToDo class.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"     * @param taskName The name of the to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"        super(taskName);","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"    private String getTypeIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"        return \"[T]\";","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"     * Converts the to-do task to a formatted string for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"     * @return A string in file format representing the to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + taskName;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"     * Creates a ToDo object from a string in file format.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"     * @param fileFormat A string in file format representing a to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"     * @return A ToDo object created from the file format string.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"     * @throws TaskException if the file format is invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"    public static ToDo fromFileFormat(String fileFormat) throws TaskException {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"        String[] parts \u003d fileFormat.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"            throw TaskException.forInvalidTaskFormat(\"ToDo\");","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"        ToDo todo \u003d new ToDo(parts[2]);","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"            todo.setDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"        return todo;","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"     * Converts the to-do task to a formatted string for displaying to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"     * @return A string representing the formatted to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"        return getTypeIcon() + super.getStatusIcon() + \" \" + taskName;","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"hiivan":58}},{"path":"src/main/java/huyang/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":" * Ui class responsible for handling user interaction and displaying messages.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"     * Returns a greeting message.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"    public static String getGreetingMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"        return \"Hello there! I\u0027m Huyang.\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"     * Returns an error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"     * @param message The error message to be returned.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"    public static String getErrorMessage(String message) {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"        return \"Error: \" + message;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"     * Returns a message for an unknown command.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"    public static String getUnknownCommandMessage() {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"        return \"I\u0027m sorry master, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"     * Returns a farewell message.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"    public static String getFarewellMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"        return \"Goodbye master. May the force be with you.\\nHope to see you again soon!\";","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"     * Returns a message for an added task and the current task count.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"     * @param task The added task to be displayed.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"    public static String getAddTaskMessage(Task task, int taskCount) {","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"        return \"Affirmative, master. I\u0027ve added this task:\\n  \" + task","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"                + \"\\nNow you have \" + taskCount + \" tasks in the list.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"     * Returns a message for a marked task as done or not done yet.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"     * @param isMarked Whether the task is marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"    public static String getMarkOrUnmarkMessage(Task task, boolean isMarked) {","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"        String status \u003d isMarked ? \"done\" : \"not done yet\";","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"        return \"Nice, master! I\u0027ve marked this task as \" + status + \":\\n  \" + task;","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"hiivan"},"content":"     * Returns a message for a deleted task and the current task count.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"hiivan"},"content":"     * @param task The deleted task to be displayed.","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"hiivan"},"content":"     * @param taskCount The current task count to be displayed.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"hiivan"},"content":"    public static String getDeleteTaskMessage(Task task, int taskCount) {","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"hiivan"},"content":"        return \"Noted, master. I\u0027ve removed this task:\\n  \" + task","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"hiivan"},"content":"                + \"\\nNow you have \" + taskCount + \" tasks in the list.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"hiivan"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"hiivan"},"content":"     * @param tasks An ArrayList of tasks to be displayed.","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"hiivan"},"content":"    public static String getTasksMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"hiivan"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"hiivan"},"content":"            return \"You have no tasks in your list, master.\";","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"hiivan"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"hiivan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"hiivan"},"content":"            sb.append(\"\\n\" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"hiivan"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"hiivan"},"content":"     * Returns a list of found tasks based on a keyword search.","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"hiivan"},"content":"     * @param tasks An ArrayList of tasks containing the tasks found with the given keyword.","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"hiivan"},"content":"    public static String getFoundTasksMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"hiivan"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"hiivan"},"content":"            return \"No tasks found with the given keyword, master.\";","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"hiivan"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"hiivan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"hiivan"},"content":"            sb.append((i + 1) + \".\" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"hiivan"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"hiivan"},"content":"     * Print statement.","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"hiivan"},"content":"     * @param s String to be printed.","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"hiivan"},"content":"    public static void print(String s) {","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"hiivan"},"content":"        System.out.println(s);","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"hiivan":112}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"        \u003cTextFlow fx:id\u003d\"textFlow\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"            \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"                \u003cInsets right\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"        \u003c/TextFlow\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"            \u003cclip\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"                \u003cCircle radius\u003d\"49.5\" centerX\u003d\"49.5\" centerY\u003d\"49.5\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"hiivan":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background-color: #C0C0C0;\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"huyang.MainWindow\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"600.0\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"hiivan":19}},{"path":"src/test/java/huyang/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"public class EventTest {","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"    public void testToString_ReturnsFormattedString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2024, 1, 31, 14, 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2024, 1, 31, 16, 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"        Event event \u003d new Event(\"Project meeting\", start, end);","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"        String expectedString \u003d \"[E][ ] Project meeting (from: Jan 31 2024 14:00 to: Jan 31 2024 16:00)\";","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"        assertEquals(expectedString, event.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"hiivan":19}},{"path":"src/test/java/huyang/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"    public void testParseCommand_ByeCommand_ReturnsByeCommandType() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"        assertEquals(Parser.CommandType.BYE, new Parser().parseCommand(\"bye\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"    public void testParseCommand_ListCommand_ReturnsListCommandType() {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"        assertEquals(Parser.CommandType.LIST, new Parser().parseCommand(\"list\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"    public void testParseCommand_MarkCommand_ReturnsMarkCommandType() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"        assertEquals(Parser.CommandType.MARK, new Parser().parseCommand(\"mark 1\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"        assertEquals(Parser.CommandType.MARK, new Parser().parseCommand(\"maRK 1\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"    public void testParseCommand_UnmarkCommand_ReturnsUnmarkCommandType() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"        assertEquals(Parser.CommandType.UNMARK, new Parser().parseCommand(\"unmark 1\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"        assertEquals(Parser.CommandType.UNMARK, new Parser().parseCommand(\"UnMaRk 1\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"    public void testParseCommand_TodoCommand_ReturnsTodoCommandType() {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"        assertEquals(Parser.CommandType.TODO, new Parser().parseCommand(\"todo read book\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"    public void testParseCommand_DeadlineCommand_ReturnsDeadlineCommandType() {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"        assertEquals(Parser.CommandType.DEADLINE, new Parser().parseCommand(\"deadline return book /by 2020-12-12 1800\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"    public void testParseCommand_EventCommand_ReturnsEventCommandType() {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"        assertEquals(Parser.CommandType.EVENT, new Parser().parseCommand(\"event project meeting /from 2020-12-12 1400 /to 2020-12-12 1600\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"    public void testParseCommand_DeleteCommand_ReturnsDeleteCommandType() {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"        assertEquals(Parser.CommandType.DELETE, new Parser().parseCommand(\"delete 1\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"    public void testParseCommand_UnknownCommand_ReturnsUnknownCommandType() {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"        assertEquals(Parser.CommandType.UNKNOWN, new Parser().parseCommand(\"randomcommand\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"        assertEquals(Parser.CommandType.UNKNOWN, new Parser().parseCommand(\"something 1\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"        assertEquals(Parser.CommandType.UNKNOWN, new Parser().parseCommand(\"unmarker 2\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"hiivan":55}},{"path":"src/test/java/huyang/TaskFactoryTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package huyang;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"public class TaskFactoryTest {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"    public void testCreateTodoTask() {","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"            Task task \u003d TaskFactory.createTask(\"todo Task 1\", Parser.CommandType.TODO);","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"            assertTrue(task instanceof ToDo, \"Task should be an instance of Todo\");","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"            assertEquals(\"Task 1\", task.getTaskName(), \"Task name should match input\");","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"            fail(\"Unexpected TaskException: \" + e.getMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"    public void testCreateDeadlineTask() {","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"            LocalDateTime arbitraryDeadlineTime \u003d LocalDateTime.of(2024, 2, 17, 18, 0);","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"            String deadlineInput \u003d \"deadline Task 2 /by \"","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"                    + arbitraryDeadlineTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"            Task task \u003d TaskFactory.createTask(deadlineInput, Parser.CommandType.DEADLINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"            assertTrue(task instanceof Deadline, \"Task should be an instance of Deadline\");","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"            assertEquals(\"Task 2\", task.getTaskName(), \"Task name should match input\");","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"            assertEquals(arbitraryDeadlineTime, ((Deadline) task).getTime(), \"Deadline should match input\");","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"            fail(\"Unexpected TaskException: \" + e.getMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"    public void testCreateEventTask() {","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"            LocalDateTime arbitraryStartTime \u003d LocalDateTime.of(2024, 2, 17, 18, 0);","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"            LocalDateTime start \u003d arbitraryStartTime;","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"            LocalDateTime end \u003d arbitraryStartTime.plusHours(2);","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"            String eventInput \u003d \"event Task 3 /from \" + start.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"                    + \" /to \" + end.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"            Task task \u003d TaskFactory.createTask(eventInput, Parser.CommandType.EVENT);","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"            assertTrue(task instanceof Event, \"Task should be an instance of Event\");","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"            assertEquals(\"Task 3\", task.getTaskName(), \"Task name should match input\");","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"            assertEquals(start, ((Event) task).getStart(), \"Start time should match input\");","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"            assertEquals(end, ((Event) task).getEnd(), \"End time should match input\");","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"            fail(\"Unexpected TaskException: \" + e.getMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"    public void testEmptyTaskDescription() {","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"        assertThrows(TaskException.class, () -\u003e TaskFactory.createTask(\"todo\", Parser.CommandType.TODO),","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"                \"Creating task with empty description should throw TaskException\");","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"hiivan"},"content":"    public void testInvalidDeadlineFormat() {","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"hiivan"},"content":"        assertThrows(TaskException.class, () -\u003e TaskFactory.createTask(\"deadline Task 5 /by invalidDateTimeFormat\",","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"hiivan"},"content":"                        Parser.CommandType.DEADLINE),","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"hiivan"},"content":"                \"Creating deadline task with invalid date format should throw TaskException\");","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"hiivan"},"content":"    public void testInvalidEventFormat() {","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"hiivan"},"content":"        assertThrows(TaskException.class, () -\u003e TaskFactory.createTask(\"event Task 6 /from \"","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"hiivan"},"content":"                        + \"invalidDateTimeFormat /to invalidDateTimeFormat\", Parser.CommandType.EVENT),","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"hiivan"},"content":"                \"Creating event task with invalid date format should throw TaskException\");","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"hiivan":74}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"deadline return book /by 2023-03-11 1800","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"event project meeting /from 2022-09-11 1800 /to 2022-09-12 2359","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"unmark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"delete 2","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"invalid command","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"delete 6","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"deadline nothing","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"find project","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"hiivan":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"java -classpath ..\\bin Huyang \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hiivan":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"if ! javac -cp ../src/main/java/huyang -Xlint:none -d ../bin ../src/main/java/huyang/*.java","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"java -classpath ../bin Huyang \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hiivan":2,"-":36}}]
