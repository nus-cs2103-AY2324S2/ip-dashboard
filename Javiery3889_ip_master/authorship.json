[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"    mainClass.set(\"blu.Launcher\")","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"    archiveBaseName \u003d \"blu\"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Javiery3889":18,"-":40}},{"path":"src/main/java/Blu/Blu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.io.File;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import blu.command.ByeCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import blu.command.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.BluException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.StorageException;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import blu.parser.InputParser;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"import blu.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"import blu.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"import blu.ui.MainWindow;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"import blu.ui.UI;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"import blu.utils.BluLogger;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"import javafx.stage.FileChooser;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":" * The main class for the Blu application, which extends the JavaFX framework.","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":" * It provides methods to start and initialize the GUI,","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":" * process user input commands, and manage the application\u0027s lifecycle.","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"public class Blu extends Application {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"    private static final String DEFAULT_STORAGE_PATH \u003d \"./data/data.csv\";","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"    private UI ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"    private boolean isExit;","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"    private String welcomeMessage;","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"     * This method is called when the application should initialize itself,","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"     * prior to being made visible to the user. It initializes the UI, storage, and task list.","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    */","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"    public void init() {","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"    private void initStorage(String storagePath) {","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"            storage \u003d new Storage(storagePath);","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"            taskList \u003d storage.loadTasks();","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"            welcomeMessage \u003d ui.getWelcomeMessage(storage.getAbsoluteFilePath());","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"        } catch (BluException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"            BluLogger.severe(e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"            System.exit(1);","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"    private File getStorageFilePath(Stage stage) {","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"        FileChooser fileChooser \u003d new FileChooser();","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"        fileChooser.setTitle(\"Select Storage File\");","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"        FileChooser.ExtensionFilter extFilter \u003d new FileChooser.ExtensionFilter(\"CSV files (*.csv)\", \"*.csv\");","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"        fileChooser.getExtensionFilters().add(extFilter);","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"        File selectedFile \u003d fileChooser.showOpenDialog(stage);","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"        return selectedFile;","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"     * The main entry point for all JavaFX applications. The start method is called after the init method has returned,","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"     * and after the system is ready for the application to begin running.","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"     * @param stage The primary stage for this application, onto which the application scene can be set.","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"        File storageFilePath \u003d getStorageFilePath(stage);","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"        if (storageFilePath \u003d\u003d null) {","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"            initStorage(DEFAULT_STORAGE_PATH);","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"            initStorage(storageFilePath.getAbsolutePath());","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"        stage.setTitle(\"Blu\");","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Blu.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"            Scene scene \u003d new Scene(anchorPane);","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"Javiery3889"},"content":"            MainWindow mainWindow \u003d fxmlLoader.getController();","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"Javiery3889"},"content":"            mainWindow.setBlu(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"Javiery3889"},"content":"            stage.show();","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"Javiery3889"},"content":"            mainWindow.showGreeting(welcomeMessage);","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"Javiery3889"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"Javiery3889"},"content":"            BluLogger.severe(e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"Javiery3889"},"content":"     * Checks if the application is set to exit.","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"Javiery3889"},"content":"     * @return true if the application is exiting, false otherwise.","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"Javiery3889"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"Javiery3889"},"content":"        return isExit;","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"Javiery3889"},"content":"     * Processes the user input string and executes the corresponding command.","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"Javiery3889"},"content":"     * @param userInput The string input by the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"Javiery3889"},"content":"     * @return The response from executing the user command.","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":110,"author":{"gitId":"Javiery3889"},"content":"    public String getResponse(String userInput) throws BluException {","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"Javiery3889"},"content":"        Command command \u003d new InputParser().parseInput(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"Javiery3889"},"content":"        assert command !\u003d null : \"Parsed command should not be null\";","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"Javiery3889"},"content":"        if (command instanceof ByeCommand) {","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"Javiery3889"},"content":"            isExit \u003d true;","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"Javiery3889"},"content":"        return command.execute(taskList, storage, ui);","lastModifiedDate":"2024-02-08"},{"lineNumber":117,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":120,"author":{"gitId":"Javiery3889"},"content":"     * This method is called when the application should stop,","lastModifiedDate":"2024-02-08"},{"lineNumber":121,"author":{"gitId":"Javiery3889"},"content":"     * and provides a convenient place to prepare for application exit and save state.","lastModifiedDate":"2024-02-08"},{"lineNumber":122,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":123,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"Javiery3889"},"content":"    public void stop() {","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":126,"author":{"gitId":"Javiery3889"},"content":"            storage.close();","lastModifiedDate":"2024-02-08"},{"lineNumber":127,"author":{"gitId":"Javiery3889"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":128,"author":{"gitId":"Javiery3889"},"content":"            BluLogger.severe(e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":129,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":130,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":131,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"Javiery3889":131}},{"path":"src/main/java/Blu/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"public class Launcher {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"        Application.launch(Blu.class, args);","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Javiery3889":12}},{"path":"src/main/java/Blu/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.BluException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import blu.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import blu.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import blu.ui.UI;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":" * Represents a command to terminate the application.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":" * When executed, this command displaying an exit message in the UI.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"     * Displays exit message in the UI.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The current TaskList (not applicable for ByeCommand).","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"     * @param storage The Storage (not applicable for ByeCommand).","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"     * @param ui The UI responsible for user interactions.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"     * @return The exit message to be displayed to the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"     * @throws BluException If an error occurs during execution (not applicable for ByeCommand).","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    public String execute(TaskList taskList, Storage storage, UI ui) throws BluException {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"        return ui.showExitMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":27}},{"path":"src/main/java/Blu/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.BluException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import blu.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import blu.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import blu.ui.UI;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":" * Represents a command in the application. This abstract class serves as a base","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":" * for specific commands within the application.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"     * Executes the command with the given task list, storage, and user interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"     * Each concrete command class provides its implementation of this method.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The list of tasks on which the command operates.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"     * @param storage The storage system used for persisting tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"     * @param ui The user interface used for interaction with the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"     * @return The message to be displayed to the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"     * @throws BluException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"    public abstract String execute(TaskList taskList, Storage storage, UI ui) throws BluException;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":24}},{"path":"src/main/java/Blu/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":" * Represents the types of commands that can be executed in the application.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"public enum CommandType {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"    LIST,","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"    MARK,","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"    UNMARK,","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"    TODO,","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"    DEADLINE,","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"    EVENT,","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    DELETE,","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    FIND,","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    BYE,","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"    INVALID;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"     * Converts a string to its corresponding CommandType.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"     * If the string does not match any CommandType, INVALID is returned.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"     * @param cmdString The string to be converted to a CommandType.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"     * @return The CommandType corresponding to the given string, or INVALID if no match is found.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"    public static CommandType fromString(String cmdString) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"        // Solution below adapted by","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"        // https://stackoverflow.com/questions/4936819/java-check-if-enum-contains-a-given-string","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"            return CommandType.valueOf(cmdString.toUpperCase());","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"            return CommandType.INVALID;","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":34}},{"path":"src/main/java/Blu/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.StorageException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import blu.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import blu.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import blu.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import blu.ui.UI;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":" * Represents a command to add a new Deadline task with a specified description and deadline date/time.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    private final String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"    private final LocalDateTime byDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"     * Constructs a DeadlineCommand with the specified task description and deadline date/time.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"     * @param byDateTime The deadline date and time for the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    public DeadlineCommand(String description, LocalDateTime byDateTime) {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"     * Executes the deadline command.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"     * This method creates a new Deadline task, adds it to the task list, and notify user through UI.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"     * The updated task list is saved to storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The TaskList to which the new task is to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"     * @param storage The Storage where the updated task list is to be saved.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"     * @param ui The UI responsible for user interactions.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"     * @return The message to be displayed to the user after adding a deadline.","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"     * @throws StorageException If an error occurs during saving to storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"    public String execute(TaskList taskList, Storage storage, UI ui) throws StorageException {","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        Deadline deadline \u003d new Deadline(description, byDateTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        return ui.showTaskAdded(deadline, taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":47}},{"path":"src/main/java/Blu/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.BluException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import blu.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import blu.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import blu.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import blu.ui.UI;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":" * Represents a command to deletes a specified task from the task list at a specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    private final int taskIdx;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     * Constructs a DeleteCommand to delete the task at the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"     * @param taskIdx The index of the task to be deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    public DeleteCommand(int taskIdx) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"        this.taskIdx \u003d taskIdx;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     * Executes the delete command.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"     * This method retrieves and removes the task at the specified index from the task list,","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"     * notifies the user through UI, and saves the updated task list to storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The TaskList from which the task will be deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"     * @param storage The Storage where the updated task list is to be saved.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"     * @param ui The UI responsible for user interactions.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"     * @return The message to be displayed to the user after deleting a task.","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"     * @throws BluException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    public String execute(TaskList taskList, Storage storage, UI ui) throws BluException {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        Task task \u003d taskList.getTask(taskIdx);","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        taskList.deleteTask(taskIdx);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        return ui.showTaskDeleted(task, taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":42}},{"path":"src/main/java/Blu/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.StorageException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import blu.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import blu.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import blu.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import blu.ui.UI;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":" * Represents a command to add a new Event task with a specified description and event date/time.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    private final String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"    private final LocalDateTime fromDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    private final LocalDateTime toDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"     * Constructs a EventCommand with the specified task description and event start/end date/time.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"     * @param fromDateTime The event start date and time for the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"     * @param toDateTime The event end date and time for the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    public EventCommand(String description, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"     * Executes the event command.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"     * This method creates a new Event task, adds it to the task list, and notify user through UI.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"     * The updated task list is saved to storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The TaskList to which the new task is to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"     * @param storage The Storage where the updated task list is to be saved.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"     * @param ui The UI responsible for user interactions.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"     * @return The message to be displayed to the user after adding a event.","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"     * @throws StorageException If an error occurs during saving to storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"    public String execute(TaskList taskList, Storage storage, UI ui) throws StorageException {","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        Event event \u003d new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        return ui.showTaskAdded(event, taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":50}},{"path":"src/main/java/Blu/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.BluException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import blu.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import blu.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import blu.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import blu.ui.UI;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":" * Represents a command to find and display tasks that contain a user specified string.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    private final String searchString;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"     * Constructs a FindCommand with the specified search string.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"     * @param searchString The string to search for within the task descriptions.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    public FindCommand(String searchString) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"        this.searchString \u003d searchString;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"     * Executes the find command.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"     * This method searches the task list for tasks containing the specified search string","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"     * and displays the found tasks to the user through the UI.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The TaskList to search for matching tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"     * @param storage The Storage (not applicable for FindCommand).","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"     * @param ui The UI responsible for displaying the found tasks to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"     * @return The result of the find command to be displayed to the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"     * @throws BluException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"    public String execute(TaskList taskList, Storage storage, UI ui) throws BluException {","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"        List\u003cTask\u003e tasks \u003d taskList.searchForTasksContaining(searchString);","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        return ui.showTasksFound(tasks, searchString);","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Javiery3889":42}},{"path":"src/main/java/Blu/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.BluException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.InvalidCommandException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import blu.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import blu.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import blu.ui.UI;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":" * Represents a command that is identified as invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":" * This command is used when a user input does not correspond to any valid command.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    private final String invalidCmd;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     * Constructs an InvalidCommand with the unrecognized command string.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"     * @param invalidCmd The string representing the invalid command input.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"    public InvalidCommand(String invalidCmd) {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"        this.invalidCmd \u003d invalidCmd;","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"     * Executes the invalid command.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"     * This method throws an InvalidCommandException to indicate that the user input","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"     * was not recognized as a valid command.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The TaskList, not used in this command but required by the method signature.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"     * @param storage The Storage, not used in this command but required by the method signature.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"     * @param ui The UI, not used in this command but required by the method signature.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"     * @return The message to be displayed to the user. (Not applicable in InvalidCommand)","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"     * @throws BluException Throws an InvalidCommandException with the invalid command string.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    public String execute(TaskList taskList, Storage storage, UI ui) throws BluException {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        throw new InvalidCommandException(invalidCmd);","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":40}},{"path":"src/main/java/Blu/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.BluException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import blu.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import blu.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import blu.ui.UI;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"     * Executes the list command.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"     * This method retrieves all the tasks from the task list and displays them through the UI.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The TaskList containing the tasks to be displayed.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"     * @param storage The Storage (not applicable for ListCommand).","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"     * @param ui The UI responsible for displaying the task list to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"     * @return The string representation of the tasks in task list.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"     * @throws BluException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    public String execute(TaskList taskList, Storage storage, UI ui) throws BluException {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"        return ui.showTaskList(taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":27}},{"path":"src/main/java/Blu/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.BluException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import blu.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import blu.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import blu.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import blu.ui.UI;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":" * Represents a command to mark a task in the task list with a specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    private final int taskIdx;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     * Constructs an MarkCommand to mark the task at the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"     * @param taskIdx The index of the task to be mark.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    public MarkCommand(int taskIdx) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"        this.taskIdx \u003d taskIdx;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     * Executes the mark command.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"     * This method retrieves the task at the specified index, changes its status to \u0027completed\u0027,","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"     * notfies the user through UI, and saves the updated task list to storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The TaskList from which the task\u0027s status will be changed.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"     * @param storage The Storage where the updated task list is to be saved.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"     * @param ui The UI responsible for user interactions.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"     * @return The message to be displayed to the user after marking a task.","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"     * @throws BluException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    public String execute(TaskList taskList, Storage storage, UI ui) throws BluException {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        Task task \u003d taskList.getTask(taskIdx);","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        if (task.isCompleted()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"            return ui.showTaskAlreadyMarked(taskIdx);","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        task.setMarked();","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        return ui.showTaskMarked(task, taskIdx);","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":45}},{"path":"src/main/java/Blu/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.StorageException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import blu.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import blu.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import blu.task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import blu.ui.UI;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":" * Represents a command to add a new ToDo task with a specified description and event date/time.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    private final String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     * Constructs a ToDoCommand with the specified task description.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     * Executes the todo command.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"     * This method creates a new ToDo task, adds it to the task list, and notify user through UI.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"     * The updated task list is saved to storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The TaskList to which the new task is to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"     * @param storage The Storage where the updated task list is to be saved.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"     * @param ui The UI responsible for user interactions.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"     * @return The message to be displayed to the user after adding a ToDo task.","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"     * @throws StorageException If an error occurs during saving to storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    public String execute(TaskList taskList, Storage storage, UI ui) throws StorageException {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        ToDo toDo \u003d new ToDo(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        taskList.addTask(toDo);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        return ui.showTaskAdded(toDo, taskList);","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":42}},{"path":"src/main/java/Blu/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.BluException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import blu.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import blu.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import blu.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import blu.ui.UI;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":" * Represents a command to unmark a task in the task list with a specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    private final int taskIdx;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     * Constructs an UnmarkCommand to unmark the task at the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"     * @param taskIdx The index of the task to be unmarked.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    public UnmarkCommand(int taskIdx) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"        this.taskIdx \u003d taskIdx;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     * Executes the unmark command.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"     * This method retrieves the task at the specified index, changes its status to \u0027not completed\u0027,","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"     * notfies the user through UI, and saves the updated task list to storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The TaskList from which the task\u0027s status will be changed.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"     * @param storage The Storage where the updated task list is to be saved.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"     * @param ui The UI responsible for user interactions.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"     * @return The message to be displayed to the user after unmarking a task.","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"     * @throws BluException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    public String execute(TaskList taskList, Storage storage, UI ui) throws BluException {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        Task task \u003d taskList.getTask(taskIdx);","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        if (!task.isCompleted()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"            return ui.showTaskAlreadyUnmarked(taskIdx);","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        task.setUnmarked();","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        return ui.showTaskUnmarked(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":45}},{"path":"src/main/java/Blu/exception/BluException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":" * Represents exceptions specific to the Blu application.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"public class BluException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"     * Constructs a new BluException with the specified detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"     * The detail message is saved for later retrieval by the Throwable.getMessage() method.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"     * @param message The detail message which provides more information about the exception.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    public BluException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Javiery3889":17}},{"path":"src/main/java/Blu/exception/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":" * Represents exceptions caused by from illegal or incorrect command formats supplied by the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"public class IllegalCommandException extends BluException {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"     * Constructs a new IllegalCommandException with the specified detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"     * The detail message is prefixed with \"Illegal Command Format:\" to indicate the nature of the error.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"     * @param message The detail message which provides more information about the command format issue.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    public IllegalCommandException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"        super(\"Illegal Command Format: \" + message);","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Javiery3889":17}},{"path":"src/main/java/Blu/exception/IllegalParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":" * Represents exceptions caused by from illegal or incorrect command parameters supplied by the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"public class IllegalParameterException extends BluException {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"     * Constructs a new IllegalParameterException with the specified detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"     * The detail message is prefixed with \"Illegal Parameter:\" to indicate the nature of the error.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"     * @param message The detail message which provides more information about the command parameter issue.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    public IllegalParameterException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"        super(\"Illegal Parameter: \" + message);","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Javiery3889":17}},{"path":"src/main/java/Blu/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":" * Represents exceptions caused by from invalid commands supplied by the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"public class InvalidCommandException extends BluException {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"     * Constructs a new InvalidCommandException with the specified detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"     * The detail message is prefixed with \"Command not found:\" to indicate the nature of the error.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"     * @param message The detail message which provides more information about the invalid command.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"        super(\"Command not found: \" + message);","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Javiery3889":17}},{"path":"src/main/java/Blu/exception/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":" * Represents exceptions caused by from storage operations in the Blu application.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"public class StorageException extends BluException {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"     * Constructs a new StorageException with the specified detail message.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"     * The detail message is prefixed with \"Task Storage Exception:\" to indicate the nature of the error.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"     * @param message The detail message which provides more information about the storage issue.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    public StorageException(String message) {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"        super(\"Task Storage Exception: \" + message);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":17}},{"path":"src/main/java/Blu/parser/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import blu.command.ByeCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import blu.command.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import blu.command.CommandType;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"import blu.command.DeadlineCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"import blu.command.DeleteCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"import blu.command.EventCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"import blu.command.FindCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"import blu.command.InvalidCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"import blu.command.ListCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"import blu.command.MarkCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"import blu.command.ToDoCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"import blu.command.UnmarkCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.IllegalCommandException;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":" * Parses user input into corresponding Command objects.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"public class InputParser {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    private static final DateTimeFormatter INPUT_DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"    private static final int BASE_TOKENS_INDEX \u003d 0;","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"     * Parses the given user input into a specific Command object.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"     * @param userInput The user input to be parsed.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"     * @return The command corresponding to the user input.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"     * @throws IllegalCommandException If the input cannot be parsed into a valid command.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    public Command parseInput(String userInput) throws IllegalCommandException {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        String[] tokens \u003d userInput.trim().split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        String cmdString \u003d tokens[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"        CommandType cmd \u003d CommandType.fromString(cmdString);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        switch (cmd) {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        case LIST:","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        case MARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"            return prepareMarkCommand(tokens);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"            return prepareUnmarkCommand(tokens);","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"        case TODO:","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"            return prepareToDoCommand(tokens);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"            return prepareDeadlineCommand(tokens);","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"        case EVENT:","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"            return prepareEventCommand(tokens);","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        case FIND:","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"            return prepareFindCommand(tokens);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"        case DELETE:","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"            return prepareDeleteCommand(tokens);","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"        case BYE:","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"        default:","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"            return new InvalidCommand(cmdString);","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"    private int findParamIdx(String[] tokens, String param) {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"        for (int i \u003d 0; i \u003c tokens.length; i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"            if (tokens[i].equals(param)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"                return i;","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"        return -1;","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"    private String getParamValue(String[] tokens, int paramIdx, int endIdx) {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"        String[] subArray \u003d Arrays.copyOfRange(tokens, paramIdx + 1, endIdx);","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"        String paramVal \u003d String.join(\" \", subArray);","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"        return paramVal;","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"    private boolean isParamEmpty(int startIdx, int endIdx) {","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"        if (startIdx + 1 \u003d\u003d endIdx) {","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"            return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Javiery3889"},"content":"    private boolean isNumberOfParamCorrect(String[] tokens, int expectedNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"Javiery3889"},"content":"        if (tokens.length \u003d\u003d expectedNumber) {","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Javiery3889"},"content":"            return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"Javiery3889"},"content":"        return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"Javiery3889"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) throws IllegalCommandException {","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"Javiery3889"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, INPUT_DATETIME_FORMAT);","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"Javiery3889"},"content":"            return dateTime;","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"Javiery3889"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalCommandException(\"Invalid DateTime format.\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"Javiery3889"},"content":"                    + \"Please use dd-MM-yyyy format.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"Javiery3889"},"content":"    private int parseInteger(String intString) throws IllegalCommandException {","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"Javiery3889"},"content":"            int result \u003d Integer.parseInt(intString);","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"Javiery3889"},"content":"            return result;","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"Javiery3889"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalCommandException(intString + \" is not a valid integer!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"Javiery3889"},"content":"    private Command prepareMarkCommand(String[] tokens) throws IllegalCommandException {","lastModifiedDate":"2024-02-11"},{"lineNumber":113,"author":{"gitId":"Javiery3889"},"content":"        if (!isNumberOfParamCorrect(tokens, 2)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalCommandException(\"Please specify a task number to mark\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"Javiery3889"},"content":"                    + \"Usage: mark \u003ctask_number\u003e\");","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"Javiery3889"},"content":"        int markTaskIdx \u003d parseInteger(tokens[1]);","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"Javiery3889"},"content":"        return new MarkCommand(markTaskIdx);","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"Javiery3889"},"content":"    private Command prepareUnmarkCommand(String[] tokens) throws IllegalCommandException {","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"Javiery3889"},"content":"        if (!isNumberOfParamCorrect(tokens, 2)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalCommandException(\"Please specify a task number to unmark\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"Javiery3889"},"content":"                    + \"Usage: unmark \u003ctask_number\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"Javiery3889"},"content":"        int unmarkTaskIdx \u003d parseInteger(tokens[1]);","lastModifiedDate":"2024-02-11"},{"lineNumber":127,"author":{"gitId":"Javiery3889"},"content":"        return new UnmarkCommand(unmarkTaskIdx);","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"Javiery3889"},"content":"    private Command prepareToDoCommand(String[] tokens) throws IllegalCommandException {","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Javiery3889"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalCommandException(\"Description of a todo cannot be empty.\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"Javiery3889"},"content":"                    + \"Usage: todo \u003ctask_title\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"Javiery3889"},"content":"        String todoTitle \u003d getParamValue(tokens, BASE_TOKENS_INDEX, tokens.length);","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"Javiery3889"},"content":"        return new ToDoCommand(todoTitle);","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"Javiery3889"},"content":"    private Command prepareDeadlineCommand(String[] tokens) throws IllegalCommandException {","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"Javiery3889"},"content":"        String byParam \u003d \"/by\";","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"Javiery3889"},"content":"        int paramIdx \u003d findParamIdx(tokens, byParam);","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"Javiery3889"},"content":"        if (paramIdx \u003d\u003d -1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalCommandException(byParam + \" parameter not found!\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"Javiery3889"},"content":"                    + \"Usage: deadline \u003ctask_title\u003e /by \u003cdatetime\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":147,"author":{"gitId":"Javiery3889"},"content":"        if (isParamEmpty(BASE_TOKENS_INDEX, paramIdx)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalCommandException(\"Description of a deadline cannot be empty.\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"Javiery3889"},"content":"                    + \"Usage: deadline \u003ctask_title\u003e /by \u003cdatetime\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":152,"author":{"gitId":"Javiery3889"},"content":"        String deadlineTitle \u003d getParamValue(tokens, BASE_TOKENS_INDEX, paramIdx);","lastModifiedDate":"2024-02-11"},{"lineNumber":153,"author":{"gitId":"Javiery3889"},"content":"        if (isParamEmpty(paramIdx, tokens.length)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalCommandException(\"Datetime of deadline cannot be empty.\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"Javiery3889"},"content":"                    + \"Usage: deadline \u003ctask_title\u003e /by \u003cdatetime\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":158,"author":{"gitId":"Javiery3889"},"content":"        String byStr \u003d getParamValue(tokens, paramIdx, tokens.length);","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"Javiery3889"},"content":"        LocalDateTime byDateTime \u003d parseDateTime(byStr);","lastModifiedDate":"2024-02-11"},{"lineNumber":160,"author":{"gitId":"Javiery3889"},"content":"        return new DeadlineCommand(deadlineTitle, byDateTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"Javiery3889"},"content":"    private Command prepareEventCommand(String[] tokens) throws IllegalCommandException {","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"Javiery3889"},"content":"        String fromParam \u003d \"/from\";","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"Javiery3889"},"content":"        String toParam \u003d \"/to\";","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"Javiery3889"},"content":"        int fromParamIdx \u003d findParamIdx(tokens, fromParam);","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"Javiery3889"},"content":"        int toParamIdx \u003d findParamIdx(tokens, toParam);","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"Javiery3889"},"content":"        if (fromParamIdx \u003d\u003d -1 || toParamIdx \u003d\u003d -1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalCommandException(fromParam + \" or \" + toParam + \" not found!\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"Javiery3889"},"content":"                    + \"Usage: event \u003ctask_title\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"Javiery3889"},"content":"        if (isParamEmpty(BASE_TOKENS_INDEX, fromParamIdx)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":174,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalCommandException(\"Description of event cannot be empty.\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"Javiery3889"},"content":"                    + \"Usage: event \u003ctask_title\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":176,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":177,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"Javiery3889"},"content":"        String eventTitle \u003d getParamValue(tokens, 0, fromParamIdx);","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"Javiery3889"},"content":"        if (isParamEmpty(fromParamIdx, toParamIdx) || isParamEmpty(toParamIdx, tokens.length)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalCommandException(\"Datetimes of event cannot be empty.\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"Javiery3889"},"content":"                    + \"Usage: event \u003ctask_title\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":184,"author":{"gitId":"Javiery3889"},"content":"        String fromStr \u003d getParamValue(tokens, fromParamIdx, toParamIdx);","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"Javiery3889"},"content":"        LocalDateTime fromDateTime \u003d parseDateTime(fromStr);","lastModifiedDate":"2024-02-11"},{"lineNumber":186,"author":{"gitId":"Javiery3889"},"content":"        String toStr \u003d getParamValue(tokens, toParamIdx, tokens.length);","lastModifiedDate":"2024-01-30"},{"lineNumber":187,"author":{"gitId":"Javiery3889"},"content":"        LocalDateTime toDateTime \u003d parseDateTime(toStr);","lastModifiedDate":"2024-02-11"},{"lineNumber":188,"author":{"gitId":"Javiery3889"},"content":"        if (fromDateTime.isAfter(toDateTime)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":189,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalCommandException(\"From Datetime is later than To Datetime\");","lastModifiedDate":"2024-01-30"},{"lineNumber":190,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":191,"author":{"gitId":"Javiery3889"},"content":"        return new EventCommand(eventTitle, fromDateTime, toDateTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":192,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":193,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":194,"author":{"gitId":"Javiery3889"},"content":"    private Command prepareFindCommand(String[] tokens) throws IllegalCommandException {","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"Javiery3889"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalCommandException(\"Search string cannot be empty.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":197,"author":{"gitId":"Javiery3889"},"content":"                    + \"Usage: find \u003csearch_string\u003e\");","lastModifiedDate":"2024-02-11"},{"lineNumber":198,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"Javiery3889"},"content":"        String searchString \u003d getParamValue(tokens, BASE_TOKENS_INDEX, tokens.length);","lastModifiedDate":"2024-02-11"},{"lineNumber":200,"author":{"gitId":"Javiery3889"},"content":"        return new FindCommand(searchString);","lastModifiedDate":"2024-02-01"},{"lineNumber":201,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":202,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":203,"author":{"gitId":"Javiery3889"},"content":"    private Command prepareDeleteCommand(String[] tokens) throws IllegalCommandException {","lastModifiedDate":"2024-01-30"},{"lineNumber":204,"author":{"gitId":"Javiery3889"},"content":"        if (!isNumberOfParamCorrect(tokens, 2)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":205,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalCommandException(\"Please specify a task number to delete\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":206,"author":{"gitId":"Javiery3889"},"content":"                    + \"Usage: delete \u003ctask_number\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":207,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":208,"author":{"gitId":"Javiery3889"},"content":"        int deleteTaskIdx \u003d parseInteger(tokens[1]);","lastModifiedDate":"2024-02-11"},{"lineNumber":209,"author":{"gitId":"Javiery3889"},"content":"        return new DeleteCommand(deleteTaskIdx);","lastModifiedDate":"2024-01-30"},{"lineNumber":210,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":211,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":211}},{"path":"src/main/java/Blu/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.BluException;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.StorageException;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"import blu.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"import blu.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":" * Handles the storage of tasks in a file. This class is responsible for saving tasks to a file","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":" * and loading them from the file. Implements AutoCloseable to ensure resources are freed properly.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"public class Storage implements AutoCloseable {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    /** File object used to write and store tasks */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"    private File file;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    private BufferedWriter writer;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"     * Creates a Storage object with its associated file based on the specified file path.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"     * If the file does not exist, it attempts to create it.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"     * @param filePath The path of the file used for storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"     * @throws StorageException If the file cannot be created or opened.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"    public Storage(String filePath) throws StorageException {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"            if (!this.file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"            this.writer \u003d new BufferedWriter(new FileWriter(file, true));","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"            throw new StorageException(\"Failed to create storage file\");","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"     * Saves all tasks from the given TaskList to the storage file.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The list of tasks to save.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"     * @throws StorageException If tasks cannot be written to the storage file.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"    public void saveTasks(TaskList taskList) throws StorageException {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"            writer.close();","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"            writer \u003d new BufferedWriter(new FileWriter(file, false));","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getAllTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"                writer.write(task.toCsv());","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"            assert file.length() !\u003d 0 : \"File should not be empty after write operation\";","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"            writer.flush();","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"            throw new StorageException(\"Failed to save task to storage file\");","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"     * Loads tasks from the storage file into a TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"     * @return A TaskList containing the tasks loaded from the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"     * @throws StorageException If tasks cannot be read from the storage file.","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"    public TaskList loadTasks() throws StorageException {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"        int lineNumber \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"                Task task \u003d TaskDecoder.fromCsv(line);","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"                tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"                lineNumber++;","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"Javiery3889"},"content":"            reader.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Javiery3889"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Javiery3889"},"content":"            throw new StorageException(\"Failed to read tasks from storage file\");","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Javiery3889"},"content":"        } catch (BluException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Javiery3889"},"content":"            throw new StorageException(e.getLocalizedMessage() + \" at line \" + lineNumber);","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"Javiery3889"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"Javiery3889"},"content":"            return new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"Javiery3889"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"Javiery3889"},"content":"    public String getAbsoluteFilePath() throws StorageException {","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"Javiery3889"},"content":"            return file.getCanonicalPath();","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"Javiery3889"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"Javiery3889"},"content":"            throw new StorageException(\"Error returning absolute file path\");","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"Javiery3889"},"content":"     * Closes the writer associated with this Storage object.","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"Javiery3889"},"content":"     * @throws StorageException If an I/O error occurs while closing the writer.","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"Javiery3889"},"content":"    public void close() throws StorageException {","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Javiery3889"},"content":"            writer.flush();","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"Javiery3889"},"content":"            writer.close();","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"Javiery3889"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Javiery3889"},"content":"            throw new StorageException(\"Could not close writer\");","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Javiery3889":120}},{"path":"src/main/java/Blu/storage/TaskDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.BluException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import blu.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import blu.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import blu.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import blu.task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":" * Decodes CSV strings into their associated Task objects.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"public class TaskDecoder {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"    private static final String CSV_SEP \u003d \",\";","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    private static final String MARKED_TOKEN \u003d \"T\";","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"     * Parses CSV string to a Task object by determining its type","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"     * @param csv The CSV string to be parsed into a Task object.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"     * @return The associated Task object.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"     * @throws BluException If the task type is unrecognized or if the CSV format is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    public static Task fromCsv(String csv) throws BluException {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"        String[] tokens \u003d csv.split(CSV_SEP);","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        String type \u003d tokens[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        switch (type) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"        case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"            return parseToDo(tokens);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"            return parseDeadline(tokens);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"        case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"            return parseEvent(tokens);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"            throw new BluException(\"Unrecognised task type\");","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"    private static ToDo parseToDo(String[] tokens) throws BluException {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"            ToDo todo \u003d new ToDo(tokens[2]);","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"            if (tokens[1].equals(MARKED_TOKEN)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"                todo.setMarked();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"            return todo;","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"            throw new BluException(\"Invalid todo format in storage file\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"    private static Deadline parseDeadline(String[] tokens) throws BluException {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"            Deadline deadline \u003d new Deadline(tokens[2], LocalDateTime.parse(tokens[3]));","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"            if (tokens[1].equals(MARKED_TOKEN)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"                deadline.setMarked();","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"            return deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"            throw new BluException(\"Invalid deadline format in storage file\");","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"    private static Event parseEvent(String[] tokens) throws BluException {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"            Event event \u003d new Event(tokens[2], LocalDateTime.parse(tokens[3]),","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"                    LocalDateTime.parse(tokens[4]));","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"            if (tokens[1].equals(MARKED_TOKEN)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"                event.setMarked();","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"            return event;","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"            throw new BluException(\"Invalid event format in storage file\");","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Javiery3889":77}},{"path":"src/main/java/Blu/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":" * Represents a task with a title and the due date/time.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"    private static final String TASK_TYPE \u003d \"D\";","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"     * Constructs a new Deadline task with the specified title and due date/time.","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     * @param title The title of the deadline task.","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"     * @param by The due date and time of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    public Deadline(String title, LocalDateTime by) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"        super(title);","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"     * Formats the due date and time of the deadline task for display.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"     * @param by The LocalDateTime object to be formatted.","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"     * @return A string representation of the due date and time in \"MMM dd yyyy, HH:mm\" format.","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"    private String displayDate(LocalDateTime by) {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"        return by.format(formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    public String toCsv() {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        return String.format(\"%s,%s,%s,%s\", TASK_TYPE, this.isCompleted() ? \"T\" : \"F\", this.getTitle(), by);","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        return String.format(\"[%s]%s (By: %s)\", TASK_TYPE, super.toString(), displayDate(by));","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"        if (!(obj instanceof Deadline)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"        Deadline other \u003d (Deadline) obj;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"        boolean isSameDateTime \u003d by.equals(other.by);","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"        return isSameDateTime \u0026\u0026 super.equals(other);","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Javiery3889":58}},{"path":"src/main/java/Blu/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":" * Represents a task with a title, start and end date/time.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"    private static final String TASK_TYPE \u003d \"E\";","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     * Creates an Event task.","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"     * @param title The title of the event.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"     * @param from The start date and time of the event.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"     * @param to The end date and time of the event.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    public Event(String title, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"        super(title);","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"     * Formats the date and time of the event for display.","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"     * @param by The LocalDateTime object to be formatted.","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"     * @return A string representation of the date and time in the format \"MMM dd yyyy, HH:mm\".","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"    private String displayDate(LocalDateTime by) {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        return by.format(formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"    public String toCsv() {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        return String.format(\"%s,%s,%s,%s,%s\", TASK_TYPE, this.isCompleted() ? \"T\" : \"F\",","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"                this.getTitle(), from, to);","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"        return String.format(\"[%s]%s (From: %s To: %s)\", TASK_TYPE, super.toString(),","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"                displayDate(from), displayDate(to));","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"        if (!(obj instanceof Event)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"        Event other \u003d (Event) obj;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"        boolean isSameFromDateTime \u003d from.equals(other.from);","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"        boolean isSameToDateTime \u003d to.equals(other.to);","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"        return isSameFromDateTime \u0026\u0026 isSameToDateTime \u0026\u0026 super.equals(other);","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Javiery3889":64}},{"path":"src/main/java/Blu/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":" * Represents the base class for a task in the Blu application.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":" * This abstract class provides common fields and methods for various types of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"    private String title;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"    private boolean isMarked;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"     * Creates a new Task with the given title.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"     * Initially, the task is not marked.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"     * @param title The title of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    public Task(String title) {","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"     * Returns the title of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     * @return The title of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"    public String getTitle() {","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        return this.title;","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"    public void setMarked() {","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"     * Unmarks the task as not completed.","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"    public void setUnmarked() {","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"     * Returns whether the task is marked as completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"     * @return true if the task is marked as completed, false otherwise.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"        return isMarked;","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"     * Converts the task to its CSV string representation.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"     * This method is abstract and must be implemented by subclasses.","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"     * @return The CSV string representation of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"    public abstract String toCsv();","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"        if (this.isMarked) {","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"            return \"[X] \" + this.title;","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"        return \"[ ] \" + this.title;","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"        if (!(obj instanceof Task)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"        Task other \u003d (Task) obj;","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"        return this.title.equals(other.title) \u0026\u0026 this.isMarked \u003d\u003d other.isMarked;","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Javiery3889":81}},{"path":"src/main/java/Blu/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.IllegalParameterException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":" * Represents a list of tasks. This class provides methods to manipulate and retrieve tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"public class TaskList {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"     * Constructs a TaskList with a predefined list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"     * Checks if the task specified by the 1-based index is within the range of the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"     * @param idx The 1-based index to check.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"     * @return true if the task number is valid, false otherwise.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"    private boolean isValidIndex(int idx) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"        if (idx \u003c 0 || idx \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"     * Retrieves the task at the specified 1-based task number.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"     * @param taskNumber The 1-based index of the task to retrieve.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"     * @throws IllegalParameterException If the task number is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"    public Task getTask(int taskNumber) throws IllegalParameterException {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        int idx \u003d taskNumber - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"        if (!isValidIndex(idx)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalParameterException(\"Could not retrieve task number \"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"                + taskNumber + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"                + \"Please use the list command to view valid task numbers.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"        return tasks.get(idx);","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"     * Returns a list containing all tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"     * @return The list of all tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"        return tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"     * @return The number of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"     * @param task The task to add.","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"Javiery3889"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":88,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"Javiery3889"},"content":"     * Deletes the task at the specified 1-based task number.","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"Javiery3889"},"content":"     * @param taskNumber The 1-based index of the task to delete.","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"Javiery3889"},"content":"     * @throws IllegalParameterException If the task number is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"Javiery3889"},"content":"    public void deleteTask(int taskNumber) throws IllegalParameterException {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Javiery3889"},"content":"        int idx \u003d taskNumber - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Javiery3889"},"content":"        if (!isValidIndex(idx)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Javiery3889"},"content":"            throw new IllegalParameterException(\"Could not delete task number \"","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Javiery3889"},"content":"            + taskNumber + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Javiery3889"},"content":"            + \"Please use the list command to view valid task numbers.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Javiery3889"},"content":"        tasks.remove(idx);","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"Javiery3889"},"content":"     * Searches through task list and returns a list of tasks that contain a specific substring.","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"Javiery3889"},"content":"     * @param searchString The substring to search for within each task of the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"Javiery3889"},"content":"     * @return A list of task that contain the specified substring.","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"Javiery3889"},"content":"    public List\u003cTask\u003e searchForTasksContaining(String searchString) {","lastModifiedDate":"2024-02-11"},{"lineNumber":112,"author":{"gitId":"Javiery3889"},"content":"        return tasks.stream()","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"Javiery3889"},"content":"                .filter(t -\u003e t.getTitle().contains(searchString))","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"Javiery3889"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"Javiery3889"},"content":"     * Returns a string representation of the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"Javiery3889"},"content":"     * If the list is empty, returns the message \"All tasks completed!\".","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"Javiery3889"},"content":"     * @return A string representation of the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":124,"author":{"gitId":"Javiery3889"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":125,"author":{"gitId":"Javiery3889"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"Javiery3889"},"content":"            return \"All tasks completed!\";","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"Javiery3889"},"content":"        return IntStream.range(0, tasks.size())","lastModifiedDate":"2024-02-11"},{"lineNumber":129,"author":{"gitId":"Javiery3889"},"content":"                .mapToObj(i -\u003e String.format(\"%d %s\", i + 1, tasks.get(i)))","lastModifiedDate":"2024-02-11"},{"lineNumber":130,"author":{"gitId":"Javiery3889"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":132,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Javiery3889":132}},{"path":"src/main/java/Blu/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":" * Represents a task with a title.","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":" * Inherits from the {@link Task} class.","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"    private static final String TASK_TYPE \u003d \"T\";","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"     * Constructs a new ToDo task with the specified title.","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"     * @param title The title of the ToDo task.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    public ToDo(String title) {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"        super(title);","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    public String toCsv() {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"        return String.format(\"%s,%s,%s\", TASK_TYPE, this.isCompleted() ? \"T\" : \"F\", this.getTitle());","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"        return String.format(\"[%s]%s\", TASK_TYPE, super.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"        if (!(obj instanceof ToDo)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        ToDo other \u003d (ToDo) obj;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        return super.equals(other);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Javiery3889":40}},{"path":"src/main/java/Blu/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"    private void flip() {","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"    private void setTextToRed() {","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"        dialog.getStyleClass().add(\"error-text\");","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"     * Factory method to create a dialog box for the user\u0027s input.","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"     * @param text The user\u0027s input to be displayed.","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"     * @param img  The user\u0027s image.","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"     * @return A DialogBox instance representing the user\u0027s input.","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"    */","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"     * Creates and returns a dialog box specifically designed for displaying error messages.","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"     * @param text The error message to be displayed","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"     * @param img  The Blu\u0027s image.","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"     * @return A DialogBox instance configured to display the error message","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"    */","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"    public static DialogBox showErrorMessage(String text, Image img) {","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"        var dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"        dialogBox.setTextToRed();","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"        dialogBox.flip();","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"        return dialogBox;","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"     * Factory method to create a dialog box for Blu\u0027s reply.","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"     * @param text The Blu\u0027s reply to be displayed.","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"     * @param img  The Blu\u0027s image.","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"Javiery3889"},"content":"     * @return A DialogBox instance representing Blu\u0027s reply.","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"Javiery3889"},"content":"    */","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"Javiery3889"},"content":"    public static DialogBox getBluDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"Javiery3889"},"content":"        var dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"Javiery3889"},"content":"        dialogBox.flip();","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"Javiery3889"},"content":"        return dialogBox;","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Javiery3889":93}},{"path":"src/main/java/Blu/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import blu.Blu;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.BluException;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"    private Blu blu;","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/account.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"    private Image bluImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/chatbot.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"     * Initializes the main window controller.","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"     * Sets the reference to the main application class. This connection allows the UI to communicate with","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"     * the application logic.","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"     * @param b The main application class.","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"    public void setBlu(Blu b) {","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        blu \u003d b;","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"     * Displays a greeting message in the dialog container at application startup.","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"     * @param greeting The greeting message to display.","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"    public void showGreeting(String greeting) {","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"                DialogBox.getBluDialog(greeting, bluImage)","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"        );","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"            String response \u003d blu.getResponse(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"                DialogBox.getBluDialog(response, bluImage)","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"            );","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"        } catch (BluException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"                DialogBox.showErrorMessage(e.getMessage(), bluImage)","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"            );","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"        if (blu.isExit()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"Javiery3889"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"Javiery3889"},"content":"            delay.play();","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Javiery3889":90}},{"path":"src/main/java/Blu/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import static blu.utils.Messages.MESSAGE_EXIT;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import static blu.utils.Messages.MESSAGE_GREET;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"import static blu.utils.Messages.MESSAGE_STORAGE_PATH;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"import blu.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"import blu.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":" * Handles all user input/output operations for the Blu application.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"public class UI {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    private String formatOutput(String... message) {","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"        return String.join(\"\\n\", message);","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"     * Displays the welcome message and the storage file path.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"     * @param storageFilePath The file path of the storage used.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    public String getWelcomeMessage(String storageFilePath) {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"        String storagePathString \u003d String.format(MESSAGE_STORAGE_PATH, storageFilePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        String[] messages \u003d {storagePathString, MESSAGE_GREET};","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        return formatOutput(messages);","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"     * Displays the tasks in the task list to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The TaskList to be displayed.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    public String showTaskList(TaskList taskList) {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        return formatOutput(taskList.toString());","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"     * Displays a message indicating that a task has been added.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"     * @param task The task that was added.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The TaskList after adding the new task.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"    public String showTaskAdded(Task task, TaskList taskList) {","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"        String[] messages \u003d {","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"            \"Added task to the list:\",","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"            task.toString(),","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"            \"You have \" + taskList.getNumberOfTasks() + \" tasks currently.\"","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"        };","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        return formatOutput(messages);","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"     * Displays a message indicating that a task has been deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"     * @param taskList The TaskList after deleting the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"    public String showTaskDeleted(Task task, TaskList taskList) {","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"        String[] messages \u003d {","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"Javiery3889"},"content":"            \"Deleted task from list:\",","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"Javiery3889"},"content":"            task.toString(),","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"Javiery3889"},"content":"            \"You have \" + taskList.getNumberOfTasks() + \" tasks currently\"","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"Javiery3889"},"content":"        };","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"Javiery3889"},"content":"        return formatOutput(messages);","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Javiery3889"},"content":"     * Displays a message indicating that a task has been marked successfully.","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Javiery3889"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"Javiery3889"},"content":"     * @param taskIdx The index of the marked task.","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"Javiery3889"},"content":"    public String showTaskMarked(Task task, int taskIdx) {","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"Javiery3889"},"content":"        String[] messages \u003d {\"Marked task as done:\", task.toString()};","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Javiery3889"},"content":"        return formatOutput(messages);","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Javiery3889"},"content":"     * Displays a message indicating that a task is already marked.","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"Javiery3889"},"content":"     * @param taskIdx The index of the marked task.","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"Javiery3889"},"content":"    public String showTaskAlreadyMarked(int taskIdx) {","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"Javiery3889"},"content":"        return formatOutput(\"Task number \" + taskIdx + \" is already marked as done\");","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"Javiery3889"},"content":"     * Displays a message indicating that a task is already unmarked.","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Javiery3889"},"content":"     * @param taskIdx The index of the unmarked task.","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"Javiery3889"},"content":"    public String showTaskAlreadyUnmarked(int taskIdx) {","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"Javiery3889"},"content":"        return formatOutput(\"Task number \" + taskIdx + \" is already unmarked as not done\");","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"Javiery3889"},"content":"     * Displays a message indicating that a task is already unmarked.","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"Javiery3889"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"Javiery3889"},"content":"    public String showTaskUnmarked(Task task) {","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"Javiery3889"},"content":"        String[] messages \u003d {\"Unmarked task as not done:\", task.toString()};","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"Javiery3889"},"content":"        return formatOutput(messages);","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"Javiery3889"},"content":"     * Displays tasks containing search string specified by the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"Javiery3889"},"content":"     * @param tasks The tasks that contain search string inside the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"Javiery3889"},"content":"     * @param searchString The search string specified by the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"Javiery3889"},"content":"    public String showTasksFound(List\u003cTask\u003e tasks, String searchString) {","lastModifiedDate":"2024-02-08"},{"lineNumber":117,"author":{"gitId":"Javiery3889"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"Javiery3889"},"content":"            return formatOutput(\"No tasks found containing \" + searchString);","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":120,"author":{"gitId":"Javiery3889"},"content":"        List\u003cString\u003e messagesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"Javiery3889"},"content":"        messagesList.add(\"There are \" + tasks.size() + \" tasks that contains \" + searchString);","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"Javiery3889"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"Javiery3889"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"Javiery3889"},"content":"            messagesList.add(count + \". \" + task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"Javiery3889"},"content":"            count++;","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"Javiery3889"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"Javiery3889"},"content":"        String[] messages \u003d new String[messagesList.size()];","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"Javiery3889"},"content":"        messages \u003d messagesList.toArray(messages);","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"Javiery3889"},"content":"        return formatOutput(messages);","lastModifiedDate":"2024-02-10"},{"lineNumber":130,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"Javiery3889"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"Javiery3889"},"content":"     * @param errorMsg The error message to be displayed.","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"Javiery3889"},"content":"    public String showErrorMessage(String errorMsg) {","lastModifiedDate":"2024-02-08"},{"lineNumber":138,"author":{"gitId":"Javiery3889"},"content":"        return formatOutput(errorMsg);","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"Javiery3889"},"content":"     * Displays the exit message to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"Javiery3889"},"content":"    public String showExitMessage() {","lastModifiedDate":"2024-02-08"},{"lineNumber":145,"author":{"gitId":"Javiery3889"},"content":"        return formatOutput(MESSAGE_EXIT);","lastModifiedDate":"2024-02-10"},{"lineNumber":146,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":147}},{"path":"src/main/java/Blu/utils/BluLogger.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.utils;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":" * The {@code BluLogger} class encapsulates the Java Logging API for the application.","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":" * It provides a simplified interface for logging informational, warning, and severe messages.","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"public class BluLogger {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(\"BluLogger\");","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"     * Logs an informational message at the INFO level.","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"     * @param message The message to be logged.","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    public static void info(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"        LOGGER.info(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"     * Logs a warning message at the WARNING level.","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"     * @param message The message to be logged.","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    public static void warning(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"        LOGGER.warning(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"     * Logs a severe message at the SEVERE level.","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"     * @param message The message to be logged.","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"    public static void severe(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        LOGGER.severe(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Javiery3889":38}},{"path":"src/main/java/Blu/utils/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.utils;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":" * Container for user visible messages.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"public class Messages {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"    public static final String MESSAGE_GREET \u003d \"Hello! I\u0027m Blu. What can I do for you?\";","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"    public static final String MESSAGE_STORAGE_PATH \u003d \"Using %s as storage file\";","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"    public static final String MESSAGE_EXIT \u003d \"Goodbye from Blu!\";","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"    public static final String MESSAGE_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Javiery3889":11}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" stylesheets\u003d\"@/css/styles.css\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"\u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Javiery3889":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"blu.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Javiery3889":19}},{"path":"src/test/java/blu/storage/TaskDecoderTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.BluException;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"import blu.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"import blu.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"import blu.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"import blu.task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"public class TaskDecoderTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"    private static final DateTimeFormatter INPUT_DATETIMEFORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"    public void fromCsv_invalidFormat_exceptionThrown() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"        String csv \u003d \"invalid,format\";","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"        assertThrows(BluException.class, () -\u003e TaskDecoder.fromCsv(csv));","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"    public void fromCsv_invalidDateTimeFormat_exceptionThrown() {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"        String csv \u003d \"D,F,Submit report,8pm 02-12-24\";","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"        assertThrows(BluException.class, () -\u003e TaskDecoder.fromCsv(csv));","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"    public void fromCsv_validToDo_success() throws BluException {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"        String csv \u003d \"T,F,Read book\";","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"        Task task \u003d TaskDecoder.fromCsv(csv);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(task, new ToDo(\"Read book\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"    public void fromCsv_validMarkedTask_success() throws BluException {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        String csv \u003d \"T,T,Read book\";","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"        Task task \u003d TaskDecoder.fromCsv(csv);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"        String expectedString \u003d \"[T][X] Read book\";","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(expectedString, task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"    public void fromCsv_validDeadline_success() throws BluException {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"        String csv \u003d \"D,F,Submit report,2024-08-30T23:59\";","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"        LocalDateTime expectedBy \u003d LocalDateTime.parse(\"30-08-2024 23:59\", INPUT_DATETIMEFORMAT);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"        Task task \u003d TaskDecoder.fromCsv(csv);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(task, new Deadline(\"Submit report\", expectedBy));","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"    public void fromCsv_validEvent_success() throws BluException {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"        String csv \u003d \"E,F,Attend Event,2024-08-30T12:00,2024-08-30T23:59\";","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"        LocalDateTime expectedFrom \u003d LocalDateTime.parse(\"30-08-2024 12:00\", INPUT_DATETIMEFORMAT);","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"        LocalDateTime expectedTo \u003d LocalDateTime.parse(\"30-08-2024 23:59\", INPUT_DATETIMEFORMAT);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Javiery3889"},"content":"        Task task \u003d TaskDecoder.fromCsv(csv);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(task, new Event(\"Attend Event\", expectedFrom, expectedTo));","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Javiery3889":63}},{"path":"src/test/java/blu/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Javiery3889"},"content":"package blu.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Javiery3889"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Javiery3889"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Javiery3889"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Javiery3889"},"content":"import blu.exception.IllegalParameterException;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Javiery3889"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Javiery3889"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Javiery3889"},"content":"    private Task testTask1;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Javiery3889"},"content":"    private Task testTask2;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Javiery3889"},"content":"    private Task testTask3;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Javiery3889"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Javiery3889"},"content":"    public void setUp() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Javiery3889"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Javiery3889"},"content":"        testTask1 \u003d new ToDo(\"test todo1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Javiery3889"},"content":"        testTask2 \u003d new ToDo(\"test todo2\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Javiery3889"},"content":"        testTask3 \u003d new ToDo(\"test todo3\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Javiery3889"},"content":"        taskList.addTask(testTask1);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Javiery3889"},"content":"        taskList.addTask(testTask2);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Javiery3889"},"content":"        taskList.addTask(testTask3);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Javiery3889"},"content":"    public void deleteTask_invalidTaskNumber_exceptionThrown() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Javiery3889"},"content":"        assertThrows(IllegalParameterException.class, () -\u003e taskList.deleteTask(-1));","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Javiery3889"},"content":"        assertThrows(IllegalParameterException.class, () -\u003e taskList.deleteTask(10000));","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Javiery3889"},"content":"    public void deleteTask_validTaskNumber_success() throws IllegalParameterException {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Javiery3889"},"content":"        taskList.deleteTask(3);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(2, taskList.getNumberOfTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Javiery3889"},"content":"        taskList.deleteTask(2);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(1, taskList.getNumberOfTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Javiery3889"},"content":"        taskList.deleteTask(1);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(0, taskList.getNumberOfTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Javiery3889"},"content":"    public void getTask_invalidTaskNumber_exceptionThrown() {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Javiery3889"},"content":"        assertThrows(IllegalParameterException.class, () -\u003e taskList.getTask(-1));","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Javiery3889"},"content":"        assertThrows(IllegalParameterException.class, () -\u003e taskList.getTask(10000));","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Javiery3889"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Javiery3889"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Javiery3889"},"content":"    public void getTask_validTaskNumber_success() throws IllegalParameterException {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Javiery3889"},"content":"        Task retrievedTask1 \u003d taskList.getTask(1);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(testTask1, retrievedTask1);","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Javiery3889"},"content":"        Task retrievedTask2 \u003d taskList.getTask(2);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(testTask2, retrievedTask2);","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Javiery3889"},"content":"        Task retrievedTask3 \u003d taskList.getTask(3);","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Javiery3889"},"content":"        assertEquals(testTask3, retrievedTask3);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Javiery3889"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Javiery3889"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Javiery3889":59}}]
