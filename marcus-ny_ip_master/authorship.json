[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"checkstyle {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marcus-ny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marcus-ny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"marcus-ny"},"content":"    mainClass.set(\"solaire.SolaireLauncher\")","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"marcus-ny"},"content":"    archiveBaseName \u003d \"solaire\"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"marcus-ny"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marcus-ny":22,"-":40}},{"path":"src/main/java/solaire/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"package solaire;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marcus-ny"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marcus-ny"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"marcus-ny"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"marcus-ny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"marcus-ny"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"marcus-ny"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"marcus-ny"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"marcus-ny"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"marcus-ny"},"content":"    private void flip() {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"marcus-ny"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"marcus-ny"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"marcus-ny"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"marcus-ny"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"marcus-ny"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"marcus-ny"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"marcus-ny"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"marcus-ny"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"marcus-ny"},"content":"        db.flip();","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"marcus-ny"},"content":"        return db;","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"marcus-ny":62}},{"path":"src/main/java/solaire/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"package solaire;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"    private Solaire solaire \u003d new Solaire();","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"            AnchorPane ap \u003d fxmlLoader.load(); // error here","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSolaire(solaire);","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"            stage.show();","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"marcus-ny":33}},{"path":"src/main/java/solaire/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"package solaire;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"    private Solaire solaire;","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/AshenOne.jpeg\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Solaire.jpeg\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marcus-ny"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"marcus-ny"},"content":"     * Sets the Solaire instance to be used by the GUI.","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"marcus-ny"},"content":"     * @param s an instance of Solaire chatbot.","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"marcus-ny"},"content":"    public void setSolaire(Solaire s) {","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"marcus-ny"},"content":"        solaire \u003d s;","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"marcus-ny"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"marcus-ny"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"marcus-ny"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"marcus-ny"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"marcus-ny"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"marcus-ny"},"content":"        assert !input.isEmpty() : \"User input should not be empty\";","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"marcus-ny"},"content":"        String response \u003d solaire.processInput(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"marcus-ny"},"content":"        assert !response.isEmpty() : \"Response should not be empty\";","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"marcus-ny"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"marcus-ny"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"marcus-ny"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"marcus-ny"},"content":"        );","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"marcus-ny"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"marcus-ny":60}},{"path":"src/main/java/solaire/Solaire.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"package solaire;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"import solaire.storage.Storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"import solaire.tasklist.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"import solaire.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":" * Represents the chatbot, Solaire.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":" * The chatbot can keep track of various types of tasks and mark/unmark tasks as complete.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"public class Solaire {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"    enum UserCommands {","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":"        GREET, BYE, MARK, UNMARK, LIST, TODO, EVENT, DEADLINE, DELETE, FIND, REMINDME","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"     * Creates a new instance of the chatbot.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"    public Solaire() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"        this.ui \u003d new Ui(new Scanner(System.in));","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"        this.taskList \u003d new TaskList(Storage.loadFromLocal());","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"     * Processes the user input and returns the appropriate response.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"marcus-ny"},"content":"     * @param input user input","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"marcus-ny"},"content":"     * @return String response to user input","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"marcus-ny"},"content":"    public String processInput(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"marcus-ny"},"content":"        String[] inputCommand \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"marcus-ny"},"content":"        String solaireOutput \u003d \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"marcus-ny"},"content":"        assert inputCommand.length \u003e 0 : \"Input command should not be empty\";","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"marcus-ny"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"marcus-ny"},"content":"            UserCommands command \u003d UserCommands.valueOf(inputCommand[0].toUpperCase());","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"marcus-ny"},"content":"            switch (command) {","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"marcus-ny"},"content":"            case GREET:","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"marcus-ny"},"content":"                solaireOutput \u003d ui.greet();","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"marcus-ny"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"marcus-ny"},"content":"            case BYE:","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"marcus-ny"},"content":"                solaireOutput \u003d ui.waveBye();","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"marcus-ny"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"marcus-ny"},"content":"            case MARK:","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"marcus-ny"},"content":"                solaireOutput \u003d taskList.markDone(Integer.parseInt(inputCommand[1]));","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"marcus-ny"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"marcus-ny"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"marcus-ny"},"content":"                solaireOutput \u003d taskList.unmarkDone(Integer.parseInt(inputCommand[1]));","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"marcus-ny"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"marcus-ny"},"content":"            case LIST:","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"marcus-ny"},"content":"                solaireOutput \u003d taskList.showList();","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"marcus-ny"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"marcus-ny"},"content":"            case TODO:","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"marcus-ny"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"marcus-ny"},"content":"            case EVENT:","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"marcus-ny"},"content":"                solaireOutput \u003d taskList.processTaskCommand(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"marcus-ny"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"marcus-ny"},"content":"            case DELETE:","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"marcus-ny"},"content":"                solaireOutput \u003d taskList.processRemoveFromList(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"marcus-ny"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"marcus-ny"},"content":"            case FIND:","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"marcus-ny"},"content":"                solaireOutput \u003d taskList.findTask(inputCommand[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"marcus-ny"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"marcus-ny"},"content":"            case REMINDME:","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"marcus-ny"},"content":"                if (inputCommand.length \u003c 2) {","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"marcus-ny"},"content":"                    solaireOutput \u003d taskList.remindMe();","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"marcus-ny"},"content":"                } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"marcus-ny"},"content":"                    solaireOutput \u003d taskList.remindMe(inputCommand[1]);","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"marcus-ny"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"marcus-ny"},"content":"                break;","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"marcus-ny"},"content":"            default:","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"marcus-ny"},"content":"                solaireOutput \u003d \"Unsupported command pattern\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"marcus-ny"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"marcus-ny"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"marcus-ny"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"marcus-ny"},"content":"            solaireOutput \u003d \"I am not yet familiar with these commands\";","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"marcus-ny"},"content":"        } finally {","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"marcus-ny"},"content":"            Storage.write(taskList.getTaskList());","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"marcus-ny"},"content":"            return solaireOutput;","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"marcus-ny":86}},{"path":"src/main/java/solaire/SolaireLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"package solaire;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"public class SolaireLauncher {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"marcus-ny":12}},{"path":"src/main/java/solaire/data/exception/SolaireException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"package solaire.data.exception;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":" * Represents a generic exception related to chatbot Solaire.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"public class SolaireException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"    public SolaireException(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"marcus-ny":11}},{"path":"src/main/java/solaire/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"package solaire.data.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.exception.SolaireException;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"    private LocalDate by;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"     * Creates a task with a specified deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":"     * @param taskName description of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":"     * @param ddl      deadline as a String.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":"     * @throws SolaireException if ddl does not follow the LocalDate format specified.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"    public Deadline(String taskName, String ddl) throws SolaireException {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"        super(taskName);","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"        this.by \u003d parseDeadline(ddl);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"    private LocalDate parseDeadline(String ddl) throws SolaireException {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"            DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"            return LocalDate.parse(ddl, f);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"marcus-ny"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"marcus-ny"},"content":"            throw new SolaireException(\"Deadline must be in the format: yyyy-mm-dd\");","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"marcus-ny"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"marcus-ny"},"content":"        return this.by;","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"marcus-ny"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"marcus-ny"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"marcus-ny"},"content":"        String formattedDate \u003d this.by.getDayOfMonth() + \" \" + this.by.getMonth().toString().substring(0, 3) + \" \"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"marcus-ny"},"content":"                + this.by.getYear();","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"marcus-ny"},"content":"        return \"[D]\" + super.toString() + \" ( by: \" + formattedDate + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"marcus-ny"},"content":"     * Returns the due status of the task based on the current date and time.","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"marcus-ny"},"content":"     * @param buffer the number of days before the deadline to check for due status.","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"marcus-ny"},"content":"     * @return true if the task is due within the buffer, false otherwise.","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"marcus-ny"},"content":"    public boolean getDueStatus(int buffer) {","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"marcus-ny"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"marcus-ny"},"content":"        LocalDate limit \u003d currentDate.plusDays(buffer);","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"marcus-ny"},"content":"        boolean isOverdue \u003d this.by.isBefore(currentDate);","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"marcus-ny"},"content":"        if (!isOverdue \u0026\u0026 (this.by.isBefore(limit) || this.by.isEqual(limit))) {","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"marcus-ny"},"content":"            return true;","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"marcus-ny"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"marcus-ny"},"content":"            return false;","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"marcus-ny":63}},{"path":"src/main/java/solaire/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"package solaire.data.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":" * Represents an event task with start and end time.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"    private String from;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"    private String to;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"     * Creates an event task with start and end time.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"     * @param taskName description of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"     * @param from     start time.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"     * @param to       end time.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"    public Event(String taskName, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":"        super(taskName);","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"    public String getStart() {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"        return this.from;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"    public String getEnd() {","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":"        return this.to;","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"marcus-ny"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"marcus-ny"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"marcus-ny"},"content":"        return \"[E]\" + super.toString() + \"( from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"marcus-ny":36}},{"path":"src/main/java/solaire/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"package solaire.data.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":" * Represents a Task that can be marked complete/incomplete.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"    private static int count \u003d 0;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"    private int id;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"    private String taskName;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"    private Boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"     * @param taskName","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":"        this.id \u003d ++count;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"    public int getId() {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"        return this.id;","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":"     * Marks the current task as \"done\".","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"marcus-ny"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"marcus-ny"},"content":"     * Marks the current task as \"not done\".","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"marcus-ny"},"content":"    public void unmarkDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"marcus-ny"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"marcus-ny"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"marcus-ny"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"marcus-ny"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"marcus-ny"},"content":"        return this.taskName;","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"marcus-ny"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"marcus-ny"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"marcus-ny"},"content":"        String checkMark \u003d \"[\" + (isDone ? \"X\" : \" \") + \"] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"marcus-ny"},"content":"        return checkMark + taskName;","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"marcus-ny":54}},{"path":"src/main/java/solaire/data/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"package solaire.data.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":" * A task to be finished with only a description.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"     * Creates a todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"     * @param taskName description of the todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"        super(taskName);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"marcus-ny":21}},{"path":"src/main/java/solaire/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"package solaire.parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.exception.SolaireException;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":" * Represents a utility class Parser.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":" * Given a string user input, parses the given input and returns a corresponding \u003ccode\u003eTask\u003c/code\u003e object","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":"     * Parses a user input string and returns a corresponding \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"     * @param input user input as String.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"     * @return Task a \u003ccode\u003eTask\u003c/code\u003e object corresponding to the parsed input.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"     * @throws SolaireException if input fails to pattern-match with given patterns.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"    public static Task parseTaskInput(String input) throws SolaireException {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"        if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"            return getDeadline(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"            return getTodo(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"marcus-ny"},"content":"            return getEvent(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"marcus-ny"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"marcus-ny"},"content":"            throw new SolaireException(\"Unable to determine task type\");","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"marcus-ny"},"content":"    private static Event getEvent(String input) throws SolaireException {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"marcus-ny"},"content":"        Matcher eventPattern \u003d Pattern.compile(\"^(?i)event\\\\s+(.+)\\\\s+/from\\\\s+(\\\\S+)\\\\s+/to\\\\s+(\\\\S+.*)$\")","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"marcus-ny"},"content":"                .matcher(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"marcus-ny"},"content":"        if (eventPattern.matches()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"marcus-ny"},"content":"            String taskName \u003d eventPattern.group(1);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"marcus-ny"},"content":"            String from \u003d eventPattern.group(2);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"marcus-ny"},"content":"            String to \u003d eventPattern.group(3);","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"marcus-ny"},"content":"            return new Event(taskName, from, to);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"marcus-ny"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"marcus-ny"},"content":"            throw new SolaireException(\"Incorrect format; follow event format as such:\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"marcus-ny"},"content":"                    + \"event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"marcus-ny"},"content":"    private static Todo getTodo(String input) throws SolaireException {","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"marcus-ny"},"content":"        String[] inputTodo \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"marcus-ny"},"content":"        if (inputTodo.length \u003c 2 || inputTodo[1].trim().replaceAll(\"^\\\\s+\", \"\").isEmpty()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"marcus-ny"},"content":"            throw new SolaireException(","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"marcus-ny"},"content":"                    \"The todo task description cannot be empty! Please use this format: \\n\" + \"todo \u003cdescription\u003e\");","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"marcus-ny"},"content":"        return new Todo(inputTodo[1]);","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"marcus-ny"},"content":"    private static Deadline getDeadline(String input) throws SolaireException {","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"marcus-ny"},"content":"        Matcher deadlinePattern \u003d Pattern.compile(\"^(?i)deadline\\\\s+(.+)\\\\s+/by\\\\s+(\\\\S+.*)\").matcher(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"marcus-ny"},"content":"        if (deadlinePattern.matches()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"marcus-ny"},"content":"            String taskName \u003d deadlinePattern.group(1);","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"marcus-ny"},"content":"            String deadline \u003d deadlinePattern.group(2);","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"marcus-ny"},"content":"            return new Deadline(taskName, deadline);","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"marcus-ny"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"marcus-ny"},"content":"            throw new SolaireException(","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"marcus-ny"},"content":"                    \"Incorrect format: follow deadline format as such: \\n\" + \"deadline \u003cdescription\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"marcus-ny":73}},{"path":"src/main/java/solaire/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"package solaire.storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"import java.util.List;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.exception.SolaireException;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":" * Represents a local storage as a utility class.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":" * Reading from and writing to local storage is handled here.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"    private static final Path FILE_PATH \u003d Paths.get(\"src\", \"main\", \"resources\", \"Solaire.txt\");","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"     * Loads data from a pre-determined file path and generates a list of tasks for UI.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":"     * @return an \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"    public static ArrayList\u003cTask\u003e loadFromLocal() {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"marcus-ny"},"content":"        // Clear current tasklist","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"marcus-ny"},"content":"        taskList.clear();","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"marcus-ny"},"content":"        assert taskList.isEmpty() : \"Tasklist should be empty\";","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"marcus-ny"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"marcus-ny"},"content":"            Path directoryPath \u003d FILE_PATH.getParent();","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"marcus-ny"},"content":"            // Check if directory exists","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"marcus-ny"},"content":"            Files.createDirectories(directoryPath);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"marcus-ny"},"content":"            if (!Files.exists(FILE_PATH)) {","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"marcus-ny"},"content":"                Files.createFile(FILE_PATH);","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"marcus-ny"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"marcus-ny"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(FILE_PATH);","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"marcus-ny"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"marcus-ny"},"content":"                parseTasks(line);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"marcus-ny"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"marcus-ny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"marcus-ny"},"content":"            System.out.println(\"Something went wrong in reading local data: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"marcus-ny"},"content":"        } catch (SolaireException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"marcus-ny"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"marcus-ny"},"content":"        return taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"marcus-ny"},"content":"     * Formats the given taskList items and writes them into local file in pre-determined path.","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"marcus-ny"},"content":"     * @param taskList an \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003e objects","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"marcus-ny"},"content":"    public static void write(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"marcus-ny"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"marcus-ny"},"content":"            Files.createDirectories(FILE_PATH.getParent());","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"marcus-ny"},"content":"            Storage.taskList \u003d taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"marcus-ny"},"content":"            BufferedWriter bw \u003d Files.newBufferedWriter(FILE_PATH);","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"marcus-ny"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"marcus-ny"},"content":"                String content \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"marcus-ny"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"marcus-ny"},"content":"                    content \u003d \"T | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \" + (task.getDescription());","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"marcus-ny"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"marcus-ny"},"content":"                    Deadline ddlTask \u003d (Deadline) task;","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"marcus-ny"},"content":"                    content \u003d \"D | \" + (ddlTask.getIsDone() ? \"1\" : \"0\") + \" | \" + (ddlTask.getDescription()) + \" | \"","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"marcus-ny"},"content":"                            + (ddlTask.getDeadline());","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"marcus-ny"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"marcus-ny"},"content":"                    Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"marcus-ny"},"content":"                    content \u003d \"E | \" + (eventTask.getIsDone() ? \"1\" : \"0\") + \" | \" + (eventTask.getDescription())","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"marcus-ny"},"content":"                            + \" | \" + (eventTask.getStart()) + \" | \" + (eventTask.getEnd());","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"marcus-ny"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"marcus-ny"},"content":"                if (!content.equals(\"\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"marcus-ny"},"content":"                    bw.write(content);","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"marcus-ny"},"content":"                    bw.newLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"marcus-ny"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"marcus-ny"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"marcus-ny"},"content":"            bw.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"marcus-ny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"marcus-ny"},"content":"            System.out.println(\"Something went wrong on attempting to write to local disk: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"marcus-ny"},"content":"    private static void parseTasks(String line) throws SolaireException {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"marcus-ny"},"content":"        assert !line.isEmpty() : \"Line should not be empty\";","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"marcus-ny"},"content":"        String[] taskDetails \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"marcus-ny"},"content":"        String taskType \u003d taskDetails[0].trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"marcus-ny"},"content":"        Boolean isComplete \u003d taskDetails[1].trim().equals(\"1\") ? true : false;","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"marcus-ny"},"content":"        String taskDescription \u003d taskDetails[2].trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"marcus-ny"},"content":"        switch (taskDetails.length) {","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"marcus-ny"},"content":"        case 3: {","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"marcus-ny"},"content":"            Task newTask \u003d getTodoTask(taskDescription, isComplete);","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"marcus-ny"},"content":"            taskList.add(newTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"marcus-ny"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"marcus-ny"},"content":"        case 4: {","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"marcus-ny"},"content":"            Task newTask \u003d getTaskWithTimeLimit(taskType, taskDescription, taskDetails, isComplete);","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"marcus-ny"},"content":"            taskList.add(newTask);","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"marcus-ny"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"marcus-ny"},"content":"        default:","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"marcus-ny"},"content":"            throw new SolaireException(\"Invalid task format in local storage\");","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"marcus-ny"},"content":"    private static Task getTaskWithTimeLimit(String taskType, String taskDescription, String[] taskDetails,","lastModifiedDate":"2024-02-14"},{"lineNumber":117,"author":{"gitId":"marcus-ny"},"content":"                                             Boolean isComplete) throws SolaireException {","lastModifiedDate":"2024-02-14"},{"lineNumber":118,"author":{"gitId":"marcus-ny"},"content":"        Task newTask;","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"marcus-ny"},"content":"        if (taskType.trim().equals(\"D\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"marcus-ny"},"content":"            newTask \u003d new Deadline(taskDescription, taskDetails[3]);","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"marcus-ny"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"marcus-ny"},"content":"            String[] timeDetails \u003d taskDetails[3].split(\"\\\\-\");","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"marcus-ny"},"content":"            newTask \u003d new Event(taskDescription, timeDetails[0], timeDetails[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"marcus-ny"},"content":"        if (isComplete) {","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"marcus-ny"},"content":"            newTask.markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"marcus-ny"},"content":"        return newTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":129,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":131,"author":{"gitId":"marcus-ny"},"content":"    private static Task getTodoTask(String taskDescription, Boolean isComplete) {","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"marcus-ny"},"content":"        Task newTask \u003d new Todo(taskDescription);","lastModifiedDate":"2024-02-14"},{"lineNumber":133,"author":{"gitId":"marcus-ny"},"content":"        if (isComplete) {","lastModifiedDate":"2024-02-14"},{"lineNumber":134,"author":{"gitId":"marcus-ny"},"content":"            newTask.markAsDone();","lastModifiedDate":"2024-02-14"},{"lineNumber":135,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"marcus-ny"},"content":"        return newTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":137,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"marcus-ny":138}},{"path":"src/main/java/solaire/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"package solaire.tasklist;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.exception.SolaireException;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Deadline;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"import solaire.parser.Parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":" * Represents a list of Tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"    private void lineBreak() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"        System.out.print(\"--------------------------------------------------\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"     * Parses and adds a task to the current list if input corresponds to task creation.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"marcus-ny"},"content":"     * @param input a user command input as String.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"marcus-ny"},"content":"    public String processTaskCommand(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"marcus-ny"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"marcus-ny"},"content":"            return addToList(Parser.parseTaskInput(input));","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"marcus-ny"},"content":"        } catch (SolaireException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"marcus-ny"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"marcus-ny"},"content":"    private String addToList(Task task) {","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"marcus-ny"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"marcus-ny"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"marcus-ny"},"content":"            taskList.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"marcus-ny"},"content":"            output \u003d \"Added \" + task + \" to your list\";","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"marcus-ny"},"content":"            //lineBreak();","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"marcus-ny"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"marcus-ny"},"content":"            output \u003d \"Task not added to list\";","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"marcus-ny"},"content":"        return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"marcus-ny"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"marcus-ny"},"content":"        return this.taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"marcus-ny"},"content":"     * Removes a specified task from the list of Tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"marcus-ny"},"content":"     * @param input user input command in the format \"delete (index)\".","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"marcus-ny"},"content":"    public String processRemoveFromList(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"marcus-ny"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"marcus-ny"},"content":"            String[] inputCommand \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"marcus-ny"},"content":"            if (inputCommand.length \u003c 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"marcus-ny"},"content":"                throw new SolaireException(\"Please specify the ID of the task you wish to delete\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"marcus-ny"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"marcus-ny"},"content":"                Integer targetTaskId \u003d Integer.parseInt(inputCommand[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"marcus-ny"},"content":"                if (targetTaskId \u003e this.taskList.size() || targetTaskId \u003c\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"marcus-ny"},"content":"                    throw new SolaireException(\"Task number \" + targetTaskId + \" does not exist\");","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"marcus-ny"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"marcus-ny"},"content":"                Task taskToDelete \u003d taskList.get(targetTaskId - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"marcus-ny"},"content":"                taskList.remove(taskToDelete);","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"marcus-ny"},"content":"                String output \u003d \"Removed\" + taskToDelete + \" from your list\";","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"marcus-ny"},"content":"                return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"marcus-ny"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"marcus-ny"},"content":"        } catch (SolaireException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"marcus-ny"},"content":"            String output \u003d e.getMessage();","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"marcus-ny"},"content":"            return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"marcus-ny"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"marcus-ny"},"content":"    public String showList() {","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"marcus-ny"},"content":"        String output \u003d \"Your list is as follows:\\n \" + \"-------------------\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"marcus-ny"},"content":"        for (Task item : taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"marcus-ny"},"content":"            output +\u003d taskList.indexOf(item) + 1 + \". \" + item.toString() + \"\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"marcus-ny"},"content":"        return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"marcus-ny"},"content":"     * Mark a specified task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"marcus-ny"},"content":"     * @param id 1-indexed integer identifier of the task as shown in the UI.","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"marcus-ny"},"content":"    public String markDone(int id) {","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"marcus-ny"},"content":"        assert id \u003e 0 : \"Task ID should be a positive integer\";","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"marcus-ny"},"content":"        assert id \u003c taskList.size() : \"Task ID should be less than the size of the task list\";","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"marcus-ny"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"marcus-ny"},"content":"        for (Task item : taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"marcus-ny"},"content":"            if (item.getId() \u003d\u003d id) {","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"marcus-ny"},"content":"                item.markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"marcus-ny"},"content":"                output \u003d \"Marked item number: \" + item.getId() + \"\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"marcus-ny"},"content":"                return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"marcus-ny"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"marcus-ny"},"content":"        output \u003d \"Couldn\u0027t find task associated with given id\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"marcus-ny"},"content":"        return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"marcus-ny"},"content":"     * Mark a specified task as \"not done\".","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"marcus-ny"},"content":"     * @param id 1-indexed integer identifier of the task as shown in the UI.","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"marcus-ny"},"content":"    public String unmarkDone(int id) {","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"marcus-ny"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"marcus-ny"},"content":"        for (Task item : taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"marcus-ny"},"content":"            if (item.getId() \u003d\u003d id) {","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"marcus-ny"},"content":"                item.unmarkDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"marcus-ny"},"content":"                output \u003d \"Unmarked  item number: \" + item.getId() + \"\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"marcus-ny"},"content":"                return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"marcus-ny"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"marcus-ny"},"content":"        output \u003d \"Couldn\u0027t find task associated with given id\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"marcus-ny"},"content":"        return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":135,"author":{"gitId":"marcus-ny"},"content":"     * Filters the current list of tasks based on a given prompt and returns the corresponding list.","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"marcus-ny"},"content":"     * @param prompt a user input to match task descriptions against.","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"marcus-ny"},"content":"    public String findTask(String prompt) {","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"marcus-ny"},"content":"        prompt \u003d prompt.trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"marcus-ny"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"marcus-ny"},"content":"        if (prompt.equals(\"\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"marcus-ny"},"content":"            output \u003d \"Please insert a non-blank prompt to filter with.\\n\" + \"-------------------\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":144,"author":{"gitId":"marcus-ny"},"content":"            return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"marcus-ny"},"content":"        output \u003d \"Here are the matching tasks in your list:\\n \" + \"-------------------\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"marcus-ny"},"content":"        int filteredIndex \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"marcus-ny"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"marcus-ny"},"content":"            if (task.getDescription().contains(prompt)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"marcus-ny"},"content":"                output +\u003d filteredIndex + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"marcus-ny"},"content":"                filteredIndex++;","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"marcus-ny"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"marcus-ny"},"content":"        return output;","lastModifiedDate":"2024-02-09"},{"lineNumber":155,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":158,"author":{"gitId":"marcus-ny"},"content":"     * Reminds the user of upcoming deadlines and events.","lastModifiedDate":"2024-02-14"},{"lineNumber":159,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":160,"author":{"gitId":"marcus-ny"},"content":"     * @return a message containing the upcoming deadlines and events.","lastModifiedDate":"2024-02-14"},{"lineNumber":161,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":162,"author":{"gitId":"marcus-ny"},"content":"    public String remindMe(String... buffer) {","lastModifiedDate":"2024-02-14"},{"lineNumber":163,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":164,"author":{"gitId":"marcus-ny"},"content":"        // If user specifies no particular buffer, default to 1 day","lastModifiedDate":"2024-02-14"},{"lineNumber":165,"author":{"gitId":"marcus-ny"},"content":"        int bufferDays \u003d 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":166,"author":{"gitId":"marcus-ny"},"content":"        if (buffer.length !\u003d 0) {","lastModifiedDate":"2024-02-14"},{"lineNumber":167,"author":{"gitId":"marcus-ny"},"content":"            bufferDays \u003d Integer.parseInt(buffer[0]);","lastModifiedDate":"2024-02-14"},{"lineNumber":168,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":169,"author":{"gitId":"marcus-ny"},"content":"        String output \u003d \"Here\u0027s what\u0027s due in \" + bufferDays + \" days:\\n \";","lastModifiedDate":"2024-02-14"},{"lineNumber":170,"author":{"gitId":"marcus-ny"},"content":"        int reminderIndex \u003d 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":171,"author":{"gitId":"marcus-ny"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-02-14"},{"lineNumber":172,"author":{"gitId":"marcus-ny"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-02-14"},{"lineNumber":173,"author":{"gitId":"marcus-ny"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-02-14"},{"lineNumber":174,"author":{"gitId":"marcus-ny"},"content":"                if (deadlineTask.getDueStatus(bufferDays)) {","lastModifiedDate":"2024-02-14"},{"lineNumber":175,"author":{"gitId":"marcus-ny"},"content":"                    output +\u003d reminderIndex + \". \" + deadlineTask.toString() + \"\\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":176,"author":{"gitId":"marcus-ny"},"content":"                    reminderIndex++;","lastModifiedDate":"2024-02-14"},{"lineNumber":177,"author":{"gitId":"marcus-ny"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":178,"author":{"gitId":"marcus-ny"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":179,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":180,"author":{"gitId":"marcus-ny"},"content":"        return output;","lastModifiedDate":"2024-02-14"},{"lineNumber":181,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":182,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":183,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"marcus-ny":183}},{"path":"src/main/java/solaire/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"package solaire.ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":" * Ui class to handle user interface.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":" * It contains methods to greet the user and accept input from the user.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"    private Scanner scn;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"    public Ui(Scanner scn) {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"        this.scn \u003d scn;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"     * Accepts input from the user.","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":"     * @return String input from the user in lower case.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"    public String acceptInput() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"        String input \u003d this.scn.nextLine().toLowerCase();","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"        return input;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"     * Greets the user with an intro message.","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"    public String greet() {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"        String greetingMessage \u003d","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"marcus-ny"},"content":"                \"Oh hello there. I\u0027m Solaire of Astora.\\n\" + \"The sun is a wondrous body. Like a \" + \"magnificent \"","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"marcus-ny"},"content":"                        + \"father!\\n\" + \"If only I could be so grossly incandescent!\\n\";","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"marcus-ny"},"content":"        return greetingMessage;","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"marcus-ny"},"content":"        //lineBreak();","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"marcus-ny"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"marcus-ny"},"content":"     * Ends the chat session of Solaire.","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"marcus-ny"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"marcus-ny"},"content":"    public String waveBye() {","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"marcus-ny"},"content":"        scn.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"marcus-ny"},"content":"        String farewellMessage \u003d \"Farewell!\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"marcus-ny"},"content":"        return farewellMessage;","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"marcus-ny"},"content":"        //lineBreak();","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"marcus-ny"},"content":"    private void lineBreak() {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"marcus-ny"},"content":"        System.out.print(\"--------------------------------------------------\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"marcus-ny":51}},{"path":"src/main/resources/Solaire.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"T | 0 | eat dinner","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"T | 0 | add salt to the dishes","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"T | 0 | read book","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"T | 0 | mark student scripts","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"D | 0 | return book | 2022-02-23","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"D | 0 | buy groceries | 2024-02-15","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"D | 0 | buy toys | 2024-02-24","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"marcus-ny":7}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"false\"/\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"marcus-ny":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"            fx:controller\u003d\"solaire.MainWindow\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"        /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":"                    vvalue\u003d\"1.0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":"        \u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"                      style\u003d\"-fx-background-color: #CCCCCC;\"/\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"marcus-ny":27}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.exception.SolaireException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"    public void testDeadlineParsing() {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"        // test case 1","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"            String testDdlString \u003d \"2024-02-27\";","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"            Deadline ddl \u003d new Deadline(\"ddl\", testDdlString);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":"        } catch (SolaireException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":"            fail(\"Failed test case 1 in deadline test\");","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"        // test case 2","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"        String testInput2 \u003d \"deadline Complete level 7 /by tomorrow\";","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"            String testDdlString \u003d \"tomorrow\";","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"            Deadline ddl \u003d new Deadline(\"ddl\", testDdlString);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"            fail(\"Failed test case 2 in deadline test\");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":"        } catch (SolaireException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"            assertEquals(\"Deadline must be in the format: yyyy-mm-dd\", e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"marcus-ny":34}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.exception.SolaireException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"import solaire.data.task.Todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"import solaire.tasklist.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"marcus-ny"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"marcus-ny"},"content":"    public void testDeleteOutOfBound() throws SolaireException {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"marcus-ny"},"content":"        // dummy data","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"marcus-ny"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"marcus-ny"},"content":"        tasks.add(new Todo(\"eat lunch\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"marcus-ny"},"content":"        tasks.add(new Deadline(\"assignment\", \"2024-02-27\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"        tasks.add(new Event(\"coldplay\", \"tomorrow\", \"end Feb\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"marcus-ny"},"content":"        TaskList tl \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"        // test case 1","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"marcus-ny"},"content":"        String input1 \u003d \"delete 4\";","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"marcus-ny"},"content":"        tl.processRemoveFromList(input1);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"marcus-ny"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"marcus-ny"},"content":"        assertEquals(tl.getTaskList().size(), 3);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"marcus-ny"},"content":"        // test case 2","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"marcus-ny"},"content":"        String input2 \u003d \"delete -1\";","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"marcus-ny"},"content":"        tl.processRemoveFromList(input2);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"marcus-ny"},"content":"        assertEquals(tl.getTaskList().size(), 3);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"marcus-ny"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"marcus-ny"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"marcus-ny":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marcus-ny"},"content":"todo eat lunch","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"marcus-ny"},"content":"event movie /from 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"marcus-ny"},"content":"deadline assignment 1 /by 31st Feb 2020","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"marcus-ny"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"marcus-ny"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"marcus-ny"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"marcus-ny"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"marcus-ny"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"marcus-ny"},"content":"find movie","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"marcus-ny"},"content":"delete 3","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"marcus-ny"},"content":"delete 2","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"marcus-ny"},"content":"delete 1","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"marcus-ny"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"marcus-ny":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"marcus-ny"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/solaire/*.java","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"marcus-ny"},"content":"java -classpath ../bin solaire.Solaire \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"marcus-ny"},"content":"sudo dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marcus-ny":3,"-":35}}]
