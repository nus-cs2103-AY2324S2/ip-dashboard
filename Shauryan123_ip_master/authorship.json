[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"# duke.duke project template","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Shauryan123":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"checkstyle {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Shauryan123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Shauryan123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Shauryan123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Shauryan123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Shauryan123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Shauryan123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Shauryan123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Shauryan123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Shauryan123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Shauryan123"},"content":"//application {","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"Shauryan123"},"content":"//    mainClass \u003d \"duke.Duke\"","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"Shauryan123"},"content":"//}","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"Shauryan123"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Shauryan123":26,"-":41}},{"path":"data/duck.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"T| 1|  read book","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"D| 0|  return book | Dec 05 2019 18:00","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"E| 0|  project meeting | Dec 08 2019 17:00-Nov 04 2020 18:00","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"D| 1|  make cake | Aug 17 2020 19:00","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"E| 1|  fintech summit | Jul 05 2020 13:00-Aug 09 2020 14:00","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"T| 0| kiss girl","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"E| 1|  make chocolate cofeee | Aug 01 2019 12:00-Jul 02 2020 13:00","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Shauryan123":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"# duke.duke User Guide","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"Shauryan123":1,"-":29}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"import duke.Main;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":" * Entry point to our application","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"public class Launcher {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Shauryan123":12}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"import duke.Ui.DialogBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"import duke.exceptions.FileIOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":" * This class is command-line application responsible for managing tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Shauryan123"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Shauryan123"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Shauryan123"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Shauryan123"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Shauryan123"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Shauryan123"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Shauryan123"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Shauryan123"},"content":"    private final IOHandler ioHandler \u003d new IOHandler();","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Shauryan123"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Shauryan123"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Shauryan123"},"content":"    private final String FILE_PATH \u003d \"data/duck.txt\";","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Shauryan123"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Shauryan123"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Shauryan123"},"content":"    private Image duckbot \u003d new Image(this.getClass().getResourceAsStream(\"/images/duckbot.jpeg\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Shauryan123"},"content":"     * Constructs a simple Duck Object..","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Shauryan123"},"content":"    public Duke() {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Shauryan123"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Shauryan123"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"Shauryan123"},"content":"        this.taskList \u003d new TaskList(storage.readFromFile());","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Shauryan123"},"content":"     * It runs the Duck Application.","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"Shauryan123"},"content":"     * Displays Contents, handle the user inputs and commands until user exits.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Shauryan123"},"content":"    public void run() {","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"Shauryan123"},"content":"//        ioHandler.welcomeMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"Shauryan123"},"content":"//        boolean exit \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"Shauryan123"},"content":"//        while (!exit) {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"Shauryan123"},"content":"//            exit \u003d !parser.parse(ioHandler.typeMessage(), ioHandler, taskList, storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"Shauryan123"},"content":"//        }","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"Shauryan123"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"Shauryan123"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"Shauryan123"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"Shauryan123"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"Shauryan123"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"Shauryan123"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"Shauryan123"},"content":"        dialogContainer.setSpacing(10);","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"Shauryan123"},"content":"        dialogContainer.setPadding(new Insets(10));","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"Shauryan123"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"Shauryan123"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"Shauryan123"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"Shauryan123"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"Shauryan123"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"Shauryan123"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"Shauryan123"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"Shauryan123"},"content":"        stage.show();","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"Shauryan123"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"Shauryan123"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"Shauryan123"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"Shauryan123"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"Shauryan123"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"Shauryan123"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"Shauryan123"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"Shauryan123"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"Shauryan123"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"Shauryan123"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"Shauryan123"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"Shauryan123"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"Shauryan123"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"Shauryan123"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"Shauryan123"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"Shauryan123"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"Shauryan123"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":107,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"Shauryan123"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"Shauryan123"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"Shauryan123"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"Shauryan123"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"Shauryan123"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"Shauryan123"},"content":"        });","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":116,"author":{"gitId":"Shauryan123"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"Shauryan123"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2024-02-05"},{"lineNumber":118,"author":{"gitId":"Shauryan123"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-05"},{"lineNumber":119,"author":{"gitId":"Shauryan123"},"content":"        });","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":121,"author":{"gitId":"Shauryan123"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-05"},{"lineNumber":122,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"Shauryan123"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"Shauryan123"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"Shauryan123"},"content":"        });","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"Shauryan123"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"Shauryan123"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"Shauryan123"},"content":"        });","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"Shauryan123"},"content":"     * Iteration 1:","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"Shauryan123"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"Shauryan123"},"content":"     * @param text String containing text to add","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"Shauryan123"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":138,"author":{"gitId":"Shauryan123"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"Shauryan123"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"Shauryan123"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"Shauryan123"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"Shauryan123"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":145,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":146,"author":{"gitId":"Shauryan123"},"content":"     * Iteration 2:","lastModifiedDate":"2024-02-05"},{"lineNumber":147,"author":{"gitId":"Shauryan123"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-05"},{"lineNumber":148,"author":{"gitId":"Shauryan123"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":149,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":150,"author":{"gitId":"Shauryan123"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":151,"author":{"gitId":"Shauryan123"},"content":"        if (userInput.getText().isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":152,"author":{"gitId":"Shauryan123"},"content":"            return;","lastModifiedDate":"2024-02-05"},{"lineNumber":153,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":154,"author":{"gitId":"Shauryan123"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"Shauryan123"},"content":"                DialogBox.getUserDialog(userInput.getText(), user),","lastModifiedDate":"2024-02-05"},{"lineNumber":156,"author":{"gitId":"Shauryan123"},"content":"                DialogBox.getDukeDialog(getResponse(userInput.getText()), duckbot)","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"Shauryan123"},"content":"        );","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"Shauryan123"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-05"},{"lineNumber":159,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":160,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":161,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":162,"author":{"gitId":"Shauryan123"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"Shauryan123"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-05"},{"lineNumber":164,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":165,"author":{"gitId":"Shauryan123"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":166,"author":{"gitId":"Shauryan123"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":168,"author":{"gitId":"Shauryan123"},"content":"        return parser.parse(input, ioHandler, taskList, storage).replace(\"\\n\", \"\\n\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":169,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":170,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":171,"author":{"gitId":"Shauryan123"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":172,"author":{"gitId":"Shauryan123"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-05"},{"lineNumber":173,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":174,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Shauryan123":174}},{"path":"src/main/java/duke/IOHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":" * Responsible for handling Input Output tasks in the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"public class IOHandler {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"     * Constructs IoHandler Object.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"    public IOHandler() {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"     * Displays welcome Message.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":"    public String welcomeMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Shauryan123"},"content":"        String result \u003d \"Hello! I\u0027m Duckbot\\n\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Shauryan123"},"content":"        result +\u003d \"What can I do for you?\";","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Shauryan123"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Shauryan123"},"content":"     * Divides the paragraphs.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Shauryan123"},"content":"    public void divider() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Shauryan123"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Shauryan123"},"content":"     * Reads the input from the user","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Shauryan123"},"content":"     * @return User\u0027s inputted String.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Shauryan123"},"content":"    public String typeMessage() {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Shauryan123"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Shauryan123"},"content":"     * Displays a list of tasks to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Shauryan123"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Shauryan123"},"content":"     * @param taskList The TaskList containing tasks to be displayed.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Shauryan123"},"content":"    public String display(TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"Shauryan123"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Shauryan123"},"content":"        int serial \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Shauryan123"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"Shauryan123"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"Shauryan123"},"content":"            return \"There are no tasks in your lists.\";","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"Shauryan123"},"content":"        result.append(\"Here are all the tasks in your list: \\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"Shauryan123"},"content":"        while (count \u003c taskList.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Shauryan123"},"content":"            result.append(serial).append(\".\").append(taskList.get(count)).append(\"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"Shauryan123"},"content":"            count++;","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Shauryan123"},"content":"            serial++;","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Shauryan123"},"content":"        return result.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Shauryan123"},"content":"     * Displays an exit message.","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Shauryan123"},"content":"    public String exit() {","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"Shauryan123"},"content":"        return \"Bye. Hope to see you again soon !\";","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Shauryan123"},"content":"     * Displays a confirmation message when some task gets added.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Shauryan123"},"content":"     * @param t","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Shauryan123"},"content":"     * @param taskList","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Shauryan123"},"content":"    public String echoAdd(Task t, TaskList taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"Shauryan123"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"Shauryan123"},"content":"        result.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"Shauryan123"},"content":"        result.append(\"  \").append(t).append(\"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"Shauryan123"},"content":"        result.append(\"Now you have \").append(taskList.size()).append(\" tasks in the list.\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"Shauryan123"},"content":"        return result.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"Shauryan123"},"content":"    public String displaySearchResults(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"Shauryan123"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"Shauryan123"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"Shauryan123"},"content":"            return \"I couldn\u0027t find any matching tasks in your lists.\";","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"Shauryan123"},"content":"        result.append(\"Here are the matching tasks in your list: \\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"Shauryan123"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"Shauryan123"},"content":"            result.append(i + 1).append(\".\").append(list.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"Shauryan123"},"content":"        return result.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Shauryan123":95}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"import duke.Ui.MainWindow;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":"            stage.show();","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Shauryan123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Shauryan123"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Shauryan123":30}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"import duke.exceptions.FileIOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"import duke.exceptions.IllegalDateFormatException;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":" * Deals in connecting with the user command.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"     * Identifies the type of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"     * @param command User\u0027s inputted text.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"     * @return The type of task the user wants to do.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":"    public String identify(String command) {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Shauryan123"},"content":"        String[] strings \u003d command.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Shauryan123"},"content":"        return strings[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Shauryan123"},"content":"     * Parses and executes user command to manage tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Shauryan123"},"content":"     * @param str User\u0027s inputed String (Command).","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Shauryan123"},"content":"     * @param io IoHandler object for input and output","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Shauryan123"},"content":"     * @param taskList List containing Tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Shauryan123"},"content":"     * @param storage Acts as a storage object for saving tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Shauryan123"},"content":"     * @return boolean value depicting whether application should run or should be exited.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Shauryan123"},"content":"    public String parse(String str, IOHandler io, TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Shauryan123"},"content":"        String command \u003d identify(str);","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Shauryan123"},"content":"        String result;","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Shauryan123"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Shauryan123"},"content":"            switch (command) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Shauryan123"},"content":"                case \"deadline\":","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Shauryan123"},"content":"                    Deadline tempDeadline \u003d taskList.setDeadline(str.substring(8));","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Shauryan123"},"content":"                    taskList.addTask(tempDeadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Shauryan123"},"content":"                    result \u003d io.echoAdd(tempDeadline, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"Shauryan123"},"content":"                    storage.saveInFile(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Shauryan123"},"content":"                    break;","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"Shauryan123"},"content":"                case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Shauryan123"},"content":"                    Event tempEvent \u003d taskList.setEvent(str.substring(5));","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"Shauryan123"},"content":"                    taskList.addTask(tempEvent);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Shauryan123"},"content":"                    result \u003d io.echoAdd(tempEvent, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"Shauryan123"},"content":"                    storage.saveInFile(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Shauryan123"},"content":"                    break;","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"Shauryan123"},"content":"                case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Shauryan123"},"content":"                    Todo tempToDo \u003d taskList.setToDo(str.substring(4));","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"Shauryan123"},"content":"                    taskList.addTask(tempToDo);","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Shauryan123"},"content":"                    result \u003d io.echoAdd(tempToDo, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"Shauryan123"},"content":"                    storage.saveInFile(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Shauryan123"},"content":"                    break;","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"Shauryan123"},"content":"                case \"delete\":","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Shauryan123"},"content":"                    Task tempDelete \u003d taskList.deleteTask(str, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"Shauryan123"},"content":"                    storage.saveInFile(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Shauryan123"},"content":"                    StringBuilder deleteResult \u003d new StringBuilder();","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"Shauryan123"},"content":"                    deleteResult.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"Shauryan123"},"content":"                    deleteResult.append(\" \").append(tempDelete.toString()).append(\"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"Shauryan123"},"content":"                    deleteResult.append(\"Now you have \").append(taskList.size()).append(\" tasks in the list.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"Shauryan123"},"content":"                    result \u003d deleteResult.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"Shauryan123"},"content":"                    break;","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"Shauryan123"},"content":"                case \"mark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Shauryan123"},"content":"                    Task tempMark \u003d taskList.setDone(str, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"Shauryan123"},"content":"                    StringBuilder markResult \u003d new StringBuilder();","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"Shauryan123"},"content":"                    storage.saveInFile(taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Shauryan123"},"content":"                    markResult.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"Shauryan123"},"content":"                    markResult.append(\"  \").append(tempMark);","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"Shauryan123"},"content":"                    result \u003d markResult.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"Shauryan123"},"content":"                    break;","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"Shauryan123"},"content":"                case \"unmark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Shauryan123"},"content":"                    Task tempUnmark \u003d taskList.setUndone(str, taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"Shauryan123"},"content":"                    StringBuilder unmarkResult \u003d new StringBuilder();","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"Shauryan123"},"content":"                    storage.saveInFile(taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Shauryan123"},"content":"                    unmarkResult.append(\"I\u0027ve marked this task as undone:\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"Shauryan123"},"content":"                    unmarkResult.append(\"  \").append(tempUnmark);","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"Shauryan123"},"content":"                    result \u003d unmarkResult.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"Shauryan123"},"content":"                    break;","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"Shauryan123"},"content":"                case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Shauryan123"},"content":"                    result \u003d io.display(taskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"Shauryan123"},"content":"                    break;","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"Shauryan123"},"content":"                case \"bye\":","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Shauryan123"},"content":"                    result \u003d io.exit();","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"Shauryan123"},"content":"                    break;","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"Shauryan123"},"content":"                case \"find\":","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Shauryan123"},"content":"                    ArrayList\u003cTask\u003e temp \u003d taskList.find(str.substring(5));","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"Shauryan123"},"content":"                    result \u003d io.displaySearchResults(temp);","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"Shauryan123"},"content":"                    break;","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"Shauryan123"},"content":"                default:","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"Shauryan123"},"content":"                    throw new DukeException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"Shauryan123"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"Shauryan123"},"content":"        } catch (DukeException | IllegalDateFormatException | FileIOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"Shauryan123"},"content":"            result \u003d \"ERROR : \" + e.getMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"Shauryan123"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Shauryan123":105}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"import duke.task.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"import duke.exceptions.FileIOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":" * Acts as file handling class which is responsible for storing and reading tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"    private File FILE;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":"     * Constructs a storage object.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Shauryan123"},"content":"     * @param filePath Consists of a filepath for storing and reading tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Shauryan123"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Shauryan123"},"content":"        this.FILE \u003d new File(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Shauryan123"},"content":"     * Constructs a Storage Object.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Shauryan123"},"content":"    public Storage() {}","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Shauryan123"},"content":"     * Creates a File if it is not there","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Shauryan123"},"content":"     * @throws FileIOException If unsuccessful in creating directory.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Shauryan123"},"content":"    private void create() throws FileIOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Shauryan123"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Shauryan123"},"content":"            File parent \u003d FILE.getParentFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Shauryan123"},"content":"            if (parent !\u003d null \u0026\u0026 !parent.exists() \u0026\u0026 !parent.mkdirs()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Shauryan123"},"content":"                throw new IOException(\"Couldn\u0027t create dir: \" + parent);","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Shauryan123"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Shauryan123"},"content":"            FILE.createNewFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Shauryan123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Shauryan123"},"content":"            throw new FileIOException(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Shauryan123"},"content":"        /**","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Shauryan123"},"content":"     * Saves the tasks in the file from the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Shauryan123"},"content":"     * @param list List of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Shauryan123"},"content":"     * @throws FileIOException if unsuccessful in creating file.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Shauryan123"},"content":"        protected void saveInFile(TaskList list) throws FileIOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Shauryan123"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Shauryan123"},"content":"                if (!FILE.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Shauryan123"},"content":"                    create();","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Shauryan123"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Shauryan123"},"content":"                FileWriter fw \u003d new FileWriter(FILE);","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Shauryan123"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Shauryan123"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Shauryan123"},"content":"                Task task \u003d list.get(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Shauryan123"},"content":"                    if (task instanceof Deadline) {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Shauryan123"},"content":"                        Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Shauryan123"},"content":"                        fw.write(\"D| \" + (deadline.checkDone() ? \"1\" : \"0\") + \"| \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Shauryan123"},"content":"                                deadline.getDescription() + \"| \" + deadline.getBy().format(formatter) + \"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Shauryan123"},"content":"                    } else if (task instanceof Event) {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Shauryan123"},"content":"                        Event event \u003d (Event) task;","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Shauryan123"},"content":"                        fw.write(\"E| \" + (event.checkDone() ? \"1\" : \"0\") + \"| \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Shauryan123"},"content":"                                event.getDescription() + \"| \" + event.getStart().format(formatter) +","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Shauryan123"},"content":"                                \"-\" + event.getEnd().format(formatter) + \"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Shauryan123"},"content":"                    } else if (task instanceof Todo) {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Shauryan123"},"content":"                        Todo todo \u003d (Todo) task;","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Shauryan123"},"content":"                        fw.write(\"T| \" + (todo.checkDone() ? \"1\" : \"0\") + \"| \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Shauryan123"},"content":"                                todo.getDescription() + \"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Shauryan123"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Shauryan123"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Shauryan123"},"content":"                fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Shauryan123"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Shauryan123"},"content":"                throw new FileIOException(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Shauryan123"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"Shauryan123"},"content":"     * Loads tasks from a file and returns them as a list of Task objects.","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Shauryan123"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Shauryan123"},"content":"     * @return A List of Task objects loaded from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"Shauryan123"},"content":"    public List\u003cTask\u003e readFromFile() {","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Shauryan123"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Shauryan123"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"Shauryan123"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"Shauryan123"},"content":"            if (!FILE.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"Shauryan123"},"content":"                return list;","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"Shauryan123"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"Shauryan123"},"content":"            FileReader fr \u003d new FileReader(FILE);","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"Shauryan123"},"content":"            Scanner sc \u003d new Scanner(fr);","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"Shauryan123"},"content":"            while(sc.hasNext()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"Shauryan123"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"Shauryan123"},"content":"                String[] split \u003d line.split(\"\\\\| \");","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"Shauryan123"},"content":"                switch (split[0]) {","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"Shauryan123"},"content":"                    case \"D\":","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"Shauryan123"},"content":"                        LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(split[3], formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"Shauryan123"},"content":"                        Deadline tempDeadline \u003d new Deadline(split[2], deadlineDateTime);","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Shauryan123"},"content":"                        if (\"1\".equals(split[1])) {","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"Shauryan123"},"content":"                            tempDeadline.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"Shauryan123"},"content":"                        }","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"Shauryan123"},"content":"                        list.add(tempDeadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"Shauryan123"},"content":"                        break;","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"Shauryan123"},"content":"                    case \"E\":","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"Shauryan123"},"content":"                        String[] eventTimes \u003d split[3].split(\"-\");","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"Shauryan123"},"content":"                        LocalDateTime startEventDateTime \u003d LocalDateTime.parse(eventTimes[0], formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"Shauryan123"},"content":"                        LocalDateTime endEventDateTime \u003d LocalDateTime.parse(eventTimes[1], formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"Shauryan123"},"content":"                        Event tempEvent \u003d new Event(split[2], startEventDateTime, endEventDateTime);","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"Shauryan123"},"content":"                        if (\"1\".equals(split[1])) {","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"Shauryan123"},"content":"                            tempEvent.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"Shauryan123"},"content":"                        }","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"Shauryan123"},"content":"                        list.add(tempEvent);","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"Shauryan123"},"content":"                        break;","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"Shauryan123"},"content":"                    case \"T\":","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"Shauryan123"},"content":"                        Todo tempToDo \u003d new Todo(split[2]);","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"Shauryan123"},"content":"                        if (\"1\".equals(split[1])) {","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"Shauryan123"},"content":"                            tempToDo.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"Shauryan123"},"content":"                        }","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"Shauryan123"},"content":"                        list.add(tempToDo);","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"Shauryan123"},"content":"                        break;","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"Shauryan123"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"Shauryan123"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"Shauryan123"},"content":"            sc.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"Shauryan123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"Shauryan123"},"content":"            // Handle IOException as needed","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"Shauryan123"},"content":"        return list;","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Shauryan123":140}},{"path":"src/main/java/duke/Ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.effect.DropShadow;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Shauryan123"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Shauryan123"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Shauryan123"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Shauryan123"},"content":"    private TextFlow dialog;","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Shauryan123"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Shauryan123"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Shauryan123"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Shauryan123"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Shauryan123"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"Shauryan123"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Shauryan123"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Shauryan123"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Shauryan123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Shauryan123"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"Shauryan123"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"Shauryan123"},"content":"        displayPicture.setClip(new Circle(50, 50, 50));","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"Shauryan123"},"content":"        displayPicture.setEffect(new DropShadow(30, Color.BLACK));","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Shauryan123"},"content":"        Text temp \u003d new Text(text);","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"Shauryan123"},"content":"        temp.setFill(Color.WHITE);","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"Shauryan123"},"content":"        dialog.getChildren().add(temp);","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"Shauryan123"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"Shauryan123"},"content":"    private void flip() {","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"Shauryan123"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"Shauryan123"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"Shauryan123"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"Shauryan123"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"Shauryan123"},"content":"        dialog.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"Shauryan123"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"Shauryan123"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"Shauryan123"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"Shauryan123"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"Shauryan123"},"content":"        db.flip();","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"Shauryan123"},"content":"        return db;","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Shauryan123":70}},{"path":"src/main/java/duke/Ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"import duke.exceptions.FileIOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Shauryan123"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Shauryan123"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Shauryan123"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Shauryan123"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Shauryan123"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duckbot.jpeg\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Shauryan123"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Shauryan123"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Shauryan123"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Shauryan123"},"content":"        String result \u003d \"Hello! I\u0027m Duckbot\\n\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"Shauryan123"},"content":"        result +\u003d \"What can I do for you?\";","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Shauryan123"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Shauryan123"},"content":"                DialogBox.getDukeDialog(result, dukeImage)","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Shauryan123"},"content":"        );","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"Shauryan123"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"Shauryan123"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"Shauryan123"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"Shauryan123"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"Shauryan123"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"Shauryan123"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"Shauryan123"},"content":"        String input \u003d userInput.getText().strip();","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"Shauryan123"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"Shauryan123"},"content":"            return;","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"Shauryan123"},"content":"        String response \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"Shauryan123"},"content":"        response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"Shauryan123"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"Shauryan123"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"Shauryan123"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"Shauryan123"},"content":"        );","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"Shauryan123"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"Shauryan123"},"content":"        if (input.split(\" \")[0].equals(\"bye\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"Shauryan123"},"content":"            Thread delayThread \u003d new Thread(() -\u003e {","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"Shauryan123"},"content":"                try {","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"Shauryan123"},"content":"                    Thread.sleep(1000);","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"Shauryan123"},"content":"                } catch (InterruptedException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"Shauryan123"},"content":"                    e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"Shauryan123"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"Shauryan123"},"content":"                System.exit(0);","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"Shauryan123"},"content":"            });","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"Shauryan123"},"content":"            delayThread.start();","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Shauryan123":77}},{"path":"src/main/java/duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"    public Ui() {}","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"        System.out.println(\"Loading ERR\");","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Shauryan123":8}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":" * Throws Duke Exception for invalid command.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Shauryan123":12}},{"path":"src/main/java/duke/exceptions/FileIOException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":" * represents an error","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":" * related to file input/output operations within application.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":" * It extends the DuckException class, provides a specific error message","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":" * related to the file I/O issue.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"public class FileIOException extends Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"    public FileIOException(String str) {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"        super(\"File I/O error \" + str);","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Shauryan123":13}},{"path":"src/main/java/duke/exceptions/IllegalDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":" * A custom exception that gives error message due to inavlid date and time format.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"public class IllegalDateFormatException extends DateTimeParseException {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"    public IllegalDateFormatException(String mssg, String parsedData) {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"        super(mssg, parsedData, 0);","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Shauryan123":13}},{"path":"src/main/java/duke/exceptions/SemanticException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":" * Throws error message because of the Semantic Error in the application","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"public class SemanticException extends DukeException{","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"    public SemanticException(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"        super(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Shauryan123":11}},{"path":"src/main/java/duke/exceptions/SyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":" * Throws error message due to invalid Syntax written in the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"public class SyntaxException extends DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"    public SyntaxException(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"        super(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Shauryan123":11}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":" * Consists of information related to Deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"     * Constructs a Deadline Object.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":"     * @param description Contains the type of deadline","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"     * @param by Contains the date and time so as to when should the deadline be completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Shauryan123"},"content":"     * String representation of the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Shauryan123"},"content":"     * @return formatted string with the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Shauryan123"},"content":"    @Override public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Shauryan123"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Shauryan123"},"content":"        return \"[D]\" + (this.checkDone() ? \"[X] \" : \"[ ] \") + this.getDescription() + \" (by: \" + this.by.format(formatter) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Shauryan123"},"content":"     * Returns the formatted deadline date and time as a string.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Shauryan123"},"content":"     * @return Date and Time in a particular format.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Shauryan123"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Shauryan123"},"content":"        return by;","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Shauryan123":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"//public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"//    String start;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"//    String end;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"//","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"//    public Event(String description, String start, String end) {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"//        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"//        this.start \u003d start;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"//        this.end \u003d end;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"//    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"//","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"//    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"//    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"//        return \"[E]\" + (this.isDone ? \"[X] \" : \"[ ] \") + this.description + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"//    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"//","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"//    public String type() {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":"//        return \"E\";","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"//    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"//","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"//    public String getDate() {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"//        return this.start + \"-\" + this.end;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"//    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":"//}","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Shauryan123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Shauryan123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Shauryan123"},"content":" * Contains the details of events as a part of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Shauryan123"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Shauryan123"},"content":"    private LocalDateTime start;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Shauryan123"},"content":"    private LocalDateTime end;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Shauryan123"},"content":"     * Constructs the Events Object.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Shauryan123"},"content":"     * @param start Start date and time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Shauryan123"},"content":"     * @param end end date and time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Shauryan123"},"content":"     * @param description Contains the description of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Shauryan123"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Shauryan123"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"Shauryan123"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"Shauryan123"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"Shauryan123"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"Shauryan123"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"Shauryan123"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Shauryan123"},"content":"        return \"[E]\" + (this.checkDone() ? \"[X] \" : \"[ ] \") + this.getDescription() + \" (from: \" + this.start.format(formatter) + \" to: \" + this.end.format(formatter) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Shauryan123"},"content":"    public String getDate() {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Shauryan123"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Shauryan123"},"content":"        return this.start.format(formatter) + \"-\" + this.end.format(formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Shauryan123"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Shauryan123"},"content":"        return end;","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Shauryan123"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Shauryan123"},"content":"        return start;","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Shauryan123":68}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":" * Contatins the information of the Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"    private String description;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"     * Constructs the task object.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":"     * @param description Contains the description of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Shauryan123"},"content":"        return this.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Shauryan123"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Shauryan123"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Shauryan123"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Shauryan123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Shauryan123"},"content":"    public abstract String toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Shauryan123"},"content":"    public String type() {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Shauryan123"},"content":"        return \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Shauryan123"},"content":"    public boolean checkDone() {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Shauryan123"},"content":"        return isDone;","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Shauryan123"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Shauryan123"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Shauryan123":48}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"import duke.exceptions.IllegalDateFormatException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"import duke.exceptions.SemanticException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"import duke.exceptions.SyntaxException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":" * Manages all the operations of tasks on the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"    private List\u003cTask\u003e listOfTasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Shauryan123"},"content":"    public TaskList(List\u003cTask\u003e t) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Shauryan123"},"content":"        this.listOfTasks \u003d t;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Shauryan123"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Shauryan123"},"content":"        this.listOfTasks.add(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Shauryan123"},"content":"    public Task removeIndex(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Shauryan123"},"content":"        return this.listOfTasks.remove(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Shauryan123"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Shauryan123"},"content":"        this.listOfTasks.get(index).markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Shauryan123"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Shauryan123"},"content":"        this.listOfTasks.get(index).unmarkAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Shauryan123"},"content":"    public int size() {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Shauryan123"},"content":"        return this.listOfTasks.size();","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Shauryan123"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Shauryan123"},"content":"        return this.listOfTasks.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Shauryan123"},"content":"    public Deadline setDeadline(String str) throws IllegalDateFormatException, SyntaxException {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Shauryan123"},"content":"        String[] arr \u003d str.split(\"/by \");","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Shauryan123"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Shauryan123"},"content":"            if (arr.length !\u003d 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Shauryan123"},"content":"                throw new SyntaxException(\"Please check the command syntax\");","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Shauryan123"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Shauryan123"},"content":"            return new Deadline(arr[0], parseDateTime(arr[1]));","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Shauryan123"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Shauryan123"},"content":"            throw new IllegalDateFormatException(\"Wrong Format for the date kindly put in \\nyyyy-MM-dd HHmm.\", str);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Shauryan123"},"content":"    public Event setEvent(String str) throws IllegalDateFormatException, SyntaxException {","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Shauryan123"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Shauryan123"},"content":"            String[] event \u003d str.split(\"/from | /to \");","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Shauryan123"},"content":"            if (event.length !\u003d 3) {","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Shauryan123"},"content":"                throw new SyntaxException(\"Please check the command syntax\");","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Shauryan123"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Shauryan123"},"content":"            return new Event(event[0],LocalDateTime.parse(event[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")),","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Shauryan123"},"content":"                    LocalDateTime.parse(event[2], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Shauryan123"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Shauryan123"},"content":"            throw new IllegalDateFormatException(\"Wrong Format for the date kindly put in \\nyyyy-MM-dd HHmm.\", str);","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Shauryan123"},"content":"    private LocalDateTime parseDateTime(String dateTime) throws IllegalDateFormatException {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Shauryan123"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Shauryan123"},"content":"            return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Shauryan123"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Shauryan123"},"content":"            throw new IllegalDateFormatException(\"Incorrect format\", dateTime);","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Shauryan123"},"content":"    public Task deleteTask(String str, TaskList taskList) throws SyntaxException, SemanticException {","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Shauryan123"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Shauryan123"},"content":"            String[] string \u003d str.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"Shauryan123"},"content":"            if (string.length !\u003d 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Shauryan123"},"content":"                throw new SyntaxException(\"Need only index number after delete\");","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Shauryan123"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Shauryan123"},"content":"            int index \u003d Integer.parseInt(string[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"Shauryan123"},"content":"            return taskList.removeIndex(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Shauryan123"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"Shauryan123"},"content":"            throw new SyntaxException(\"Need only index number after delete\");","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"Shauryan123"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"Shauryan123"},"content":"            throw new SemanticException(\"Index is out of bounds, please write correct index number\");","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Shauryan123"},"content":"    private int getIndexOfMark(String str) {","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Shauryan123"},"content":"        return Integer.parseInt(str.substring(5));","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"Shauryan123"},"content":"    public Task setDone(String str, TaskList taskList) throws SyntaxException, SemanticException {","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Shauryan123"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Shauryan123"},"content":"            int index \u003d getIndexOfMark(str);","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Shauryan123"},"content":"            taskList.markTask(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"Shauryan123"},"content":"            return taskList.get(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"Shauryan123"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Shauryan123"},"content":"            throw new SyntaxException(\"Need only index number to mark as done\");","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Shauryan123"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"Shauryan123"},"content":"            throw new SemanticException(\"Index is out of bounds, please write correct index number\");","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"Shauryan123"},"content":"    public Task setUndone(String str, TaskList taskList) throws SyntaxException, SemanticException {","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"Shauryan123"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"Shauryan123"},"content":"            int index \u003d getIndexOfUnmark(str);","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"Shauryan123"},"content":"            taskList.unmarkTask(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"Shauryan123"},"content":"            return taskList.get(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"Shauryan123"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"Shauryan123"},"content":"            throw new SyntaxException(\"Need only index number to mark as undone\");","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"Shauryan123"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"Shauryan123"},"content":"            throw new SemanticException(\"Index is out of bounds, please write correct index number\");","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"Shauryan123"},"content":"    private int getIndexOfUnmark(String str) {","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"Shauryan123"},"content":"        return Integer.parseInt(str.substring(7));","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"Shauryan123"},"content":"    public Todo setToDo(String str) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"Shauryan123"},"content":"        String[] todo \u003d str.strip().split(\"todo ?+\");","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"Shauryan123"},"content":"        if (todo.length \u003e 0 \u0026\u0026 !todo[0].isBlank()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"Shauryan123"},"content":"            return new Todo(todo[0]);","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"Shauryan123"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"Shauryan123"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"Shauryan123"},"content":"    public ArrayList\u003cTask\u003e find(String command) {","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"Shauryan123"},"content":"        ArrayList\u003cTask\u003e searchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"Shauryan123"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"Shauryan123"},"content":"            if (listOfTasks.get(i).getDescription().contains(command)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"Shauryan123"},"content":"                searchedTasks.add(listOfTasks.get(i));","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"Shauryan123"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"Shauryan123"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"Shauryan123"},"content":"        return searchedTasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Shauryan123":153}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":" * Represents the todo type of Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"    public String type() {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"        return \"T\";","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"        return \"[T]\" + (this.checkDone() ? \"[X] \" : \"[ ] \") + this.getDescription();","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Shauryan123":20}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-padding: 10px;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"      \u003cTextFlow fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #066d8c; -fx-border-radius: 10px;\" textAlignment\u003d\"RIGHT\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"      \u003c/TextFlow\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Shauryan123":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.Ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"   \u003cVBox maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"          \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"559.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"              \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"559.0\" prefWidth\u003d\"500.0\" style\u003d\"-fx-background-color: #7789a6;\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"          \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"         \u003cHBox prefHeight\u003d\"50.0\" prefWidth\u003d\"500.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"                \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"400.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"                \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"100.0\" style\u003d\"-fx-background-color: #0093bf;\" text\u003d\"Send\" textFill\u003d\"#f8f8f8\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"            \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"      \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":"   \u003c/VBox\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Shauryan123":24}},{"path":"src/test/java/duke/task/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"import duke.IOHandler;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"import duke.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"    Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"    IOHandler ioHandler \u003d new IOHandler();","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"    TaskList List \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"    public void IdentifyTestWithCommand() {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"        String command \u003d parser.identify(\"deadline return book /by 2023-03-03 1220\");","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"        assertEquals(\"deadline\", command);","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":"        command \u003d parser.identify(\"event attend marraige /from 2023-09-09 1220 /to 2023-09-10 1220\");","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":"        assertEquals(\"event\", command);","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Shauryan123"},"content":"        command \u003d parser.identify(\"todo project\");","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Shauryan123"},"content":"        assertEquals(\"todo\", command);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Shauryan123":31}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Shauryan123"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Shauryan123"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Shauryan123"},"content":"    public void testSetToDo() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Shauryan123"},"content":"        String input \u003d \"Do ip\";","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Shauryan123"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Shauryan123"},"content":"        Todo todo \u003d test.setToDo(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Shauryan123"},"content":"        assertEquals(\"Do ip\", todo.getDescription());","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Shauryan123"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Shauryan123"},"content":"    public void testEmptySpaces() {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Shauryan123"},"content":"        String input \u003d \"   \";","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Shauryan123"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Shauryan123"},"content":"        assertThrows(DukeException.class, ()-\u003etest.setToDo(input));","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Shauryan123"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Shauryan123"},"content":"    public void testSpacesAndWords() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Shauryan123"},"content":"        String input \u003d \" project \";","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Shauryan123"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Shauryan123"},"content":"        Todo todo \u003d test.setToDo(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Shauryan123"},"content":"        assertEquals(\"project\", todo.getDescription());","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Shauryan123"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Shauryan123"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Shauryan123"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Shauryan123":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shauryan123"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Shauryan123"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Shauryan123"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Shauryan123"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Shauryan123"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Shauryan123"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Shauryan123"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Shauryan123":7}}]
