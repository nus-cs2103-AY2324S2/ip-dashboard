[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"# friday project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"3. After that, locate the `src/main/java/friday.java` file, right-click it, and choose `Run friday.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"Xuyan0518":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"    implementation \u0027org.jetbrains:annotations:23.0.0\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"    mainClass.set(\"friday.main.Launcher\")","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"//    archiveBaseName \u003d \"Friday\"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"//    archiveClassifier \u003d null","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"//    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"    archiveFileName \u003d \u0027Friday.jar\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"checkstyle {","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"-":38,"Xuyan0518":26}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"# Friday User Guide","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"![Ui.png](Ui.png)","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"Friday is a text-based task manager. It helps you to track your todos, deadlines, and events.","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"## Adding todos","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"You can ask Friday to add to-do tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"Todo tasks have no deadlines and no time durations. ","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"Example: `todo exercises`","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"The to-do task will be added to the list of tasks. ","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"[T] shows that the task is a to-do task. ","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"The second [] shows the status of the to-do. ","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"If it is done, a [X] will be shown.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"[T][] exercise","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"You can ask Friday to add deadline tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"Deadline tasks have a deadline.","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"Example: `deadline /by 2024-02-24 1000`","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"The deadline task will be added to the list of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"[D] shows that the task is a deadline task. ","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"The second [] shows the status of the task. ","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"If it is done, a [X] will be shown.","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"[D][] return book (by: Feb 24 2024 1000) ","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"## Adding events","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"You can ask Friday to add events.","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"Event tasks have a time duration.","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"Example: `event /from 2024-02-25 0800 /to 2024-02-25 1200`","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"The event task will be added to the list of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"[E] shows that the task is an event task.","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"The second [] shows the status of the task.","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"If it is done, a [X] will be shown.","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"[E][] meeting (from: Feb 25 2024 0800 to: Feb 25 2024 1200) ","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"## Mark and Unmark","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"Mark and unmark allows you to mark or unmark a task to done or not done. ","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"You can mark/unmark multiple tasks as done/not done in one command. ","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"Example: `mark 1, 2, 3`","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"This will mark tasks 1, 2, 3 to done. ","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"Example: `unmark 3, 4, 5`","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"This will mark task 3, 4, 5 from the task list to not done.","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"## Delete","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"This operation deletes the corresponding tasks from the task list. ","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"Xuyan0518"},"content":"You can delete multiple tasks in one command.","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"Example: `delete 1, 2,3`","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"This will delete tasks 1, 2, 3 from the task list. ","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"## List","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"You can ask Friday to list out the tasks for you. ","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"Example: `list`","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"This will show the list of tasks stored in Friday.","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"Xuyan0518"},"content":"## Bye","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"Xuyan0518"},"content":"You can exit Friday by simply typing by in the command box.","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":90,"author":{"gitId":"Xuyan0518"},"content":"Example: `bye`","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":92,"author":{"gitId":"Xuyan0518"},"content":"Friday will greet you first, and then exit on its own. ","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"-":24,"Xuyan0518":68}},{"path":"src/main/java/data/Friday.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"[T][X] exercise","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"[D][X] return book (by: Feb 24 2024 1000)","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"[E][ ] meeting (from: Feb 25 2024 0800 to: Feb 25 2024 1200)","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"Xuyan0518":3}},{"path":"src/main/java/friday/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.main;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    /** The label displaying the text of the dialog. */","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"    /** The ImageView displaying the speaker\u0027s display picture. */","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a DialogBox with the specified text and image.","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"     * @param text The text content of the dialog box.","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"     * @param img The image to display in the dialog box.","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"        assert dialog !\u003d null : \"Dialog label must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"        assert displayPicture !\u003d null : \"Display picture ImageView must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"    private void flip() {","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"        assert !getChildren().isEmpty() : \"DialogBox must have children to flip\";","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"     * Creates and returns a DialogBox representing a user dialog.","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"     * @param text The text content of the user dialog.","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"     * @param img The image representing the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"     * @return The DialogBox representing the user dialog.","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"Xuyan0518"},"content":"     * Creates and returns a DialogBox representing a Friday dialog.","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"     * The orientation of the dialog box is flipped to have the ImageView on the left and text on the right.","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"     * @param text The text content of the Friday dialog.","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"     * @param img The image representing Friday.","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"     * @return The DialogBox representing the Friday dialog.","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"    public static DialogBox getFridayDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"Xuyan0518"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"        db.flip();","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"Xuyan0518"},"content":"        return db;","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Xuyan0518":86}},{"path":"src/main/java/friday/main/Friday.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.main;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import friday.parser.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"import friday.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.TaskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"import friday.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"import org.jetbrains.annotations.NotNull;","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":" * The main class for the Friday task management application.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":" * Friday manages tasks such as Todos, Deadlines, and Events, providing a simple graphical user interface for users.","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":" * Users can interact with Friday by entering commands in the text field and receiving responses in the chat area.","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"public class Friday extends Application {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"    /** The file path for storing task data. */","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"    private static final String DATA_FILE_PATH \u003d \"./src/main/java/data/Friday.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"    /** The user interface handler for displaying messages and interacting with users. */","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"    /** The storage handler for reading from and writing to the data file. */","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"    /** The list of tasks managed by Friday. */","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"    /** The parser for interpreting user commands and generating responses. */","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"    /** The scroll pane for containing the dialog container. */","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"    /** The container for displaying the conversation dialog. */","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"    /** The text field for user input. */","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"    /** The button for sending user input. */","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"    /** The scene for the graphical user interface. */","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"    /** The image representing the user in the chat interface. */","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/Master.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"    /** The image representing Friday in the chat interface. */","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Friday.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Friday object with necessary components like UI, Storage, and Parser.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"     * Initializes the task list by loading data from a file or creating a new one if the file does not exist.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"    public Friday() {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"        assert ui !\u003d null : \"UI must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"Xuyan0518"},"content":"        storage \u003d new Storage(DATA_FILE_PATH);","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Xuyan0518"},"content":"        assert storage !\u003d null : \"Storage must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"            storage.checkFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Xuyan0518"},"content":"            tasks \u003d storage.loadDataFromFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Xuyan0518"},"content":"     * Initializes the graphical user interface and sets up the necessary components.","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"Xuyan0518"},"content":"     * Called when the application is launched.","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"Xuyan0518"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Xuyan0518"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"Xuyan0518"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"Xuyan0518"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"Xuyan0518"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"Xuyan0518"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"Xuyan0518"},"content":"        assert dialogContainer !\u003d null : \"Dialog container must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"Xuyan0518"},"content":"        assert userInput !\u003d null : \"User input field must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"Xuyan0518"},"content":"        assert scrollPane !\u003d null : \"Scroll pane must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"Xuyan0518"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"Xuyan0518"},"content":"        scrollPane.setPrefSize(400, 400);","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"Xuyan0518"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"Xuyan0518"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"Xuyan0518"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"Xuyan0518"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-08"},{"lineNumber":110,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"Xuyan0518"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"Xuyan0518"},"content":"        assert sendButton !\u003d null : \"Send button must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"Xuyan0518"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"Xuyan0518"},"content":"        assert mainLayout !\u003d null : \"Main layout must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"Xuyan0518"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-08"},{"lineNumber":117,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":118,"author":{"gitId":"Xuyan0518"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-08"},{"lineNumber":119,"author":{"gitId":"Xuyan0518"},"content":"        assert scene !\u003d null : \"Scene must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":121,"author":{"gitId":"Xuyan0518"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-08"},{"lineNumber":122,"author":{"gitId":"Xuyan0518"},"content":"        stage.show();","lastModifiedDate":"2024-02-08"},{"lineNumber":123,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"Xuyan0518"},"content":"        stage.setTitle(\"Friday\");","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"Xuyan0518"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-08"},{"lineNumber":126,"author":{"gitId":"Xuyan0518"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":127,"author":{"gitId":"Xuyan0518"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":128,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":129,"author":{"gitId":"Xuyan0518"},"content":"        mainLayout.setPrefSize(600, 800.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":130,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":131,"author":{"gitId":"Xuyan0518"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-08"},{"lineNumber":132,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":133,"author":{"gitId":"Xuyan0518"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":134,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":135,"author":{"gitId":"Xuyan0518"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":136,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":137,"author":{"gitId":"Xuyan0518"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":138,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":139,"author":{"gitId":"Xuyan0518"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":140,"author":{"gitId":"Xuyan0518"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":141,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":142,"author":{"gitId":"Xuyan0518"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":143,"author":{"gitId":"Xuyan0518"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":144,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":145,"author":{"gitId":"Xuyan0518"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":146,"author":{"gitId":"Xuyan0518"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-08"},{"lineNumber":147,"author":{"gitId":"Xuyan0518"},"content":"        });","lastModifiedDate":"2024-02-08"},{"lineNumber":148,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":149,"author":{"gitId":"Xuyan0518"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":150,"author":{"gitId":"Xuyan0518"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-08"},{"lineNumber":151,"author":{"gitId":"Xuyan0518"},"content":"        });","lastModifiedDate":"2024-02-08"},{"lineNumber":152,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":153,"author":{"gitId":"Xuyan0518"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-08"},{"lineNumber":154,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":156,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":157,"author":{"gitId":"Xuyan0518"},"content":"     * Iteration 1:","lastModifiedDate":"2024-02-08"},{"lineNumber":158,"author":{"gitId":"Xuyan0518"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2024-02-08"},{"lineNumber":159,"author":{"gitId":"Xuyan0518"},"content":"     * @param text String containing text to add","lastModifiedDate":"2024-02-08"},{"lineNumber":160,"author":{"gitId":"Xuyan0518"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2024-02-08"},{"lineNumber":161,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":162,"author":{"gitId":"Xuyan0518"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-08"},{"lineNumber":163,"author":{"gitId":"Xuyan0518"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2024-02-08"},{"lineNumber":164,"author":{"gitId":"Xuyan0518"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-08"},{"lineNumber":165,"author":{"gitId":"Xuyan0518"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-08"},{"lineNumber":166,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":167,"author":{"gitId":"Xuyan0518"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-08"},{"lineNumber":168,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":170,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":171,"author":{"gitId":"Xuyan0518"},"content":"     * Iteration 2:","lastModifiedDate":"2024-02-08"},{"lineNumber":172,"author":{"gitId":"Xuyan0518"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-08"},{"lineNumber":173,"author":{"gitId":"Xuyan0518"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-08"},{"lineNumber":174,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":175,"author":{"gitId":"Xuyan0518"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-08"},{"lineNumber":176,"author":{"gitId":"Xuyan0518"},"content":"        assert userInput !\u003d null : \"User input field must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":177,"author":{"gitId":"Xuyan0518"},"content":"        assert dialogContainer !\u003d null : \"Dialog container must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":178,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":179,"author":{"gitId":"Xuyan0518"},"content":"        String userText \u003d String.valueOf(new Label(userInput.getText()));","lastModifiedDate":"2024-02-08"},{"lineNumber":180,"author":{"gitId":"Xuyan0518"},"content":"        String dukeText \u003d String.valueOf(new Label(getResponse(userInput.getText())));","lastModifiedDate":"2024-02-08"},{"lineNumber":181,"author":{"gitId":"Xuyan0518"},"content":"        assert userText !\u003d null : \"User text must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":182,"author":{"gitId":"Xuyan0518"},"content":"        assert dukeText !\u003d null : \"Duke text must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":183,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":184,"author":{"gitId":"Xuyan0518"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-08"},{"lineNumber":185,"author":{"gitId":"Xuyan0518"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user).getImage()),","lastModifiedDate":"2024-02-08"},{"lineNumber":186,"author":{"gitId":"Xuyan0518"},"content":"                DialogBox.getFridayDialog(dukeText, new ImageView(duke).getImage())","lastModifiedDate":"2024-02-08"},{"lineNumber":187,"author":{"gitId":"Xuyan0518"},"content":"        );","lastModifiedDate":"2024-02-08"},{"lineNumber":188,"author":{"gitId":"Xuyan0518"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":189,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":192,"author":{"gitId":"Xuyan0518"},"content":"     * Generates a response to the user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":193,"author":{"gitId":"Xuyan0518"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":194,"author":{"gitId":"Xuyan0518"},"content":"     * @return The response generated by Friday.","lastModifiedDate":"2024-02-08"},{"lineNumber":195,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":196,"author":{"gitId":"Xuyan0518"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2024-02-08"},{"lineNumber":197,"author":{"gitId":"Xuyan0518"},"content":"        parser \u003d new Parser(tasks, DATA_FILE_PATH);","lastModifiedDate":"2024-02-08"},{"lineNumber":198,"author":{"gitId":"Xuyan0518"},"content":"        return parser.parseInput(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":199,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":200}},{"path":"src/main/java/friday/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.main;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"public class Launcher {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"     * The main method to launch the JavaFX application.","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"     * @param args The command-line arguments (not used in this application).","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"        assert args !\u003d null : \"Command-line arguments must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"        assert args.length \u003d\u003d 0 : \"Command-line arguments must be empty\";","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Xuyan0518":20}},{"path":"src/main/java/friday/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.main;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":" * The main class for launching the GUI application for Friday using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"    private Friday friday \u003d new Friday();","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"     * The entry point for launching the GUI application.","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"     * Initializes the necessary components and sets up the scene using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"            assert friday !\u003d null : \"Friday instance must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"            assert fxmlLoader !\u003d null : \"FXML loader must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"            assert ap !\u003d null : \"AnchorPane must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"            assert scene !\u003d null : \"Scene must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"            stage.setTitle(\"Friday\");","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setFriday(friday);","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"            stage.show();","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Xuyan0518":40}},{"path":"src/main/java/friday/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.main;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":" * Controller class for the main window layout of the Friday application.","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":" * Manages user input handling, message display, and application exit functionality.","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"    private Friday friday;","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Master.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"    private Image fridayImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Friday.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"     * Initializes the controller after FXML loading.","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"     * Binds the vertical scroll position of the scroll pane to the height of the dialog container.","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"     * Displays a welcome message from Friday.","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"        assert scrollPane !\u003d null : \"ScrollPane must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"        assert dialogContainer !\u003d null : \"DialogContainer must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"        assert userInput !\u003d null : \"UserInput must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"        assert sendButton !\u003d null : \"SendButton must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"        displayWelcomeMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"     * Sets the Friday instance for the controller.","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"     * @param f The Friday instance to set.","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"    public void setFriday(Friday f) {","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"        assert f !\u003d null : \"Friday instance must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"        friday \u003d f;","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"     * Handles user input and displays the corresponding messages.","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"     * If the user inputs \"bye\", exits the application gracefully.","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"        assert userInput !\u003d null : \"UserInput must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"        assert dialogContainer !\u003d null : \"DialogContainer must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"        String response \u003d friday.getResponse(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"                DialogBox.getFridayDialog(response, fridayImage)","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"        );","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"Xuyan0518"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"Xuyan0518"},"content":"            exitApplication();","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"     * Displays a welcome message from Friday.","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"Xuyan0518"},"content":"    private void displayWelcomeMessage() {","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"        assert dialogContainer !\u003d null : \"DialogContainer must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"        String welcomeMessage \u003d \"Hello Master! I\u0027m Friday. How can I assist you today?\";","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"        dialogContainer.getChildren().add(DialogBox.getFridayDialog(welcomeMessage, fridayImage));","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"Xuyan0518"},"content":"     * Exits the application gracefully.","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"Xuyan0518"},"content":"     * Waits for 2 seconds before closing the application window.","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"Xuyan0518"},"content":"    private void exitApplication() {","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"Xuyan0518"},"content":"        assert userInput !\u003d null : \"UserInput must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"Xuyan0518"},"content":"        // Get the stage (window) and close it","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"Xuyan0518"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"Xuyan0518"},"content":"        pause.setOnFinished(event -\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"Xuyan0518"},"content":"            Stage stage \u003d (Stage) userInput.getScene().getWindow();","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"Xuyan0518"},"content":"            stage.close(); // This closes the stage","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"Xuyan0518"},"content":"        });","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"Xuyan0518"},"content":"        pause.play(); // Start the pause","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Xuyan0518":103}},{"path":"src/main/java/friday/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import friday.storage.Storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.TaskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":" * The Parser class is responsible for interpreting user input commands and executing corresponding actions.","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":" * It interacts with the TaskList and Storage classes to manage tasks and data storage.","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Parser object with the specified TaskList and file path for data storage.","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"     * @param tasks The TaskList instance to manage tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"     * @param filePath The file path for data storage.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"    public Parser(TaskList tasks, String filePath) {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"        assert tasks !\u003d null : \"TaskList must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"        assert filePath !\u003d null : \"File path must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"     * Parses the user input command and executes the corresponding action.","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input command to be parsed.","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"     * @return A String representing the response to the user command.","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"    public String parseInput(String userInput) {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"        assert userInput !\u003d null : \"User input must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"        String category \u003d userInput.split(\" \")[0].toLowerCase().trim();","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"        switch (category) {","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"        case \"list\":","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"            sb.append(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"            sb.append(System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"            for (int i \u003d 0; i \u003c tasks.getLength(); i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"                sb.append(i + 1 + \". \" + tasks.getTask(i).toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"                sb.append(System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"            return sb.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"            assert tasks !\u003d null : \"TaskList must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"            assert storage !\u003d null : \"Storage must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"            String responseToMark \u003d tasks.markTask(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"            try {","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"                return e.getMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"            return responseToMark;","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"            assert tasks !\u003d null : \"TaskList must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"            assert storage !\u003d null : \"Storage must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"            String responseToUnmark \u003d tasks.unmarkTask(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"            try {","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"                return e.getMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"            return responseToUnmark;","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"            return tasks.addTodo(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"            return tasks.addDeadline(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"        case \"event\":","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"            return tasks.addEvent(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"Xuyan0518"},"content":"            assert tasks !\u003d null : \"TaskList must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"Xuyan0518"},"content":"            assert storage !\u003d null : \"Storage must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"            String responseToDelete \u003d tasks.deleteTask(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"            try {","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"            } catch (IOException err) {","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"                return err.getMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"Xuyan0518"},"content":"            return responseToDelete;","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"        case \"find\":","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"Xuyan0518"},"content":"            return tasks.searchTask(userInput);","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"            return \"Bye Master. Have a nice day!\";","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"Xuyan0518"},"content":"        default:","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"Xuyan0518"},"content":"            return \"HUH? What do you mean?\";","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":91}},{"path":"src/main/java/friday/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.TaskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":" * The Storage class handles the reading and writing of task data to and from a file.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"    private String filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"     * @param filePath The path to the file where task data is stored.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"        assert filePath !\u003d null : \"File path must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"     * Checks if the data file exists; if not, creates a new file.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"     * @throws IOException If an I/O error occurs during file creation.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"    public void checkFile() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"                System.out.println(\"Data file created.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"                System.out.println(\"Error creating data file.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"            System.out.println(\"Loading data from Duke.txt...\");","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"     * Writes the task list data to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"     * @param tasks The TaskList containing tasks to be written to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"     * @throws IOException If an I/O error occurs during file writing.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"    public void writeToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"        assert tasks !\u003d null : \"TaskList must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"        for (int i \u003d 0; i \u003c tasks.getLength(); i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"            fw.write(tasks.getTask(i).toString() + System.lineSeparator());","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"        fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"     * Reads task data from the file and returns a TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"     * @return The TaskList containing tasks loaded from the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"     * @throws IOException If an I/O error occurs during file reading.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"    public TaskList loadDataFromFile() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"        TaskList tasks \u003d new TaskList(filePath);","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"        try (Scanner fileScanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"                String taskData \u003d fileScanner.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"                if (!taskData.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"Xuyan0518"},"content":"                    Task task \u003d Task.parseTask(taskData);","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Xuyan0518"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"                        tasks.addTaskFromData(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Xuyan0518"},"content":"            tasks \u003d new TaskList(filePath);","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Xuyan0518"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Xuyan0518"},"content":"     * Appends text to the end of the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Xuyan0518"},"content":"     * @param textToAppend The text to append to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Xuyan0518"},"content":"     * @throws IOException If an I/O error occurs during file appending.","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Xuyan0518"},"content":"    public void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"Xuyan0518"},"content":"        assert textToAppend !\u003d null : \"Text to append must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"Xuyan0518"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Xuyan0518"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"Xuyan0518"},"content":"        fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":99}},{"path":"src/main/java/friday/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":" * Represents a task with a deadline in the Friday application.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":" * Subclass of the Task class.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Deadline object with the specified description and deadline in string format.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"     * @param byString    The deadline in string format (\"yyyy-MM-dd HHmm\").","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"    public Deadline(String description, String byString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"        assert description !\u003d null : \"Description must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"        assert byString !\u003d null : \"Deadline string must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"        this.by \u003d parseDeadline(byString);","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Deadline object with the specified description and deadline in LocalDateTime format.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"     * @param by          The deadline in LocalDateTime format.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"        assert description !\u003d null : \"Description must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"        assert by !\u003d null : \"Deadline LocalDateTime must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"    private LocalDateTime parseDeadline(String byString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"        assert byString !\u003d null : \"Deadline string must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"        return LocalDateTime.parse(byString, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"     * Gets the formatted deadline string (\"MMM dd yyyy HHmm\").","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"     * @return The formatted deadline string.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"    public String getFormattedDeadline() {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"        assert by !\u003d null : \"Deadline must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"     * Overrides the toString method to provide a formatted string representation of the Deadline object.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"     * @return The formatted string representation of the Deadline object.","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"        assert by !\u003d null : \"Deadline must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getFormattedDeadline() + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":64}},{"path":"src/main/java/friday/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":" * Represents an event task in the Friday application.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":" * Subclass of the Task class.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs an Event object with the specified description, start time, and end time in string format.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"     * @param description   The description of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"     * @param fromString    The start time of the event in string format (\"yyyy-MM-dd HHmm\").","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"     * @param toTimeString  The end time of the event in string format (\"yyyy-MM-dd HHmm\").","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"    public Event(String description, String fromString, String toTimeString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"        assert description !\u003d null : \"Description must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"        assert fromString !\u003d null : \"Start time string must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"        assert toTimeString !\u003d null : \"End time string must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"        this.from \u003d parseDateTime(fromString);","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"        this.to \u003d parseDateTime(toTimeString);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs an Event object with the specified description, start time, and end time in LocalDateTime format.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"     * @param from        The start time of the event in LocalDateTime format.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"     * @param to          The end time of the event in LocalDateTime format.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"        assert description !\u003d null : \"Description must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"        assert from !\u003d null : \"Start time must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"        assert to !\u003d null : \"End time must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"     * Parses a date-time string into a LocalDateTime object.","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"        assert dateTimeString !\u003d null : \"Date-time string must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"        return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"     * Gets the formatted start time string (\"MMM dd yyyy HHmm\").","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"     * @return The formatted start time string.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"    public String getFormattedFromTime() {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"        assert from !\u003d null : \"Start time must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"        return from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"     * Gets the formatted end time string (\"MMM dd yyyy HHmm\").","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"     * @return The formatted end time string.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"    public String getFormattedToTime() {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"        assert to !\u003d null : \"End time must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"        return to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"     * Overrides the toString method to provide a formatted string representation of the Event object.","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"     * @return The formatted string representation of the Event object.","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Xuyan0518"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"        assert from !\u003d null : \"Start time must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"Xuyan0518"},"content":"        assert to !\u003d null : \"End time must be initialized\";","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getFormattedFromTime()","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"                        + \" to: \" + getFormattedToTime() + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":88}},{"path":"src/main/java/friday/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":" * Represents a general task in the Friday application.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":" * This is the base class for different types of tasks such as Todo, Deadline, and Event.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"    protected String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"        assert description !\u003d null : \"Description must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"     * Gets the status icon representing whether the task is done or not.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"     * @return The status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"     * Checks if the task\u0027s description contains the specified keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"     * @param keyword The keyword to search for in the task\u0027s description.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"     * @return {@code true} if the task\u0027s description contains the keyword (case-insensitive), {@code false} otherwise.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"        assert keyword !\u003d null : \"Keyword must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"        return description.toLowerCase().contains(keyword);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"     * Parses a task from its string representation and returns the corresponding Task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"     * @param taskString The string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"     * @return The parsed Task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"    public static Task parseTask(String taskString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"        assert taskString !\u003d null : \"Task string must not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"        String cat \u003d taskString.substring(1, 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"        switch (cat) {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"        case \"T\":","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"            assert taskString.length() \u003e\u003d 7 : \"Invalid Todo task string\";","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"            Todo t \u003d new Todo(taskString.substring(7).trim());","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"            if (taskString.substring(4, 5).equals(\"X\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"Xuyan0518"},"content":"                t.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"                t.markAsUndone();","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"            return t;","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"        case \"D\":","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"            assert taskString.contains(\"(\") \u0026\u0026 taskString.contains(\")\") : \"Invalid Deadline task string\";","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"            String byString \u003d taskString.split(\":\")[1].split(\"\\\\)\")[0].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Xuyan0518"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(byString, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"            String description \u003d taskString.split(\"\\\\(\")[0].substring(7).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Xuyan0518"},"content":"            Deadline d \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"            if (taskString.substring(4, 5).equals(\"X\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"                d.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Xuyan0518"},"content":"                d.markAsUndone();","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Xuyan0518"},"content":"            return d;","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Xuyan0518"},"content":"        case \"E\":","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"Xuyan0518"},"content":"            assert taskString.contains(\"from: \") \u0026\u0026 taskString.contains(\"to: \") : \"Invalid Event task string\";","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"Xuyan0518"},"content":"            int fromIndex \u003d taskString.indexOf(\"from: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"Xuyan0518"},"content":"            int toIndex \u003d taskString.indexOf(\"to: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Xuyan0518"},"content":"            String fromString \u003d taskString.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Xuyan0518"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(fromString, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"Xuyan0518"},"content":"            String toTimeString \u003d taskString.substring(toIndex + 3).split(\"\\\\)\")[0].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"Xuyan0518"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(toTimeString, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"Xuyan0518"},"content":"            String des \u003d taskString.split(\"\\\\(\")[0].substring(7).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"Xuyan0518"},"content":"            Event e \u003d new Event(des, from, to);","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"Xuyan0518"},"content":"            if (taskString.substring(4, 5).equals(\"X\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"Xuyan0518"},"content":"                e.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"Xuyan0518"},"content":"                e.markAsUndone();","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"Xuyan0518"},"content":"            return e;","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"Xuyan0518"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"Xuyan0518"},"content":"            System.out.println(\"Cannot resolve task.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"Xuyan0518"},"content":"            return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"Xuyan0518"},"content":"     * Overrides the toString method to provide a formatted string representation of the Task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"Xuyan0518"},"content":"     * @return The formatted string representation of the Task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"Xuyan0518"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"Xuyan0518"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"Xuyan0518"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":122}},{"path":"src/main/java/friday/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"import friday.storage.Storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"import friday.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":" * Represents a list of tasks in the Friday application.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a TaskList object with an empty list of tasks and initializes UI and Storage components.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"     * @param filePath The file path where task data is stored.","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"    public TaskList(String filePath) {","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"    public int getLength() {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"     * Marks a task as done based on user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input specifying the task to be marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"     * @return A message indicating the task has been marked as done, or an error message.","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"    public String markTask(String userInput) {","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"        if (userInput.substring(4).trim().isEmpty()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"            return \"Error. Unknown task number to be marked.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"        String[] nums \u003d userInput.substring(4).split(\",\");","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"        sb.append(\"Nice! I will mark these tasks as done: \");","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"        sb.append(System.lineSeparator());","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"        for (String num : nums) {","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"            int id \u003d Integer.parseInt(num.trim());","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"            if (id \u003e tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"                return \"Error. Task number does not exist.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"                tasks.get(id - 1).markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"                sb.append(tasks.get(id - 1).toString() + System.lineSeparator());","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"     * Marks a task as undone based on user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input specifying the task to be marked as undone.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"     * @return A message indicating the task has been marked as undone, or an error message.","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"    public String unmarkTask(String userInput) {","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"        if (userInput.substring(6).trim().isEmpty()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"Xuyan0518"},"content":"            return \"Error. Unknown task number to be unmarked.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"        String[] nums \u003d userInput.substring(6).split(\",\");","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"        sb.append(\"Okay. I have unmarked these tasks: \");","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"        sb.append(System.lineSeparator());","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"        for (String num : nums) {","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"            int id \u003d Integer.parseInt(num.trim());","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"Xuyan0518"},"content":"            if (id \u003e tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"                return \"Error. Task number does not exist.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"                tasks.get(id - 1).markAsUndone();","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"                sb.append(tasks.get(id - 1).toString() + System.lineSeparator());","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Xuyan0518"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Xuyan0518"},"content":"     * Deletes a task based on user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input specifying the task number to be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Xuyan0518"},"content":"     * @return A message indicating the task has been deleted, or an error message.","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"Xuyan0518"},"content":"    public String deleteTask(String userInput) {","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"Xuyan0518"},"content":"        if (userInput.substring(6).trim().isEmpty()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"Xuyan0518"},"content":"            return \"Error. Unknown task number to be deleted.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"Xuyan0518"},"content":"        String[] nums \u003d userInput.substring(7).split(\",\");","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"Xuyan0518"},"content":"        Integer[] idsToDelete \u003d new Integer[nums.length];","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"Xuyan0518"},"content":"        int pos \u003d 0;","lastModifiedDate":"2024-02-15"},{"lineNumber":105,"author":{"gitId":"Xuyan0518"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Okay. I am going to delete: \");","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"Xuyan0518"},"content":"        sb.append(System.lineSeparator());","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"Xuyan0518"},"content":"        for (String num : nums) {","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"Xuyan0518"},"content":"            int id \u003d Integer.parseInt(num.trim());","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"Xuyan0518"},"content":"            if (id \u003e tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Xuyan0518"},"content":"                return \"Error. Task number does not exist.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"Xuyan0518"},"content":"                sb.append(tasks.get(id - 1).toString() + System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"Xuyan0518"},"content":"                idsToDelete[pos] \u003d id - 1;","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"Xuyan0518"},"content":"                pos++;","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"Xuyan0518"},"content":"        Arrays.sort(idsToDelete);","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"Xuyan0518"},"content":"        Collections.reverse(Arrays.asList(idsToDelete)); // Sort the ids of the tasks to be deleted in reverse order","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"Xuyan0518"},"content":"        // so that deleting from the back will not affect the id of other tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"Xuyan0518"},"content":"        for (int i : idsToDelete) {","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"Xuyan0518"},"content":"            tasks.remove(i);","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"Xuyan0518"},"content":"        sb.append(displayCounter(tasks.size()));","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"Xuyan0518"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":127,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":128,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"Xuyan0518"},"content":"     * Retrieves a task from the task list based on the specified index.","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"Xuyan0518"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"Xuyan0518"},"content":"     * @return The task at the specified index, or null if the index is out of bounds.","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"Xuyan0518"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"Xuyan0518"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"Xuyan0518"},"content":"            return tasks.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(\"Error. No such task in the task list.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"Xuyan0518"},"content":"            return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"Xuyan0518"},"content":"     * Adds a task to the task list based on data loaded from a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"Xuyan0518"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"Xuyan0518"},"content":"    public void addTaskFromData(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"Xuyan0518"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"Xuyan0518"},"content":"     * Adds a Todo task to the task list based on user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":154,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input specifying the Todo task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"Xuyan0518"},"content":"     * @return A message indicating the task has been added successfully or an error message.","lastModifiedDate":"2024-02-08"},{"lineNumber":157,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"Xuyan0518"},"content":"    public String addTodo(String userInput) {","lastModifiedDate":"2024-02-08"},{"lineNumber":159,"author":{"gitId":"Xuyan0518"},"content":"        String description \u003d userInput.substring(5).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"Xuyan0518"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"Xuyan0518"},"content":"            return \"Error. Cannot add empty Todo.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":162,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"Xuyan0518"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Got it. I have added this task: \");","lastModifiedDate":"2024-02-08"},{"lineNumber":164,"author":{"gitId":"Xuyan0518"},"content":"            sb.append(System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":165,"author":{"gitId":"Xuyan0518"},"content":"            Todo t \u003d new Todo(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"Xuyan0518"},"content":"            try {","lastModifiedDate":"2024-02-08"},{"lineNumber":167,"author":{"gitId":"Xuyan0518"},"content":"                storage.appendToFile(t + System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":168,"author":{"gitId":"Xuyan0518"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":169,"author":{"gitId":"Xuyan0518"},"content":"                return e.getMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":170,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":171,"author":{"gitId":"Xuyan0518"},"content":"            sb.append(t.toString() + System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":172,"author":{"gitId":"Xuyan0518"},"content":"            tasks.add(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"Xuyan0518"},"content":"            sb.append(displayCounter(tasks.size()));","lastModifiedDate":"2024-02-08"},{"lineNumber":174,"author":{"gitId":"Xuyan0518"},"content":"            return sb.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":175,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"Xuyan0518"},"content":"     * Adds a Deadline task to the task list based on user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":180,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input specifying the Deadline task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"Xuyan0518"},"content":"     * @return A message indicating the task has been added successfully or an error message.","lastModifiedDate":"2024-02-08"},{"lineNumber":183,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"Xuyan0518"},"content":"    public String addDeadline(String userInput) {","lastModifiedDate":"2024-02-08"},{"lineNumber":185,"author":{"gitId":"Xuyan0518"},"content":"        int id \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2024-02-02"},{"lineNumber":186,"author":{"gitId":"Xuyan0518"},"content":"        String description \u003d userInput.substring(8, id).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":187,"author":{"gitId":"Xuyan0518"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"Xuyan0518"},"content":"            return \"Error. Cannot add empty Deadline.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":189,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"Xuyan0518"},"content":"            String by \u003d userInput.substring(id + 3).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"Xuyan0518"},"content":"            if (by.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":192,"author":{"gitId":"Xuyan0518"},"content":"                return \"Error. Please indicate end time.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":193,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":194,"author":{"gitId":"Xuyan0518"},"content":"                StringBuilder sb \u003d new StringBuilder(\"Got it. I have added this task: \");","lastModifiedDate":"2024-02-08"},{"lineNumber":195,"author":{"gitId":"Xuyan0518"},"content":"                sb.append(System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":196,"author":{"gitId":"Xuyan0518"},"content":"                Deadline d \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"Xuyan0518"},"content":"                sb.append(d + System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":198,"author":{"gitId":"Xuyan0518"},"content":"                tasks.add(d);","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"Xuyan0518"},"content":"                try {","lastModifiedDate":"2024-02-08"},{"lineNumber":200,"author":{"gitId":"Xuyan0518"},"content":"                    storage.appendToFile(d + System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":201,"author":{"gitId":"Xuyan0518"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":202,"author":{"gitId":"Xuyan0518"},"content":"                    return e.getMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":203,"author":{"gitId":"Xuyan0518"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":204,"author":{"gitId":"Xuyan0518"},"content":"                sb.append(displayCounter(tasks.size()));","lastModifiedDate":"2024-02-08"},{"lineNumber":205,"author":{"gitId":"Xuyan0518"},"content":"                return sb.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":206,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":207,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":208,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":209,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":210,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":211,"author":{"gitId":"Xuyan0518"},"content":"     * Adds an Event task to the task list based on user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":212,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":213,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input specifying the Event task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":214,"author":{"gitId":"Xuyan0518"},"content":"     * @return A message indicating the task has been added successfully or an error message.","lastModifiedDate":"2024-02-08"},{"lineNumber":215,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":216,"author":{"gitId":"Xuyan0518"},"content":"    public String addEvent(String userInput) {","lastModifiedDate":"2024-02-08"},{"lineNumber":217,"author":{"gitId":"Xuyan0518"},"content":"        int idFrom \u003d userInput.indexOf(\"/from\");","lastModifiedDate":"2024-02-02"},{"lineNumber":218,"author":{"gitId":"Xuyan0518"},"content":"        int idTo \u003d userInput.indexOf(\"/to\");","lastModifiedDate":"2024-02-02"},{"lineNumber":219,"author":{"gitId":"Xuyan0518"},"content":"        String description \u003d userInput.substring(5, idFrom).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":220,"author":{"gitId":"Xuyan0518"},"content":"        String fromTime \u003d userInput.substring(idFrom + 5, idTo).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":221,"author":{"gitId":"Xuyan0518"},"content":"        String toTime \u003d userInput.substring(idTo + 3).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":222,"author":{"gitId":"Xuyan0518"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":223,"author":{"gitId":"Xuyan0518"},"content":"            return \"Error. Cannot add empty Event.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":224,"author":{"gitId":"Xuyan0518"},"content":"        } else if (fromTime.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":225,"author":{"gitId":"Xuyan0518"},"content":"            return \"Error. Please indicate start time.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":226,"author":{"gitId":"Xuyan0518"},"content":"        } else if (toTime.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":227,"author":{"gitId":"Xuyan0518"},"content":"            return \"Error. Please indicate to time.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":228,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":229,"author":{"gitId":"Xuyan0518"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Got it. I have added this task: \");","lastModifiedDate":"2024-02-08"},{"lineNumber":230,"author":{"gitId":"Xuyan0518"},"content":"            sb.append(System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":231,"author":{"gitId":"Xuyan0518"},"content":"            Event e \u003d new Event(description, fromTime, toTime);","lastModifiedDate":"2024-02-02"},{"lineNumber":232,"author":{"gitId":"Xuyan0518"},"content":"            sb.append(e.toString() + System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":233,"author":{"gitId":"Xuyan0518"},"content":"            tasks.add(e);","lastModifiedDate":"2024-02-02"},{"lineNumber":234,"author":{"gitId":"Xuyan0518"},"content":"            try {","lastModifiedDate":"2024-02-08"},{"lineNumber":235,"author":{"gitId":"Xuyan0518"},"content":"                storage.appendToFile(e + System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":236,"author":{"gitId":"Xuyan0518"},"content":"            } catch (IOException err) {","lastModifiedDate":"2024-02-08"},{"lineNumber":237,"author":{"gitId":"Xuyan0518"},"content":"                System.out.println(err.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":238,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":239,"author":{"gitId":"Xuyan0518"},"content":"            sb.append(displayCounter(tasks.size()));","lastModifiedDate":"2024-02-08"},{"lineNumber":240,"author":{"gitId":"Xuyan0518"},"content":"            return sb.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":241,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":242,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":243,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":244,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":245,"author":{"gitId":"Xuyan0518"},"content":"     * Searches for tasks containing the specified keyword in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":246,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":247,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input containing the search command and keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":248,"author":{"gitId":"Xuyan0518"},"content":"     *                  Format: \"find keyword\"","lastModifiedDate":"2024-02-02"},{"lineNumber":249,"author":{"gitId":"Xuyan0518"},"content":"     * @return A message listing the matching tasks or an error message if no tasks match the keyword.","lastModifiedDate":"2024-02-08"},{"lineNumber":250,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":251,"author":{"gitId":"Xuyan0518"},"content":"    public String searchTask(String userInput) {","lastModifiedDate":"2024-02-08"},{"lineNumber":252,"author":{"gitId":"Xuyan0518"},"content":"        String keyword \u003d userInput.substring(5).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":253,"author":{"gitId":"Xuyan0518"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":254,"author":{"gitId":"Xuyan0518"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":255,"author":{"gitId":"Xuyan0518"},"content":"            if (t.containsKeyword(keyword)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":256,"author":{"gitId":"Xuyan0518"},"content":"                matchingTasks.add(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":257,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":258,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":259,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":260,"author":{"gitId":"Xuyan0518"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":261,"author":{"gitId":"Xuyan0518"},"content":"            return \"Oops. There are no matching tasks.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":262,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":263,"author":{"gitId":"Xuyan0518"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2024-02-08"},{"lineNumber":264,"author":{"gitId":"Xuyan0518"},"content":"            sb.append(System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":265,"author":{"gitId":"Xuyan0518"},"content":"            for (int i \u003d 1; i \u003c\u003d matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":266,"author":{"gitId":"Xuyan0518"},"content":"                sb.append(i + \". \" + matchingTasks.get(i - 1).toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":267,"author":{"gitId":"Xuyan0518"},"content":"                sb.append(System.lineSeparator());","lastModifiedDate":"2024-02-08"},{"lineNumber":268,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":269,"author":{"gitId":"Xuyan0518"},"content":"            return sb.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":270,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":271,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":272,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":273,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":274,"author":{"gitId":"Xuyan0518"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2024-02-02"},{"lineNumber":275,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":276,"author":{"gitId":"Xuyan0518"},"content":"     * @return true if the task list is empty, false otherwise.","lastModifiedDate":"2024-02-02"},{"lineNumber":277,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":278,"author":{"gitId":"Xuyan0518"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-02"},{"lineNumber":279,"author":{"gitId":"Xuyan0518"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-02-02"},{"lineNumber":280,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":281,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":282,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":283,"author":{"gitId":"Xuyan0518"},"content":"     * Generates a message indicating the number of tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":284,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":285,"author":{"gitId":"Xuyan0518"},"content":"     * @param num The number of tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":286,"author":{"gitId":"Xuyan0518"},"content":"     * @return A message indicating the number of tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":287,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":288,"author":{"gitId":"Xuyan0518"},"content":"    private String displayCounter(int num) {","lastModifiedDate":"2024-02-02"},{"lineNumber":289,"author":{"gitId":"Xuyan0518"},"content":"        if (num \u003c\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":290,"author":{"gitId":"Xuyan0518"},"content":"            return \"Now you have \" + num + \" task in the list.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":291,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":292,"author":{"gitId":"Xuyan0518"},"content":"            return \"Now you have \" + num + \" tasks in the list.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":293,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":294,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":295,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":295}},{"path":"src/main/java/friday/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":" * Represents a todo task in the Friday application.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":" * Subclass of the Task class.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Todo object with the specified description.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"     * Overrides the toString method to provide a formatted string representation of the Todo object.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"     * @return The formatted string representation of the Todo object.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":27}},{"path":"src/main/java/friday/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":" * Represents the user interface of the Friday application.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Ui object with a Scanner for user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"    public Ui() {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"     * Reads and returns user input from the console.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"     * @return The user input as a String.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"     * Displays a message to the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"    public void displayMessage(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"     * Displays the tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"     * @param tasks The TaskList containing tasks to be displayed.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"    public void displayTaskList(TaskList tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"        for (int i \u003d 0; i \u003c tasks.getLength(); i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"            System.out.println(i + 1 + \". \" + tasks.getTask(i).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":48}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #10B3EB;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Xuyan0518":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"friday.main.MainWindow\"\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #7FFFD4;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Xuyan0518":19}},{"path":"src/test/java/friday/test/FridayTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.test;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"public class FridayTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"    private static final String DATA_FILE_PATH \u003d \"./src/main/java/data/Friday.txt\";","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"    public void testAddTodo() {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"        TaskList taskList \u003d new TaskList(DATA_FILE_PATH);","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"        taskList.addTodo(\"todo Testing Todo\");","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"        Todo t \u003d new Todo(\"Testing Todo\");","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"        assertEquals(1, taskList.getLength());","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"        assertEquals(t.toString(), taskList.getTask(0).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"        TaskList taskList \u003d new TaskList(DATA_FILE_PATH);","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"        taskList.addTodo(\"todo Testing Delete\");","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"        taskList.deleteTask(\"delete 1\");","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"        assertEquals(0, taskList.getLength());","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"todo borrow book","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"mark 1","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"mark 2","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"mark 3","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"unmark 3","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"unmark 2","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"unmark 1","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"todo","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"event","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"deadline /by","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"deadline return book /by","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"event /from /to","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"event meeting /from /to","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"event meeting /from Mon 2pm /to","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"delete 3","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"This is a random command","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Xuyan0518":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"java -classpath ..\\bin friday \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"Xuyan0518":1}}]
