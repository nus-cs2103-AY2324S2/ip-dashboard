[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kwuunnn":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"kwuunnn"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kwuunnn":1,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"    private enum CommandType {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"        BYE, LIST, DELETE, MARK, UNMARK, TODO, EVENT, DEADLINE","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"            this.tasks \u003d new TaskList(this.storage.readTasksFile());","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"            this.ui.error(e);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"kwuunnn"},"content":"    private void run() {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kwuunnn"},"content":"        this.ui.greet();","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kwuunnn"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"kwuunnn"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kwuunnn"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"kwuunnn"},"content":"                String input \u003d this.ui.readInput();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kwuunnn"},"content":"                Command cmd \u003d Parser.parse(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kwuunnn"},"content":"                cmd.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kwuunnn"},"content":"                isExit \u003d cmd.isExit();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"kwuunnn"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kwuunnn"},"content":"                ui.error(e);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kwuunnn"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"kwuunnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kwuunnn"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kwuunnn":44,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import duke.command.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"    private enum CommandType {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"        BYE, LIST, DELETE, MARK, UNMARK, TODO, EVENT, DEADLINE","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"    public static Command parse(String input) throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"        String command \u003d parts[0].toUpperCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"            Parser.CommandType cmdType \u003d Parser.CommandType.valueOf(command);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"            switch (cmdType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"            case BYE:","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"            case LIST:","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"                return new ListCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"            case DELETE:","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"                return new DeleteCommand(parts[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kwuunnn"},"content":"            case MARK:","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kwuunnn"},"content":"                return new MarkCommand(parts[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kwuunnn"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kwuunnn"},"content":"                return new UnmarkCommand(parts[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kwuunnn"},"content":"            case TODO:","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kwuunnn"},"content":"                return new AddTodoCommand(parts[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kwuunnn"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kwuunnn"},"content":"                return new AddDeadlineCommand(parts[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kwuunnn"},"content":"            case EVENT:","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kwuunnn"},"content":"                return new AddEventCommand(parts[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kwuunnn"},"content":"            default:","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kwuunnn"},"content":"                throw new InvalidCommandException(command);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kwuunnn"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kwuunnn"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kwuunnn"},"content":"            throw new InvalidCommandException(command);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kwuunnn"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kwuunnn"},"content":"            throw new InvalidArgumentException(command);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kwuunnn":47}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.TasksFileException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"    private String filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"    private Task readTask(String taskEntry) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"        String[] fields \u003d taskEntry.split(\" \\\\| \", 5);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kwuunnn"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kwuunnn"},"content":"        switch (fields[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kwuunnn"},"content":"        case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kwuunnn"},"content":"            task \u003d new Todo(fields[2]);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kwuunnn"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kwuunnn"},"content":"        case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kwuunnn"},"content":"            LocalDateTime dueDateTime \u003d LocalDateTime.parse(fields[3]);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kwuunnn"},"content":"            task \u003d new Deadline(fields[2], dueDateTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kwuunnn"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kwuunnn"},"content":"        case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kwuunnn"},"content":"            LocalDateTime fromDateTime \u003d LocalDateTime.parse(fields[3]);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kwuunnn"},"content":"            LocalDateTime toDateTime \u003d LocalDateTime.parse(fields[4]);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kwuunnn"},"content":"            task \u003d new Event(fields[2], fromDateTime, toDateTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kwuunnn"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kwuunnn"},"content":"        if (fields[1].equals(\"1\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kwuunnn"},"content":"            task.changeMark(\"MARK\");","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kwuunnn"},"content":"        return task;","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"kwuunnn"},"content":"    public ArrayList\u003cTask\u003e readTasksFile() throws TasksFileException {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"kwuunnn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"kwuunnn"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kwuunnn"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"kwuunnn"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"kwuunnn"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"kwuunnn"},"content":"                Task task \u003d readTask(sc.nextLine());","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"kwuunnn"},"content":"                tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"kwuunnn"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"kwuunnn"},"content":"            sc.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kwuunnn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"kwuunnn"},"content":"            createTaskFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"kwuunnn"},"content":"        return tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"kwuunnn"},"content":"    private void createTaskFile() throws TasksFileException {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"kwuunnn"},"content":"        File tasksFile \u003d new File(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"kwuunnn"},"content":"        File dataDirectory \u003d tasksFile.getParentFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"kwuunnn"},"content":"        dataDirectory.mkdirs();","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"kwuunnn"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"kwuunnn"},"content":"            tasksFile.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"kwuunnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"kwuunnn"},"content":"            throw new TasksFileException();","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"kwuunnn"},"content":"    public void saveTasksFile(TaskList tasks) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"kwuunnn"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"kwuunnn"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getLength(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"kwuunnn"},"content":"            String formattedTask \u003d tasks.get(i).formatTask();","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"kwuunnn"},"content":"            fw.write(formattedTask + System.lineSeparator());","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"kwuunnn"},"content":"        fw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kwuunnn":87}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"        this.taskList.addAll(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"    public int getLength() {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"        return this.taskList.size() \u003d\u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"    public void remove(int taskId) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kwuunnn"},"content":"        this.taskList.remove(taskId - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kwuunnn"},"content":"    public Task get(int taskId) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kwuunnn"},"content":"        return this.taskList.get(taskId - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kwuunnn":33}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"    private static final String DIVIDER \u003d \"_______________________________________________________________________\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"    public String readInput() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"    public void close() {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"        this.sc.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"    public void greet() {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"        System.out.println(DIVIDER +","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"                \"Hello! I\u0027m KwunTalk!\\nWhat can I do for you?\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"                DIVIDER);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kwuunnn"},"content":"    public void goodbye() {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kwuunnn"},"content":"        System.out.println(DIVIDER + \"Bye. Hope to see you again soon!\\n\" + DIVIDER);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kwuunnn"},"content":"    public void listTasks(TaskList taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kwuunnn"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kwuunnn"},"content":"            System.out.println(DIVIDER + \"Your list is currently empty.\\n\" + DIVIDER);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kwuunnn"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kwuunnn"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kwuunnn"},"content":"            for (int i \u003d 1; i \u003c\u003d taskList.getLength(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kwuunnn"},"content":"                sb.append(String.format(\"%d. %s\\n\", i, taskList.get(i)));","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kwuunnn"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kwuunnn"},"content":"            System.out.println(DIVIDER + \"Here are the tasks in your list:\\n\" + sb + DIVIDER);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kwuunnn"},"content":"    public void deleteTask(Task task, int taskTotal) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kwuunnn"},"content":"        String s \u003d String.format(\"OK. I\u0027ve deleted this task:\\n%s\\nNow you have %s tasks in the list.\\n\",","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kwuunnn"},"content":"                task, taskTotal);","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kwuunnn"},"content":"        System.out.println(DIVIDER + s + DIVIDER);","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kwuunnn"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"kwuunnn"},"content":"        String s \u003d String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\\n\", task);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"kwuunnn"},"content":"        System.out.println(DIVIDER + s + DIVIDER);","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kwuunnn"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"kwuunnn"},"content":"        String s \u003d String.format(\"OK, I\u0027ve marked this task as not done yet:\\n%s\\n\", task);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"kwuunnn"},"content":"        System.out.println(DIVIDER + s + DIVIDER);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"kwuunnn"},"content":"    public void addTask(Task task, int taskTotal) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"kwuunnn"},"content":"        String s \u003d String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %s tasks in the list.\\n\",","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kwuunnn"},"content":"                task, taskTotal);","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"kwuunnn"},"content":"        System.out.println(DIVIDER + s + DIVIDER);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"kwuunnn"},"content":"    public void error(DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"kwuunnn"},"content":"        System.out.println(DIVIDER + e + DIVIDER);","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kwuunnn":69}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.InvalidDateTimeFormatException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"    private String arguments;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"    public AddDeadlineCommand(String arguments) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"            throws InvalidArgumentException, InvalidDateTimeFormatException {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kwuunnn"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kwuunnn"},"content":"            String[] splitDate \u003d this.arguments.split(\" /by \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kwuunnn"},"content":"            LocalDateTime dueDateTime \u003d LocalDateTime.parse(splitDate[1],","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kwuunnn"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kwuunnn"},"content":"            Task newTask \u003d new Deadline(splitDate[0], dueDateTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kwuunnn"},"content":"            taskList.add(newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kwuunnn"},"content":"            ui.addTask(newTask, taskList.getLength());","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kwuunnn"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kwuunnn"},"content":"            throw new InvalidArgumentException(\"DEADLINE\");","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kwuunnn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kwuunnn"},"content":"            throw new InvalidDateTimeFormatException(\"DEADLINE\");","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kwuunnn":43}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.InvalidDateTimeFormatException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"    private String arguments;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"    public AddEventCommand(String arguments) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws InvalidArgumentException, InvalidDateTimeFormatException {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kwuunnn"},"content":"            String[] splitTaskName \u003d this.arguments.split(\" /from \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kwuunnn"},"content":"            String[] splitFromToDates \u003d splitTaskName[1].split(\" /to \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kwuunnn"},"content":"            LocalDateTime fromDateTime \u003d LocalDateTime.parse(splitFromToDates[0],","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kwuunnn"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kwuunnn"},"content":"            LocalDateTime toDateTime \u003d LocalDateTime.parse(splitFromToDates[1],","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kwuunnn"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kwuunnn"},"content":"            Task newTask \u003d new Event(splitTaskName[0], fromDateTime, toDateTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kwuunnn"},"content":"            taskList.add(newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kwuunnn"},"content":"            ui.addTask(newTask, taskList.getLength());","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kwuunnn"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kwuunnn"},"content":"            throw new InvalidArgumentException(\"EVENT\");","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kwuunnn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kwuunnn"},"content":"            throw new InvalidDateTimeFormatException(\"EVENT\");","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kwuunnn":45}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"    private String arguments;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"    public AddTodoCommand(String arguments) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws InvalidArgumentException {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"            Task newTask \u003d new Todo(this.arguments);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"            taskList.add(newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"            ui.addTask(newTask, taskList.getLength());","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kwuunnn"},"content":"            throw new InvalidArgumentException(\"TODO\");","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kwuunnn":29}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.TasksFileException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws TasksFileException {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"            ui.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"            storage.saveTasksFile(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"            ui.goodbye();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"            throw new TasksFileException();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"        return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kwuunnn":27}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kwuunnn":14}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.NoTaskFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"    private String arguments;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"    public DeleteCommand(String arguments) {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"            throws InvalidArgumentException, NoTaskFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"            int taskId \u003d Integer.parseInt(this.arguments);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"            Task task \u003d taskList.get(taskId);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"            taskList.remove(taskId);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"            ui.deleteTask(task, taskList.getLength());","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kwuunnn"},"content":"            throw new InvalidArgumentException(\"DELETE\");","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kwuunnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kwuunnn"},"content":"            throw new NoTaskFoundException(this.arguments);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kwuunnn":32}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"        ui.listTasks(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kwuunnn":12}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.NoTaskFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"    private String arguments;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"    public MarkCommand(String arguments) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"            throws InvalidArgumentException, NoTaskFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"            int taskId \u003d Integer.parseInt(this.arguments);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"            Task task \u003d taskList.get(taskId);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"            task.changeMark(\"MARK\");","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"            ui.markTask(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kwuunnn"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kwuunnn"},"content":"            throw new InvalidArgumentException(\"MARK\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kwuunnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kwuunnn"},"content":"            throw new NoTaskFoundException(this.arguments);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kwuunnn":33}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"import duke.exception.NoTaskFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"    private String arguments;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"    public UnmarkCommand(String arguments) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"            throws InvalidArgumentException, NoTaskFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"            int taskId \u003d Integer.parseInt(this.arguments);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"            Task task \u003d taskList.get(taskId);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"            task.changeMark(\"UNMARK\");","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"            ui.unmarkTask(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kwuunnn"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kwuunnn"},"content":"            throw new InvalidArgumentException(\"UNMARK\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kwuunnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kwuunnn"},"content":"            throw new NoTaskFoundException(this.arguments);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kwuunnn":33}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.exception;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"        return \"ERROR!!\";","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kwuunnn":9}},{"path":"src/main/java/duke/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.exception;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"    private String command;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"    public InvalidArgumentException(String command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"        return String.format(\"%s The \u0027%s\u0027 command has invalid argument(s)! ;(\\nPlease fill it in.\\n\",","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"                super.toString(),","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"                command);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"kwuunnn":16}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.exception;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"    private String command;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"    public InvalidCommandException(String command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"        return String.format(\"%s I don\u0027t know what \u0027%s\u0027 means ;(\\nPlease try again.\\n\",","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"                super.toString(),","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"                command);","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kwuunnn":16}},{"path":"src/main/java/duke/exception/InvalidDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.exception;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"public class InvalidDateTimeFormatException extends DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"    private String command;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"    public InvalidDateTimeFormatException(String command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"        if (command.equals(\"DEADLINE\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"            return String.format(\"%s The format of the Date/Time is invalid! ;(\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"                            \"Please follow this format: [/by dd/MM/yyyy HHmm]\\n\",","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"                    super.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"        } else { // \"EVENT\"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"            return String.format(\"%s The format of the Date/Time is invalid! ;(\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"                            \"Please follow this format: [/from dd/MM/yyyy HHmm /to dd/MM/yyyy HHmm]\\n\",","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"                    super.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"kwuunnn":22}},{"path":"src/main/java/duke/exception/NoTaskFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.exception;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"public class NoTaskFoundException extends DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"    private String taskId;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"    public NoTaskFoundException(String taskId) {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"        return String.format(\"%s The number \u0027%s\u0027 does not correspond to any task ;(\\nPlease try another number.\\n\",","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"                super.toString(),","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"                taskId);","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kwuunnn":16}},{"path":"src/main/java/duke/exception/TasksFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.exception;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"public class TasksFileException extends DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"        return super.toString() + \"An error occurred with the tasks file.\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"kwuunnn":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"    private LocalDateTime dueDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"    public Deadline(String task, LocalDateTime dueDateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"        super(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"        this.dueDateTime \u003d dueDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"    public String formatTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"        String status \u003d getStatus() ? \"1\" : \"0\";","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"        return String.format(\"D | %s | %s | %s\", status, super.formatTask(), dueDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"                dueDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\")));","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"kwuunnn":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"    public Event(String task, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"        super(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"    public String formatTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"        String status \u003d getStatus() ? \"1\" : \"0\";","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"        return String.format(\"E | %s | %s | %s | %s\", status, super.formatTask(), fromDateTime, toDateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"                fromDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\")),","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"kwuunnn"},"content":"                toDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\")));","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"kwuunnn":28}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"    private String task;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"    public Task(String task) {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"    public void changeMark(String command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"        isDone \u003d command.equals(\"MARK\");","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"        return isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"    public String formatTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kwuunnn"},"content":"        return task;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"kwuunnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"kwuunnn"},"content":"        String mark \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"kwuunnn"},"content":"        return String.format(\"[%s] %s\", mark, task);","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"kwuunnn":28}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"    public Todo(String task) {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"        super(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"    public String formatTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"        String status \u003d getStatus() ? \"1\" : \"0\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"        return String.format(\"T | %s | %s\", status, super.formatTask());","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"kwuunnn":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kwuunnn"},"content":"todo read book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"kwuunnn"},"content":"deadline return book /by 06/06/2024 1830","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"kwuunnn"},"content":"event project meeting /from 11/11/2024 1400 /to 11/11/2024 1600","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kwuunnn"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"kwuunnn"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"kwuunnn"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"kwuunnn"},"content":"unmark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"kwuunnn"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"kwuunnn"},"content":"mark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"kwuunnn"},"content":"delete 1","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"kwuunnn"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"kwuunnn"},"content":"delete 3","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"kwuunnn"},"content":"delete","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"kwuunnn"},"content":"mark","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"kwuunnn"},"content":"blah","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"kwuunnn"},"content":"todo","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"kwuunnn"},"content":"deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"kwuunnn"},"content":"event","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"kwuunnn"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kwuunnn":19}}]
