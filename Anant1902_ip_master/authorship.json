[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"    mainClass.set(\"drake.Launcher\")","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"    archiveFileName \u003d \u0027drake.jar\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Anant1902"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Anant1902"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"-":38,"Anant1902":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"# Drake Bot - User Guide","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"\u003e A simple-to-use task management chatbot, designed to help you keep track of your tasks efficiently.","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"\u003cimg src\u003d\"Ui.png\" width\u003d\"300\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"Whether you\u0027re managing daily chores, important deadlines, or upcoming events, Drake Bot is here to assist. This guide will walk you through the features available and how to use them.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"## Table of Contents","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"- [Features Overview](#features-overview)","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"- [Adding Tasks](#adding-tasks)","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"  - [Todo](#todo)","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"  - [Deadline](#deadline)","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"  - [Event](#event)","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"- [Viewing Tasks](#viewing-tasks)","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"- [Marking Tasks as Done](#marking-tasks-as-done)","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"- [Unmarking Tasks](#unmarking-tasks)","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"- [Deleting Tasks](#deleting-tasks)","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"- [Finding Tasks](#finding-tasks)","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"- [Adding Contacts](#adding-contacts)","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"- [Listing Contacts](#listing-contacts)","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"- [Deleting Contacts](#deleting-contacts)","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"- [Exiting](#exiting)","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"## Features Overview","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"1. **Add Tasks:** Easily add tasks of three types - Todo, Deadline, and Event.","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"2. **View Tasks:** View all tasks in your task list at any time.","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"3. **Mark Tasks as Done:** Mark tasks as completed once you\u0027ve finished them.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"4. **Unmark Tasks:** Revert tasks to an incomplete status if marked done by mistake.","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"5. **Delete Tasks:** Remove tasks from your list that are no longer relevant.","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"6. **Find Tasks:** Find tasks from your list with just a keyword.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"## Adding Tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"Easily add tasks of three types - Todo, Deadline, and Event.","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"### Todo","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"For tasks without a specific deadline. Ideal for things you want to do at any time.","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"- **Command:** `todo [task description]`","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"  **Example:** `todo Read a book`","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"### Deadline","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"For tasks that need to be completed by a specific date.","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"- **Command:** `deadline [task description] /by [YYYY-MM-DD]`","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"  **Example:** `deadline finish 2103t ip assignment /by 2024-02-23`","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"### Event","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"For tasks that occur from a specified start date, until an end date, such as Computing freshman orientation.","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"Anant1902"},"content":"- **Command:** `event [event description] /from [YYYY-MM-DD] /to [YYYY-MM-DD]`","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"Anant1902"},"content":"  **Example:** `event Computing freshman orientation /from 2024-07-15 /to 2024-07-18`","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"Anant1902"},"content":"## Viewing Tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"Anant1902"},"content":"To see a list of all your tasks, use the command:","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"Anant1902"},"content":"- **Command:** `list`","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"Anant1902"},"content":"## Marking Tasks as Done","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"Anant1902"},"content":"Once you complete a task, mark it as done with the following command:","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"Anant1902"},"content":"- **Command:** `mark [task number]`","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"Anant1902"},"content":"  **Example:** `mark 2`","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"Anant1902"},"content":"## Unmarking Tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"Anant1902"},"content":"If a task was marked as done by mistake, you can revert it:","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"Anant1902"},"content":"- **Command:** `unmark [task number]`","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"Anant1902"},"content":"  **Example:** `unmark 2`","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"Anant1902"},"content":"## Deleting Tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"Anant1902"},"content":"To remove a task from your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"Anant1902"},"content":"- **Command:** `delete [task number]`","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"Anant1902"},"content":"  **Example:** `delete 3`","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"Anant1902"},"content":"## Finding Tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"Anant1902"},"content":"Find tasks from your list containing a specificed keyword:","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"Anant1902"},"content":"- **Command:** `find [keyword]`","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"Anant1902"},"content":"  **Example:** `find cs2103t`","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"Anant1902"},"content":"## Adding Contacts","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"Anant1902"},"content":"Add a contact to your contact list:","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"Anant1902"},"content":"- **Command:** `add-contact [contact-name] [contact-details]`","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"Anant1902"},"content":"  **Example:** `add-contact dua-lipa pop singer`","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"Anant1902"},"content":"## Listing Contacts","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"Anant1902"},"content":"List all contacts in your contact list:","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"Anant1902"},"content":"- **Command:** `list-contacts`","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"Anant1902"},"content":"## Deleting Contacts","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"Anant1902"},"content":"Delete a contact from your contact list:","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"Anant1902"},"content":"- **Command:** `delete-contact [contact-index]`","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"Anant1902"},"content":"  **Example:** `delete-contact 1`","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"Anant1902"},"content":"## Exiting","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"Anant1902"},"content":"Exit and shut down the Drake bot program:","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"Anant1902"},"content":"- **Command:** `bye`","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"Anant1902"},"content":"---","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"-":14,"Anant1902":112}},{"path":"src/main/java/drake/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"        dialog.setMaxWidth(250);","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Anant1902"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Anant1902"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Anant1902"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Anant1902"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Anant1902":62}},{"path":"src/main/java/drake/Drake.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"import drake.contact.Contact;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"import drake.task.Deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"import drake.task.Event;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"import drake.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"import drake.task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"import drake.task.Todo;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"enum Command {","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"    BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, INVALID, FIND, ADD_CONTACT, SHOW_CONTACTS, DELETE_CONTACT;","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"    public static Command fromString(String commandString) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"        switch (commandString.toLowerCase()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"            return BYE;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"        case \"list\":","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"            return LIST;","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"            return MARK;","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"            return UNMARK;","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"            return TODO;","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"            return DEADLINE;","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"        case \"event\":","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"            return EVENT;","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"            return DELETE;","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"        case \"find\":","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"            return FIND;","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"        case \"add-contact\":","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"            return ADD_CONTACT;","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"        case \"list-contacts\":","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"            return SHOW_CONTACTS;","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"        case \"delete-contact\":","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"            return DELETE_CONTACT;","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"        default:","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"            return INVALID;","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":" * This is the main class for the Drake application, which is a task manager program.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":" * It initializes the application, loads existing tasks, and enters a command loop that","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":" * allows users to interact with their task list through various commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Anant1902"},"content":"public class Drake {","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"Anant1902"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"Anant1902"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"Anant1902"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"Anant1902"},"content":"    private final ArrayList\u003cContact\u003e contacts;","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Anant1902"},"content":"     * Constructs a new instance of the Drake application.","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"Anant1902"},"content":"    public Drake() {","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Anant1902"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Anant1902"},"content":"        storage \u003d new Storage(\"./list.dat\");","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Anant1902"},"content":"        tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Anant1902"},"content":"        contacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"Anant1902"},"content":"     * Gets the response from Drake.","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Anant1902"},"content":"     * @param input the user\u0027s input.","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"Anant1902"},"content":"     * @return the response from Drake.","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Anant1902"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Anant1902"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"Anant1902"},"content":"        String commandWord \u003d words[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"Anant1902"},"content":"        Command command \u003d Command.fromString(commandWord);","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"Anant1902"},"content":"            switch (command) {","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"Anant1902"},"content":"            case BYE:","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"Anant1902"},"content":"                return handleBye();","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Anant1902"},"content":"            case LIST:","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"Anant1902"},"content":"                return handleList();","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"Anant1902"},"content":"            case MARK:","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"Anant1902"},"content":"                return handleMark(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"Anant1902"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"Anant1902"},"content":"                return handleUnmark(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"Anant1902"},"content":"            case TODO:","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"Anant1902"},"content":"                return handleTodo(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"Anant1902"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"Anant1902"},"content":"                return handleDeadline(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"Anant1902"},"content":"            case EVENT:","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"Anant1902"},"content":"                return handleEvent(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"Anant1902"},"content":"            case DELETE:","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"Anant1902"},"content":"                return handleDelete(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"Anant1902"},"content":"            case FIND:","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"Anant1902"},"content":"                return handleFind(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"Anant1902"},"content":"            case ADD_CONTACT:","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"Anant1902"},"content":"                return handleContactAdd(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"Anant1902"},"content":"            case SHOW_CONTACTS:","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"Anant1902"},"content":"                return showContacts();","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"Anant1902"},"content":"            case DELETE_CONTACT:","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"Anant1902"},"content":"                return handleDeleteContact(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"Anant1902"},"content":"            default:","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"Anant1902"},"content":"                throw new NotValidCommandException(\"That\u0027s not a valid command!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"Anant1902"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"Anant1902"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"Anant1902"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"Anant1902"},"content":"    private String handleBye() {","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"Anant1902"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"Anant1902"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"Anant1902"},"content":"        delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"Anant1902"},"content":"        delay.play();","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"Anant1902"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"Anant1902"},"content":"    private String handleContactAdd(String input) {","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"Anant1902"},"content":"        String[] result \u003d Parser.parseContactAdd(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"Anant1902"},"content":"        String contactName \u003d result[0];","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"Anant1902"},"content":"        String contactDescription \u003d result[1];","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"Anant1902"},"content":"        Contact newContact \u003d new Contact(contactName, contactDescription);","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"Anant1902"},"content":"        contacts.add(newContact);","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"Anant1902"},"content":"        return ui.showContactAdd(newContact, contacts.size());","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"Anant1902"},"content":"    private String showContacts() {","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"Anant1902"},"content":"        return ui.showContacts(contacts);","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"Anant1902"},"content":"    private String handleList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"Anant1902"},"content":"        return ui.showTaskList(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"Anant1902"},"content":"    private String handleMark(String input) throws Exception {","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"Anant1902"},"content":"        int markIndex \u003d Parser.parseIndex(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":142,"author":{"gitId":"Anant1902"},"content":"        if (markIndex \u003c 0 \u0026\u0026 markIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"Anant1902"},"content":"            throw new Exception(\"Invalid task index for marking\");","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":145,"author":{"gitId":"Anant1902"},"content":"        tasks.markTask(markIndex);","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"Anant1902"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-22"},{"lineNumber":147,"author":{"gitId":"Anant1902"},"content":"        return ui.showMarkTask(tasks.getTask(markIndex));","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":149,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":150,"author":{"gitId":"Anant1902"},"content":"    private String handleUnmark(String input) throws Exception {","lastModifiedDate":"2024-02-22"},{"lineNumber":151,"author":{"gitId":"Anant1902"},"content":"        int unmarkIndex \u003d Parser.parseIndex(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":152,"author":{"gitId":"Anant1902"},"content":"        if (unmarkIndex \u003c 0 \u0026\u0026 unmarkIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":153,"author":{"gitId":"Anant1902"},"content":"            throw new Exception(\"Invalid task index for un-marking\");","lastModifiedDate":"2024-02-22"},{"lineNumber":154,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":155,"author":{"gitId":"Anant1902"},"content":"        tasks.unmarkTask(unmarkIndex);","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"Anant1902"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-22"},{"lineNumber":157,"author":{"gitId":"Anant1902"},"content":"        return ui.showUnmarkTask(tasks.getTask(unmarkIndex));","lastModifiedDate":"2024-02-07"},{"lineNumber":158,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":159,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":160,"author":{"gitId":"Anant1902"},"content":"    private String handleTodo(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"Anant1902"},"content":"        String todoDescription \u003d Parser.parseDescription(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":162,"author":{"gitId":"Anant1902"},"content":"        Todo newTodo \u003d new Todo(todoDescription);","lastModifiedDate":"2024-01-28"},{"lineNumber":163,"author":{"gitId":"Anant1902"},"content":"        tasks.addTask(newTodo);","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"Anant1902"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-22"},{"lineNumber":165,"author":{"gitId":"Anant1902"},"content":"        return ui.showAddTask(newTodo, tasks.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":167,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":168,"author":{"gitId":"Anant1902"},"content":"    private String handleDeadline(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":170,"author":{"gitId":"Anant1902"},"content":"            Object[] deadlineDetails \u003d Parser.parseDeadline(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":171,"author":{"gitId":"Anant1902"},"content":"            Deadline newDeadline \u003d new Deadline((String) deadlineDetails[0],","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"Anant1902"},"content":"                    (LocalDateTime) deadlineDetails[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"Anant1902"},"content":"            tasks.addTask(newDeadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"Anant1902"},"content":"            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-22"},{"lineNumber":175,"author":{"gitId":"Anant1902"},"content":"            return ui.showAddTask(newDeadline, tasks.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":176,"author":{"gitId":"Anant1902"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":177,"author":{"gitId":"Anant1902"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":178,"author":{"gitId":"Anant1902"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":179,"author":{"gitId":"Anant1902"},"content":"            return ui.showError(\"Oops, format error! Type in a date in the form yyyy-mm-dd and try again!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":180,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":181,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":182,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":183,"author":{"gitId":"Anant1902"},"content":"    private String handleEvent(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":184,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":185,"author":{"gitId":"Anant1902"},"content":"            Object[] eventDetails \u003d Parser.parseEvent(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":186,"author":{"gitId":"Anant1902"},"content":"            Event newEvent \u003d new Event((String) eventDetails[0], (LocalDateTime) eventDetails[1],","lastModifiedDate":"2024-02-22"},{"lineNumber":187,"author":{"gitId":"Anant1902"},"content":"                    (LocalDateTime) eventDetails[2]);","lastModifiedDate":"2024-02-22"},{"lineNumber":188,"author":{"gitId":"Anant1902"},"content":"            tasks.addTask(newEvent);","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"Anant1902"},"content":"            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-22"},{"lineNumber":190,"author":{"gitId":"Anant1902"},"content":"            return ui.showAddTask(newEvent, tasks.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":191,"author":{"gitId":"Anant1902"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":192,"author":{"gitId":"Anant1902"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":193,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":194,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":195,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":196,"author":{"gitId":"Anant1902"},"content":"    private String handleDelete(String input) throws Exception {","lastModifiedDate":"2024-02-22"},{"lineNumber":197,"author":{"gitId":"Anant1902"},"content":"        int deleteIndex \u003d Parser.parseIndex(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":198,"author":{"gitId":"Anant1902"},"content":"        if (deleteIndex \u003c 0 || deleteIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":199,"author":{"gitId":"Anant1902"},"content":"            throw new Exception(\"Invalid task index for deleting\");","lastModifiedDate":"2024-02-22"},{"lineNumber":200,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":201,"author":{"gitId":"Anant1902"},"content":"        Task deletedTask \u003d tasks.deleteTask(deleteIndex);","lastModifiedDate":"2024-02-03"},{"lineNumber":202,"author":{"gitId":"Anant1902"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-22"},{"lineNumber":203,"author":{"gitId":"Anant1902"},"content":"        return ui.showDeleteTask(deletedTask, tasks.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":204,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":205,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":206,"author":{"gitId":"Anant1902"},"content":"    private String handleDeleteContact(String input) throws Exception {","lastModifiedDate":"2024-02-22"},{"lineNumber":207,"author":{"gitId":"Anant1902"},"content":"        int deleteIndex \u003d Parser.parseIndex(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":208,"author":{"gitId":"Anant1902"},"content":"        if (deleteIndex \u003c 0 || deleteIndex \u003e\u003d contacts.size()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":209,"author":{"gitId":"Anant1902"},"content":"            throw new Exception(\"Invalid contact index for deleting\");","lastModifiedDate":"2024-02-22"},{"lineNumber":210,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":211,"author":{"gitId":"Anant1902"},"content":"        Contact deletedContact \u003d contacts.remove(deleteIndex);","lastModifiedDate":"2024-02-22"},{"lineNumber":212,"author":{"gitId":"Anant1902"},"content":"        return ui.showDeleteContact(deletedContact, contacts.size());","lastModifiedDate":"2024-02-22"},{"lineNumber":213,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":214,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":215,"author":{"gitId":"Anant1902"},"content":"    private String handleFind(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":216,"author":{"gitId":"Anant1902"},"content":"        String keyword \u003d Parser.parseKeyword(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":217,"author":{"gitId":"Anant1902"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasksByKeyword(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":218,"author":{"gitId":"Anant1902"},"content":"        return ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":219,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":220,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":221,"author":{"gitId":"Anant1902"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":222,"author":{"gitId":"Anant1902"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":223,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":224,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Anant1902":224}},{"path":"src/main/java/drake/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Anant1902":11}},{"path":"src/main/java/drake/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"    private final Drake drake \u003d new Drake();","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDrake(drake);","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"            stage.setTitle(\"Drake\");","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setWelcomeMessage(Ui.showWelcome());","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Anant1902":33}},{"path":"src/main/java/drake/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"    private static final String USER_PATH \u003d \"/images/user.jpeg\";","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"    private static final String DRAKE_PATH \u003d \"/images/drake.jpeg\";","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"    private Drake drake;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(USER_PATH)));","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"    private final Image drakeImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(DRAKE_PATH)));","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"     * Initializes Dialog Container.","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"     * Sets the instance of the Drake class.","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"     * @param d Drake instance to be set.","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"    public void setDrake(Drake d) {","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"        drake \u003d d;","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"        String response \u003d drake.getResponse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Anant1902"},"content":"                DialogBox.getDukeDialog(response, drakeImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Anant1902"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Anant1902"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Anant1902"},"content":"     * Sets a welcome message.","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"Anant1902"},"content":"     * @param message Welcome message.","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Anant1902"},"content":"    public void setWelcomeMessage(String message) {","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Anant1902"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(message, drakeImage));","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Anant1902":69}},{"path":"src/main/java/drake/NotValidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":" * This exception is thrown when an attempt is made to execute an invalid command","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":" * in the Drake application. It serves as a specific signal that a user has attempted","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":" * to input a command that the application does not recognize or cannot process.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"public class NotValidCommandException extends Exception {","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"    public NotValidCommandException(String message) {","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Anant1902":12}},{"path":"src/main/java/drake/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":" * Handles parsing of user input into various components such as commands, task indices, descriptions, and deadlines.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"public class Parser {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"     * Parses the index provided for a task or contact operation.","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"     * @param input The command followed by an index.","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"     * @return The integer list index provided in the input.","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"     * @throws Exception If the input does not contain a valid integer index.","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"    public static int parseIndex(String input) throws Exception {","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"        assert input !\u003d null \u0026\u0026 input.contains(\" \") : \"Invalid input format for parsing index.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"            throw new IllegalArgumentException(\"No index provided.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"            return Integer.parseInt(words[1]) - 1; // Subtract 1 to convert to zero-based index","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"            throw new Exception(\"Enter a valid integer!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"     * Parses the task description from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"     * @return The task description.","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"     * @throws TodoLeftBlankException if the description part of the input is empty.","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"    public static String parseDescription(String input) {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"        assert input !\u003d null \u0026\u0026 input.contains(\" \") : \"Invalid input format for parsing description.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"            throw new TodoLeftBlankException(\"Looks like you left the description of the todo empty.\"","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"                    + \"This isn\u0027t allowed!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"        return parts[1].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"     * Parses the deadline task from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"     * @return An Object array where the first element is the task description and the second element","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"     *     is the deadline as a LocalDateTime.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"     * @throws Exception if the deadline format is incorrect or if the \u0027deadline\u0027 keyword is misspelled.","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"    public static Object[] parseDeadline(String input) throws Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Anant1902"},"content":"        assert input !\u003d null : \"Input must not be null\";","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"Anant1902"},"content":"        String[] parts \u003d input.split(\" /by \");","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"Anant1902"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"Anant1902"},"content":"            throw new IllegalArgumentException(\"Looks like you didn\u0027t input the \u0027by\u0027 sub-command. \"","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"Anant1902"},"content":"                    + \"This isn\u0027t allowed!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Anant1902"},"content":"        if (!parts[0].split(\" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"Anant1902"},"content":"            throw new Exception(\"Looks like you spelt deadline wrong. Please try again!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"Anant1902"},"content":"        String description \u003d parts[0].substring(parts[0].indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"Anant1902"},"content":"        LocalDate date;","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Anant1902"},"content":"        LocalDateTime by;","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Anant1902"},"content":"            date \u003d LocalDate.parse(parts[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Anant1902"},"content":"            by \u003d date.atStartOfDay();","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Anant1902"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Anant1902"},"content":"            throw new Exception(\"Date is of the wrong format!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Anant1902"},"content":"        return new Object[]{description, by};","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Anant1902"},"content":"     * Parses an event task from the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Anant1902"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Anant1902"},"content":"     * @return A String array where the first element is the event title,","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Anant1902"},"content":"     *     the second element is the start time, and the third element is the end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Anant1902"},"content":"    public static Object[] parseEvent(String input) throws Exception {","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"Anant1902"},"content":"        if (input.trim().equals(\"event\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"Anant1902"},"content":"            throw new IllegalArgumentException(\"Looks like you left the description of the event empty. \"","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"Anant1902"},"content":"                    + \"This isn\u0027t allowed!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"Anant1902"},"content":"        String[] parts \u003d input.substring(6).split(\"/\");","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"Anant1902"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"Anant1902"},"content":"            throw new Exception(\"Please add both \u0027from\u0027 and \u0027to\u0027 sub-commands!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"Anant1902"},"content":"        String title \u003d parts[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"Anant1902"},"content":"        LocalDateTime fromDate \u003d null;","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"Anant1902"},"content":"        LocalDateTime toDate \u003d null;","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"Anant1902"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"Anant1902"},"content":"            if (parts[i].split(\" \")[0].equals(\"from\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"Anant1902"},"content":"                try {","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"Anant1902"},"content":"                    LocalDate fromD \u003d LocalDate.parse(parts[i].substring(5).trim(),","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"Anant1902"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"Anant1902"},"content":"                    System.out.println(fromD);","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"Anant1902"},"content":"                    fromDate \u003d fromD.atStartOfDay();","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"Anant1902"},"content":"                    System.out.println(fromDate);","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"Anant1902"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"Anant1902"},"content":"                    throw new Exception(\"From Date is of the wrong format! Make sure it is of form \u0027yyyy-mm-dd\u0027.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"Anant1902"},"content":"                }","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"Anant1902"},"content":"            } else if (parts[i].split(\" \")[0].equals(\"to\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"Anant1902"},"content":"                try {","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"Anant1902"},"content":"                    toDate \u003d LocalDate.parse(parts[i].substring(3).trim(),","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"Anant1902"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")).atStartOfDay();","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"Anant1902"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"Anant1902"},"content":"                    throw new Exception(\"To Date is of the wrong format! Make sure it is of form \u0027yyyy-mm-dd\u0027.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"Anant1902"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"Anant1902"},"content":"            } else {","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"Anant1902"},"content":"                throw new Exception(\"Invalid or incomplete sub-command. \"","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"Anant1902"},"content":"                        + \"Include both \u0027from\u0027 and \u0027to\u0027 sub-commands only!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"Anant1902"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"Anant1902"},"content":"        return new Object[]{title, fromDate, toDate};","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"Anant1902"},"content":"     * Parses the search keyword from the user input. It assumes the input contains","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"Anant1902"},"content":"     *     the keyword after the \u0027find\u0027 command.","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"Anant1902"},"content":"     * @param input The user input string that contains the search keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"Anant1902"},"content":"     * @return The search keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"Anant1902"},"content":"     * @throws IllegalArgumentException If the keyword for search is missing or empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"Anant1902"},"content":"    public static String parseKeyword(String input) {","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"Anant1902"},"content":"        assert input !\u003d null \u0026\u0026 input.contains(\" \") : \"Invalid input format for parsing search keyword.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":135,"author":{"gitId":"Anant1902"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"Anant1902"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"Anant1902"},"content":"            throw new IllegalArgumentException(\"Keyword for search is missing.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"Anant1902"},"content":"        return parts[1].trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"Anant1902"},"content":"     * Parses the name and description from the user input.","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":145,"author":{"gitId":"Anant1902"},"content":"     * @param input The user input string that contains the contact details.","lastModifiedDate":"2024-02-22"},{"lineNumber":146,"author":{"gitId":"Anant1902"},"content":"     * @return The name and description as string\u0027s in a string array.","lastModifiedDate":"2024-02-22"},{"lineNumber":147,"author":{"gitId":"Anant1902"},"content":"     * @throws IllegalArgumentException If the name or description is missing or empty.","lastModifiedDate":"2024-02-22"},{"lineNumber":148,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":149,"author":{"gitId":"Anant1902"},"content":"    public static String[] parseContactAdd(String input) throws IllegalArgumentException {","lastModifiedDate":"2024-02-22"},{"lineNumber":150,"author":{"gitId":"Anant1902"},"content":"        assert input !\u003d null \u0026\u0026 input.contains(\" \") : \"Invalid input format for parsing.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":151,"author":{"gitId":"Anant1902"},"content":"        String[] parts \u003d input.split(\" \", 3);","lastModifiedDate":"2024-02-22"},{"lineNumber":152,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":153,"author":{"gitId":"Anant1902"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":154,"author":{"gitId":"Anant1902"},"content":"            throw new IllegalArgumentException(\"Looks like you left the name of the contact empty.\"","lastModifiedDate":"2024-02-22"},{"lineNumber":155,"author":{"gitId":"Anant1902"},"content":"                    + \"This isn\u0027t allowed!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":156,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":157,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"Anant1902"},"content":"        String name \u003d parts[1].trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":159,"author":{"gitId":"Anant1902"},"content":"        String description \u003d parts.length \u003e 2 ? parts[2].trim() : \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":160,"author":{"gitId":"Anant1902"},"content":"        return new String[]{name, description};","lastModifiedDate":"2024-02-12"},{"lineNumber":161,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":162,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Anant1902":163}},{"path":"src/main/java/drake/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"import drake.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":" * Handles storage operations for tasks, such as saving to and loading from a file.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"public class Storage {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"    private final String filePath;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"     * Constructs a new Storage object.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"     * @param filePath The file path where tasks will be saved and loaded from.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"     * Saves the list of tasks to the file.*","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"     * @param tasks The ArrayList of Task objects to be saved.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"        try (ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(filePath))) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"            System.out.println(\"Error saving list!: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"     * Loads and returns the list of tasks from the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"     * If the file does not exist, returns an empty list.","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"     * If the file exists but an error occurs during reading, also returns an empty list.","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"     * @return The ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"            try (ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(file))) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"                return (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"            } catch (ClassNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"                System.out.println(\"Class not found!: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"Anant1902"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"Anant1902"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Anant1902":60}},{"path":"src/main/java/drake/TodoLeftBlankException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":" * Exception thrown when an attempt to create a todo task is made without specifying a description.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":" * This is a subclass of StringIndexOutOfBoundsException, which is typically thrown to indicate that","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":" * an index is either negative or greater than the size of the string.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"public class TodoLeftBlankException extends StringIndexOutOfBoundsException {","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"    public TodoLeftBlankException(String message) {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Anant1902":12}},{"path":"src/main/java/drake/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"import drake.contact.Contact;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"import drake.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"import drake.task.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":" * Handles UI operations for the chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"public class Ui {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"    private static final String DASHED_LINE \u003d \"___________________________\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"     * Returns a welcome message to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"    public static String showWelcome() {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"        return DASHED_LINE + \" What\u0027s up everyone. I\u0027m Drake.\\n\" + \" How can I help?\\n\" + DASHED_LINE;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"     * Returns a goodbye message to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"    public String showGoodbye() {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"        return DASHED_LINE + \" See you later, alligator! \\n\" + DASHED_LINE;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"     * Returns an error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"     * @param message The error message to be returned.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"    public String showError(String message) {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"        assert message !\u003d null \u0026\u0026 !message.isEmpty() : \"Error message cannot be null or empty.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"        return DASHED_LINE + message + \"\\n\" + DASHED_LINE;","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"     * Returns the list of tasks as a string.","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"     * @param tasks The TaskList containing the tasks to display.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"    public String showTaskList(TaskList tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"        assert tasks !\u003d null : \"TaskList object cannot be null.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"        sb.append(DASHED_LINE);","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"        sb.append(\"You asked for the tasks in your list? Here:\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"        ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"            sb.append(i + 1).append(\". \").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"        sb.append(DASHED_LINE);","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"     * Returns a message confirming the addition of a task, the task itself, and the new total number of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Anant1902"},"content":"     * @param task The task that has been added.","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Anant1902"},"content":"     * @param size The new total number of tasks in the list.","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Anant1902"},"content":"    public String showAddTask(Task task, int size) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Anant1902"},"content":"        assert task !\u003d null : \"Task object cannot be null.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Anant1902"},"content":"        return DASHED_LINE + \"Got it. I\u0027ve added this task:\\n\" + task + \"\\n\" + \"Now you have \" + size","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"Anant1902"},"content":"                + \" tasks in the list.\\n\" + DASHED_LINE;","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Anant1902"},"content":"     * Returns a message confirming that a task has been marked as done.","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Anant1902"},"content":"     * @param task The task that has been marked.","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Anant1902"},"content":"    public String showMarkTask(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Anant1902"},"content":"        return DASHED_LINE + \"Cool. Declaring this task as marked:\\n\" + task + \"\\n\" + DASHED_LINE;","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Anant1902"},"content":"     * Returns a message confirming that a task has been marked as not done.","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Anant1902"},"content":"     * @param task The task that has been unmarked.","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Anant1902"},"content":"    public String showUnmarkTask(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"Anant1902"},"content":"        return DASHED_LINE + \"OK, I\u0027ve marked this task as not done yet:\\n\" + task + \"\\n\" + DASHED_LINE;","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Anant1902"},"content":"     * Returns a message confirming the deletion of a task, the task itself, and the new total number of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Anant1902"},"content":"     * @param task The task that has been deleted.","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Anant1902"},"content":"     * @param size The new total number of tasks in the list.","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Anant1902"},"content":"    public String showDeleteTask(Task task, int size) {","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"Anant1902"},"content":"        return DASHED_LINE + \"Noted. I\u0027ve removed this task:\\n\" + task + \"\\n\" + \"Now you have \" + size","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"Anant1902"},"content":"                + \" tasks in the list.\\n\" + DASHED_LINE;","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"Anant1902"},"content":"     * Returns a message confirming the deletion of a contact, the contact itself, and the new total number of contact.","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"Anant1902"},"content":"     * @param contact The contact that has been deleted.","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"Anant1902"},"content":"     * @param size The new total number of contacts in the contact-list.","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"Anant1902"},"content":"    public String showDeleteContact(Contact contact, int size) {","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"Anant1902"},"content":"        return DASHED_LINE + \"Noted. I\u0027ve removed this contact:\\n\" + contact + \"\\n\" + \"Now you have \" + size","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"Anant1902"},"content":"                + \" contacts in the list.\\n\" + DASHED_LINE;","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Anant1902"},"content":"     * Returns a message showing tasks that match the input.","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Anant1902"},"content":"     * @param matchingTasks The tasks that match the input.","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Anant1902"},"content":"    public String showMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"Anant1902"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"Anant1902"},"content":"        sb.append(DASHED_LINE);","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"Anant1902"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"Anant1902"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"Anant1902"},"content":"            sb.append(i + 1).append(\". \").append(matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"Anant1902"},"content":"        sb.append(DASHED_LINE);","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"Anant1902"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"Anant1902"},"content":"     * Returns a message confirming the addition of a contact, the contact itself, and the new total number of contacts.","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"Anant1902"},"content":"     * @param contact The contact that has been added.","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"Anant1902"},"content":"     * @param size The new total number of contacts in the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"Anant1902"},"content":"    public String showContactAdd(Contact contact, int size) {","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"Anant1902"},"content":"        assert contact !\u003d null : \"Task object cannot be null.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"Anant1902"},"content":"        return DASHED_LINE + \"Got it. I\u0027ve added this contact:\\n\" + contact + \"\\n\" + \"Now you have \" + size","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"Anant1902"},"content":"                + \" contacts in your Contact List.\\n\" + DASHED_LINE;","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"Anant1902"},"content":"     * Returns the list of contacts as a string.","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"Anant1902"},"content":"     * @param contacts The contact-list containing the contacts to display.","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"Anant1902"},"content":"    public String showContacts(ArrayList\u003cContact\u003e contacts) {","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"Anant1902"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"Anant1902"},"content":"        sb.append(DASHED_LINE);","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"Anant1902"},"content":"        sb.append(\"You asked for the contacts in your list? Here:\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"Anant1902"},"content":"        for (int i \u003d 0; i \u003c contacts.size(); i++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"Anant1902"},"content":"            sb.append(i + 1).append(\". \").append(contacts.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"Anant1902"},"content":"        sb.append(DASHED_LINE);","lastModifiedDate":"2024-02-12"},{"lineNumber":143,"author":{"gitId":"Anant1902"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Anant1902":145}},{"path":"src/main/java/drake/contact/Contact.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake.contact;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":" * Represents a general contact.","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"public class Contact {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"    protected String name;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"    protected String details;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"     * Constructor for creating a Contact.","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"     * @param name The Contact\u0027s name.","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"     * @param details The Contact\u0027s details.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"    public Contact(String name, String details) {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"        this.details \u003d details;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"     * Creates a string representation of an instance of this class.","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"     * @return The String representation of an instance of this class.","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"        return this.name + \": \" + details;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Anant1902":28}},{"path":"src/main/java/drake/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":" * Represents a deadline task with a specific due date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":" * Inherits from the {@code Task} class and includes additional information","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":" * for the deadline date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"     * Creates a {@code Deadline} task with the specified description and due date/time.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"     * @param by          The LocalDateTime by which the task is due.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"     * Creates a string representation of an instance of this class.","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"     * @return The String representation of an instance of this class.","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Anant1902":32}},{"path":"src/main/java/drake/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":" * Inherits from the {@code Task} class and includes additional information","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":" * specific to events, such as the start time and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"     * Creates an {@code Event} task with the specified description, start time, and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"     * Creates a string representation of an instance of this class.","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"     * @return The String representation of an instance of this class.","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Anant1902":38}},{"path":"src/main/java/drake/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":" * Represents a general task. This class is intended to be a superclass for various types of tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":" * such as todos, deadlines, and events. It implements Serializable so that its instances","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":" * can be serialized into a file for persistent storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"public class Task implements Serializable { // adapted skeleton from cs2103t course website","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"     * Constructs a new Task with the given description. The task is initially not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"     * Gets status icon","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"     * @return Status icon based on isDone field.","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"     * Marks task as done.","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"     * Marks task as not done.","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"     * Creates a string representation of an instance of this class.","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"     * @return The String representation of an instance of this class.","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"        return getStatusIcon() + description;","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Anant1902":55}},{"path":"src/main/java/drake/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":" * Represents a list of tasks and provides methods to manipulate this list.","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"public class TaskList {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"     * Constructs a TaskList with a predefined list of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"     * @param tasks The ArrayList of Task objects to initialize the TaskList with.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"     * @param task The Task object to be added.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"        assert task !\u003d null : \"Cannot add a null task to the task list.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"     * @return The deleted Task object.","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"     * @throws IndexOutOfBoundsException If the index is out of the range of the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"    public Task deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"        assert !tasks.isEmpty() : \"Cannot delete a task from an empty task list.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of bounds.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"     * Retrieves a task from the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"     * @return The Task object at the specified index.","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Anant1902"},"content":"     * @throws IndexOutOfBoundsException If the index is out of the range of the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Anant1902"},"content":"    public Task getTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"Anant1902"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"Anant1902"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of bounds.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"Anant1902"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Anant1902"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Anant1902"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Anant1902"},"content":"    public int size() {","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"Anant1902"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Anant1902"},"content":"     * Provides access to the list of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Anant1902"},"content":"     * @return The ArrayList of Task objects.","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Anant1902"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"Anant1902"},"content":"        return tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"Anant1902"},"content":"     * Marks a task in the task list as done.","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Anant1902"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"Anant1902"},"content":"     * @throws IndexOutOfBoundsException If the index is out of the range of the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Anant1902"},"content":"    public void markTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"Anant1902"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Task index is out of bounds.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"Anant1902"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"Anant1902"},"content":"        task.markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"Anant1902"},"content":"     * Un-marks a task in the task list, indicating it is not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Anant1902"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"Anant1902"},"content":"     * @throws IndexOutOfBoundsException If the index is out of the range of the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"Anant1902"},"content":"    public void unmarkTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"Anant1902"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Task index is out of bounds.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"Anant1902"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"Anant1902"},"content":"        task.markAsNotDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Anant1902"},"content":"     * Searches through all tasks and returns a list of tasks whose descriptions contain the specified keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"Anant1902"},"content":"     * @param keyword The string to search for within the task descriptions.","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"Anant1902"},"content":"     * @return An {@code ArrayList\u003cTask\u003e} containing all tasks that have the specified keyword in their description.","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Anant1902"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"Anant1902"},"content":"        assert keyword !\u003d null \u0026\u0026 !keyword.isEmpty() : \"Search keyword cannot be null or empty.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"Anant1902"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"Anant1902"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"Anant1902"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"Anant1902"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Anant1902"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"Anant1902"},"content":"        return matchingTasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Anant1902":123}},{"path":"src/main/java/drake/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":" * Represents a Todo task with a description.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":" * Inherits from the {@code Task} class and includes additional information","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"     * Initializes a todo task.","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"     * @param description Description of the todo.","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"     * Creates a string representation of an instance of this class.","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"     * @return The String representation of an instance of this class.","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Anant1902":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.scene.paint.Color?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.scene.paint.LinearGradient?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.scene.paint.Stop?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"        \u003cTextFlow fx:id\u003d\"textFlow\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-padding: 20;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"            \u003cFont name\u003d\"Chalkboard SE Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"         \u003c/font\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"         \u003ctextFill\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"            \u003cLinearGradient endX\u003d\"1.0\" endY\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"               \u003cstops\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"                  \u003cStop\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"                     \u003ccolor\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"                        \u003cColor red\u003d\"1.0\" green\u003d\"1.0\" blue\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"                     \u003c/color\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"                  \u003c/Stop\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"                  \u003cStop offset\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"                     \u003ccolor\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"                        \u003cColor red\u003d\"1.0\" green\u003d\"1.0\" blue\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"                     \u003c/color\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"                  \u003c/Stop\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"               \u003c/stops\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"            \u003c/LinearGradient\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"         \u003c/textFill\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"        \u003c/TextFlow\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Anant1902":42}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"drake.MainWindow\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"            \u003cDropShadow /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"         \u003c/effect\u003e\u003c/Button\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"557.0\" prefWidth\u003d\"402.0\" style\u003d\"-fx-background-color: brown;\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Anant1902":23}},{"path":"src/test/java/drake/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"    public void parseDeadlineSuccessTest() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"        String testInput \u003d \"deadline eat dinner /by 2024-12-01\";","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"        Object[] actualOutput \u003d Parser.parseDeadline(testInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"        Object[] expectedOutput \u003d {\"eat dinner\", LocalDate.parse(\"2024-12-01\",","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")).atStartOfDay()};","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"        assertEquals(expectedOutput[0], actualOutput[0]);","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"        assertEquals(expectedOutput[1], actualOutput[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"    public void parseDeadlineWrongDateFormatTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"            String testInput1 \u003d \"deadline eat dinner /by 24-09-01\";","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"            Object[] actualOutput1 \u003d Parser.parseDeadline(testInput1);","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"            String testInput2 \u003d \"deadline eat dinner /by 2024-14-01\";","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"            Object[] actualOutput2 \u003d Parser.parseDeadline(testInput2);","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"            Object[] expectedWrongOutput \u003d {\"eat dinner\", LocalDate.parse(\"2024-14-01\",","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")).atStartOfDay()};","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"            assertEquals(expectedWrongOutput[0], actualOutput1[0]);","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"            assertEquals(expectedWrongOutput[1], actualOutput1[1]);","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"            assertEquals(expectedWrongOutput[0], actualOutput2[0]);","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"            assertEquals(expectedWrongOutput[1], actualOutput2[1]);","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"            fail(); //This block should not be run.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"            assertEquals(\"Date is of the wrong format!\", e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Anant1902"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Anant1902"},"content":"    public void parseDeadlineWrongSpellingFormatTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Anant1902"},"content":"            String testInput \u003d \"dedline eat dinner /by 2024-12-01\";","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Anant1902"},"content":"            Parser.parseDeadline(testInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Anant1902"},"content":"            fail(); //This block should not be run.","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Anant1902"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Anant1902"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Anant1902"},"content":"            assertEquals(\"Looks like you spelt deadline wrong. Please try again!\", e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"Anant1902"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"Anant1902"},"content":"    public void parseDeadlineNoByTest() {","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"Anant1902"},"content":"            String testInput \u003d \"deadline eat dinner 2024-12-01\";","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"Anant1902"},"content":"            Parser.parseDeadline(testInput);","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"Anant1902"},"content":"            fail(); //This block should not be run.","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"Anant1902"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"Anant1902"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"Anant1902"},"content":"            assertEquals(\"Looks like you didn\u0027t input the \u0027by\u0027 sub-command. \"","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"Anant1902"},"content":"                    + \"This isn\u0027t allowed!\", e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Anant1902":70}},{"path":"src/test/java/drake/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"package drake.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"    public void getTaskSuccessTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"        TaskList input \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"        Task task1 \u003d new Todo(\"sleep\");","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"        input.addTask(task1);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"        input.addTask(new Todo(\"eat\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"        Task actualOutput \u003d input.getTask(0);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Anant1902"},"content":"        assertEquals(task1, actualOutput);","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Anant1902"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Anant1902"},"content":"    public void getTaskOutOfBoundsTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Anant1902"},"content":"        TaskList input \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"        Task task1 \u003d new Todo(\"sleep\");","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Anant1902"},"content":"        input.addTask(task1);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Anant1902"},"content":"        input.addTask(new Todo(\"eat\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Anant1902"},"content":"            Task actualOutput \u003d input.getTask(3);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Anant1902"},"content":"            assertEquals(task1, actualOutput);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Anant1902"},"content":"            fail();","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Anant1902"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Anant1902"},"content":"            assertEquals(\"Task index is out of bounds.\", e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Anant1902"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Anant1902"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"Anant1902"},"content":"            Task actualOutput \u003d input.getTask(-1);","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"Anant1902"},"content":"            assertEquals(task1, actualOutput);","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"Anant1902"},"content":"            fail();","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"Anant1902"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"Anant1902"},"content":"            assertEquals(\"Task index is out of bounds.\", e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"Anant1902"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"Anant1902"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Anant1902"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Anant1902":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Anant1902"},"content":"todo","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Anant1902"},"content":"invalidddd command","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Anant1902"},"content":"todo eat dinner","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Anant1902"},"content":"deadline finish 2103 assignment /by 2024-10-06","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Anant1902"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Anant1902"},"content":"event hackathon /from Wed 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Anant1902"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Anant1902"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Anant1902"},"content":"deadline finish 2103 assignment /by Wednesday","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"Anant1902"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Anant1902"},"content":"unmark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Anant1902"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Anant1902"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Anant1902"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Anant1902"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Anant1902":16}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Anant1902"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/drake/*.java","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Anant1902"},"content":"java -classpath ../bin drake.Drake \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"Anant1902":2}}]
