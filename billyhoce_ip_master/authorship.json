[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"    private String deadline;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"    private static final String TYPE_SYMBOL \u003d \"[D]\";","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"    public Deadline(String description, String deadline) throws MeanDukeException{","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"        super(description, TYPE_SYMBOL);","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"        if (deadline.isEmpty()){","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Usage: \\\"add deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"    public String toString(){","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"        return super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"billyhoce":18}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"    private String from;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"    private String to;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"    private static final String TYPE_SYMBOL \u003d \"[E]\";","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"    public Event(String description, String from, String to) throws MeanDukeException{","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"        super(description, TYPE_SYMBOL);","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"        if(from.isEmpty() || to.isEmpty()){","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Usage: \\\"add event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"    public String toString(){","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"        return super.toString() + \" (\" + this.from + \" - \" + this.to + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"billyhoce":20}},{"path":"src/main/java/MeanDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"public class MeanDuke{","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"    //Text art to be used","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"                  \" __       __  ________   ______   __    __          _______   __    __  __    __  ________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"                + \"/  \\\\     /  |/        | /      \\\\ /  \\\\  /  |        /       \\\\ /  |  /  |/  |  /  |/        |\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"                + \"$$  \\\\   /$$ |$$$$$$$$/ /$$$$$$  |$$  \\\\ $$ |        $$$$$$$  |$$ |  $$ |$$ | /$$/ $$$$$$$$/\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"                + \"$$$  \\\\ /$$$ |$$ |__    $$ |__$$ |$$$  \\\\$$ | ______ $$ |  $$ |$$ |  $$ |$$ |/$$/  $$ |__\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"                + \"$$$$  /$$$$ |$$    |   $$    $$ |$$$$  $$ |/      |$$ |  $$ |$$ |  $$ |$$  $$\u003c   $$    |\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"                + \"$$ $$ $$/$$ |$$$$$/    $$$$$$$$ |$$ $$ $$ |$$$$$$/ $$ |  $$ |$$ |  $$ |$$$$$  \\\\  $$$$$/\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"                + \"$$ |$$$/ $$ |$$ |_____ $$ |  $$ |$$ |$$$$ |        $$ |__$$ |$$ \\\\__$$ |$$ |$$  \\\\ $$ |_____\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"                + \"$$ | $/  $$ |$$       |$$ |  $$ |$$ | $$$ |        $$    $$/ $$    $$/ $$ | $$  |$$       |\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"                + \"$$/      $$/ $$$$$$$$/ $$/   $$/ $$/   $$/         $$$$$$$/   $$$$$$/  $$/   $$/ $$$$$$$$/\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"    private static final String SPACER \u003d \"___________________________________________________________________________\";","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"    private static final String INTRO \u003d LOGO + SPACER + \"\\n\" + \"What do you want this time?\\n\" + SPACER;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"    private static final String OUTRO \u003d SPACER + \"\\n\" + \"Finally you\u0027re finished, thought you would never stop yapping.\\n\" + SPACER;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"    ","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"    ","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"    //Creates an empty TaskList","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"    static TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"        //Prints intro","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"        System.out.println(INTRO);","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"        //Reads each line of user input and perform respective actions","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"        Scanner inputScanner\u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"        String userInput \u003d inputScanner.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"        String output;","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"        ","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"        while (!userInput.equals(\"end\")) {  //Session terminates when user inputs \"end\"","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"            System.out.println(SPACER);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"            String[] command \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"                switch(command[0]){","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"                    case \"add\":","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"                        output \u003d MeanDuke.add(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"                    case \"list\":","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"                        output \u003d tasklist.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"                    case \"mark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"                        output \u003d MeanDuke.mark(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"                    case \"unmark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"                        output \u003d MeanDuke.unmark(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"                    case \"delete\":","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"                        output \u003d MeanDuke.delete(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"                    default:","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"                        output \u003d \"What are you saying? Read the damn user manual, it was written for a reason\";","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"            } catch (MeanDukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"                output \u003d e.getMessage();","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"            System.out.println(output);","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"            System.out.println(SPACER);","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"            userInput \u003d inputScanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"        //Outro message and end of program","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"        System.out.println(OUTRO);","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"    private static String add(String input) throws MeanDukeException{","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"        //Check what type of task is being added","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"        String[] split \u003d input.split(\" \", 3);","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"            switch (split[1]) {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"                    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"                        tasklist.add(new ToDo(split[2].strip()));","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"                        return \"Added ToDo to list: \" + split[2].strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"                    } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"billyhoce"},"content":"                        throw new MeanDukeException(\"Usage: \\\"add todo \u003cdescription\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"                    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"                        String[] desc_by \u003d split[2].split(\"/by \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"                        String desc \u003d desc_by[0].strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"                        String by \u003d desc_by[1].strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"                        tasklist.add(new Deadline(desc, by));","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"                        return \"Added Deadline to list: \" + desc + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"                        throw new MeanDukeException(\"Usage: \\\"add deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"billyhoce"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"billyhoce"},"content":"                case \"event\": //add event john /from /to","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"billyhoce"},"content":"                    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"billyhoce"},"content":"                        String[] desc_fromTo \u003d split[2].split(\"/from \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"billyhoce"},"content":"                        String[] from_to \u003d desc_fromTo[1].split(\"/to\", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"billyhoce"},"content":"                        String desc \u003d desc_fromTo[0].strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"billyhoce"},"content":"                        String from \u003d from_to[0].strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"billyhoce"},"content":"                        String to \u003d from_to[1].strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"billyhoce"},"content":"                        tasklist.add(new Event(desc, from, to));","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"billyhoce"},"content":"                        return \"Added Event to list: \" + desc + \" (\" + from + \" - \" + to + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"billyhoce"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"billyhoce"},"content":"                        throw new MeanDukeException(\"Usage: \\\"add event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"billyhoce"},"content":"                    }","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"billyhoce"},"content":"                default:","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"billyhoce"},"content":"                    throw new MeanDukeException(\"Usage: \\\"add \u003ctype\u003e \u003cdescription\u003e ...\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"billyhoce"},"content":"        } catch(ArrayIndexOutOfBoundsException e){ //Catch any issues with formatting which results in split not working","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Usage: \\\"add \u003ctype\u003e \u003cdescription\u003e ...\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"billyhoce"},"content":"    private static String mark(String input) throws MeanDukeException{","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"billyhoce"},"content":"        String indexString \u003d input.substring(4).strip(); //Remove \"mark\"","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"billyhoce"},"content":"            int index \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"billyhoce"},"content":"            if (tasklist.markDone(index)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"billyhoce"},"content":"                //Task successfully changed from not done to done","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"billyhoce"},"content":"                return \"Marked task: \" + indexString + \" as completed.\\nCould you have taken any longer?\";","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"billyhoce"},"content":"            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"billyhoce"},"content":"                //Task was already completed","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"billyhoce"},"content":"                return \"You have already marked task \" + indexString + \" as completed you goldfish...\";","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"billyhoce"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Usage: \\\"mark \u003ctask_number\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"billyhoce"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Dude... you don\u0027t even have a task \" + indexString);","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"billyhoce"},"content":"    private static String unmark(String input) throws MeanDukeException{","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"billyhoce"},"content":"        String indexString \u003d input.substring(6).strip(); //Remove \"unmark\"","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"billyhoce"},"content":"            int index \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"billyhoce"},"content":"            if (tasklist.unmarkDone(index)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"billyhoce"},"content":"                //Task successfully changed from done to not done","lastModifiedDate":"2024-01-27"},{"lineNumber":140,"author":{"gitId":"billyhoce"},"content":"                return \"Marked task: \" + indexString + \" as not completed.\\nWhy did you mark this in the first place?\";","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"billyhoce"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":142,"author":{"gitId":"billyhoce"},"content":"                //Task was already not complete","lastModifiedDate":"2024-01-27"},{"lineNumber":143,"author":{"gitId":"billyhoce"},"content":"                return \"Task \" + indexString + \" is already not completed. Maybe you should start working on it.\";","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":145,"author":{"gitId":"billyhoce"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":146,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Usage: \\\"unmark \u003ctask_number\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"billyhoce"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Dude... you don\u0027t even have a task \" + indexString);","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":150,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":151,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"billyhoce"},"content":"    private static String delete(String input) throws MeanDukeException{","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"billyhoce"},"content":"        String indexString \u003d input.substring(6).strip(); //Remove \"delete\"","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"billyhoce"},"content":"            int index \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"billyhoce"},"content":"            return \"deleted task:\\n  \" + tasklist.delete(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"billyhoce"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Usage: \\\"delete \u003ctask_number\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"billyhoce"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Dude... you don\u0027t even have a task \" + indexString);","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"billyhoce":163}},{"path":"src/main/java/MeanDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"public class MeanDukeException extends Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"    public MeanDukeException(String message){","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"        super(message);","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"billyhoce":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":" * This class represents a task that tracks if it is completed","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":" *","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":" * @author Billy Ho Cheng En","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"abstract class Task{","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"    private String description;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"    private boolean is_done;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"    private String done_symbol;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"    String task_symbol;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"     * Constructor for a task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"     * @param description textual description of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"    public Task(String description, String task_symbol){","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"        this.is_done \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"        this.done_symbol \u003d \"[ ]\";","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"        this.task_symbol \u003d task_symbol;","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"     * Marks this task as done.","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"     * @return true if task was change from not done to done. Else false.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"    public boolean markDone(){","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"        if(this.is_done){","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"            return false;","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"            this.is_done \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"            this.done_symbol \u003d \"[X]\";","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"            return true;","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"     * Marks this task as not done.","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"     * @return true if task was change from done to not done. Else false.","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"    public boolean unmarkDone(){","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"        if(this.is_done){","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"            this.is_done \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"            this.done_symbol \u003d \"[ ]\";","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"            return true;","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"            return false;","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"    public String toString(){","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"        return this.task_symbol + this.done_symbol + \" \" + this.description;","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"billyhoce":58}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":" * This class represents a task list of up to 100 Tasks","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":" *","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":" * @author Billy Ho Cheng En","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"class TaskList{","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"    private ArrayList\u003cTask\u003e arr;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"     * Constructor for a task list.","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"    public TaskList(){","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"        arr \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"     * Adds a task to the back of the task list.","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"    public void add(Task task){","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"        this.arr.add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"     * Marks the task at the given index as done","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"     * @param index the index of the task to be marked done","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"     * @return true if task was already done, else false","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"    public boolean markDone(int index){","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"        return arr.get(index).markDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"     * Marks the task at the given index as not done","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"     * @param index the index of the task to be marked not done","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"     * @return true if task was already not done, else false","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"    public boolean unmarkDone(int index){","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"        return arr.get(index).unmarkDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"    public String delete(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"        String ret \u003d this.arr.get(index).toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"        this.arr.remove(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"        return ret;","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"    public String toString(){","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"        for(int i \u003d 0; i \u003c arr.size(); i++) {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"            sb.append((i + 1) + \". \" + arr.get(i) + \"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"        return sb.toString();","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"billyhoce":64}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"    private static final String TYPE_SYMBOL \u003d \"[T]\";","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"    public ToDo(String description){","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"        super(description, TYPE_SYMBOL);","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"billyhoce":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"hi","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"add","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"add task","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"add todo","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"add todo todo1","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"add deadline","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"add deadline deadline1","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"add deadline deadline1 /by","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"add deadline deadline1 /by 1st jan","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"add event","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"add event event1","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"add event event1 /from /to","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"add event event1 /from 1st jan /to","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"add event event1 /from 1st jan /to 2nd jan","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"mark 0","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"mark 1","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"mark 1","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"unmark 0","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"unmark 1","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"unmark 1","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"delete","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"delete","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"delete 0","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"delete 1","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"end","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"billyhoce":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"java -classpath ..\\bin MeanDuke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"billyhoce":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"java -classpath ../bin MeanDuke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"billyhoce":1}}]
