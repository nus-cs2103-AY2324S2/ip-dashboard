[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"    mainClass \u003d \"duke.Duke\"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"radeon2525":1,"-":41}},{"path":"data/logfile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"D |  1  | return book | 2019-12-02","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"E |  0  | Team Meeting  | 2024-05-20 to 2024-05-22","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"T |  1  | run","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"radeon2525":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"     * Constructs a new Deadline instance.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"     * @param endTime     The end time of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"    public Deadline(String description, LocalDateTime endTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"     * Returns the string representation of the deadline task,","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"     * including the description and end time which is formatted as \"MMM dd yyyy\".","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"        return \"D |\" + super.toString().substring(1) + \"| \" + endTime.format(formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"     * Parses a string representing a date and time into a LocalDateTime object.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"     * @param dateTimeStr The string to be parsed, expected to be in the format \"d/M/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"     * @return A LocalDateTime object representing the date and time, or else it will null if the string is not parsable.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"     * @throws DateTimeParseException if the text cannot be parsed.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"    public LocalDateTime parseDateTime(String dateTimeStr) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"            return LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Invalid date format. Please use d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"            return null;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"     * Gets the end time of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"     * @return The end time of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"        return endTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"radeon2525":59}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import java.util.List;","lastModifiedDate":"2024-01-19"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-19"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"    //private static FileIO fileIO \u003d new FileIO();","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"    public Storage storage \u003d new Storage(\"./data/logfile.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"    private static final File FILE_PATH \u003d new File(\"./data/logfile.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"    private List\u003cTask\u003e l \u003d storage.readFromFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"    public TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"    public static Parser parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"     * Constructs the Duke application with necessary initializations.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If an input or output exception occurred.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"    public Duke() throws IOException {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"        this.taskList \u003d new TaskList(storage, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"        this.parser \u003d new Parser(ui, storage, taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"        l \u003d storage.readFromFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"     * The main method is the entry point to the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"     * It starts the application and runs the main loop.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"     * @param args Unused.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If an input or output exception occurred.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"        Duke lucifer \u003d new Duke();","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"        String user_word;","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"        while (true) {","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"            user_word \u003d ui.readCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"                parser.processCommand(user_word);","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"radeon2525":52,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"     * The detail message is for later by the getMessage() method.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"     * @param exception_text The detail message which provides more information about the exception reason.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"    public DukeException(String exception_text) {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"        super(exception_text);","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"radeon2525":13}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"    protected LocalDate startTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"    protected LocalDate endTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"     * Constructs an Event object.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"     * @param startTime   The start date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"     * @param endTime     The end date of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"    public Event(String description, LocalDate startTime, LocalDate endTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"     * Returns a string representation of the event task, including its status,","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"     * description, start time, and end time","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"        String formattedStartTime \u003d startTime.format(formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"        String formattedEndTime \u003d endTime.format(formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"        return \"E |\" + super.toString().substring(1) + \"| \" + formattedStartTime + \" to \" + formattedEndTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"     * Gets the start time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"     * @return The start time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"    public LocalDate getStartTime() {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"        return startTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"     * Gets the end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"     * @return The end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"    public LocalDate getEndTime() {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"        return endTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"radeon2525":54}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"     * Constructs a Parser with commands to UI, Storage, and TaskList to handle user commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"     * @param ui       The user interface component of Duke.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"     * @param storage  The storage component responsible for file operations.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"     * @param taskList The task list component managing tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"    public Parser(Ui ui, Storage storage, TaskList taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"    public Parser() {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"     * Processes the user command, and implements tasks based on the command type.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"     * @param user_word The command line input by the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException   If there is an error during input/output operations.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"     * @throws DukeException If the command is invalid or incomplete.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"    public void processCommand(String user_word) throws IOException, DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"        if (user_word.equals(\"bye\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"            ui.showGoodbye();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"        } if (user_word.equals(\"list\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"            taskList.listTasks();","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"        } else if (user_word.contains(\"unmark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"            int element_index \u003d Integer.parseInt(user_word.split(\" \")[1]) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"            taskList.unmarkTask(element_index);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"        } else if (user_word.contains(\"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"            int element_index \u003d Integer.parseInt(user_word.split(\" \")[1]) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"            taskList.markTask(element_index);","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"        } else if (user_word.equals(\"deadline\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"            ui.divider();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"            throw new DukeException(\"ERROR!! Please give the description of deadline.\\n______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"        } else if (user_word.contains(\"deadline\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"            String[] array_split \u003d user_word.split(\"/by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"            String description \u003d array_split[0].substring(\"deadline\".length()).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"            LocalDateTime dateTime \u003d parseDateTime(array_split[1].trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"            Deadline deadline \u003d new Deadline(description, dateTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"            taskList.addDeadlineTask(deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"        } else if (user_word.equals(\"todo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"            ui.divider();","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"            throw new DukeException(\"ERROR!! Please give the description of todo.\\n______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"        } else if (user_word.contains(\"todo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"            ToDo todo \u003d new ToDo(user_word.substring(5));","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"            taskList.addTodoTask(todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"        } else if (user_word.equals(\"event\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"            ui.divider();","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"            String[] parts \u003d user_word.split(\" /from | /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"radeon2525"},"content":"            if (parts.length \u003c 3) {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"radeon2525"},"content":"                throw new DukeException(\"ERROR!! Please provide both start and end time for the event.\\n______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"radeon2525"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"radeon2525"},"content":"            String description \u003d parts[0].substring(\"event\".length()).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"radeon2525"},"content":"            LocalDate startTime \u003d parseDate(parts[1].trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"radeon2525"},"content":"            LocalDate endTime \u003d parseDate(parts[2].trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"radeon2525"},"content":"            if (startTime !\u003d null \u0026\u0026 endTime !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"radeon2525"},"content":"                Event temp_event \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"radeon2525"},"content":"                taskList.addEventTask(temp_event);","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"radeon2525"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"radeon2525"},"content":"                System.out.println(\"Invalid format for event times.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"radeon2525"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"radeon2525"},"content":"            throw new DukeException(\"ERROR!! Please give the description of event.\\n______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"radeon2525"},"content":"        } else if (user_word.contains(\"event\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"radeon2525"},"content":"            String[] event \u003d user_word.split(\"/from | /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"radeon2525"},"content":"            Event temp_event \u003d new Event(event[0].substring(6),","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"radeon2525"},"content":"                    LocalDate.parse(event[1]), LocalDate.parse(event[2]));","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"radeon2525"},"content":"            taskList.addEventTask(temp_event);","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"radeon2525"},"content":"        } else if (user_word.contains(\"delete\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"radeon2525"},"content":"            int deleted_index \u003d Integer.parseInt(user_word.split(\" \")[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"radeon2525"},"content":"            taskList.deleteTask(deleted_index);","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"radeon2525"},"content":"        } else if (user_word.startsWith(\"find\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"radeon2525"},"content":"            String keyword \u003d user_word.substring(5);","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"radeon2525"},"content":"            taskList.findTask(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"radeon2525"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"radeon2525"},"content":"            ui.divider();","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"radeon2525"},"content":"            throw new DukeException(\"ERROR!! I can\u0027t understand what you mean by that\\n______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"radeon2525"},"content":"    private static LocalDate parseDate(String dateStr) {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"radeon2525"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"radeon2525"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"radeon2525"},"content":"            return LocalDate.parse(dateStr, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"radeon2525"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Invalid date format. Please use yyyy-MM-dd, e.g., 2023-03-15\");","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"radeon2525"},"content":"            return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"radeon2525"},"content":"    private static LocalDateTime parseDateTime(String dateTimeStr) {","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"radeon2525"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"radeon2525"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"radeon2525"},"content":"            return LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"radeon2525"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Invalid date format. Please use d/M/yyyy HHmm, e.g., 2/12/2019 1800\");","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"radeon2525"},"content":"            return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"radeon2525"},"content":"    private void handleDeadline(String userWord) throws DukeException, IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"radeon2525"},"content":"        if (!userWord.contains(\"/by\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"radeon2525"},"content":"            throw new DukeException(\"ERROR!! Please provide a deadline using \u0027/by\u0027.\\n______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"radeon2525"},"content":"        String[] parts \u003d userWord.split(\"/by\", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"radeon2525"},"content":"        String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"radeon2525"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(parts[1].trim(), DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"radeon2525"},"content":"        Deadline deadline \u003d new Deadline(description, dateTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"radeon2525"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"radeon2525"},"content":"    private void handleTodo(String userWord) throws DukeException, IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"radeon2525"},"content":"        if (userWord.trim().equals(\"todo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"radeon2525"},"content":"            throw new DukeException(\"ERROR!! Please give the description of todo.\\n______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"radeon2525"},"content":"        String description \u003d userWord.substring(5).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"radeon2525"},"content":"        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"radeon2525"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"radeon2525"},"content":"    private void handleEvent(String userWord) throws DukeException, IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"radeon2525"},"content":"        if (!userWord.contains(\"/from\") \u0026\u0026 !userWord.contains(\"/to\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"radeon2525"},"content":"            throw new DukeException(\"ERROR!! Please provide both start and end dates for the event using \u0027/from\u0027 and \u0027/to\u0027.\\n______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"radeon2525"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"radeon2525"},"content":"            String description \u003d userWord.substring(5, userWord.indexOf(\"/from\")).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"radeon2525"},"content":"            String fromDateStr \u003d userWord.substring(userWord.indexOf(\"/from\") + 6, userWord.indexOf(\"/to\")).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"radeon2525"},"content":"            String toDateStr \u003d userWord.substring(userWord.indexOf(\"/to\") + 4).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"radeon2525"},"content":"            LocalDate startTime \u003d LocalDate.parse(fromDateStr, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"radeon2525"},"content":"            LocalDate endTime \u003d LocalDate.parse(toDateStr, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"radeon2525"},"content":"            Event event \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"radeon2525"},"content":"            taskList.addTask(event);","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"radeon2525"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"radeon2525"},"content":"            throw new DukeException(\"Invalid date format. Please use YYYY-MM-DD, e.g., 2023-09-15\");","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"radeon2525":158}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import java.io.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"    private static final File FILE \u003d new File(\"./data/logfile.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"     * Constructs a Storage object using a specified file path.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"     * Ensures the necessary file and directories exist.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"     * @param filePath The path to the file used for storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If an I/O error occurs while creating file or directories.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"        createFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"     * Ensures the storage file and its parent directories exist.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"     * Creates them if they do not exist.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If an I/O error occurs while creating file or directories.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"    public static void createFile() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"        if (!FILE.getParentFile().exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"            FILE.getParentFile().mkdirs();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"        if (!FILE.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"            FILE.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"     * Reads tasks from the storage file and constructs a list of Task objects.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"     * @return A list of Task objects read from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If an I/O error occurs while reading from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"    public List\u003cTask\u003e readFromFile() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"        List\u003cTask\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"            if (!FILE.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"                createFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"        FileReader reader \u003d new FileReader(FILE);","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"        Scanner sc \u003d new Scanner(reader);","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"            String line \u003d sc.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"            String[] array_split \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"            boolean isDone \u003d array_split[1].trim().equals(\"1\");","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"            if (array_split[0].equals(\"T\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"                ToDo todo \u003d new ToDo(array_split[2]);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"                if (isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"radeon2525"},"content":"                    todo.markDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"radeon2525"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"radeon2525"},"content":"                l.add(todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"radeon2525"},"content":"            } else if (array_split[0].equals(\"D\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"radeon2525"},"content":"                String description \u003d array_split[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"radeon2525"},"content":"                LocalDateTime endTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"radeon2525"},"content":"                try {","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"radeon2525"},"content":"                    endTime \u003d LocalDateTime.parse(array_split[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"radeon2525"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"radeon2525"},"content":"                    LocalDate date \u003d LocalDate.parse(array_split[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"radeon2525"},"content":"                    endTime \u003d date.atStartOfDay();","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"radeon2525"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"radeon2525"},"content":"                Deadline deadline \u003d new Deadline(description, endTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"radeon2525"},"content":"                if (isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"radeon2525"},"content":"                    deadline.markDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"radeon2525"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"radeon2525"},"content":"                l.add(deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"radeon2525"},"content":"            } else if (array_split[0].equals(\"E\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"radeon2525"},"content":"                String description \u003d array_split[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"radeon2525"},"content":"                String[] dates \u003d array_split[3].split(\" to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"radeon2525"},"content":"                LocalDate startTime \u003d LocalDate.parse(dates[0], formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"radeon2525"},"content":"                LocalDate endTime \u003d LocalDate.parse(dates[1], formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"radeon2525"},"content":"                Event event \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"radeon2525"},"content":"                if (isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"radeon2525"},"content":"                    event.markDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"radeon2525"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"radeon2525"},"content":"                l.add(event);","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"radeon2525"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"radeon2525"},"content":"        return l;","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"radeon2525"},"content":"     * Formats a Task object into a string representation for file storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"radeon2525"},"content":"     * @param task The Task object to format.","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"radeon2525"},"content":"     * @return A string representation of the Task object.","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"radeon2525"},"content":"    protected String formatTaskForFile(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"radeon2525"},"content":"        String status \u003d task.getStatusIcon();","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"radeon2525"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"radeon2525"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"radeon2525"},"content":"            return \"T | \" + status + \" | \" + task.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"radeon2525"},"content":"        else if (task instanceof Deadline) {","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"radeon2525"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"radeon2525"},"content":"            String formattedEndTime \u003d deadline.endTime.format(formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"radeon2525"},"content":"            return \"D | \" + status + \" | \" + deadline.description + \" | \" + formattedEndTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"radeon2525"},"content":"        else if (task instanceof Event) {","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"radeon2525"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"radeon2525"},"content":"            String formattedStartTime \u003d event.startTime.format(formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"radeon2525"},"content":"            String formattedEndTime \u003d event.endTime.format(formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"radeon2525"},"content":"            return \"E | \" + status + \" | \" + event.description + \" | \" + formattedStartTime + \" to \" + formattedEndTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"radeon2525"},"content":"        return \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"radeon2525"},"content":"     * Saves a list of Task objects to the storage file.","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"radeon2525"},"content":"     * @param l The list of Task objects to write.","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"radeon2525"},"content":"    public void saveToFile(List\u003cTask\u003e l) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"radeon2525"},"content":"        createFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"radeon2525"},"content":"        try (FileWriter fw \u003d new FileWriter(FILE, false)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"radeon2525"},"content":"            for (Task task : l) {","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"radeon2525"},"content":"                String taskString \u003d formatTaskForFile(task) + System.lineSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"radeon2525"},"content":"                fw.write(taskString);","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"radeon2525"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"radeon2525"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"radeon2525"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"radeon2525"},"content":"            throw e;","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"radeon2525":145}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"     * Constructs a Task with the specified description while assuming it is not done in the start.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"     * @param description A string representing the task\u0027s description.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"     * Returns a status icon based on whether the task is done.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"     * @return A string representing the task\u0027s completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"        return (isDone ? \" 1 \" : \" 0 \");","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"    public void mark_not_done() {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"        return  \"|\" + getStatusIcon() + \"| \" + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"     * @return The task\u0027s description.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"        return this.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"     * Returns whether the task is done.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"     * @return true if the task is done, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"radeon2525":68}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"    //private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"    private List\u003cTask\u003e l;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"     * Constructs a TaskList with the specified storage and UI.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"     * @param storage The storage to be used for loading and saving tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"     * @param ui      The UI to be used for displaying information to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"    public TaskList(Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"        //this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"        l \u003d storage.readFromFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"    private static LocalDate parseDate(String dateStr) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"            return LocalDate.parse(dateStr, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Invalid date format. Please use yyyy-MM-dd, e.g., 2023-03-15\");","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"            return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"    public void listTasks() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"        l \u003d storage.readFromFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"        ui.divider();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"        for (int i \u003d 0; i \u003c l.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"            ui.showTask((i + 1) + \". \" + l.get(i));","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"        ui.divider();","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"     * @param index The index of the task to mark as done, starting from 0.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If there is an error saving the updated task list to storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"    public void markTask(int index) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c l.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"            Task task \u003d l.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"            task.markDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"radeon2525"},"content":"            ui.showTask(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"radeon2525"},"content":"            storage.saveToFile(l);","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"radeon2525"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Invalid task index\");","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"radeon2525"},"content":"        ui.divider();","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"radeon2525"},"content":"     * Marks a task as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"radeon2525"},"content":"     * @param index The index of the task to mark as not done, starting from 0.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If there is an error saving the updated task list to storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"radeon2525"},"content":"    public void unmarkTask(int index) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"radeon2525"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c l.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"radeon2525"},"content":"            Task task \u003d l.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"radeon2525"},"content":"            task.mark_not_done();","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"radeon2525"},"content":"            ui.showTask(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"radeon2525"},"content":"            storage.saveToFile(l);","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"radeon2525"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Invalid task index\");","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"radeon2525"},"content":"        ui.divider();","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"radeon2525"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"radeon2525"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If there is an error saving the updated task list to storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"radeon2525"},"content":"    public void addTask(Task task) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"radeon2525"},"content":"        l.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"radeon2525"},"content":"        ui.showTask(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"radeon2525"},"content":"        storage.saveToFile(l);","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"Now you have \" + l.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"radeon2525"},"content":"        ui.divider();","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"radeon2525"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"radeon2525"},"content":"     * @param deleted_index The index of the task to delete, starting from 0.","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If there is an error saving the updated task list to storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"radeon2525"},"content":"    public void deleteTask(int deleted_index) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"radeon2525"},"content":"        int actual_index \u003d deleted_index - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"radeon2525"},"content":"        Task removed_task \u003d l.remove(actual_index);","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"radeon2525"},"content":"        //System.out.println(\" \" + removed_task);","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"radeon2525"},"content":"        ui.showTask(removed_task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"radeon2525"},"content":"        if (l.size() \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Now you have \" + l.size() + \" task in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"radeon2525"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Now you have \" + l.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"radeon2525"},"content":"        storage.saveToFile(l);","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"radeon2525"},"content":"     * Adds a new Event task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"radeon2525"},"content":"     * @param task The Event task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If there is an error saving the updated task list to storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"radeon2525"},"content":"    public void addEventTask(Task task) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"radeon2525"},"content":"        //System.out.println(\" \" + task);","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"radeon2525"},"content":"        ui.showTask(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"radeon2525"},"content":"        l.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"radeon2525"},"content":"        storage.saveToFile(l);","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"radeon2525"},"content":"        if (l.size() \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Now you have \" + l.size() + \" task in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"radeon2525"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Now you have \" + l.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"radeon2525"},"content":"     * Adds a new ToDo task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"radeon2525"},"content":"     * @param task The ToDo task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If there is an error saving the updated task list to storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"radeon2525"},"content":"    public void addTodoTask(Task task) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"radeon2525"},"content":"        //System.out.println(\" \" + task);","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"radeon2525"},"content":"        ui.showTask(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"radeon2525"},"content":"        l.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"radeon2525"},"content":"        storage.saveToFile(l);","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"radeon2525"},"content":"        if (l.size() \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Now you have \" + l.size() + \" task in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"radeon2525"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Now you have \" + l.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"radeon2525"},"content":"     * Adds a new Deadline task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"radeon2525"},"content":"     * @param task The Deadline task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"radeon2525"},"content":"     * @throws IOException If there is an error saving the updated task list to storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"radeon2525"},"content":"    public void addDeadlineTask(Task task) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"radeon2525"},"content":"        ui.showTask(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"radeon2525"},"content":"        l.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":178,"author":{"gitId":"radeon2525"},"content":"        storage.saveToFile(l);","lastModifiedDate":"2024-02-01"},{"lineNumber":179,"author":{"gitId":"radeon2525"},"content":"        if (l.size() \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Now you have \" + l.size() + \" task in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"radeon2525"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Now you have \" + l.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":187,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"radeon2525"},"content":"     * Gets the size of the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"radeon2525"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":192,"author":{"gitId":"radeon2525"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-02"},{"lineNumber":193,"author":{"gitId":"radeon2525"},"content":"        return l.size();","lastModifiedDate":"2024-02-02"},{"lineNumber":194,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":196,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":197,"author":{"gitId":"radeon2525"},"content":"     * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":198,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":199,"author":{"gitId":"radeon2525"},"content":"     * @param i The index of the task to retrieve.","lastModifiedDate":"2024-02-03"},{"lineNumber":200,"author":{"gitId":"radeon2525"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":201,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":202,"author":{"gitId":"radeon2525"},"content":"    public Object getTask(int i) {","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"radeon2525"},"content":"        return l.get(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":204,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":205,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":206,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":207,"author":{"gitId":"radeon2525"},"content":"     * Finds tasks that contain the given keyword in their description.","lastModifiedDate":"2024-02-03"},{"lineNumber":208,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":209,"author":{"gitId":"radeon2525"},"content":"     * @param user_keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2024-02-03"},{"lineNumber":210,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":211,"author":{"gitId":"radeon2525"},"content":"    public void findTask(String user_keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":212,"author":{"gitId":"radeon2525"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":213,"author":{"gitId":"radeon2525"},"content":"        for (int i \u003d 0; i \u003c l.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":214,"author":{"gitId":"radeon2525"},"content":"            Task task \u003d l.get(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":215,"author":{"gitId":"radeon2525"},"content":"            if (task.description.contains(user_keyword)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":216,"author":{"gitId":"radeon2525"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":217,"author":{"gitId":"radeon2525"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":218,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":219,"author":{"gitId":"radeon2525"},"content":"        displayMatchingTasks(matchingTasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":220,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":221,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":222,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":223,"author":{"gitId":"radeon2525"},"content":"     * Displays the tasks that match the search criteria.","lastModifiedDate":"2024-02-03"},{"lineNumber":224,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":225,"author":{"gitId":"radeon2525"},"content":"     * @param task_match The list of tasks that match the search criteria.","lastModifiedDate":"2024-02-03"},{"lineNumber":226,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":227,"author":{"gitId":"radeon2525"},"content":"    private void displayMatchingTasks(List\u003cTask\u003e task_match) {","lastModifiedDate":"2024-02-03"},{"lineNumber":228,"author":{"gitId":"radeon2525"},"content":"        if (task_match.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":229,"author":{"gitId":"radeon2525"},"content":"            ui.showTask(\"No matching tasks found.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":230,"author":{"gitId":"radeon2525"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":231,"author":{"gitId":"radeon2525"},"content":"            ui.divider();","lastModifiedDate":"2024-02-03"},{"lineNumber":232,"author":{"gitId":"radeon2525"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":233,"author":{"gitId":"radeon2525"},"content":"            for (int i \u003d 0; i \u003c task_match.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":234,"author":{"gitId":"radeon2525"},"content":"                ui.showTask((i + 1) + \". \" + task_match.get(i));","lastModifiedDate":"2024-02-03"},{"lineNumber":235,"author":{"gitId":"radeon2525"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":236,"author":{"gitId":"radeon2525"},"content":"            ui.divider();","lastModifiedDate":"2024-02-03"},{"lineNumber":237,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":238,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":239,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"radeon2525":239}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"     * Constructs a ToDo task with a description.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"     * @param description A string describing the to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"     * Returns the string representation of the ToDo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"        return \"T |\" + super.toString().substring(1);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"radeon2525":22}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"     * Constructs a new Ui instance, initializing the scanner to read from standard input.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"    public Ui() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"Hello! I\u0027m Lucifer\\nWhat can I do for you?\");","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"     * Prints a divider line to the console to separate different parts of the output visually.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"    public void divider() {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"     * @return A string containing the user\u0027s command.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"     * Displays a task to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"     * @param task The string representation of the task to be displayed.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"    public void showTask(String task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"        System.out.println(\"______________________________________________________\");","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"radeon2525":57}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"class ParserTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"        storage \u003d new Storage(\"testData.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"        taskList \u003d new TaskList(storage, ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"    void testProcessAddTodoCommand() throws DukeException, IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"        Parser parser \u003d new Parser(ui, storage, taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"        int initialSize \u003d taskList.getSize();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"        String todoCommand \u003d \"todo Read a book\";","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"        parser.processCommand(todoCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"        assertEquals(initialSize + 1, taskList.getSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"    public void testSetDeadline() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"        int initialSize \u003d taskList.getSize();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"        String description \u003d \"Return book\";","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"        LocalDateTime endTime \u003d LocalDateTime.of(2019, 12, 2, 18, 0);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"        Task deadline \u003d new Deadline(description, endTime);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"        taskList.addDeadlineTask(deadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"        assertEquals(initialSize + 1, taskList.getSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"        Task addedTask \u003d (Task) taskList.getTask(initialSize);","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"        assertTrue(addedTask instanceof Deadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"        Deadline addedDeadline \u003d (Deadline) addedTask;","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"        assertEquals(description, addedDeadline.getDescription());","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"        assertEquals(endTime, addedDeadline.getEndTime());","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"    public void testSetEvent() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"        int initialSize \u003d taskList.getSize();","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"        String description \u003d \"Project meeting\";","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"        LocalDate startDate \u003d LocalDate.of(2019, 12, 15);","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"        LocalDate endDate \u003d LocalDate.of(2019, 12, 15);","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"        Task event \u003d new Event(description, startDate, endDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"        taskList.addEventTask(event);","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"        assertEquals(initialSize + 1, taskList.getSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"        Task addedTask \u003d (Task) taskList.getTask(initialSize);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"        assertTrue(addedTask instanceof Event);","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"radeon2525"},"content":"        Event addedEvent \u003d (Event) addedTask;","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"radeon2525"},"content":"        assertEquals(description, addedEvent.getDescription());","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"radeon2525"},"content":"        assertEquals(startDate, addedEvent.getStartTime());","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"radeon2525"},"content":"        assertEquals(endDate, addedEvent.getEndTime());","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"radeon2525":76}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"radeon2525"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"radeon2525"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"radeon2525"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"radeon2525"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"radeon2525"},"content":"    private final String testFilePath \u003d \"./data/testLogfile.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"radeon2525"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"radeon2525"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"radeon2525"},"content":"        File testFile \u003d new File(testFilePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"radeon2525"},"content":"        testFile.getParentFile().mkdirs();","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"radeon2525"},"content":"        if (testFile.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"radeon2525"},"content":"            testFile.delete();","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"radeon2525"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"radeon2525"},"content":"        testFile.createNewFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"radeon2525"},"content":"        storage \u003d new Storage(testFilePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"radeon2525"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"radeon2525"},"content":"        taskList \u003d new TaskList(storage, ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"radeon2525"},"content":"    void testAddTodoTaskIncreasesListSizeByOne() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"radeon2525"},"content":"        int initialSize \u003d taskList.getSize();","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"radeon2525"},"content":"        Task todoTask \u003d new ToDo(\"Test Todo Task\");","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"radeon2525"},"content":"        taskList.addTodoTask(todoTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"radeon2525"},"content":"        int newSize \u003d taskList.getSize();","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"radeon2525"},"content":"        assertEquals(initialSize + 1, newSize);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"radeon2525"},"content":"    void testMarkTaskAsDone() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"radeon2525"},"content":"        Task todoTask \u003d new ToDo(\"Sample Todo Task\");","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"radeon2525"},"content":"        taskList.addTodoTask(todoTask);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"radeon2525"},"content":"        int taskIndex \u003d taskList.getSize() - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"radeon2525"},"content":"        taskList.markTask(taskIndex);","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"radeon2525"},"content":"        Task markedTask \u003d (Task) taskList.getTask(taskIndex);","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"radeon2525"},"content":"        assertTrue(markedTask.isDone());","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"radeon2525"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"radeon2525"},"content":"    void testDeleteTask() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"radeon2525"},"content":"        Task task1 \u003d new ToDo(\"Sample ToDo 1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"radeon2525"},"content":"        Task task2 \u003d new ToDo(\"Sample ToDo 2\");","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"radeon2525"},"content":"        taskList.addTodoTask(task1);","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"radeon2525"},"content":"        taskList.addTodoTask(task2);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"radeon2525"},"content":"        int initialSize \u003d taskList.getSize();","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"radeon2525"},"content":"        taskList.deleteTask(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"radeon2525"},"content":"        int newSize \u003d taskList.getSize();","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"radeon2525"},"content":"        assertEquals(initialSize - 1, newSize);","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"radeon2525"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"radeon2525"},"content":"        assertFalse(taskList.getTask(0).equals(task1));","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"radeon2525"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"radeon2525"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"radeon2525":66}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"radeon2525"},"content":"todo read book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"radeon2525"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"radeon2525"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"radeon2525"},"content":"todo join sports club","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"radeon2525"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"radeon2525"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"radeon2525"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"radeon2525"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"radeon2525":8}}]
