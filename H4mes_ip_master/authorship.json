[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"    protected DateTimeFormatter dataFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"    protected DateTimeFormatter stringFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"        super (description);","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(stringFormat) + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    public String getData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"        return \"D | \" + super.getData() + \" | \" + by.format(dataFormat);","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"H4mes":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"import java.io.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    private static final int TASKS_MAX \u003d 100;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(TASKS_MAX);","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"     * Main loop for the chatbot.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"     * Waits for command line input and passes arguments to the handleInput method.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"     * @param args The command line input.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"        loadData();","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"        String logo \u003d \" _  _   __    ____  ____ \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"                \"( \\\\/ ) /__\\\\  (  _ \\\\(  _ \\\\\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"                \" \\\\  / /(__)\\\\  )   / )   /\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"                \" (__)(__)(__)(_)\\\\_)(_)\\\\_)\\n\";","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"        printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"        System.out.println(\"Ahoy! I be Yarr \\nWhat be yer command, me heartie?\");","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"        printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"        while (true) {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"H4mes"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"                handleInput(scanner);","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"                printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"                printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"            } catch (ExitProgramException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"                printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"                printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"                break;","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"H4mes"},"content":"     * Method to print section dividers to the console.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"H4mes"},"content":"    private static void printDivider(){","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"H4mes"},"content":"        int length \u003d 90;","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"H4mes"},"content":"        char divider \u003d 0x2500 ;","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"H4mes"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"H4mes"},"content":"            System.out.print(divider);","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"H4mes"},"content":"        System.out.println();","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"H4mes"},"content":"     * Solution below adapted from https://www.geeksforgeeks.org/ways-to-read-input-from-console-in-java/","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"H4mes"},"content":"     * Takes command line input and edits the task list or prints to console as required.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"H4mes"},"content":"     * @throws IllegalArgumentException if the command is not recognised.","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"H4mes"},"content":"    private static void handleInput(Scanner scanner) {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"H4mes"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"H4mes"},"content":"        String[] wordArray \u003d input.split(\" \", 0);","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"H4mes"},"content":"        // Handle inputs","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"H4mes"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"H4mes"},"content":"            throw new ExitProgramException(\"Fair winds to ye, me hearty! \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"H4mes"},"content":"                    \"May the tide carry ye safely until our paths cross again.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"H4mes"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"H4mes"},"content":"            printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"Behold, yer roster of endeavors!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"H4mes"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"H4mes"},"content":"                String tempNum \u003d Integer.toString(i + 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"H4mes"},"content":"                System.out.println(tempNum + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"H4mes"},"content":"            printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"H4mes"},"content":"        } else if (wordArray[0].equals(\"mark\") || wordArray[0].equals(\"unmark\") || wordArray[0].equals(\"delete\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"H4mes"},"content":"            if (wordArray.length !\u003d 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"H4mes"},"content":"                throw new IllegalArgumentException(\"Blunder! Declare a task by number, matey!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"H4mes"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"H4mes"},"content":"                try {","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"H4mes"},"content":"                    int tempIndex \u003d Integer.parseInt(wordArray[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"H4mes"},"content":"                    if (tempIndex \u003e taskCount || tempIndex \u003c 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"H4mes"},"content":"                        throw new IllegalArgumentException(\"Blunder! Ye only be havin\u0027 \" + taskCount","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"H4mes"},"content":"                                + \" tasks on the chart, matey!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"H4mes"},"content":"                    } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"H4mes"},"content":"                        printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"H4mes"},"content":"                        if (wordArray[0].equals(\"mark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"H4mes"},"content":"                            tasks.get(tempIndex - 1).markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"H4mes"},"content":"                            System.out.println(\"X marks the spot. I\u0027ve crossed this task of yer list, me heartie!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"H4mes"},"content":"                            System.out.println(tasks.get(tempIndex - 1).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"H4mes"},"content":"                        } else if (wordArray[0].equals(\"unmark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"H4mes"},"content":"                            tasks.get(tempIndex - 1).markAsNotDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"H4mes"},"content":"                            System.out.println(\"The winds be shiftin\u0027, \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"H4mes"},"content":"                                    \"and I be lettin\u0027 this task sail with the breeze unmarked.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"H4mes"},"content":"                            System.out.println(tasks.get(tempIndex - 1).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"H4mes"},"content":"                        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"H4mes"},"content":"                            System.out.println(\"As ye command, this one has walked the plank:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"H4mes"},"content":"                            System.out.println(\"\\t\" + tasks.get(tempIndex - 1).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"H4mes"},"content":"                            tasks.remove(tempIndex - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"H4mes"},"content":"                            taskCount -\u003d 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"H4mes"},"content":"                            System.out.println(\"Only \" + taskCount + \" tasks remain, captain!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"H4mes"},"content":"                        }","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"H4mes"},"content":"                        printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"H4mes"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"H4mes"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"H4mes"},"content":"                    throw new IllegalArgumentException(\"Blunder! \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"H4mes"},"content":"                            \"I be searchin\u0027 the seas but couldn\u0027t spy the task ye named, me heartie!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"H4mes"},"content":"                } finally {","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"H4mes"},"content":"                    saveTaskListToFile();","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"H4mes"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"H4mes"},"content":"            switch (wordArray[0]) {","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"H4mes"},"content":"                case \"todo\": {","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"H4mes"},"content":"                    if (wordArray.length \u003c 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"H4mes"},"content":"                        throw new IllegalArgumentException(\"Blunder! Declare yer to-do as such: \u0027todo *\u0027, ye scurvy dog!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"H4mes"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"H4mes"},"content":"                    String tempString \u003d input.substring(5).trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"H4mes"},"content":"                    printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"H4mes"},"content":"                    tasks.add(new Todo(tempString));","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"H4mes"},"content":"                    taskCount +\u003d 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"I\u0027ve appended this to yer list:\\n\" + tasks.get(taskCount - 1).toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":134,"author":{"gitId":"H4mes"},"content":"                    printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"H4mes"},"content":"                    break;","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"H4mes"},"content":"                case \"deadline\": {","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"H4mes"},"content":"                    String tempString \u003d input.substring(9).trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"H4mes"},"content":"                    String[] tempArray \u003d tempString.split(\"/by\", 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"H4mes"},"content":"                    if (tempArray.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"H4mes"},"content":"                        throw new IllegalArgumentException(\"Blunder! \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"H4mes"},"content":"                                \"Declare yer deadline as such: \u0027deadline * /by *\u0027, ye scurvy dog!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"H4mes"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"H4mes"},"content":"                    String description \u003d tempArray[0].trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"H4mes"},"content":"                    LocalDateTime by \u003d parseDate(tempArray[1].trim());","lastModifiedDate":"2024-02-08"},{"lineNumber":146,"author":{"gitId":"H4mes"},"content":"                    printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"H4mes"},"content":"                    tasks.add(new Deadline(description, by));","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"H4mes"},"content":"                    taskCount +\u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"I\u0027ve appended this to yer list:\\n\" + tasks.get(taskCount - 1).toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":150,"author":{"gitId":"H4mes"},"content":"                    printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"H4mes"},"content":"                    break;","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"H4mes"},"content":"                case \"event\": {","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"H4mes"},"content":"                    String tempString \u003d input.substring(6).trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"H4mes"},"content":"                    String[] tempArray \u003d tempString.split(\"/from\", 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"H4mes"},"content":"                    if (tempArray.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"H4mes"},"content":"                        throw new IllegalArgumentException(\"Blunder! \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"H4mes"},"content":"                                \"Declare yer event as such: \u0027deadline * /from * /to *\u0027, ye scurvy dog!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"H4mes"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"H4mes"},"content":"                    String description \u003d tempArray[0].trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"H4mes"},"content":"                    tempString \u003d tempArray[1].trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"H4mes"},"content":"                    tempArray \u003d tempString.split(\"/to\", 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"H4mes"},"content":"                    if (tempArray.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"H4mes"},"content":"                        throw new IllegalArgumentException(\"Blunder! \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"H4mes"},"content":"                                \"Declare yer event as such: \u0027deadline * /from * /to *\u0027, ye scurvy dog!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"H4mes"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"H4mes"},"content":"                    LocalDateTime from \u003d parseDate(tempArray[0].trim());","lastModifiedDate":"2024-02-08"},{"lineNumber":168,"author":{"gitId":"H4mes"},"content":"                    LocalDateTime to \u003d parseDate(tempArray[1].trim());","lastModifiedDate":"2024-02-08"},{"lineNumber":169,"author":{"gitId":"H4mes"},"content":"                    printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"H4mes"},"content":"                    tasks.add(new Event(description, from, to));","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"H4mes"},"content":"                    taskCount +\u003d 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"I\u0027ve appended this to yer list:\\n\" + tasks.get(taskCount - 1).toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":173,"author":{"gitId":"H4mes"},"content":"                    printDivider();","lastModifiedDate":"2024-01-30"},{"lineNumber":174,"author":{"gitId":"H4mes"},"content":"                    break;","lastModifiedDate":"2024-02-04"},{"lineNumber":175,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":176,"author":{"gitId":"H4mes"},"content":"                default:","lastModifiedDate":"2024-02-04"},{"lineNumber":177,"author":{"gitId":"H4mes"},"content":"                    throw new IllegalArgumentException(\"Arrr, me apologies! I cannot fathom that.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":179,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":180,"author":{"gitId":"H4mes"},"content":"            appendTaskToFile(tasks.get(taskCount - 1).getData());","lastModifiedDate":"2024-02-04"},{"lineNumber":181,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":182,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":183,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":184,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":185,"author":{"gitId":"H4mes"},"content":"     * Reads existing data from .txt file and populates task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":186,"author":{"gitId":"H4mes"},"content":"     * Creates missing directory and file as required using relative filepath.","lastModifiedDate":"2024-02-04"},{"lineNumber":187,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":188,"author":{"gitId":"H4mes"},"content":"    private static void loadData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":189,"author":{"gitId":"H4mes"},"content":"        //String filepath \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-02-04"},{"lineNumber":190,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":191,"author":{"gitId":"H4mes"},"content":"        try(Scanner dataScanner \u003d new Scanner(new File(FILE_PATH))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":192,"author":{"gitId":"H4mes"},"content":"            int lineNum \u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":193,"author":{"gitId":"H4mes"},"content":"            ArrayList\u003cInteger\u003e corruptedLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":194,"author":{"gitId":"H4mes"},"content":"            while (dataScanner.hasNextLine()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":195,"author":{"gitId":"H4mes"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":196,"author":{"gitId":"H4mes"},"content":"                    String line \u003d dataScanner.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":197,"author":{"gitId":"H4mes"},"content":"                    String[] data \u003d line.split(\"\\\\|\", 0);","lastModifiedDate":"2024-02-04"},{"lineNumber":198,"author":{"gitId":"H4mes"},"content":"                    String taskType \u003d data[0].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":199,"author":{"gitId":"H4mes"},"content":"                    String taskComplete \u003d data[1].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":200,"author":{"gitId":"H4mes"},"content":"                    String taskDescription \u003d data[2].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":201,"author":{"gitId":"H4mes"},"content":"                    switch (taskType) {","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"H4mes"},"content":"                        case \"T\":","lastModifiedDate":"2024-02-04"},{"lineNumber":203,"author":{"gitId":"H4mes"},"content":"                            //Check correct number of fields","lastModifiedDate":"2024-02-04"},{"lineNumber":204,"author":{"gitId":"H4mes"},"content":"                            if (data.length !\u003d 3) {","lastModifiedDate":"2024-02-04"},{"lineNumber":205,"author":{"gitId":"H4mes"},"content":"                                throw new IllegalArgumentException(\"Line \" + lineNum + \": Todo does not have 3 data fields.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":206,"author":{"gitId":"H4mes"},"content":"                            }","lastModifiedDate":"2024-02-04"},{"lineNumber":207,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":208,"author":{"gitId":"H4mes"},"content":"                            Todo todo \u003d new Todo(taskDescription);","lastModifiedDate":"2024-02-04"},{"lineNumber":209,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":210,"author":{"gitId":"H4mes"},"content":"                            //Check completion status is a string \"1\" or \"0\"","lastModifiedDate":"2024-02-04"},{"lineNumber":211,"author":{"gitId":"H4mes"},"content":"                            if (taskComplete.equals(\"0\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":212,"author":{"gitId":"H4mes"},"content":"                                todo.markAsNotDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":213,"author":{"gitId":"H4mes"},"content":"                            } else if (taskComplete.equals(\"1\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":214,"author":{"gitId":"H4mes"},"content":"                                todo.markAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":215,"author":{"gitId":"H4mes"},"content":"                            } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":216,"author":{"gitId":"H4mes"},"content":"                                throw new IllegalArgumentException(\"Line \" + lineNum + \": Task completion data is corrupted.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":217,"author":{"gitId":"H4mes"},"content":"                            }","lastModifiedDate":"2024-02-04"},{"lineNumber":218,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":219,"author":{"gitId":"H4mes"},"content":"                            tasks.add(todo);","lastModifiedDate":"2024-02-04"},{"lineNumber":220,"author":{"gitId":"H4mes"},"content":"                            taskCount +\u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":221,"author":{"gitId":"H4mes"},"content":"                            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":222,"author":{"gitId":"H4mes"},"content":"                        case \"D\":","lastModifiedDate":"2024-02-04"},{"lineNumber":223,"author":{"gitId":"H4mes"},"content":"                            //Check correct number of fields","lastModifiedDate":"2024-02-04"},{"lineNumber":224,"author":{"gitId":"H4mes"},"content":"                            if (data.length !\u003d 4) {","lastModifiedDate":"2024-02-04"},{"lineNumber":225,"author":{"gitId":"H4mes"},"content":"                                throw new IllegalArgumentException(\"Line \" + lineNum + \": Deadline does not have 4 data fields.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":226,"author":{"gitId":"H4mes"},"content":"                            }","lastModifiedDate":"2024-02-04"},{"lineNumber":227,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":228,"author":{"gitId":"H4mes"},"content":"                            LocalDateTime deadlineBy \u003d parseDate(data[3].trim());","lastModifiedDate":"2024-02-08"},{"lineNumber":229,"author":{"gitId":"H4mes"},"content":"                            //TODO: Check if data is in yyyy-mm-dd format","lastModifiedDate":"2024-02-04"},{"lineNumber":230,"author":{"gitId":"H4mes"},"content":"                            Deadline deadline \u003d new Deadline(taskDescription, deadlineBy);","lastModifiedDate":"2024-02-04"},{"lineNumber":231,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":232,"author":{"gitId":"H4mes"},"content":"                            //Check completion status is a string \"1\" or \"0\"","lastModifiedDate":"2024-02-04"},{"lineNumber":233,"author":{"gitId":"H4mes"},"content":"                            if (taskComplete.equals(\"0\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":234,"author":{"gitId":"H4mes"},"content":"                                deadline.markAsNotDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":235,"author":{"gitId":"H4mes"},"content":"                            } else if (taskComplete.equals(\"1\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":236,"author":{"gitId":"H4mes"},"content":"                                deadline.markAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":237,"author":{"gitId":"H4mes"},"content":"                            } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":238,"author":{"gitId":"H4mes"},"content":"                                throw new IllegalArgumentException(\"Line \" + lineNum + \": Task completion data is corrupted.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":239,"author":{"gitId":"H4mes"},"content":"                            }","lastModifiedDate":"2024-02-04"},{"lineNumber":240,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":241,"author":{"gitId":"H4mes"},"content":"                            tasks.add(deadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":242,"author":{"gitId":"H4mes"},"content":"                            taskCount +\u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":243,"author":{"gitId":"H4mes"},"content":"                            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":244,"author":{"gitId":"H4mes"},"content":"                        case \"E\":","lastModifiedDate":"2024-02-04"},{"lineNumber":245,"author":{"gitId":"H4mes"},"content":"                            //check correct number of fields","lastModifiedDate":"2024-02-04"},{"lineNumber":246,"author":{"gitId":"H4mes"},"content":"                            if (data.length !\u003d 5) {","lastModifiedDate":"2024-02-04"},{"lineNumber":247,"author":{"gitId":"H4mes"},"content":"                                throw new IllegalArgumentException(\"Line \" + lineNum + \": Event does not have 5 data fields.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":248,"author":{"gitId":"H4mes"},"content":"                            }","lastModifiedDate":"2024-02-04"},{"lineNumber":249,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":250,"author":{"gitId":"H4mes"},"content":"                            LocalDateTime eventFrom \u003d parseDate(data[3].trim());","lastModifiedDate":"2024-02-08"},{"lineNumber":251,"author":{"gitId":"H4mes"},"content":"                            LocalDateTime eventTo \u003d parseDate(data[4].trim());","lastModifiedDate":"2024-02-08"},{"lineNumber":252,"author":{"gitId":"H4mes"},"content":"                            //TODO: Check if data is in yyyy-mm-dd format","lastModifiedDate":"2024-02-04"},{"lineNumber":253,"author":{"gitId":"H4mes"},"content":"                            Event event \u003d new Event(taskDescription, eventFrom, eventTo);","lastModifiedDate":"2024-02-04"},{"lineNumber":254,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":255,"author":{"gitId":"H4mes"},"content":"                            //Check completion status is a string \"1\" or \"0\"","lastModifiedDate":"2024-02-04"},{"lineNumber":256,"author":{"gitId":"H4mes"},"content":"                            if (taskComplete.equals(\"0\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":257,"author":{"gitId":"H4mes"},"content":"                                event.markAsNotDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":258,"author":{"gitId":"H4mes"},"content":"                            } else if (taskComplete.equals(\"1\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":259,"author":{"gitId":"H4mes"},"content":"                                event.markAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":260,"author":{"gitId":"H4mes"},"content":"                            } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":261,"author":{"gitId":"H4mes"},"content":"                                throw new IllegalArgumentException(\"Line \" + lineNum + \": Task completion data is corrupted.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":262,"author":{"gitId":"H4mes"},"content":"                            }","lastModifiedDate":"2024-02-04"},{"lineNumber":263,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":264,"author":{"gitId":"H4mes"},"content":"                            tasks.add(event);","lastModifiedDate":"2024-02-04"},{"lineNumber":265,"author":{"gitId":"H4mes"},"content":"                            taskCount +\u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":266,"author":{"gitId":"H4mes"},"content":"                            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":267,"author":{"gitId":"H4mes"},"content":"                    }","lastModifiedDate":"2024-02-04"},{"lineNumber":268,"author":{"gitId":"H4mes"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":269,"author":{"gitId":"H4mes"},"content":"                    printDivider();","lastModifiedDate":"2024-02-04"},{"lineNumber":270,"author":{"gitId":"H4mes"},"content":"                    corruptedLines.add(lineNum);","lastModifiedDate":"2024-02-04"},{"lineNumber":271,"author":{"gitId":"H4mes"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":272,"author":{"gitId":"H4mes"},"content":"                    printDivider();","lastModifiedDate":"2024-02-04"},{"lineNumber":273,"author":{"gitId":"H4mes"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":274,"author":{"gitId":"H4mes"},"content":"                    printDivider();","lastModifiedDate":"2024-02-04"},{"lineNumber":275,"author":{"gitId":"H4mes"},"content":"                    corruptedLines.add(lineNum);","lastModifiedDate":"2024-02-04"},{"lineNumber":276,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Line \" + lineNum + \": \" + e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":277,"author":{"gitId":"H4mes"},"content":"                    printDivider();","lastModifiedDate":"2024-02-04"},{"lineNumber":278,"author":{"gitId":"H4mes"},"content":"                } finally {","lastModifiedDate":"2024-02-04"},{"lineNumber":279,"author":{"gitId":"H4mes"},"content":"                    lineNum +\u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":280,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":281,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":282,"author":{"gitId":"H4mes"},"content":"            if (corruptedLines.size() \u003e 0) {","lastModifiedDate":"2024-02-04"},{"lineNumber":283,"author":{"gitId":"H4mes"},"content":"                removeCorruptedData(corruptedLines);","lastModifiedDate":"2024-02-04"},{"lineNumber":284,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":285,"author":{"gitId":"H4mes"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":286,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"File not found: \" + FILE_PATH);","lastModifiedDate":"2024-02-04"},{"lineNumber":287,"author":{"gitId":"H4mes"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-04"},{"lineNumber":288,"author":{"gitId":"H4mes"},"content":"            Path directoryPath \u003d Paths.get(file.getParent());","lastModifiedDate":"2024-02-04"},{"lineNumber":289,"author":{"gitId":"H4mes"},"content":"            if (!Files.exists(directoryPath)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":290,"author":{"gitId":"H4mes"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":291,"author":{"gitId":"H4mes"},"content":"                    Files.createDirectories(directoryPath);","lastModifiedDate":"2024-02-04"},{"lineNumber":292,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Created missing directory: \" + directoryPath);","lastModifiedDate":"2024-02-04"},{"lineNumber":293,"author":{"gitId":"H4mes"},"content":"                } catch (IOException err) {","lastModifiedDate":"2024-02-04"},{"lineNumber":294,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Error creating directory: \" + directoryPath);","lastModifiedDate":"2024-02-04"},{"lineNumber":295,"author":{"gitId":"H4mes"},"content":"                    err.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":296,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":297,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":298,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":299,"author":{"gitId":"H4mes"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":300,"author":{"gitId":"H4mes"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":301,"author":{"gitId":"H4mes"},"content":"                    file.createNewFile();","lastModifiedDate":"2024-02-04"},{"lineNumber":302,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Created missing file: \" + file);","lastModifiedDate":"2024-02-04"},{"lineNumber":303,"author":{"gitId":"H4mes"},"content":"                } catch (IOException err) {","lastModifiedDate":"2024-02-04"},{"lineNumber":304,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Error creating file: \" + file);","lastModifiedDate":"2024-02-04"},{"lineNumber":305,"author":{"gitId":"H4mes"},"content":"                    err.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":306,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":307,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":308,"author":{"gitId":"H4mes"},"content":"            printDivider();","lastModifiedDate":"2024-02-04"},{"lineNumber":309,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":310,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":311,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":312,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":313,"author":{"gitId":"H4mes"},"content":"     * Solution below adapted from https://www.baeldung.com/java-write-to-file","lastModifiedDate":"2024-02-04"},{"lineNumber":314,"author":{"gitId":"H4mes"},"content":"     * Helper function that appends the input string to the file at the FILE_PATH and starts a new line.","lastModifiedDate":"2024-02-04"},{"lineNumber":315,"author":{"gitId":"H4mes"},"content":"     * @param line The string to be written to the new line.","lastModifiedDate":"2024-02-04"},{"lineNumber":316,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":317,"author":{"gitId":"H4mes"},"content":"    private static void appendTaskToFile(String line) {","lastModifiedDate":"2024-02-04"},{"lineNumber":318,"author":{"gitId":"H4mes"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(FILE_PATH, true))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":319,"author":{"gitId":"H4mes"},"content":"            bw.write(line);","lastModifiedDate":"2024-02-04"},{"lineNumber":320,"author":{"gitId":"H4mes"},"content":"            bw.newLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":321,"author":{"gitId":"H4mes"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":322,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"Error writing to file: \" + FILE_PATH);","lastModifiedDate":"2024-02-04"},{"lineNumber":323,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":324,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":325,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":326,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":327,"author":{"gitId":"H4mes"},"content":"     * Helper function that overwrites the original file data using the updated ArrayList data.","lastModifiedDate":"2024-02-04"},{"lineNumber":328,"author":{"gitId":"H4mes"},"content":"     * Called after changes to the list are made by marking, unmarking and deleting tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":329,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":330,"author":{"gitId":"H4mes"},"content":"    private static void saveTaskListToFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":331,"author":{"gitId":"H4mes"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":332,"author":{"gitId":"H4mes"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":333,"author":{"gitId":"H4mes"},"content":"                bw.write(task.getData());","lastModifiedDate":"2024-02-04"},{"lineNumber":334,"author":{"gitId":"H4mes"},"content":"                bw.newLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":335,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":336,"author":{"gitId":"H4mes"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":337,"author":{"gitId":"H4mes"},"content":"                System.out.println(\"Error writing to file: \" + FILE_PATH);","lastModifiedDate":"2024-02-04"},{"lineNumber":338,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":339,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":340,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":341,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":342,"author":{"gitId":"H4mes"},"content":"     * Helper function for loadData() to delete lines from the .txt data file by line number.","lastModifiedDate":"2024-02-04"},{"lineNumber":343,"author":{"gitId":"H4mes"},"content":"     * @param indexes List of line numbers (1-based indexing) to be deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":344,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":345,"author":{"gitId":"H4mes"},"content":"    private static void removeCorruptedData(ArrayList\u003cInteger\u003e indexes) {","lastModifiedDate":"2024-02-04"},{"lineNumber":346,"author":{"gitId":"H4mes"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":347,"author":{"gitId":"H4mes"},"content":"        Collections.sort(indexes);","lastModifiedDate":"2024-02-04"},{"lineNumber":348,"author":{"gitId":"H4mes"},"content":"        int offset \u003d 0;","lastModifiedDate":"2024-02-04"},{"lineNumber":349,"author":{"gitId":"H4mes"},"content":"        try (Scanner dataScanner \u003d new Scanner(new File(FILE_PATH))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":350,"author":{"gitId":"H4mes"},"content":"            int lineNum \u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":351,"author":{"gitId":"H4mes"},"content":"            while (dataScanner.hasNextLine()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":352,"author":{"gitId":"H4mes"},"content":"                String line \u003d dataScanner.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":353,"author":{"gitId":"H4mes"},"content":"                if (lineNum !\u003d indexes.get(offset)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":354,"author":{"gitId":"H4mes"},"content":"                    lines.add(line);","lastModifiedDate":"2024-02-04"},{"lineNumber":355,"author":{"gitId":"H4mes"},"content":"                } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":356,"author":{"gitId":"H4mes"},"content":"                    System.out.println(\"Removing entry: \" + line);","lastModifiedDate":"2024-02-04"},{"lineNumber":357,"author":{"gitId":"H4mes"},"content":"                    if (offset \u003c indexes.size() - 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":358,"author":{"gitId":"H4mes"},"content":"                        offset +\u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":359,"author":{"gitId":"H4mes"},"content":"                    }","lastModifiedDate":"2024-02-04"},{"lineNumber":360,"author":{"gitId":"H4mes"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":361,"author":{"gitId":"H4mes"},"content":"                lineNum +\u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":362,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":363,"author":{"gitId":"H4mes"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":364,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"File not found: \" + FILE_PATH);","lastModifiedDate":"2024-02-04"},{"lineNumber":365,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":366,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":367,"author":{"gitId":"H4mes"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":368,"author":{"gitId":"H4mes"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-02-04"},{"lineNumber":369,"author":{"gitId":"H4mes"},"content":"                bw.write(line);","lastModifiedDate":"2024-02-04"},{"lineNumber":370,"author":{"gitId":"H4mes"},"content":"                bw.newLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":371,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":372,"author":{"gitId":"H4mes"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":373,"author":{"gitId":"H4mes"},"content":"            System.out.println(\"Error writing to file: \" + FILE_PATH);","lastModifiedDate":"2024-02-04"},{"lineNumber":374,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":375,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":376,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":377,"author":{"gitId":"H4mes"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":378,"author":{"gitId":"H4mes"},"content":"     * Helper function to convert date input into LocalDateTime to be passed to Task subclasses.","lastModifiedDate":"2024-02-08"},{"lineNumber":379,"author":{"gitId":"H4mes"},"content":"     * @param input Date as a String.","lastModifiedDate":"2024-02-08"},{"lineNumber":380,"author":{"gitId":"H4mes"},"content":"     * @return Returns LocalDateTime object.","lastModifiedDate":"2024-02-08"},{"lineNumber":381,"author":{"gitId":"H4mes"},"content":"     * @throws IllegalArgumentException for date String not in the correct format.","lastModifiedDate":"2024-02-08"},{"lineNumber":382,"author":{"gitId":"H4mes"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":383,"author":{"gitId":"H4mes"},"content":"    private static LocalDateTime parseDate(String input) {","lastModifiedDate":"2024-02-08"},{"lineNumber":384,"author":{"gitId":"H4mes"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":385,"author":{"gitId":"H4mes"},"content":"        LocalDateTime time;","lastModifiedDate":"2024-02-08"},{"lineNumber":386,"author":{"gitId":"H4mes"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":387,"author":{"gitId":"H4mes"},"content":"            time \u003d LocalDateTime.parse(input, dateTimeFormatter);","lastModifiedDate":"2024-02-08"},{"lineNumber":388,"author":{"gitId":"H4mes"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":389,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Blunder! \" +","lastModifiedDate":"2024-02-08"},{"lineNumber":390,"author":{"gitId":"H4mes"},"content":"                    \"The date format ye provided be as tangled as a ship\u0027s riggin\u0027.\\n\" +","lastModifiedDate":"2024-02-08"},{"lineNumber":391,"author":{"gitId":"H4mes"},"content":"                    \"Write yer dates in the format dd/MM/yyyy HHmm or dd/MM/yyyy\");","lastModifiedDate":"2024-02-08"},{"lineNumber":392,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":393,"author":{"gitId":"H4mes"},"content":"        return time;","lastModifiedDate":"2024-02-08"},{"lineNumber":394,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":395,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":396,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-27"},{"lineNumber":397,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":398,"author":{"gitId":"H4mes"},"content":"class ExitProgramException extends RuntimeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":399,"author":{"gitId":"H4mes"},"content":"    public ExitProgramException(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":400,"author":{"gitId":"H4mes"},"content":"        super(message);","lastModifiedDate":"2024-01-27"},{"lineNumber":401,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":402,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"H4mes":396,"-":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"    protected DateTimeFormatter dataFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"    protected DateTimeFormatter stringFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"        super (description);","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(stringFormat) + \" to: \" + end.format(stringFormat) + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"    public String getData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"        return \"E | \" + super.getData() + \" | \" + start.format(dataFormat) + \" | \" + end.format(dataFormat);","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"H4mes":24}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"    protected String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"        return (isDone ? \"[X] \" + description : \"[ ] \" + description); //mark done task with X","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"    public String getData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"        return (isDone ? \"1 | \" + description : \"0 | \" + description);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"H4mes":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"        super (description);","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"    public String getData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"        return \"T | \" + super.getData();","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"H4mes":16}}]
