[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"# duke.Duke project template","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AndrewOng2066":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"D | 0 | return book | 2024-01-23T23:59","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"E | 0 | prject | 2024-01-23T20:00 | 2024-01-23T21:00","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"D | 0 | borrow book | 2024-01-22T23:59","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"T | 0 | play games","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"D | 1 | submit email | 2024-10-10T23:59","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"E | 1 | job | 2024-10-01T00:00 | 2024-10-02T23:59","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"D | 0 | homework | 2024-02-10T23:59","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":7}},{"path":"src/main/java/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import duke.DateTimeManager;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    public AddDeadlineCommand(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    public void excuteCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Missing the description!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        String[] deadlineSplit \u003d input.split(\"/\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        if (deadlineSplit.length \u003c 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Invalid format for new task.Deadline!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        String name \u003d deadlineSplit[0].substring(9).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        String by \u003d deadlineSplit[1].substring(3).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"        LocalDateTime byDt \u003d DateTimeManager.convertStringToLocalDateTime(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"        Deadline newDeadline \u003d new Deadline(name,false, byDt);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.addTask(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e newDeadlineList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        newDeadlineList.add(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"        storage.writeArrayListToFile(newDeadlineList, false);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(newDeadline.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":46}},{"path":"src/main/java/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import duke.DateTimeManager;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    public AddEventCommand(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    public void excuteCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Missing the description!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        String[] eventSplit \u003d input.split(\"/\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        if (eventSplit.length \u003c 3) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Invalid format for new task.Event!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        String name \u003d eventSplit[0].substring(6).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        String start \u003d eventSplit[1].substring(5).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        String end \u003d eventSplit[2].substring(3).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"        LocalDateTime startDT \u003d DateTimeManager.convertStringToLocalDateTime(start);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"        LocalDateTime endDT \u003d DateTimeManager.convertStringToLocalDateTime(end);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"        Event newEvent \u003d new Event(name, false, startDT, endDT);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.addTask(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e newEventList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"        newEventList.add(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"        storage.writeArrayListToFile(newEventList, false);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(newEvent.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":47}},{"path":"src/main/java/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    public AddToDoCommand(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    public void excuteCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"        if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Missing the description!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        String name \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"        for (int i \u003d 1; i \u003c splitInput.length; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"            name +\u003d splitInput[i] + \" \";","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        ToDo newToDo\u003d new ToDo(name.trim(), false);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.addTask(newToDo);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e newToDoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        newToDoList.add(newToDo);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        storage.writeArrayListToFile(newToDoList, false);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(newToDo.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":38}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    public boolean isExit;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    public Command() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"    public abstract void excuteCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    public void confirmExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"        return this.isExit;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":29}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    public DeleteCommand(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    public void excuteCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"        if (tasks.getTasks().size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"No task at the moment.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput.length \u003c 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Please select the task.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        int choiceDelete;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"            choiceDelete \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Please enter a valid integer value.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        if (choiceDelete \u003c\u003d tasks.getTasks().size() \u0026\u0026 choiceDelete \u003e 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"            Task deletedTask \u003d tasks.getIndividualTask(choiceDelete - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"            tasks.removeTask(choiceDelete - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"            storage.writeArrayListToFile(tasks.getTasks(), true);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"Noted, I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(deletedTask.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Invalid choice\");","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":42}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"    public void excuteCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"        super.confirmExit();","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printByeStatement();","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":15}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"    public void excuteCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.setTasks(storage.loadTasksFromFile());","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"        for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"      \" + (i + 1) + \".\" + tasks.getTasks().get(i).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":17}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    public MarkCommand(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    public void excuteCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"        String splitInput[] \u003d input.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        if (tasks.getTasks().size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"No task at the moment.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput.length \u003c 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Please select the task.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        int choiceMark;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"            choiceMark \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Please enter a valid integer value.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        if (choiceMark \u003c\u003d tasks.getTasks().size() \u0026\u0026 choiceMark \u003e 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"            tasks.markTask(choiceMark - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"            storage.writeArrayListToFile(tasks.getTasks(), true);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(tasks.getTasks().get(choiceMark - 1).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Invalid choice.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":39}},{"path":"src/main/java/command/OtherCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"public class OtherCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"    public void excuteCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"        ui.invalidFeature();","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":14}},{"path":"src/main/java/command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import duke.DateTimeManager;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    public SearchCommand(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    public void excuteCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Missing the date!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        LocalDateTime dateInput \u003d DateTimeManager.convertStringToLocalDateTime(splitInput[1].trim() +\"T00:00\");","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Here are the tasks on \" + input +\":\");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        for (Task i : tasks.getTasks()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"            if (i instanceof Deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"                if (((Deadline) i).getBy().toLocalDate().isEqual(dateInput.toLocalDate())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"                    ui.printAnyStatement((index++) + \".\" + i.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (i instanceof Event) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"                if (((Event) i).getStart().toLocalDate().isEqual(dateInput.toLocalDate())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"                    ui.printAnyStatement((index++) + \".\" + i.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"There are no task on this date\");","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":48}},{"path":"src/main/java/command/unMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"public class unMarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    public unMarkCommand(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    public void excuteCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"        String splitInput[] \u003d input.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        if (tasks.getTasks().size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"No task at the moment.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput.length \u003c 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Please select the task.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        int choiceUnmark;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"            choiceUnmark \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Please enter a valid integer value.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        if (choiceUnmark \u003c\u003d tasks.getTasks().size() \u0026\u0026 choiceUnmark \u003e 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"            tasks.unmarkTask(choiceUnmark - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"            storage.writeArrayListToFile(tasks.getTasks(), true);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(tasks.getTasks().get(choiceUnmark - 1).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"Invalid choice.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":39}},{"path":"src/main/java/duke/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"public enum Action {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"    LIST,","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"    TODO,","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"    DEADLINE,","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"    EVENT,","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"    MARK,","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"    UNMARK,","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"    DELETE,","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"    DATE,","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    BYE","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":13}},{"path":"src/main/java/duke/DateTimeManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"public class DateTimeManager {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"     * Coverts the String to LocalDateTime type.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"     * @param timeString The time in String.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"     * @return LocalDateTime.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws DukeException If none of the timeString matches the formatter.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    public static LocalDateTime convertStringToLocalDateTime(String timeString) throws DukeException{","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        List\u003cDateTimeFormatter\u003e formatters \u003d Arrays.asList(","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\")","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"        );","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"                return LocalDateTime.parse(timeString, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"                // Continue next format","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        throw new DukeException(\"Invalid format for Date-Time. The format is \\\"yyyy-MM-dd HH:mm\\\".\");","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"     * Converts LocalDateTime to String.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"     * @param dt LocalDateTime.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"     * @return the String version of DateTime.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws DukeException If none of the formatter matches the LocalDateTime.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"    static String convertLocalDateTimeToString(LocalDateTime dt) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"        List\u003cDateTimeFormatter\u003e formatters \u003d Arrays.asList(","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy\u0027T\u0027HH:mm\")","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"        );","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"                return dt.format(formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"                // Continue next format","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"        throw new DukeException(\"There is an error of converting LocalDateTime to String.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":58}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import command.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"public class Duke {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"            tasks \u003d new TaskList(storage.loadTasksFromFile());","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printWelcome();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"                ui.printOpeningDottedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"                Command c \u003d Parser.parse(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"                c.excuteCommand(tasks, ui, storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"                isExit \u003d c.getIsExit();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"            } finally {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"                ui.printClosingDottedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"        new Duke(\"duke\").run();","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":68}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"AndrewOng2066":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import command.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"    public static Command parse(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"        if (splitInput[0].equalsIgnoreCase(Action.LIST.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.MARK.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"            return new MarkCommand(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.UNMARK.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"            return new unMarkCommand(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.TODO.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"            return new AddToDoCommand(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.DEADLINE.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"            return new AddDeadlineCommand(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.EVENT.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"            return new AddEventCommand(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.DELETE.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"            return new DeleteCommand(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.DATE.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"            return new SearchCommand(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.BYE.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"            return new OtherCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":42}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import java.io.*;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    static final Path DIRECTORY_PATH \u003d Paths.get(\"./data\");","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    private String fileName;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"    private Path filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        filePath \u003d DIRECTORY_PATH.resolve(fileName + \".txt\");","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        createFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates directory and file if it doesn\u0027t exist.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"    private void createFile() {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"            if (!Files.exists(DIRECTORY_PATH)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"                Files.createDirectories(DIRECTORY_PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (IOException io) {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"There is an error when creating file. The error is \" + io.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"     * Writes tasks to the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks the tasks that need to be written.","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"     * @param isOverwrite True for overwrite the previous data. False for appending the data.","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"    public void writeArrayListToFile(ArrayList\u003cTask\u003e tasks, boolean isOverwrite) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"            if (isOverwrite) {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"                Files.write(filePath, convertTasksToString(tasks).getBytes(), StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"                Files.write(filePath, convertTasksToString(tasks).getBytes(), StandardOpenOption.CREATE, StandardOpenOption.APPEND);","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (IOException io) {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"There is an error when writing to file. The error is \" + io.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"     * Loads Tasks from the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"     * @return an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"            List\u003cString\u003e fileContentLines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"            result \u003d convertStringListToTasks(fileContentLines);","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (IOException io) {","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"            throw new DukeException(\"There is an error when reading the file.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"        return result;","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"     * Converts an ArrayList of Tasks to String.","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks An arrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"     * @return String format of the list of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"    private String convertTasksToString(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"//            result.append(task.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"//            result.append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"            if (task instanceof ToDo) {","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(\"T | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getStatusIcon().equals(\"X\") ? \"1 | \" : \"0 | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getDescription());","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(\"D | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getStatusIcon().equals(\"X\") ? \"1 | \" : \"0 | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getDescription() + \" | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(((Deadline) task).getBy());","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"AndrewOng2066"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(\"E | \");","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getStatusIcon().equals(\"X\") ? \"1 | \" : \"0 | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getDescription() + \" | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(((Event) task).getStart() + \" | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(((Event) task).getEnd());","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"AndrewOng2066"},"content":"        return result.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"AndrewOng2066"},"content":"     * Converts the List of String to an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"AndrewOng2066"},"content":"     * @param content the List of String to be converted.","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"AndrewOng2066"},"content":"     * @return an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"AndrewOng2066"},"content":"    private ArrayList\u003cTask\u003e convertStringListToTasks(List\u003cString\u003e content) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e fileTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"AndrewOng2066"},"content":"        for (String i : content) {","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"AndrewOng2066"},"content":"            String[] stringAttributes \u003d i.split(\"\\\\|\");","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"AndrewOng2066"},"content":"            if (stringAttributes[0].trim().equals(\"T\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new ToDo(stringAttributes[2].trim(), stringAttributes[1].trim().equals(\"1\") ? true : false));","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (stringAttributes[0].trim().equals(\"D\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new Deadline(stringAttributes[2].trim(), stringAttributes[1].trim().equals(\"1\") ? true : false, DateTimeManager.convertStringToLocalDateTime(stringAttributes[3].trim())));","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (stringAttributes[0].trim().equals(\"E\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new Event(stringAttributes[2].trim(), stringAttributes[1].trim().equals(\"1\") ? true : false, DateTimeManager.convertStringToLocalDateTime(stringAttributes[3].trim()), DateTimeManager.convertStringToLocalDateTime(stringAttributes[4].trim())));","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"AndrewOng2066"},"content":"        return fileTasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"AndrewOng2066"},"content":"     * Converts the String content to an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"AndrewOng2066"},"content":"     * @param content the String content to be converted.","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"AndrewOng2066"},"content":"     * @return an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"AndrewOng2066"},"content":"    private ArrayList\u003cTask\u003e convertStringToTasks(String content) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"AndrewOng2066"},"content":"        String[] individualStringTask \u003d content.trim().split(System.lineSeparator());","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e fileTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"AndrewOng2066"},"content":"        for (String i : individualStringTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"AndrewOng2066"},"content":"            String[] stringAttributes \u003d i.split(\"|\");","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"AndrewOng2066"},"content":"            if (stringAttributes[0].equals(\"T\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new ToDo(stringAttributes[2].trim(), stringAttributes[1].equals(\"1\") ? true : false));","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (stringAttributes[0].equals(\"D\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new Deadline(stringAttributes[2].trim(), stringAttributes[1].equals(\"1\") ? true : false, DateTimeManager.convertStringToLocalDateTime(stringAttributes[3].trim())));","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (stringAttributes[0].equals(\"E\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new Event(stringAttributes[2].trim(), stringAttributes[1].equals(\"1\") ? true : false, DateTimeManager.convertStringToLocalDateTime(stringAttributes[3].trim()), DateTimeManager.convertStringToLocalDateTime(stringAttributes[4].trim())));","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"AndrewOng2066"},"content":"        return fileTasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"AndrewOng2066":160}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    public Task getIndividualTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.get(index).markAsUndone();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":44}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"    private String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"//        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    public Ui() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    public void printWelcome() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      Hello! I\u0027m AndrewOng2066\");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      What can I do for you?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    public void printByeStatement() {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    public void printAnyStatement(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    \" + input);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"        return sc.nextLine().trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    public void printOpeningDottedLine() {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"    public void printClosingDottedLine() {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"    public void invalidFeature() {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      I\u0027m sorry, I do not understand that.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    Unable to load the data from the file.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"    public void showError(String e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    \" + e);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":63}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    LocalDateTime by;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        return this.by;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        List\u003cDateTimeFormatter\u003e formatters \u003d Arrays.asList(","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy\u0027T\u0027HH:mm\")","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"        );","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        String byString \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"                byString \u003d this.by.format(formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"                // Continue next format","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"        return \"[D][\"+ super.getStatusIcon() +\"] \" + super.getDescription() + \" (by: \" + byString + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":40}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    LocalDateTime start;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    LocalDateTime end;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    public Event(String description, boolean isDone, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"        return this.start;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        return this.end;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        List\u003cDateTimeFormatter\u003e formatters \u003d Arrays.asList(","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy\u0027T\u0027HH:mm\")","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        );","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        String startString \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        String endString \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"                startString \u003d this.start.format(formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"                endString \u003d this.end.format(formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"                // Continue next format","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"        return \"[E][\"+ super.getStatusIcon() +\"] \" + super.getDescription() + \" (from: \" + startString + \" to: \" + endString + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":49}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"    private String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"        return description;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":28}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"        return \"[T][\"+ super.getStatusIcon() +\"] \" + super.getDescription();","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"todo read book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"todo return book","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"AndrewOng2066":3}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"todo","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"todo join sports club","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"mark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"deadline return book","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"event","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"event meeting","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"event meeting /from 5pm","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"mark 5","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"mark 7","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"mark","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"mark 9","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"unmark","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"unmark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"unmark 9","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"delete","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"delete 8","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"delete 6","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"blah","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"AndrewOng2066":30}},{"path":"text-ui-test/runtest2.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"@ECHO OFF","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"REM delete output from previous run","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    exit /b 1","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":")","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"java -classpath ..\\bin Duke \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"REM compare the output to the expected output","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"FC ACTUAL2.TXT EXPECTED2.TXT","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"AndrewOng2066":21}},{"path":"text-ui-test/runtest2.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"    mkdir ../bin","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"fi","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"# delete output from previous run","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"fi","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"    exit 1","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"fi","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"java -classpath ../bin Duke \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"# convert to UNIX format","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"cp EXPECTED2.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"dos2unix ACTUAL2.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"# compare the output to the expected output","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"diff ACTUAL2.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"    exit 0","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"else","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    exit 1","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"fi","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"AndrewOng2066":38}}]
