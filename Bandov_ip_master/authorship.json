[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"    protected String by;","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"        super(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"        return \"[D]\" + (isDone ? \"[X] \" : \"[ ] \") + super.description + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Bandov":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"        printWithLines(\"Hello! I\u0027m Bob!\", \"What can I do for you?\");","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"        String message \u003d null;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"        do {","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"                message \u003d scanner.nextLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"                if (message.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"                    handleTodo(list, message);","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"                } else if (message.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"                    handleDeadline(list, message);","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"                } else if (message.startsWith(\"event\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"                    handleEvent(list, message);","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"                } else if (message.equals(\"list\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"                    handleList(list);","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"                } else if (message.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"                    handleMark(list, message);","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"                } else if (message.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"                    handleUnmark(list, message);","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"                } else if (message.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"                    deleteTask(list, message);","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"                } else if (!message.equals(\"bye\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means buddy.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"                printWithLines(e.getMessage());","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"        } while (!message.equals(\"bye\"));","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"Bandov"},"content":"        printWithLines(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"Bandov"},"content":"        System.out.println(\"------------------------------------------\");","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"Bandov"},"content":"    private static void handleTodo(ArrayList\u003cTask\u003e list, String message) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"Bandov"},"content":"        if (message.trim().equals(\"todo\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty buddy.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"Bandov"},"content":"        String description \u003d message.substring(5).trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"Bandov"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":46,"author":{"gitId":"Bandov"},"content":"        list.add(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":47,"author":{"gitId":"Bandov"},"content":"        printWithLines(\"Got it. I\u0027ve added this task:\", task.toString(), \"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"Bandov"},"content":"    private static void handleDeadline(ArrayList\u003cTask\u003e list, String message) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"Bandov"},"content":"        String[] parts \u003d message.split(\"/by\", 2);","lastModifiedDate":"2024-01-20"},{"lineNumber":52,"author":{"gitId":"Bandov"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The deadline date/time is missing buddy.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"Bandov"},"content":"        String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"Bandov"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2024-01-20"},{"lineNumber":57,"author":{"gitId":"Bandov"},"content":"        Deadline task \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-20"},{"lineNumber":58,"author":{"gitId":"Bandov"},"content":"        list.add(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":59,"author":{"gitId":"Bandov"},"content":"        printWithLines(\"Got it. I\u0027ve added this task:\", task.toString(), \"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"Bandov"},"content":"    private static void handleEvent(ArrayList\u003cTask\u003e list, String message) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"Bandov"},"content":"        String[] parts \u003d message.split(\" /from \", 2);","lastModifiedDate":"2024-01-20"},{"lineNumber":64,"author":{"gitId":"Bandov"},"content":"        if (parts.length \u003c 2 || !parts[1].contains(\" /to \")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The event time is missing or incomplete buddy.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"Bandov"},"content":"        String description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"Bandov"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \", 2);","lastModifiedDate":"2024-01-20"},{"lineNumber":69,"author":{"gitId":"Bandov"},"content":"        String fromTime \u003d timeParts[0].trim();","lastModifiedDate":"2024-01-20"},{"lineNumber":70,"author":{"gitId":"Bandov"},"content":"        String toTime \u003d timeParts[1].trim();","lastModifiedDate":"2024-01-20"},{"lineNumber":71,"author":{"gitId":"Bandov"},"content":"        Event task \u003d new Event(description, fromTime, toTime);","lastModifiedDate":"2024-01-20"},{"lineNumber":72,"author":{"gitId":"Bandov"},"content":"        list.add(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":73,"author":{"gitId":"Bandov"},"content":"        printWithLines(\"Got it. I\u0027ve added this task:\", task.toString(), \"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":74,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":76,"author":{"gitId":"Bandov"},"content":"    private static void handleList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"Bandov"},"content":"        ArrayList\u003cString\u003e taskDescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-20"},{"lineNumber":78,"author":{"gitId":"Bandov"},"content":"        taskDescriptions.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-20"},{"lineNumber":79,"author":{"gitId":"Bandov"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-01-20"},{"lineNumber":80,"author":{"gitId":"Bandov"},"content":"            taskDescriptions.add((i + 1) + \". \" + list.get(i).toString());","lastModifiedDate":"2024-01-20"},{"lineNumber":81,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":82,"author":{"gitId":"Bandov"},"content":"        printWithLines(taskDescriptions.toArray(new String[0]));","lastModifiedDate":"2024-01-20"},{"lineNumber":83,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"Bandov"},"content":"    private static void handleMark(ArrayList\u003cTask\u003e list, String message) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"Bandov"},"content":"        if (message.trim().equals(\"mark\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The task number is missing buddy.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":88,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"Bandov"},"content":"        int index \u003d Integer.parseInt(message.substring(5).trim()) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":90,"author":{"gitId":"Bandov"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":91,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! Task number is invalid buddy.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":92,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":93,"author":{"gitId":"Bandov"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2024-01-20"},{"lineNumber":94,"author":{"gitId":"Bandov"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-20"},{"lineNumber":95,"author":{"gitId":"Bandov"},"content":"        printWithLines(\"Nice! I\u0027ve marked this task as done:\", task.toString());","lastModifiedDate":"2024-01-20"},{"lineNumber":96,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":97,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":98,"author":{"gitId":"Bandov"},"content":"    private static void handleUnmark(ArrayList\u003cTask\u003e list, String message) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":99,"author":{"gitId":"Bandov"},"content":"        if (message.trim().equals(\"unmark\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":100,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The task number is missing buddy.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":101,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":102,"author":{"gitId":"Bandov"},"content":"        int index \u003d Integer.parseInt(message.substring(7).trim()) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":103,"author":{"gitId":"Bandov"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! Task number is invalid buddy.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"Bandov"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2024-01-20"},{"lineNumber":107,"author":{"gitId":"Bandov"},"content":"        task.unMarkAsDone();","lastModifiedDate":"2024-01-20"},{"lineNumber":108,"author":{"gitId":"Bandov"},"content":"        printWithLines(\"OK, I\u0027ve marked this task as not done yet:\", task.toString());","lastModifiedDate":"2024-01-20"},{"lineNumber":109,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":110,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":111,"author":{"gitId":"Bandov"},"content":"    private static void deleteTask(ArrayList\u003cTask\u003e list, String message) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":112,"author":{"gitId":"Bandov"},"content":"        if (message.trim().equals(\"delete\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":113,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! The task number is missing buddy.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":114,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":115,"author":{"gitId":"Bandov"},"content":"        int index \u003d Integer.parseInt(message.substring(7).trim()) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":116,"author":{"gitId":"Bandov"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":117,"author":{"gitId":"Bandov"},"content":"            throw new DukeException(\"OOPS!!! Task number is invalid buddy.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":118,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":119,"author":{"gitId":"Bandov"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2024-01-22"},{"lineNumber":120,"author":{"gitId":"Bandov"},"content":"        list.remove(index);","lastModifiedDate":"2024-01-22"},{"lineNumber":121,"author":{"gitId":"Bandov"},"content":"        printWithLines(\"OK, I\u0027ve deleted this task:\", task.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":122,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":124,"author":{"gitId":"Bandov"},"content":"    private static void printWithLines(String... messages) {","lastModifiedDate":"2024-01-22"},{"lineNumber":125,"author":{"gitId":"Bandov"},"content":"        System.out.println(\"------------------------------------------\");","lastModifiedDate":"2024-01-20"},{"lineNumber":126,"author":{"gitId":"Bandov"},"content":"        for (String message : messages) {","lastModifiedDate":"2024-01-22"},{"lineNumber":127,"author":{"gitId":"Bandov"},"content":"            System.out.println(message);","lastModifiedDate":"2024-01-22"},{"lineNumber":128,"author":{"gitId":"Bandov"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Bandov":126,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"        super(message);","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Bandov":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"    protected String from;","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"    protected String to;","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"        super(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"        return \"[E]\" + (isDone ? \"[X] \" : \"[ ] \") + super.description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Bandov":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"public class Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"    protected String description;","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"        return description;","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"        return isDone;","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"    public void unMarkAsDone() {","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"        return \"[T]\" + (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Bandov":30}},{"path":"src/main/java/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"then","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"    mkdir ../bin","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"fi","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"# delete output from previous run","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"then","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"fi","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"if ! javac -Xlint:none -d ../bin *.java","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"then","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"    exit 1","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"fi","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"java Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"# compare the output to the expected output","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"then","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"    exit 0","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"else","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"    exit 1","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"fi","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Bandov":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Bandov"},"content":"todo Read a book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Bandov"},"content":"deadline Submit assignment /by 2024-01-30","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Bandov"},"content":"event Team meeting /from 2024-01-25 10:00 /to 2024-01-25 12:00","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Bandov"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Bandov"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Bandov"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Bandov"},"content":"todo","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Bandov"},"content":"deadline Finish project","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Bandov"},"content":"event Conference /from 2024-01-28","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Bandov"},"content":"mark 100","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Bandov"},"content":"unmark 100","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Bandov"},"content":"unmark","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Bandov"},"content":"dance","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Bandov"},"content":"todo Complete Java project","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Bandov"},"content":"deadline File taxes /by 2024-04-15","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"event Birthday Party /from 2024-03-10 18:00 /to 2024-03-10 22:00","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Bandov"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Bandov"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Bandov"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Bandov"},"content":"deadline Prepare presentation /by 2024-03-05","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Bandov"},"content":"event Workshop /from 2024-02-20 09:00 /to 2024-02-20 12:00","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Bandov"},"content":"todo Clean the house","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"delete 1","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Bandov"},"content":"delete 3","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Bandov"},"content":"delete 100","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"delete","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Bandov"},"content":"todo Grocery Shopping","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Bandov"},"content":"todo Call Mom","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Bandov"},"content":"deadline Renew Insurance /by 2024-05-01","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Bandov"},"content":"event Doctor\u0027s Appointment /from 2024-04-20 15:00 /to 2024-04-20 16:00","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Bandov"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Bandov"},"content":"mark 4","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"Bandov"},"content":"mark 5","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"Bandov"},"content":"unmark 4","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Bandov":35}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Bandov"},"content":"if ! javac -Xlint:none -d ../bin /Users/dom/ip/src/main/java/*.java","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Bandov"},"content":"java -cp ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"Bandov"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"Bandov"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Bandov":4,"-":31}}]
