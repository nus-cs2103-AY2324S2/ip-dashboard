[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"plugins {","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"    id \u0027java\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"    id \u0027application\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"repositories {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    mavenCentral()","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"dependencies {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"test {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"    useJUnitPlatform()","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    testLogging {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"        showExceptions true","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"        showCauses true","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"        showStackTraces true","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"application {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"shadowJar {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"    archiveFileName \u003d \u0027Cinnamo.jar\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"run{","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"acekhoon":43}},{"path":"src/main/java/CinnamoRoll/CinnamoDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"class CinnamoDeadlineException extends CinnamoException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"        return \"Hi! Please provide more details for the todo activity in \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"                \"the correct format with \\\"/by\\\" followed by the specific deadline:) -- Cinnamo \u003e.\u003c\";","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":9}},{"path":"src/main/java/CinnamoRoll/CinnamoEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"class CinnamoEventException extends CinnamoException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"        return \"Hi! Please provide detailed schedule for the event with \\\"/from\\\" to indicate \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"                \"the starting time and \\\"/end\\\" to indicate ending time of the event:) -- Cinnamo \u003e.\u003c\";","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":9}},{"path":"src/main/java/CinnamoRoll/CinnamoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"class CinnamoException extends Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"        return \"Hi! I\u0027m Cinnamo:) Please provide me correct instruction again \u003e.\u003c\";","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":8}},{"path":"src/main/java/CinnamoRoll/CinnamoIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"class CinnamoIndexException extends CinnamoException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"        return \"The list index you provided is not on our to-do list yet :(( \" +","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"                \"Try it again! Cinnamo is always here \u003e.\u003c\";","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":9}},{"path":"src/main/java/CinnamoRoll/CinnamoTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"class CinnamoTimeException extends CinnamoException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"        return \"Hi! Please provide time information in a correct \" +","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"                \"format of \\\"mm-dd-yyyy hh:mm\\\" \u003e.\u003c\";","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":9}},{"path":"src/main/java/CinnamoRoll/CinnamoTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"class CinnamoTodoException extends CinnamoException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"        return \"Hi! Please provide details for todo activities \" +","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"                \"you want Cinnamo to record! :)\";","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":9}},{"path":"src/main/java/CinnamoRoll/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"class Deadlines extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"    private final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"    Deadlines(String str, LocalDateTime by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"        super(str);","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        this.deadline \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"    Deadlines(String str, LocalDateTime by, boolean marked) {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"        super(str, marked);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"        this.deadline \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"        return (this.isMarked ? \"[D][X]\" : \"[D][ ]\");","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"     * Returns a string that describes the number of tasks in the list,","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"     * description of the (deadline) task, deadline, task type and the marked status","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"     * @param length denotes the length of the list","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"    String addTask(int length) {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"        return String.format(\"Got it. I\u0027ve added this task:%n   %s%n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"                \"Now you have %d tasks in the list\", this.toString(), length);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), this.deadline.format(format));","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":39}},{"path":"src/main/java/CinnamoRoll/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"public class Duke {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"    private TaskList tasklist;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"    public Duke(String filepath) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"        this.tasklist \u003d new TaskList(storage.loadData(), filepath);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"     * Running the main part of the code to start the Chatbot Cinnamo","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"    public void run() throws Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"        this.ui.greetUser();","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"        while(true) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"            ui.respondUser(this.tasklist, input);","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"        ui.exitChat();","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"     * Setting the path directory to load data from the input and","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"     * the file to write and update the output","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"        new Duke(\"src/main/java/Cinnamo.txt\").run();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":40}},{"path":"src/main/java/CinnamoRoll/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.time.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"class Events extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"    private final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"    Events(String str, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"        super(str);","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"    Events(String str, LocalDateTime from, LocalDateTime to, boolean marked) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"        super(str, marked);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"        return (this.isMarked ? \"[E][X]\" : \"[E][ ]\");","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"     * Returns a string that describes the number of tasks in the list,","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"     * description of the (event) task, starting the and ending time of","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"     * the event task with getStatusIcon with task type and the marked status","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"     * @param length denotes the length of the list","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    String addTask(int length) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"        return String.format(\"Got it. I\u0027ve added this task:%n   \" +","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"                \"%s%nNow you have %d tasks in the list\", this.toString(), length);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"        return String.format(\"%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"                this.from.format(format), this.to.format(format));","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":43}},{"path":"src/main/java/CinnamoRoll/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"    private final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"    String[] parseInput(String str) {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"        String[] output \u003d str.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"        output[0] \u003d output[0].toUpperCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        return output;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"     * Parses a string array representing a task and creates the corresponding Task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"     * Supported task types are \"TODO,\" \"DEADLINE,\" and \"EVENT.\"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"     * For \"TODO,\" expects the task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"     * For \"DEADLINE,\" expects the task description and deadline in the format \"yyyy-MM-dd HH:mm.\"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"     * For \"EVENT,\" expects the task description and event schedule in the format \"yyyy-MM-dd HH:mm /from yyyy-MM-dd HH:mm /to yyyy-MM-dd HH:mm.\"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"     * @param arr The string array representing the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"     * @return A Task object based on the parsed input.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"     * @throws CinnamoTimeException If there is an error parsing the date and time information.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    Task parseTasks(String[] arr) throws CinnamoTimeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"            String identifier \u003d arr[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"            if (identifier.equals(\"TODO\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"                return new Todos(arr[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"            } else if (identifier.equals(\"DEADLINE\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"                String[] schedule \u003d arr[1].split(\" /by \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"                return new Deadlines(schedule[0], LocalDateTime.parse(schedule[1], this.format));","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"                String[] schedule \u003d arr[1].split(\" /from | /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"                return new Events(schedule[0], LocalDateTime.parse(schedule[1], this.format),","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"                        LocalDateTime.parse(schedule[2], this.format));","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"        } catch (DateTimeParseException dtp) {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"            throw new CinnamoTimeException();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":43}},{"path":"src/main/java/CinnamoRoll/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"    private final String PATH;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    private final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"    Storage(String filepath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"        this.PATH \u003d filepath;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"     * Loads tasks from a file specified by the PATH constant and creates an ArrayList of Task objects.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"     * The file is expected to have each task represented in a specific format:","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"     * \"T | [X or space] | taskDescription\" for Todos,","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"     * \"D | [X or space] | taskDescription /by deadline\" for Deadlines,","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"     * \"E | [X or space] | taskDescription /from startDate /to endDate\" for Events.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"     * @throws IOException If there is an error reading the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"    ArrayList\u003cTask\u003e loadData() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"            ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"            BufferedReader bf \u003d new BufferedReader(new FileReader(PATH));","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"            String input;","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"            while ((input \u003d bf.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"                Task task;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"                String[] info \u003d input.split(\"\\\\|\", 3);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"                boolean marked \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"                switch (info[1]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"                    case \"X\":","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"                        marked \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"                        break;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"                    case \" \":","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"                        marked \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"                        break;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"                    default:","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"                        System.out.println(\"Oops! No Markings Provided in Correct Format:(\");","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"                switch (info[0].toUpperCase()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"                    case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"                        task \u003d new Todos(info[2], marked);","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"                        output.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"                        break;","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"                    case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"                        String[] deadline \u003d info[2].split(\"/by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"                        task \u003d new Deadlines(deadline[0], LocalDateTime.parse(deadline[1], this.format), marked);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"                        output.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"                        break;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"                    case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"                        String[] event \u003d info[2].split(\"/from | /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"                        task \u003d new Events(event[0], LocalDateTime.parse(event[1], this.format), LocalDateTime.parse(event[2], this.format), marked);","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"                        output.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"                        break;","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"            return output;","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"        } catch(FileNotFoundException ex){","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"            File f \u003d new File(PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"            f.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":72}},{"path":"src/main/java/CinnamoRoll/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"abstract class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    protected final String taskname;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    boolean isMarked;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"    Task(String str) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"        this.taskname \u003d str;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"    Task(String str, boolean marked) {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        this.taskname \u003d str;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"        this.isMarked \u003d marked;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"     * Updates the marked status of the tasks stored in the list to be true (marked)","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    protected void markTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"     * Updates the marked status of the tasks stored in the list to be false (unmarked)","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    protected void unmarkTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"     * Retrieve status icon in the form of [(task type)][(marked status)]","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    abstract String getStatusIcon();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"     * Prints the description and timing for the task with the status","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"    abstract String addTask(int i);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"     * Checks whether task\u0027s taskname contains the given string for find method","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"    protected boolean containString(String str) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"        return (this.taskname.contains(str) ? true : false);","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"        return this.getStatusIcon() + \" \" + this.taskname;","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":50}},{"path":"src/main/java/CinnamoRoll/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"    private final String PATH;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"    private enum Users {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        MARK,","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"        UNMARK,","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"        LIST,","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"        DELETE,","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"        TODO,","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"        DEADLINE,","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"        EVENT,","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"        FIND","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    TaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"        this.PATH \u003d \"src/main/java/test.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks, String path) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"        this.PATH \u003d path;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    public Task getUser(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"acekhoon"},"content":"     * Writes the tasks stored in the current task list to the file specified by the PATH constant.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"acekhoon"},"content":"     * The tasks are formatted and written according to the list() method\u0027s output.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"acekhoon"},"content":"     * @throws IOException If there is an error writing to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"acekhoon"},"content":"    public void writeInto() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"acekhoon"},"content":"            FileWriter filewriter \u003d new FileWriter(this.PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"acekhoon"},"content":"            filewriter.write(this.listTask());","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"acekhoon"},"content":"            filewriter.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"acekhoon"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"acekhoon"},"content":"            System.out.println(\"No input provided!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"acekhoon"},"content":"     * Executes a task instruction, adds the task to the task list, and writes the updated list to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"acekhoon"},"content":"     * @param instruction An array representing the task instruction.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"acekhoon"},"content":"     * @return A string message indicating the success of adding the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"acekhoon"},"content":"     * @throws IOException If there is an error writing to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"acekhoon"},"content":"     * @throws CinnamoException If there is an error parsing the task instruction or a specific type of task-related exception occurs.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"acekhoon"},"content":"    private String executeTask(String[] instruction) throws IOException, CinnamoException {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"acekhoon"},"content":"            Task task \u003d this.parser.parseTasks(instruction);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"acekhoon"},"content":"            this.tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"acekhoon"},"content":"            this.writeInto();","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"acekhoon"},"content":"            return task.addTask(this.tasks.size());","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"acekhoon"},"content":"        } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"acekhoon"},"content":"            if (instruction[0].equals(\"TODO\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"acekhoon"},"content":"                throw new CinnamoTodoException();","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"acekhoon"},"content":"            } else if (instruction[0].equals(\"DEADLINE\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"acekhoon"},"content":"                throw new CinnamoDeadlineException();","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"acekhoon"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"acekhoon"},"content":"                throw new CinnamoEventException();","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"acekhoon"},"content":"     * Generates a formatted string listing all tasks in the current task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"acekhoon"},"content":"     * @return A string representation of the tasks in the format \"1. [Task1] \\n 2. [Task2] \\n ...\"","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"acekhoon"},"content":"    private String listTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"acekhoon"},"content":"        String output \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"acekhoon"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"acekhoon"},"content":"            output +\u003d String.valueOf(i + 1) + \".\" + this.tasks.get(i).toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"acekhoon"},"content":"            if (i \u003c this.tasks.size() - 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"acekhoon"},"content":"                output +\u003d \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"acekhoon"},"content":"        return output;","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"acekhoon"},"content":"     * Searches for tasks containing a specified string and generates a formatted string listing the matching tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"acekhoon"},"content":"     * @param str The string to search for within task descriptions.","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"acekhoon"},"content":"     * @return A formatted string listing the tasks that contain the specified string.","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"acekhoon"},"content":"    private String findTask(String str) {","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"acekhoon"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"acekhoon"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"acekhoon"},"content":"            if (this.tasks.get(i).containString(str)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"acekhoon"},"content":"                output +\u003d String.valueOf(i + 1) + \".\" + this.tasks.get(i).toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"acekhoon"},"content":"                if (i \u003c this.tasks.size() - 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"acekhoon"},"content":"                    output +\u003d \"\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"acekhoon"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"acekhoon"},"content":"        return output;","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"acekhoon"},"content":"     * Deletes a task from the task list based on the provided index and updates the file accordingly.","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"acekhoon"},"content":"     * @param str An array containing the command and task index for deletion.","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"acekhoon"},"content":"     * @return A formatted string indicating the success of the deletion and the updated task list size.","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"acekhoon"},"content":"     * @throws CinnamoIndexException If the provided index is out of bounds.","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"acekhoon"},"content":"     * @throws Exception If there is an error parsing the index or writing to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"acekhoon"},"content":"    private String deleteTask(String[] str) throws Exception, CinnamoIndexException {","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"acekhoon"},"content":"            int index \u003d Integer.parseInt(str[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"acekhoon"},"content":"            Task temp \u003d this.tasks.get(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"acekhoon"},"content":"            this.tasks.remove(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"acekhoon"},"content":"            this.writeInto();","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"acekhoon"},"content":"            return String.format(\"Noted. I\u0027ve removed the following task:%n   %s%n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"acekhoon"},"content":"                    \"Now, you have %d tasks in the list\", temp.toString(), this.tasks.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"acekhoon"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"acekhoon"},"content":"            throw new CinnamoIndexException();","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"acekhoon"},"content":"     * Marks a task as done in the task list based on the provided index and updates the file accordingly.","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"acekhoon"},"content":"     * @param str An array containing the command and task index for marking the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"acekhoon"},"content":"     * @return A formatted string indicating the success of marking the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"acekhoon"},"content":"     * @throws CinnamoIndexException If the provided index is out of bounds.","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"acekhoon"},"content":"     * @throws Exception If there is an error parsing the index or writing to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"acekhoon"},"content":"    private String markTask(String[] str) throws Exception, CinnamoIndexException {","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"acekhoon"},"content":"            int index \u003d Integer.parseInt(str[1]) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"acekhoon"},"content":"            this.tasks.get(index).markTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"acekhoon"},"content":"            this.writeInto();","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"acekhoon"},"content":"            return String.format(\"Nice! I\u0027ve marked this task as done:%n   %s\",","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"acekhoon"},"content":"                    this.tasks.get(index).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"acekhoon"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"acekhoon"},"content":"            throw new CinnamoIndexException();","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"acekhoon"},"content":"     * Marks a task as not done in the task list based on the provided index and updates the file accordingly.","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"acekhoon"},"content":"     * @param str An array containing the command and task index for marking the task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"acekhoon"},"content":"     * @return A formatted string indicating the success of marking the task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"acekhoon"},"content":"     * @throws CinnamoIndexException If the provided index is out of bounds.","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"acekhoon"},"content":"     * @throws Exception If there is an error parsing the index or writing to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"acekhoon"},"content":"    private String unmarkTask(String[] str) throws Exception, CinnamoIndexException {","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"acekhoon"},"content":"            int index \u003d Integer.parseInt(str[1]) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"acekhoon"},"content":"            this.tasks.get(index).unmarkTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"acekhoon"},"content":"            this.writeInto();","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"acekhoon"},"content":"            return String.format(\"Ok! I\u0027ve marked this task as not done yet:%n      %s\",","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"acekhoon"},"content":"                    this.tasks.get(index).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"acekhoon"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"acekhoon"},"content":"            throw new CinnamoIndexException();","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"acekhoon"},"content":"     * Processes and responds to the user\u0027s input by delegating tasks to corresponding methods.","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"acekhoon"},"content":"     * @param str The user\u0027s input to be processed.","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"acekhoon"},"content":"     * @throws CinnamoException If an error related to task execution or command parsing occurs.","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"acekhoon"},"content":"     * @throws Exception If there is an error during the response process.","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"acekhoon"},"content":"    void respondUser(String str) throws Exception, CinnamoException {","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"acekhoon"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":186,"author":{"gitId":"acekhoon"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-01"},{"lineNumber":187,"author":{"gitId":"acekhoon"},"content":"            String[] arr \u003d parser.parseInput(str);","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"acekhoon"},"content":"            switch (TaskList.Users.valueOf(arr[0])) {","lastModifiedDate":"2024-02-01"},{"lineNumber":190,"author":{"gitId":"acekhoon"},"content":"                case MARK:","lastModifiedDate":"2024-02-01"},{"lineNumber":191,"author":{"gitId":"acekhoon"},"content":"                    System.out.println(this.markTask(arr));","lastModifiedDate":"2024-02-02"},{"lineNumber":192,"author":{"gitId":"acekhoon"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":193,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":194,"author":{"gitId":"acekhoon"},"content":"                case UNMARK:","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"acekhoon"},"content":"                    System.out.println(this.unmarkTask(arr));","lastModifiedDate":"2024-02-02"},{"lineNumber":196,"author":{"gitId":"acekhoon"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":197,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":198,"author":{"gitId":"acekhoon"},"content":"                case LIST:","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"acekhoon"},"content":"                    System.out.println(this.listTask());","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"acekhoon"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":201,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":202,"author":{"gitId":"acekhoon"},"content":"                case DELETE:","lastModifiedDate":"2024-02-01"},{"lineNumber":203,"author":{"gitId":"acekhoon"},"content":"                    System.out.println(this.deleteTask(arr));","lastModifiedDate":"2024-02-02"},{"lineNumber":204,"author":{"gitId":"acekhoon"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":205,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":206,"author":{"gitId":"acekhoon"},"content":"                case TODO:","lastModifiedDate":"2024-02-01"},{"lineNumber":207,"author":{"gitId":"acekhoon"},"content":"                    System.out.println(this.executeTask(arr));","lastModifiedDate":"2024-02-02"},{"lineNumber":208,"author":{"gitId":"acekhoon"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":209,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":210,"author":{"gitId":"acekhoon"},"content":"                case DEADLINE:","lastModifiedDate":"2024-02-01"},{"lineNumber":211,"author":{"gitId":"acekhoon"},"content":"                    System.out.println(this.executeTask(arr));","lastModifiedDate":"2024-02-02"},{"lineNumber":212,"author":{"gitId":"acekhoon"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":213,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":214,"author":{"gitId":"acekhoon"},"content":"                case EVENT:","lastModifiedDate":"2024-02-01"},{"lineNumber":215,"author":{"gitId":"acekhoon"},"content":"                    System.out.println(this.executeTask(arr));","lastModifiedDate":"2024-02-02"},{"lineNumber":216,"author":{"gitId":"acekhoon"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":217,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":218,"author":{"gitId":"acekhoon"},"content":"                case FIND:","lastModifiedDate":"2024-02-02"},{"lineNumber":219,"author":{"gitId":"acekhoon"},"content":"                    System.out.println(this.findTask(arr[1]));","lastModifiedDate":"2024-02-02"},{"lineNumber":220,"author":{"gitId":"acekhoon"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":221,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":222,"author":{"gitId":"acekhoon"},"content":"                default:","lastModifiedDate":"2024-02-01"},{"lineNumber":223,"author":{"gitId":"acekhoon"},"content":"                    throw new CinnamoException();","lastModifiedDate":"2024-02-01"},{"lineNumber":224,"author":{"gitId":"acekhoon"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":225,"author":{"gitId":"acekhoon"},"content":"        } catch (CinnamoException cin) {","lastModifiedDate":"2024-02-01"},{"lineNumber":226,"author":{"gitId":"acekhoon"},"content":"            System.out.println(cin.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":227,"author":{"gitId":"acekhoon"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":228,"author":{"gitId":"acekhoon"},"content":"            CinnamoException cin \u003d new CinnamoException();","lastModifiedDate":"2024-02-01"},{"lineNumber":229,"author":{"gitId":"acekhoon"},"content":"            System.out.println(cin.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":230,"author":{"gitId":"acekhoon"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":231,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":232,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":232}},{"path":"src/main/java/CinnamoRoll/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"class Todos extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"    Todos(String str) {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"        super(str);","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    Todos(String str, boolean marked) {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"        super(str, marked);","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"    String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        return (this.isMarked ? \"[T][X]\" : \"[T][ ]\");","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"     * Returns a string that describes the number of tasks in the list,","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"     * description of the (deadline) task, task type and the marked status","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"     * @param length denotes the length of the list","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    String addTask(int length) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"        return String.format(\"Got it. I\u0027ve added this task:%n   \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"                \"%s%nNow you have %d tasks in the list\", super.toString(), length);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":26}},{"path":"src/main/java/CinnamoRoll/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"    private final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"    private static final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"     * Greet the user by printing out the logo and saying hi!","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"    void greetUser() {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"        System.out.println(\"Hello! I\u0027m CinnamoRoll!\" + \"\\n\" + \"What can I do for you? \\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"     * Saying bye to the user who attempts to exit the chat!","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"    void exitChat() {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"     * Process and respond to the user\u0027s request in terms of input string","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"    void respondUser(TaskList tasks, String str) throws Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"        tasks.respondUser(str);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":34}},{"path":"src/test/java/CinnamoRoll/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"class DeadlineTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"    void toStringTest() {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"        LocalDateTime time \u003d LocalDateTime.parse(\"2024-02-05 14:00\", format);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"        Deadlines deadline \u003d new Deadlines(\"MA5211 Assignment 1\", time, true);","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"        assertEquals(\"[D][X] MA5211 Assignment 1 (by: Feb 05 2024 14:00)\", deadline.toString(),","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"                \"Testing toString method of deadline class\");","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"    void getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"        LocalDateTime time \u003d LocalDateTime.parse(\"2024-02-05 14:00\", format);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"        Deadlines deadline1 \u003d new Deadlines(\"MA5211 Assignment 1\", time, true);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"        Deadlines deadline2 \u003d new Deadlines(\"MA5211 Assignment 1\", time, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"        assertEquals(\"[D][X]\", deadline1.getStatusIcon(),","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"                \"Testing whether deadline class marks the event correctly\");","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"        assertEquals(\"[D][ ]\", deadline2.getStatusIcon(),","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"                \"Testing whether deadline class unmarks the event correctly\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":29}},{"path":"src/test/java/CinnamoRoll/TestTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"package CinnamoRoll;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"class TestTaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"    void testMark() throws Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"deadline MA5211 Assignment 1 /by 2024-02-05 14:00\");","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"mark 1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"acekhoon"},"content":"        assertEquals(\"[D][X] MA5211 Assignment 1 (by: Feb 05 2024 14:00)\", task.getUser(0).toString(),","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"acekhoon"},"content":"                \"Testing the marking for the task event from the list of events\");","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"acekhoon"},"content":"    void testExecute() throws Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"acekhoon"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"todo what to do\");","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"acekhoon"},"content":"        assertEquals(\"[T][ ] what to do\", task.getUser(0).toString(),","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"acekhoon"},"content":"                \"Checking whether the event is added properly into the list \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"acekhoon"},"content":"                        \"with correct class of the object\");","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"acekhoon"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"acekhoon"},"content":"    void testDelete() throws Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"acekhoon"},"content":"        TaskList task \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"todo what to do\");","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"deadline MA5211 Assignment 1 /by 2024-02-05 14:00\");","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"todo cs2103t ip\");","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"delete 2\");","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"acekhoon"},"content":"        task.respondUser(\"mark 2\");","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"acekhoon"},"content":"        assertEquals(\"[T][X] cs2103t ip\", task.getUser(1).toString(),","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"acekhoon"},"content":"                \"Test should return the third event of the list before \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"acekhoon"},"content":"                        \"deletion if done properly\");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"acekhoon"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"acekhoon"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"acekhoon":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"acekhoon"},"content":"deadline CS4269 Assignment 2 /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"acekhoon"},"content":"todo MA5211 Assignment 1","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"acekhoon"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"acekhoon"},"content":"event CS2101 Presentation Meeting /from Jan 25th 7:30pm /to 9pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"acekhoon"},"content":"mark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"acekhoon"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"acekhoon"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"acekhoon"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"acekhoon"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"acekhoon":9}}]
