[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"# DukeProject ","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"DukeProject is a task management application designed to simplify your life. It offers a range of features to help you stay organized and productive.","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"\u003e‚ÄúYour mind is for having ideas, not holding them.‚Äù ‚Äì David Allen","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"**DukePro frees your mind of having to remember things you need to do. It\u0027s,**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"- Text-based interface for quick task management","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"- Easy to learn and use","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"- Super fast performance","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"**All you need to do is:**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"1. Download it from [here](https://github.com/MaYuehan/ip/releases/tag/A-JUnit).","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"2. Double-click it.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"3. Add your tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"4. Let it manage your tasks for you üòâ ","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"And it is __FREE__!","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"## Key Features","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"- [x] Task tracking and management","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"- [x] Deadline management","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"If you are a Java programmer, you can use it to practice Java too. Here\u0027s the main method:","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"```java","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"public class Duke {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"     * Constructs a Duke object with the specified file path.","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"     * Runs the chatbot, displaying welcome message and processing user commands.","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"    public void run() {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"MaYuehan"},"content":"            try {","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"MaYuehan"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"MaYuehan"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"MaYuehan"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"MaYuehan"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"MaYuehan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"MaYuehan"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"MaYuehan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"MaYuehan"},"content":"        new Duke(\"./data/botYue.txt\").run();","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"MaYuehan":75}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"    //id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"/*dependencies {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"}*/","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MaYuehan":21,"-":44}},{"path":"data/botYue.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"T | 0 | read book","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"D | 0 | return book | 2/12/2019 1800","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"T | 1 | join sports club","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"E | 0 | project meeting  | Dec 02 2019 18:00-Oct 15 2019 18:00","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"D | 0 | return book  | Oct 15 2019","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"D | 0 | return book  | Dec 02 2019 18:00","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"D | 0 | return book  | Dec 02 2019","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"E | 1 | project meeting  | Oct 15 2019 00:00-Oct 15 2019 18:00","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"T | 0 | borrow book","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"D | 0 | return book  | Dec 02 2019 18:00","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"E | 1 | project meeting  | Dec 02 2019-Dec 02 2019","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"E | 0 | project meeting  | Dec 02 2019 18:00-Dec 02 2019 18:30","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"D | 0 | return book  | Dec 02 2019 18:00","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"MaYuehan":13}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"# duke User Guide","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"MaYuehan":1,"-":29}},{"path":"src/main/java/duke/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":" * Represents a command to be executed by Duke.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"     * Executes the command.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":30}},{"path":"src/main/java/duke/Command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.DeadlineTask;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"    private String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"    private String deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"     * Constructs a DeadlineCommand object with the given description and deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"     * @param deadline    The deadline of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"    public DeadlineCommand(String description, String deadline) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"     * Executes the DeadlineCommand, adding a deadline task to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"        Task task \u003d new DeadlineTask(description, deadline);","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"        int count \u003d tasks.size();;","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"        ui.showAddedMessage(task, count);","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"     * @return Always returns false, as this is not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":60}},{"path":"src/main/java/duke/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"    private int INDEX;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"     * Constructs a DeleteCommand object with the given task index.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"     * @param TASK_INDEX The index of the task to be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"    public DeleteCommand(int TASK_INDEX) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"        this.INDEX \u003d TASK_INDEX;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"     * Executes the DeleteCommand, deleting a task from the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"        if (INDEX \u003c 1 || INDEX \u003e tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"OOPS!!! duke.Tasks.Task index is out of range.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"        Task deletedTask \u003d tasks.get(INDEX - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"        int count \u003d tasks.size() - 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"        tasks.delete(INDEX - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"        Ui.showDeletedMessage(deletedTask, count);","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"     * @return Always returns false, as this is not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":58}},{"path":"src/main/java/duke/Command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.EventTask;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":" * Represents a command to add an event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"    private String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"    private String startTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"    private String endTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"     * Constructs an EventCommand object with the given description, start time, and end time.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"     * @param startTime   The start time of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"     * @param endTime     The end time of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"    public EventCommand(String description, String startTime, String endTime) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"     * Executes the EventCommand, adding an event task to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"        Task task \u003d new EventTask(description, startTime, endTime);","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"        int count \u003d tasks.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"        ui.showAddedMessage(task, count);","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"     * @return Always returns false, as this is not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"MaYuehan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"MaYuehan"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":65}},{"path":"src/main/java/duke/Command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"//package duke.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"     * Executes the ExitCommand, showing a goodbye message.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"     * @param tasks   The list of tasks (not used).","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"     * @param storage The storage handler (not used).","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"        Ui.showGoodbyeMessage();","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"     * @return Always returns true, as this is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"        return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":35}},{"path":"src/main/java/duke/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":" * Represents a command to find tasks containing a specified keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"    private String keyword;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"     * @param keyword The keyword to search for in tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"     * Executes the find command, searching for tasks containing the keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"     * Displays the matching tasks in the UI.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"     * @param tasks   The list of tasks to search within.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"        for (Task task : tasks.getAllTasks()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"            if (task.getTask().contains(keyword)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"        ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"     * @return False, as FindCommand does not exit the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"MaYuehan":55}},{"path":"src/main/java/duke/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"     * Executes the ListCommand, displaying the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"     * @return Always returns false, as this is not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":36}},{"path":"src/main/java/duke/Command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"    private int INDEX;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"     * Constructs a MarkCommand object with the given task index.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"     * @param TASK_INDEX The index of the task to mark as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"    public MarkCommand(int TASK_INDEX) {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"        this.INDEX \u003d TASK_INDEX;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"     * Executes the MarkCommand, marking the specified task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"        if (INDEX \u003c 1 || INDEX \u003e tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"OOPS!!! duke.Tasks.Task index is out of range.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"        Task task \u003d tasks.get(INDEX - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"        task.markDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"        ui.showMarkedMessage(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"     * @return Always returns false, as this is not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":60}},{"path":"src/main/java/duke/Command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TodoTask;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":" * Represents a command to add a new todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"    private String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"     * Constructs a TodoCommand object with the given task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"     * @param description The description of the todo task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"     * Executes the TodoCommand, adding a new todo task to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"        Task task \u003d new TodoTask(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"        int count \u003d tasks.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"        ui.showAddedMessage(task, count);","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"     * @return Always returns false, as this is not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":57}},{"path":"src/main/java/duke/Command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":" * Represents a command to mark a task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"    private int INDEX;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"     * Constructs an UnmarkCommand object with the given task index.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"     * @param TASK_INDEX The index of the task to mark as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"    public UnmarkCommand(int TASK_INDEX) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"        this.INDEX \u003d TASK_INDEX;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"     * Executes the UnmarkCommand, marking the specified task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"        if (INDEX \u003c 1 || INDEX \u003e tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"OOPS!!! duke.Tasks.Task index is out of range.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"        Task task \u003d tasks.get(INDEX - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"        task.markNotDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"        ui.showUnmarkedMessage(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"     * @return Always returns false, as this is not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":56}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"    private void flip() {","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"        db.flip();","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"        return db;","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"MaYuehan":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import duke.Command.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"public class Duke {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"     * Constructs a Duke object with the specified file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"    public Duke() {","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"        String filePath \u003d \"./data/botYue.txt\";","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"MaYuehan"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"MaYuehan"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"MaYuehan"},"content":"     * Runs the chatbot, displaying welcome message and processing user commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"MaYuehan"},"content":"    public void run() {","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"MaYuehan"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"MaYuehan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"MaYuehan"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"MaYuehan"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"MaYuehan"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"MaYuehan"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"MaYuehan"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"MaYuehan"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"MaYuehan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"MaYuehan"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"MaYuehan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"MaYuehan"},"content":"        new Duke(\"./data/botYue.txt\").run();","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"MaYuehan"},"content":"/*","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"MaYuehan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"MaYuehan"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"MaYuehan"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"MaYuehan"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"MaYuehan"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"MaYuehan"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"MaYuehan"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"MaYuehan"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"MaYuehan"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"MaYuehan"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"MaYuehan"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"MaYuehan"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"MaYuehan"},"content":"        stage.show();","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"MaYuehan"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"MaYuehan"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"MaYuehan"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"MaYuehan"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":113,"author":{"gitId":"MaYuehan"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"MaYuehan"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"MaYuehan"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"MaYuehan"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"MaYuehan"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"MaYuehan"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"MaYuehan"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-06"},{"lineNumber":123,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":124,"author":{"gitId":"MaYuehan"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-06"},{"lineNumber":125,"author":{"gitId":"MaYuehan"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":127,"author":{"gitId":"MaYuehan"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":129,"author":{"gitId":"MaYuehan"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":130,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":131,"author":{"gitId":"MaYuehan"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":132,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":133,"author":{"gitId":"MaYuehan"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":134,"author":{"gitId":"MaYuehan"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":135,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"MaYuehan"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"MaYuehan"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"MaYuehan"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2024-02-06"},{"lineNumber":140,"author":{"gitId":"MaYuehan"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-06"},{"lineNumber":141,"author":{"gitId":"MaYuehan"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2024-02-06"},{"lineNumber":142,"author":{"gitId":"MaYuehan"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-06"},{"lineNumber":143,"author":{"gitId":"MaYuehan"},"content":"        });","lastModifiedDate":"2024-02-06"},{"lineNumber":144,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":145,"author":{"gitId":"MaYuehan"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-06"},{"lineNumber":146,"author":{"gitId":"MaYuehan"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2024-02-06"},{"lineNumber":147,"author":{"gitId":"MaYuehan"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-06"},{"lineNumber":148,"author":{"gitId":"MaYuehan"},"content":"        });","lastModifiedDate":"2024-02-06"},{"lineNumber":149,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":150,"author":{"gitId":"MaYuehan"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2024-02-06"},{"lineNumber":151,"author":{"gitId":"MaYuehan"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-06"},{"lineNumber":152,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":153,"author":{"gitId":"MaYuehan"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2024-02-06"},{"lineNumber":154,"author":{"gitId":"MaYuehan"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-06"},{"lineNumber":155,"author":{"gitId":"MaYuehan"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-06"},{"lineNumber":156,"author":{"gitId":"MaYuehan"},"content":"        });","lastModifiedDate":"2024-02-06"},{"lineNumber":157,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":158,"author":{"gitId":"MaYuehan"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-06"},{"lineNumber":159,"author":{"gitId":"MaYuehan"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-06"},{"lineNumber":160,"author":{"gitId":"MaYuehan"},"content":"        });","lastModifiedDate":"2024-02-06"},{"lineNumber":161,"author":{"gitId":"MaYuehan"},"content":"    }*/","lastModifiedDate":"2024-02-06"},{"lineNumber":162,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":163,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":164,"author":{"gitId":"MaYuehan"},"content":"     * Iteration 1:","lastModifiedDate":"2024-02-06"},{"lineNumber":165,"author":{"gitId":"MaYuehan"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2024-02-06"},{"lineNumber":166,"author":{"gitId":"MaYuehan"},"content":"     * @param text String containing text to add","lastModifiedDate":"2024-02-06"},{"lineNumber":167,"author":{"gitId":"MaYuehan"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2024-02-06"},{"lineNumber":168,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":169,"author":{"gitId":"MaYuehan"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-06"},{"lineNumber":170,"author":{"gitId":"MaYuehan"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2024-02-06"},{"lineNumber":171,"author":{"gitId":"MaYuehan"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-06"},{"lineNumber":172,"author":{"gitId":"MaYuehan"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-06"},{"lineNumber":173,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":174,"author":{"gitId":"MaYuehan"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-06"},{"lineNumber":175,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":176,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":177,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":178,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":179,"author":{"gitId":"MaYuehan"},"content":"     * Iteration 2:","lastModifiedDate":"2024-02-06"},{"lineNumber":180,"author":{"gitId":"MaYuehan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-06"},{"lineNumber":181,"author":{"gitId":"MaYuehan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-06"},{"lineNumber":182,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":183,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":184,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":185,"author":{"gitId":"MaYuehan"},"content":"    /*private void handleUserInput() {","lastModifiedDate":"2024-02-06"},{"lineNumber":186,"author":{"gitId":"MaYuehan"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2024-02-06"},{"lineNumber":187,"author":{"gitId":"MaYuehan"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2024-02-06"},{"lineNumber":188,"author":{"gitId":"MaYuehan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-06"},{"lineNumber":189,"author":{"gitId":"MaYuehan"},"content":"                new DialogBox(userText, new ImageView(user)),","lastModifiedDate":"2024-02-06"},{"lineNumber":190,"author":{"gitId":"MaYuehan"},"content":"                new DialogBox(dukeText, new ImageView(duke))","lastModifiedDate":"2024-02-06"},{"lineNumber":191,"author":{"gitId":"MaYuehan"},"content":"        );","lastModifiedDate":"2024-02-06"},{"lineNumber":192,"author":{"gitId":"MaYuehan"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-06"},{"lineNumber":193,"author":{"gitId":"MaYuehan"},"content":"    }*/","lastModifiedDate":"2024-02-06"},{"lineNumber":194,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":195,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":196,"author":{"gitId":"MaYuehan"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-06"},{"lineNumber":197,"author":{"gitId":"MaYuehan"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-06"},{"lineNumber":198,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":199,"author":{"gitId":"MaYuehan"},"content":"    String getResponse(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":200,"author":{"gitId":"MaYuehan"},"content":"        return \"Duke heard: \" + input;","lastModifiedDate":"2024-02-06"},{"lineNumber":201,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":202,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":203,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":204,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":205,"author":{"gitId":"MaYuehan"},"content":"/*","lastModifiedDate":"2024-01-29"},{"lineNumber":206,"author":{"gitId":"MaYuehan"},"content":"public class duke.Duke {","lastModifiedDate":"2024-01-29"},{"lineNumber":207,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":208,"author":{"gitId":"MaYuehan"},"content":"    private static final duke.Tasks.Task[] store \u003d new duke.Tasks.Task[100];","lastModifiedDate":"2024-01-29"},{"lineNumber":209,"author":{"gitId":"MaYuehan"},"content":"    private static int count \u003d 0;","lastModifiedDate":"2024-01-22"},{"lineNumber":210,"author":{"gitId":"MaYuehan"},"content":"    private static final String DATA_FILE_PATH \u003d \"./data/botYue.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":211,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":212,"author":{"gitId":"MaYuehan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-23"},{"lineNumber":213,"author":{"gitId":"MaYuehan"},"content":"        dialogue();","lastModifiedDate":"2024-01-23"},{"lineNumber":214,"author":{"gitId":"MaYuehan"},"content":"        loadTasks();","lastModifiedDate":"2024-01-28"},{"lineNumber":215,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":216,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":217,"author":{"gitId":"MaYuehan"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-23"},{"lineNumber":218,"author":{"gitId":"MaYuehan"},"content":"        String inputs;","lastModifiedDate":"2024-01-23"},{"lineNumber":219,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":220,"author":{"gitId":"MaYuehan"},"content":"        do {","lastModifiedDate":"2024-01-23"},{"lineNumber":221,"author":{"gitId":"MaYuehan"},"content":"            inputs \u003d scanner.nextLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":222,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":223,"author":{"gitId":"MaYuehan"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":224,"author":{"gitId":"MaYuehan"},"content":"                check(inputs);","lastModifiedDate":"2024-01-23"},{"lineNumber":225,"author":{"gitId":"MaYuehan"},"content":"                saveTasks();","lastModifiedDate":"2024-01-28"},{"lineNumber":226,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":227,"author":{"gitId":"MaYuehan"},"content":"            } catch (duke.DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":228,"author":{"gitId":"MaYuehan"},"content":"                System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":229,"author":{"gitId":"MaYuehan"},"content":"                System.out.println(\"    \" + e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":230,"author":{"gitId":"MaYuehan"},"content":"                System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":231,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":232,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":233,"author":{"gitId":"MaYuehan"},"content":"        } while (!inputs.equalsIgnoreCase(\"bye\"));","lastModifiedDate":"2024-01-23"},{"lineNumber":234,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":235,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":236,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":237,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":238,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":239,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":240,"author":{"gitId":"MaYuehan"},"content":"    public static void dialogue() {","lastModifiedDate":"2024-01-23"},{"lineNumber":241,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":242,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":243,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Hello! I\u0027m BotYue\");","lastModifiedDate":"2024-01-28"},{"lineNumber":244,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":245,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":246,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":247,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":248,"author":{"gitId":"MaYuehan"},"content":"    public static void check(String input) throws duke.DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":249,"author":{"gitId":"MaYuehan"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":250,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":251,"author":{"gitId":"MaYuehan"},"content":"        } else if (input.startsWith(\"list\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":252,"author":{"gitId":"MaYuehan"},"content":"            list();","lastModifiedDate":"2024-01-28"},{"lineNumber":253,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":254,"author":{"gitId":"MaYuehan"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":255,"author":{"gitId":"MaYuehan"},"content":"            mark(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":256,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":257,"author":{"gitId":"MaYuehan"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":258,"author":{"gitId":"MaYuehan"},"content":"            unmark(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":259,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":260,"author":{"gitId":"MaYuehan"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":261,"author":{"gitId":"MaYuehan"},"content":"            add(duke.Tasks.TaskType.TODO, input.substring(4).trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":262,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":263,"author":{"gitId":"MaYuehan"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":264,"author":{"gitId":"MaYuehan"},"content":"            add(duke.Tasks.TaskType.DEADLINE, input.substring(8).trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":265,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":266,"author":{"gitId":"MaYuehan"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":267,"author":{"gitId":"MaYuehan"},"content":"            add(duke.Tasks.TaskType.EVENT, input.substring(5).trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":268,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":269,"author":{"gitId":"MaYuehan"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":270,"author":{"gitId":"MaYuehan"},"content":"            deleteTask(input.substring(6).trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":271,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":272,"author":{"gitId":"MaYuehan"},"content":"    } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":273,"author":{"gitId":"MaYuehan"},"content":"            throw new duke.DukeException(\"OOPS!!! I don\u0027t know what that means. Can you make it clear?\");","lastModifiedDate":"2024-01-29"},{"lineNumber":274,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":275,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":276,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":277,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":278,"author":{"gitId":"MaYuehan"},"content":"    public static void add(duke.Tasks.Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":279,"author":{"gitId":"MaYuehan"},"content":"        store[count++] \u003d task;","lastModifiedDate":"2024-01-28"},{"lineNumber":280,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":281,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":282,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":283,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2024-01-28"},{"lineNumber":284,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":285,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":286,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":287,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":288,"author":{"gitId":"MaYuehan"},"content":"   public static void add(duke.Tasks.TaskType type, String description) throws duke.DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":289,"author":{"gitId":"MaYuehan"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":290,"author":{"gitId":"MaYuehan"},"content":"            throw new duke.DukeException(\"OOPS!!! The description of a \" + type + \" task cannot be empty!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":291,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":292,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":293,"author":{"gitId":"MaYuehan"},"content":"        duke.Tasks.Task task;","lastModifiedDate":"2024-01-29"},{"lineNumber":294,"author":{"gitId":"MaYuehan"},"content":"        switch (type) {","lastModifiedDate":"2024-01-28"},{"lineNumber":295,"author":{"gitId":"MaYuehan"},"content":"            case TODO:","lastModifiedDate":"2024-01-28"},{"lineNumber":296,"author":{"gitId":"MaYuehan"},"content":"                task \u003d new duke.Tasks.TodoTask(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":297,"author":{"gitId":"MaYuehan"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":298,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":299,"author":{"gitId":"MaYuehan"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-28"},{"lineNumber":300,"author":{"gitId":"MaYuehan"},"content":"                task \u003d new duke.Tasks.Task.DeadlineTask(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":301,"author":{"gitId":"MaYuehan"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":302,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":303,"author":{"gitId":"MaYuehan"},"content":"            case EVENT:","lastModifiedDate":"2024-01-28"},{"lineNumber":304,"author":{"gitId":"MaYuehan"},"content":"                task \u003d new duke.Tasks.Task.EventTask(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":305,"author":{"gitId":"MaYuehan"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":306,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":307,"author":{"gitId":"MaYuehan"},"content":"            default:","lastModifiedDate":"2024-01-28"},{"lineNumber":308,"author":{"gitId":"MaYuehan"},"content":"                throw new duke.DukeException(\"OOPS!!! Unsupported task type.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":309,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":310,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":311,"author":{"gitId":"MaYuehan"},"content":"        add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":312,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":313,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":314,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":315,"author":{"gitId":"MaYuehan"},"content":"    public static void deleteTask(String num) throws duke.DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":316,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":317,"author":{"gitId":"MaYuehan"},"content":"            int index \u003d Integer.parseInt(num);","lastModifiedDate":"2024-01-28"},{"lineNumber":318,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":319,"author":{"gitId":"MaYuehan"},"content":"            if (index \u003e 0 \u0026\u0026 index \u003c\u003d count) {","lastModifiedDate":"2024-01-28"},{"lineNumber":320,"author":{"gitId":"MaYuehan"},"content":"                System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":321,"author":{"gitId":"MaYuehan"},"content":"                System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":322,"author":{"gitId":"MaYuehan"},"content":"                System.out.println(\"      \" + store[index - 1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":323,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":324,"author":{"gitId":"MaYuehan"},"content":"                for (int i \u003d index - 1; i \u003c count - 1; i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":325,"author":{"gitId":"MaYuehan"},"content":"                    store[i] \u003d store[i + 1];","lastModifiedDate":"2024-01-28"},{"lineNumber":326,"author":{"gitId":"MaYuehan"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":327,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":328,"author":{"gitId":"MaYuehan"},"content":"                store[count - 1] \u003d null;","lastModifiedDate":"2024-01-28"},{"lineNumber":329,"author":{"gitId":"MaYuehan"},"content":"                count--;","lastModifiedDate":"2024-01-28"},{"lineNumber":330,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":331,"author":{"gitId":"MaYuehan"},"content":"                System.out.println(\"    Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":332,"author":{"gitId":"MaYuehan"},"content":"                System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":333,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":334,"author":{"gitId":"MaYuehan"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":335,"author":{"gitId":"MaYuehan"},"content":"                throw new duke.DukeException(\"OOPS!!! duke.Tasks.Task index is out of range.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":336,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":337,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":338,"author":{"gitId":"MaYuehan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":339,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":340,"author":{"gitId":"MaYuehan"},"content":"            throw new duke.DukeException(\"OOPS!!! Please enter a valid task index to delete.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":341,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":342,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":343,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":344,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":345,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":346,"author":{"gitId":"MaYuehan"},"content":"    public static void list() {","lastModifiedDate":"2024-01-28"},{"lineNumber":347,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":348,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":349,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":350,"author":{"gitId":"MaYuehan"},"content":"        for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":351,"author":{"gitId":"MaYuehan"},"content":"            System.out.println(\"    \" + (i + 1) + \". \" + store[i]);","lastModifiedDate":"2024-01-28"},{"lineNumber":352,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":353,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":354,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":355,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":356,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":357,"author":{"gitId":"MaYuehan"},"content":"    public static void mark(String input) {","lastModifiedDate":"2024-01-28"},{"lineNumber":358,"author":{"gitId":"MaYuehan"},"content":"        int index \u003d getIndex(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":359,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":360,"author":{"gitId":"MaYuehan"},"content":"        if (checkValid(index)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":361,"author":{"gitId":"MaYuehan"},"content":"            store[index - 1].markDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":362,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":363,"author":{"gitId":"MaYuehan"},"content":"            System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":364,"author":{"gitId":"MaYuehan"},"content":"            System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":365,"author":{"gitId":"MaYuehan"},"content":"            System.out.println(\"      \" + store[index - 1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":366,"author":{"gitId":"MaYuehan"},"content":"            System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":367,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":368,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":369,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":370,"author":{"gitId":"MaYuehan"},"content":"    public static void unmark(String input) {","lastModifiedDate":"2024-01-28"},{"lineNumber":371,"author":{"gitId":"MaYuehan"},"content":"        int index \u003d getIndex(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":372,"author":{"gitId":"MaYuehan"},"content":"        if (checkValid(index)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":373,"author":{"gitId":"MaYuehan"},"content":"            store[index - 1].markNotDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":374,"author":{"gitId":"MaYuehan"},"content":"            System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":375,"author":{"gitId":"MaYuehan"},"content":"            System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":376,"author":{"gitId":"MaYuehan"},"content":"            System.out.println(\"      \" + store[index - 1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":377,"author":{"gitId":"MaYuehan"},"content":"            System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-28"},{"lineNumber":378,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":379,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":380,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":381,"author":{"gitId":"MaYuehan"},"content":"    private static int getIndex(String input) {","lastModifiedDate":"2024-01-28"},{"lineNumber":382,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":383,"author":{"gitId":"MaYuehan"},"content":"            return Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":384,"author":{"gitId":"MaYuehan"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":385,"author":{"gitId":"MaYuehan"},"content":"            return -1;","lastModifiedDate":"2024-01-28"},{"lineNumber":386,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":387,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":388,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":389,"author":{"gitId":"MaYuehan"},"content":"    private static boolean checkValid(int index) {","lastModifiedDate":"2024-01-28"},{"lineNumber":390,"author":{"gitId":"MaYuehan"},"content":"        return index \u003e 0 \u0026\u0026 index \u003c\u003d count;","lastModifiedDate":"2024-01-28"},{"lineNumber":391,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":392,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":393,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":394,"author":{"gitId":"MaYuehan"},"content":"    public static void loadTasks() {","lastModifiedDate":"2024-01-28"},{"lineNumber":395,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":396,"author":{"gitId":"MaYuehan"},"content":"            File file \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2024-01-28"},{"lineNumber":397,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":398,"author":{"gitId":"MaYuehan"},"content":"            if (file.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":399,"author":{"gitId":"MaYuehan"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-28"},{"lineNumber":400,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":401,"author":{"gitId":"MaYuehan"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":402,"author":{"gitId":"MaYuehan"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":403,"author":{"gitId":"MaYuehan"},"content":"                    String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-28"},{"lineNumber":404,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":405,"author":{"gitId":"MaYuehan"},"content":"                    if (parts.length \u003e\u003d 3) {","lastModifiedDate":"2024-01-28"},{"lineNumber":406,"author":{"gitId":"MaYuehan"},"content":"                        duke.Tasks.Task task;","lastModifiedDate":"2024-01-29"},{"lineNumber":407,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":408,"author":{"gitId":"MaYuehan"},"content":"                        switch (parts[0]) {","lastModifiedDate":"2024-01-28"},{"lineNumber":409,"author":{"gitId":"MaYuehan"},"content":"                            case \"T\":","lastModifiedDate":"2024-01-28"},{"lineNumber":410,"author":{"gitId":"MaYuehan"},"content":"                                task \u003d new duke.Tasks.TodoTask(parts[2]);","lastModifiedDate":"2024-01-29"},{"lineNumber":411,"author":{"gitId":"MaYuehan"},"content":"                                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":412,"author":{"gitId":"MaYuehan"},"content":"                            case \"D\":","lastModifiedDate":"2024-01-28"},{"lineNumber":413,"author":{"gitId":"MaYuehan"},"content":"                                task \u003d new duke.Tasks.Task.DeadlineTaskLoad(parts[2], parts[3]);","lastModifiedDate":"2024-01-29"},{"lineNumber":414,"author":{"gitId":"MaYuehan"},"content":"                                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":415,"author":{"gitId":"MaYuehan"},"content":"                            case \"E\":","lastModifiedDate":"2024-01-28"},{"lineNumber":416,"author":{"gitId":"MaYuehan"},"content":"                                task \u003d new duke.Tasks.Task.EventTaskLoad(parts[2], parts[3]);","lastModifiedDate":"2024-01-29"},{"lineNumber":417,"author":{"gitId":"MaYuehan"},"content":"                                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":418,"author":{"gitId":"MaYuehan"},"content":"                            default:","lastModifiedDate":"2024-01-28"},{"lineNumber":419,"author":{"gitId":"MaYuehan"},"content":"                                continue;","lastModifiedDate":"2024-01-28"},{"lineNumber":420,"author":{"gitId":"MaYuehan"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":421,"author":{"gitId":"MaYuehan"},"content":"                        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":422,"author":{"gitId":"MaYuehan"},"content":"                            task.markDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":423,"author":{"gitId":"MaYuehan"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":424,"author":{"gitId":"MaYuehan"},"content":"                        add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":425,"author":{"gitId":"MaYuehan"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":426,"author":{"gitId":"MaYuehan"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":427,"author":{"gitId":"MaYuehan"},"content":"                scanner.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":428,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":429,"author":{"gitId":"MaYuehan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":430,"author":{"gitId":"MaYuehan"},"content":"            System.out.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":431,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":432,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":433,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":434,"author":{"gitId":"MaYuehan"},"content":"    public static void saveTasks() {","lastModifiedDate":"2024-01-28"},{"lineNumber":435,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":436,"author":{"gitId":"MaYuehan"},"content":"            File file \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2024-01-28"},{"lineNumber":437,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":438,"author":{"gitId":"MaYuehan"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":439,"author":{"gitId":"MaYuehan"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-28"},{"lineNumber":440,"author":{"gitId":"MaYuehan"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":441,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":442,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":443,"author":{"gitId":"MaYuehan"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2024-01-28"},{"lineNumber":444,"author":{"gitId":"MaYuehan"},"content":"            for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":445,"author":{"gitId":"MaYuehan"},"content":"                duke.Tasks.Task task \u003d store[i];","lastModifiedDate":"2024-01-29"},{"lineNumber":446,"author":{"gitId":"MaYuehan"},"content":"                String taskType;","lastModifiedDate":"2024-01-28"},{"lineNumber":447,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":448,"author":{"gitId":"MaYuehan"},"content":"                if (task instanceof duke.Tasks.TodoTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":449,"author":{"gitId":"MaYuehan"},"content":"                    taskType \u003d \"T\";","lastModifiedDate":"2024-01-28"},{"lineNumber":450,"author":{"gitId":"MaYuehan"},"content":"                } else if (task instanceof duke.Tasks.Task.DeadlineTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":451,"author":{"gitId":"MaYuehan"},"content":"                    taskType \u003d \"D\";","lastModifiedDate":"2024-01-28"},{"lineNumber":452,"author":{"gitId":"MaYuehan"},"content":"                } else if (task instanceof duke.Tasks.Task.DeadlineTaskLoad) {","lastModifiedDate":"2024-01-29"},{"lineNumber":453,"author":{"gitId":"MaYuehan"},"content":"                    taskType \u003d \"D\";","lastModifiedDate":"2024-01-28"},{"lineNumber":454,"author":{"gitId":"MaYuehan"},"content":"                } else if (task instanceof duke.Tasks.Task.EventTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":455,"author":{"gitId":"MaYuehan"},"content":"                    taskType \u003d \"E\";","lastModifiedDate":"2024-01-28"},{"lineNumber":456,"author":{"gitId":"MaYuehan"},"content":"                } else if (task instanceof duke.Tasks.Task.EventTaskLoad) {","lastModifiedDate":"2024-01-29"},{"lineNumber":457,"author":{"gitId":"MaYuehan"},"content":"                    taskType \u003d \"E\";","lastModifiedDate":"2024-01-28"},{"lineNumber":458,"author":{"gitId":"MaYuehan"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":459,"author":{"gitId":"MaYuehan"},"content":"                    continue;","lastModifiedDate":"2024-01-28"},{"lineNumber":460,"author":{"gitId":"MaYuehan"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":461,"author":{"gitId":"MaYuehan"},"content":"                writer.write(taskType + \" | \" + (task.marked ? \"1\" : \"0\") + \" | \" + task.getTask());","lastModifiedDate":"2024-01-28"},{"lineNumber":462,"author":{"gitId":"MaYuehan"},"content":"                if (task instanceof duke.Tasks.Task.DeadlineTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":463,"author":{"gitId":"MaYuehan"},"content":"                    writer.write(\" | \" + ((duke.Tasks.Task.DeadlineTask) task).getDateTime());","lastModifiedDate":"2024-01-29"},{"lineNumber":464,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":465,"author":{"gitId":"MaYuehan"},"content":"                } else if (task instanceof duke.Tasks.Task.EventTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":466,"author":{"gitId":"MaYuehan"},"content":"                    writer.write(\" | \" + ((duke.Tasks.Task.EventTask) task).getDateTime());","lastModifiedDate":"2024-01-29"},{"lineNumber":467,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":468,"author":{"gitId":"MaYuehan"},"content":"                } else if (task instanceof duke.Tasks.Task.EventTaskLoad) {","lastModifiedDate":"2024-01-29"},{"lineNumber":469,"author":{"gitId":"MaYuehan"},"content":"                    writer.write(\" | \" + ((duke.Tasks.Task.EventTaskLoad) task).getTime());","lastModifiedDate":"2024-01-29"},{"lineNumber":470,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":471,"author":{"gitId":"MaYuehan"},"content":"                } else if (task instanceof duke.Tasks.Task.DeadlineTaskLoad) {","lastModifiedDate":"2024-01-29"},{"lineNumber":472,"author":{"gitId":"MaYuehan"},"content":"                    writer.write(\" | \" + ((duke.Tasks.Task.DeadlineTaskLoad) task).getBy());","lastModifiedDate":"2024-01-29"},{"lineNumber":473,"author":{"gitId":"MaYuehan"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":474,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":475,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":476,"author":{"gitId":"MaYuehan"},"content":"                writer.write(System.lineSeparator());","lastModifiedDate":"2024-01-28"},{"lineNumber":477,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":478,"author":{"gitId":"MaYuehan"},"content":"            writer.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":479,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":480,"author":{"gitId":"MaYuehan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":481,"author":{"gitId":"MaYuehan"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":482,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":483,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":484,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":485,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":486,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":487,"author":{"gitId":"MaYuehan"},"content":"class duke.DukeException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":488,"author":{"gitId":"MaYuehan"},"content":"    public duke.DukeException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":489,"author":{"gitId":"MaYuehan"},"content":"        super(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":490,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":491,"author":{"gitId":"MaYuehan"},"content":"}*/","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":491}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":" * Represents exceptions specific to the Duke chatbot application.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"     * @param message The error message.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":16}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"public class Launcher {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"MaYuehan":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"            stage.show();","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"MaYuehan":35}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"        );","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"MaYuehan":50}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"import duke.Command.Command;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import duke.Command.TodoCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Command.EventCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import duke.Command.ExitCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import duke.Command.ListCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import duke.Command.MarkCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"import duke.Command.UnmarkCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"import duke.Command.DeleteCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"import duke.Command.DeadlineCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"import duke.Command.FindCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"     * @return The command corresponding to the user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If the input cannot be parsed or an invalid command is entered.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"        switch (command) {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"                return new ExitCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"            case \"list\":","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"                return new ListCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"                return parseMarkCommand(parts);","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"                return parseUnmarkCommand(parts);","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"                return parseDeleteCommand(parts);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"                return parseTodoCommand(parts);","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"                return parseDeadlineCommand(parts);","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"            case \"event\":","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"                return parseEventCommand(parts);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"            case \"find\":","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"                return new FindCommand(parts[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"            default:","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"     * Parses the user input to create a MarkCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"     * @param parts The input split into parts.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"     * @return The MarkCommand corresponding to the user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If the input cannot be parsed or an invalid command is entered.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"MaYuehan"},"content":"    private static Command parseMarkCommand(String[] parts) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"MaYuehan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"OOPS!!! Please specify the task index to mark as done.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"MaYuehan"},"content":"            int index \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"MaYuehan"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"MaYuehan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"OOPS!!! Please enter a valid task index to mark as done.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"MaYuehan"},"content":"     * Parses the user input to create an UnmarkCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"MaYuehan"},"content":"     * @param parts The input split into parts.","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"MaYuehan"},"content":"     * @return The UnmarkCommand corresponding to the user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If the input cannot be parsed or an invalid command is entered.","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"MaYuehan"},"content":"    private static Command parseUnmarkCommand(String[] parts) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"MaYuehan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"OOPS!!! Please specify the task index to mark as not done.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"MaYuehan"},"content":"            int index \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"MaYuehan"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"MaYuehan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"OOPS!!! Please enter a valid task index to mark as not done.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"MaYuehan"},"content":"     * Parses the user input to create a DeleteCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"MaYuehan"},"content":"     * @param parts The input split into parts.","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"MaYuehan"},"content":"     * @return The DeleteCommand corresponding to the user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If the input cannot be parsed or an invalid command is entered.","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"MaYuehan"},"content":"    private static Command parseDeleteCommand(String[] parts) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"MaYuehan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"OOPS!!! Please specify the task index to delete.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"MaYuehan"},"content":"            int index \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"MaYuehan"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"MaYuehan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"OOPS!!! Please enter a valid task index to delete.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"MaYuehan"},"content":"     * Parses the user input to create a TodoCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"MaYuehan"},"content":"     * @param parts The input split into parts.","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"MaYuehan"},"content":"     * @return The TodoCommand corresponding to the user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If the input cannot be parsed or an invalid command is entered.","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"MaYuehan"},"content":"    private static Command parseTodoCommand(String[] parts) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"MaYuehan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo task cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"MaYuehan"},"content":"        String description \u003d String.join(\" \", Arrays.copyOfRange(parts, 1, parts.length));","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"MaYuehan"},"content":"        return new TodoCommand(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"MaYuehan"},"content":"     * Parses the user input to create a DeadlineCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"MaYuehan"},"content":"     * @param parts The input split into parts.","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"MaYuehan"},"content":"     * @return The DeadlineCommand corresponding to the user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If the input cannot be parsed or an invalid command is entered.","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"MaYuehan"},"content":"    private static Command parseDeadlineCommand(String[] parts) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"MaYuehan"},"content":"        String task \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"MaYuehan"},"content":"        String by \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"MaYuehan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline task cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"MaYuehan"},"content":"        String[] split \u003d parts[1].split(\"/by\", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"MaYuehan"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"OOPS!!! The deadline of a deadline task cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"MaYuehan"},"content":"        if (split.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"MaYuehan"},"content":"            task \u003d split[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"MaYuehan"},"content":"            by \u003d split[1].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"MaYuehan"},"content":"        return new DeadlineCommand(task, by);","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"MaYuehan"},"content":"     * Parses the user input to create an EventCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"MaYuehan"},"content":"     * @param parts The input split into parts.","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"MaYuehan"},"content":"     * @return The EventCommand corresponding to the user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If the input cannot be parsed or an invalid command is entered.","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"MaYuehan"},"content":"    private static Command parseEventCommand(String[] parts) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"MaYuehan"},"content":"        String task \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"MaYuehan"},"content":"        String from \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"MaYuehan"},"content":"        String to \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"MaYuehan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":177,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"OOPS!!! The time of an event task cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"MaYuehan"},"content":"        String[] split \u003d parts[1].split(\"/from\", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"MaYuehan"},"content":"        if (split.length \u003c 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":183,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"OOPS!!! The time of an event task cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":186,"author":{"gitId":"MaYuehan"},"content":"        if (split.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"MaYuehan"},"content":"            task \u003d split[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"MaYuehan"},"content":"            String[] details \u003d split[1].split(\"/to\", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"MaYuehan"},"content":"            if (details.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":191,"author":{"gitId":"MaYuehan"},"content":"                from \u003d details[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"MaYuehan"},"content":"                to \u003d details[1].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"MaYuehan"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"MaYuehan"},"content":"                throw new DukeException(\"OOPS!!! The end time of an event task cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":196,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":197,"author":{"gitId":"MaYuehan"},"content":"        return new EventCommand(task, from, to);","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":199,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":200,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":200}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TodoTask;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.DeadlineTask;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.EventTask;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.EventTaskLoad;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.DeadlineTaskLoad;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":" * The Storage class handles the loading and saving of tasks to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"    private String filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"     * Loads tasks from the file and returns them as a list.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If there is an error loading tasks from the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"            if (file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"                    String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"                    if (parts.length \u003e\u003d 3) {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"                        Task task;","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"                        switch (parts[0]) {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"                            case \"T\":","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"                                task \u003d new TodoTask(parts[2]);","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"                                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"                            case \"D\":","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"                                task \u003d new DeadlineTaskLoad(parts[2], parts[3]);","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"                                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"                            case \"E\":","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"                                task \u003d new EventTaskLoad(parts[2], parts[3]);","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"                                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"MaYuehan"},"content":"                            default:","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"MaYuehan"},"content":"                                continue;","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"MaYuehan"},"content":"                        }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"MaYuehan"},"content":"                        if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"MaYuehan"},"content":"                            task.markDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"MaYuehan"},"content":"                        }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"MaYuehan"},"content":"                        tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"MaYuehan"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"MaYuehan"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"MaYuehan"},"content":"                scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"MaYuehan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"MaYuehan"},"content":"        return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"MaYuehan"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"MaYuehan"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"MaYuehan"},"content":"     * @throws DukeException If there is an error saving tasks to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"MaYuehan"},"content":"    public void save(List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"MaYuehan"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"MaYuehan"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"MaYuehan"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"MaYuehan"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"MaYuehan"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"MaYuehan"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"MaYuehan"},"content":"                String taskType;","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"MaYuehan"},"content":"                if (task instanceof TodoTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"MaYuehan"},"content":"                    taskType \u003d \"T\";","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"MaYuehan"},"content":"                } else if (task instanceof DeadlineTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"MaYuehan"},"content":"                    taskType \u003d \"D\";","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"MaYuehan"},"content":"                } else if (task instanceof DeadlineTaskLoad) {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"MaYuehan"},"content":"                    taskType \u003d \"D\";","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"MaYuehan"},"content":"                } else if (task instanceof EventTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"MaYuehan"},"content":"                    taskType \u003d \"E\";","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"MaYuehan"},"content":"                } else if (task instanceof EventTaskLoad) {","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"MaYuehan"},"content":"                    taskType \u003d \"E\";","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"MaYuehan"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"MaYuehan"},"content":"                    continue;","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"MaYuehan"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"MaYuehan"},"content":"                writer.write(taskType + \" | \" + (task.marked ? \"1\" : \"0\") + \" | \" + task.getTask());","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"MaYuehan"},"content":"                if (task instanceof DeadlineTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"MaYuehan"},"content":"                    writer.write(\" | \" + ((DeadlineTask) task).getDateTime());","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"MaYuehan"},"content":"                } else if (task instanceof EventTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"MaYuehan"},"content":"                    writer.write(\" | \" + ((EventTask) task).getDateTime());","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"MaYuehan"},"content":"                } else if (task instanceof EventTaskLoad) {","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"MaYuehan"},"content":"                    writer.write(\" | \" + ((EventTaskLoad) task).getTime());","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"MaYuehan"},"content":"                } else if (task instanceof DeadlineTaskLoad) {","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"MaYuehan"},"content":"                    writer.write(\" | \" + ((DeadlineTaskLoad) task).getBy());","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"MaYuehan"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"MaYuehan"},"content":"                writer.write(System.lineSeparator());","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"MaYuehan"},"content":"            writer.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"MaYuehan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"MaYuehan"},"content":"            throw new DukeException(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":138}},{"path":"src/main/java/duke/Tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import java.util.Locale;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"    int CHECK \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"     * Constructs a DeadlineTask object with the given description and deadline string.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"     * @param deadlineStr The deadline string in various formats.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"    public DeadlineTask(String description, String deadlineStr) {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"        this.deadline \u003d parseDateTime(deadlineStr);","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"     * Parses the deadline string into a LocalDateTime object.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"     * @param time The deadline string in various formats.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"     * @return The LocalDateTime object representing the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"     * @throws DateTimeParseException If the deadline string cannot be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"    private LocalDateTime parseDateTime(String time) throws DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"        LocalDateTime dateTime \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter3 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter4 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"            CHECK \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"            dateTime \u003d LocalDateTime.parse(time, formatter1);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"                CHECK \u003d 2;","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"                dateTime \u003d LocalDateTime.parse(time, formatter2);","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"                try {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"                    CHECK \u003d 3;","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"                    LocalDate date \u003d LocalDate.parse(time, formatter3);","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"                    dateTime \u003d date.atStartOfDay();","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"                } catch (DateTimeParseException e3) {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"                    try {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"                        CHECK \u003d 4;","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"MaYuehan"},"content":"                        LocalDate date \u003d LocalDate.parse(time, formatter4);","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"MaYuehan"},"content":"                        dateTime \u003d date.atStartOfDay();","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"MaYuehan"},"content":"                    } catch (DateTimeParseException e4) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"MaYuehan"},"content":"                        throw new DateTimeParseException(\"Unable to parse date/time: \" + time, time, 0, e2);","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"MaYuehan"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"MaYuehan"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"MaYuehan"},"content":"        return dateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"MaYuehan"},"content":"     * Formats the deadline date and time into a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"MaYuehan"},"content":"     * @param dateTime The LocalDateTime object representing the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"MaYuehan"},"content":"     * @return The formatted string representing the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"MaYuehan"},"content":"    String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"MaYuehan"},"content":"        if (CHECK \u003d\u003d 1 || CHECK \u003d\u003d 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"MaYuehan"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\", Locale.ENGLISH);","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"MaYuehan"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"MaYuehan"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.ENGLISH);","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"MaYuehan"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"MaYuehan"},"content":"     * Gets the formatted deadline date and time string.","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"MaYuehan"},"content":"     * @return The formatted deadline date and time string.","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"MaYuehan"},"content":"    public String getDateTime() {","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"MaYuehan"},"content":"        return formatDateTime(deadline);","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"MaYuehan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"MaYuehan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDateTime(deadline) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"MaYuehan"},"content":"    public String tag() {","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"MaYuehan"},"content":"        return \"[D]\";","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":117}},{"path":"src/main/java/duke/Tasks/DeadlineTaskLoad.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":" * Represents a deadline task loaded from storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"public class DeadlineTaskLoad extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"    private String by;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"     * Constructs a DeadlineTaskLoad object with the given task description and deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"     * @param task The task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"     * @param by   The deadline of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"    public DeadlineTaskLoad(String task, String by) {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"        super(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"     * Gets the deadline of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"     * @return The deadline of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    public String getBy() {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"        return by;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"     * @return The string representation of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"     * Returns the tag for the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"     * @return The tag for the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"    public String tag() {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"        return \"[D]\";","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":53}},{"path":"src/main/java/duke/Tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import java.util.Locale;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":" * Represents a task with an event duration.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"    int CHECK \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"     * Constructs an EventTask object with the given description, start time string, and end time string.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"     * @param description     The description of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"     * @param startTimeString The start time string in various formats.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"     * @param endTimeString   The end time string in various formats.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    public EventTask(String description, String startTimeString, String endTimeString) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"        this.startTime \u003d parseDateTime(startTimeString);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"        this.endTime \u003d parseDateTime(endTimeString);","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"     * Parses the time string into a LocalDateTime object.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"     * @param time The time string in various formats.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"     * @return The LocalDateTime object representing the time.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"     * @throws DateTimeParseException If the time string cannot be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"    private LocalDateTime parseDateTime(String time) throws DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"        LocalDateTime dateTime \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter3 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter4 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"            CHECK \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"            dateTime \u003d LocalDateTime.parse(time, formatter1);","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"                CHECK \u003d 2;","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"                dateTime \u003d LocalDateTime.parse(time, formatter2);","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"                try {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"                    CHECK \u003d 3;","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"                    LocalDate date \u003d LocalDate.parse(time, formatter3);","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"                    dateTime \u003d date.atStartOfDay();","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"MaYuehan"},"content":"                } catch (DateTimeParseException e3) {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"MaYuehan"},"content":"                    try {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"MaYuehan"},"content":"                        CHECK \u003d 4;","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"MaYuehan"},"content":"                        LocalDate date \u003d LocalDate.parse(time, formatter4);","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"MaYuehan"},"content":"                        dateTime \u003d date.atStartOfDay();","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"MaYuehan"},"content":"                    } catch (DateTimeParseException e4) {","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"MaYuehan"},"content":"                        CHECK \u003d 5;","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"MaYuehan"},"content":"                        throw new DateTimeParseException(\"Unable to parse date/time: \" + time, time, 0, e2);","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"MaYuehan"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"MaYuehan"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"MaYuehan"},"content":"        return dateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"MaYuehan"},"content":"     * Formats the date and time into a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"MaYuehan"},"content":"     * @param dateTime The LocalDateTime object representing the date and time.","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"MaYuehan"},"content":"     * @return The formatted string representing the date and time.","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"MaYuehan"},"content":"    private String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"MaYuehan"},"content":"        if (CHECK \u003d\u003d 1 || CHECK \u003d\u003d 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"MaYuehan"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\", Locale.ENGLISH);","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"MaYuehan"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"MaYuehan"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.ENGLISH);","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"MaYuehan"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"MaYuehan"},"content":"     * Gets the formatted start time string.","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"MaYuehan"},"content":"     * @return The formatted start time string.","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"MaYuehan"},"content":"    public String getStartTime() {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"MaYuehan"},"content":"        String time \u003d formatDateTime(startTime);","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"MaYuehan"},"content":"        return time;","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"MaYuehan"},"content":"     * Gets the formatted end time string.","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"MaYuehan"},"content":"     * @return The formatted end time string.","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"MaYuehan"},"content":"    public String getEndTime() {","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"MaYuehan"},"content":"        String time \u003d formatDateTime(endTime);","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"MaYuehan"},"content":"        return time;","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"MaYuehan"},"content":"     * Gets the formatted event duration string.","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"MaYuehan"},"content":"     * @return The formatted event duration string.","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"MaYuehan"},"content":"    public String getDateTime() {","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"MaYuehan"},"content":"        return getStartTime() + \"-\" + getEndTime();","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"MaYuehan"},"content":"    public String tag() {","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"MaYuehan"},"content":"        return \"[E]\";","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"MaYuehan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"MaYuehan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatDateTime(startTime) + \" to: \" + formatDateTime(endTime) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":139}},{"path":"src/main/java/duke/Tasks/EventTaskLoad.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":" * Represents an event task loaded from storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"public class EventTaskLoad extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"    private String time;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"    private String from;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"    private String to;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"     * Constructs an EventTaskLoad object with the given task description and time.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"     * @param task The task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"     * @param time The time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"    public EventTaskLoad(String task, String time) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"        super(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"        parseEventLoad(time);","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"     * Gets the time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"     * @return The time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"    public String getTime() {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"        return time;","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"     * Parses the time string to extract the start and end times of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"     * @param time The time string representing the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"    private void parseEventLoad(String time) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"        String[] split \u003d time.split(\"-\", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"            if (split.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"                this.from \u003d split[0].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"                this.to \u003d split[1].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"     * @return The string representation of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"        return tag() + mark() + \" \" + task + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"MaYuehan"},"content":"     * Returns the tag for the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"MaYuehan"},"content":"     * @return The tag for the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"MaYuehan"},"content":"    public String tag() {","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"MaYuehan"},"content":"        return \"[E]\";","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"MaYuehan":69}},{"path":"src/main/java/duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":" * Represents a generic task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"    String task;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"    public boolean marked;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"     * Constructs a Task object with the given task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"     * @param task The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"    public Task(String task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"        this.marked \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"    public String getTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"        return task;","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"        marked \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"    public void markNotDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"        marked \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"     * Returns a string representing the task\u0027s status.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"     * @return The task\u0027s status string.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"    public String mark() {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"        return (marked ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"MaYuehan"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"MaYuehan"},"content":"    public abstract String tag();","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"MaYuehan"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"MaYuehan"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"MaYuehan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"MaYuehan"},"content":"        return mark() + \" \" + task;","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"MaYuehan":76}},{"path":"src/main/java/duke/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"     * Constructs a TaskList object with the given list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"     * @param task The task to add.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"    public void delete(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"     * Gets all tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"        return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"     * Gets the task at the specified index in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"     * @param index The index of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"     * @throws IndexOutOfBoundsException If the index is out of bounds.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"    public Task get(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"            throw new IndexOutOfBoundsException(\"Index is out of bounds\");","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"MaYuehan"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"MaYuehan"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"MaYuehan"},"content":"     * @return The number of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"MaYuehan"},"content":"    public int size() {","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"MaYuehan"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":73}},{"path":"src/main/java/duke/Tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":" * Represents a todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"     * Constructs a TodoTask object with the given task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"     * @param task The task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"    public TodoTask(String task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"        super(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"     * Returns the tag for the todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"     * @return The tag for the todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"    public String tag() {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"        return \"[T]\";","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"     * @return The string representation of the todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"        return tag() + mark() + \" \" + task;","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"MaYuehan":38}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"import java.io.InputStream;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":" * Handles user interaction, including input and output.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"     * Constructs a Ui object with a Scanner for user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"    public Ui() {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"    public String greet() {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"        return \"Hello! I\u0027m BotYue. \\nWhat can I do for you?\";","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"     * Reads a command entered by the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"     * Displays a welcome message when the program starts.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Hello! I\u0027m BotYue\");","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"            System.out.println(\"    \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"MaYuehan"},"content":"     * Displays a message confirming that a task has been marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"MaYuehan"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"MaYuehan"},"content":"    public void showMarkedMessage(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"MaYuehan"},"content":"     * Displays a message confirming that a task has been marked as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"MaYuehan"},"content":"     * @param task The task that has been marked as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"MaYuehan"},"content":"    public void showUnmarkedMessage(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"MaYuehan"},"content":"     * Displays a message confirming that a task has been deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"MaYuehan"},"content":"     * @param task  The task that has been deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"MaYuehan"},"content":"     * @param count The updated number of tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"MaYuehan"},"content":"    public static void showDeletedMessage(Task task, int count) {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"MaYuehan"},"content":"     * Displays a goodbye message when the user exits the program.","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"MaYuehan"},"content":"    public static void showGoodbyeMessage() {","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"MaYuehan"},"content":"     * Displays a message confirming that a task has been added.","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"MaYuehan"},"content":"     * @param task  The task that has been added.","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"MaYuehan"},"content":"     * @param count The updated number of tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"MaYuehan"},"content":"    public void showAddedMessage(Task task, int count) {","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"MaYuehan"},"content":"     * Displays the tasks that match the given keyword in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"MaYuehan"},"content":"     * @param matchingTasks   The task list containing tasks to search within.","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"MaYuehan"},"content":"    public void showMatchingTasks(List\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"MaYuehan"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"MaYuehan"},"content":"            System.out.println(\"    \" + (i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"MaYuehan"},"content":"     * Displays an error message.","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"MaYuehan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"MaYuehan"},"content":"     * @param message The error message to display.","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"MaYuehan"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   \" + message);","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"MaYuehan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"MaYuehan"},"content":"     * Displays an error message when tasks fail to load from file.","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"MaYuehan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"MaYuehan"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"Error loading tasks from file.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"MaYuehan":170}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"MaYuehan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"MaYuehan":19}},{"path":"src/test/java/duke/Tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import java.util.Locale;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"    int check \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"    public DeadlineTask(String description, String deadlineStr) {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"        this.deadline \u003d parseDateTime(deadlineStr);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"    private LocalDateTime parseDateTime(String time) throws DateTimeParseException {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"        LocalDateTime dateTime \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter3 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter4 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"            check \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"            dateTime \u003d LocalDateTime.parse(time, formatter1);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"                check \u003d 2;","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"                dateTime \u003d LocalDateTime.parse(time, formatter2);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"                    check \u003d 3;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"                    LocalDate date \u003d LocalDate.parse(time, formatter3);","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"                    dateTime \u003d date.atStartOfDay();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"                } catch (DateTimeParseException e3) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"                    try {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"                        check \u003d 4;","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"                        LocalDate date \u003d LocalDate.parse(time, formatter4);","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"                        dateTime \u003d date.atStartOfDay();","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"                    } catch (DateTimeParseException e4) {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"                        throw new DateTimeParseException(\"Unable to parse date/time: \" + time, time, 0, e2);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"        return dateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"    String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"        DateTimeFormatter formatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"        if (check \u003d\u003d 1 || check \u003d\u003d 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"MaYuehan"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\", Locale.ENGLISH);","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"MaYuehan"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"MaYuehan"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.ENGLISH);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"MaYuehan"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"MaYuehan"},"content":"    public String getDateTime() {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"MaYuehan"},"content":"        return formatDateTime(deadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"MaYuehan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"MaYuehan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDateTime(deadline) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"MaYuehan"},"content":"    public String tag() {","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"MaYuehan"},"content":"        return \"[D]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"MaYuehan":85}},{"path":"src/test/java/duke/Tasks/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"    public void testFormatDateTime() {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 1, 30, 15, 30);","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"Test Deadline\", \"2024-01-30 1530\");","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"        String formattedDateTime \u003d task.formatDateTime(dateTime);","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"        assertEquals(\"Jan 30 2024 15:30\", formattedDateTime);","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"MaYuehan":18}},{"path":"src/test/java/duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"    String task;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"    public boolean marked;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"    public Task(String task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"        this.marked \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"    public String getTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"        return task;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"    public void markDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"        marked \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"    public void markNotDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"        marked \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"    public String mark() {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"        return (marked ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"    public abstract String tag();","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"        return mark() + \" \" + task;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"MaYuehan":38}},{"path":"src/test/java/duke/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"    public void delete(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"    public Task get(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"            throw new IndexOutOfBoundsException(\"Index is out of bounds\");","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"    public int size() {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"MaYuehan":40}},{"path":"src/test/java/duke/Tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke.Tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"    public TodoTask(String task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"        super(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"    public String tag() {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"        return \"[T]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"        return tag() + mark() + \" \" + task;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"MaYuehan":17}},{"path":"src/test/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"    public Ui() {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Hello! I\u0027m BotYue\");","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"            System.out.println(\"    \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"    public void showMarkedMessage(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"MaYuehan"},"content":"    public void showUnmarkedMessage(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"MaYuehan"},"content":"    public static void showDeletedMessage(Task task, int count) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"MaYuehan"},"content":"    public static void showGoodbyeMessage() {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"MaYuehan"},"content":"    public void showAddedMessage(Task task, int count) {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"    Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"MaYuehan"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   \" + message);","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"   ____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"MaYuehan"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"MaYuehan"},"content":"        System.out.println(\"Error loading tasks from file.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"MaYuehan":84}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"import duke.Tasks.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"public class UiTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"MaYuehan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"MaYuehan"},"content":"    public void testShowAddedMessage() {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"MaYuehan"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"MaYuehan"},"content":"        String taskDescription \u003d \"return book\";","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"MaYuehan"},"content":"        Task task \u003d new TodoTask(taskDescription);","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"MaYuehan"},"content":"        String expectedMessage \u003d \"   ____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"MaYuehan"},"content":"                                 \"    Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"MaYuehan"},"content":"                                 \"      \" + task.tag() + task.mark() + \" \" + taskDescription + \"\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"MaYuehan"},"content":"                                 \"    Now you have \" + count + \" tasks in the list.\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"MaYuehan"},"content":"                                 \"   ____________________________________________________________\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"MaYuehan"},"content":"        // Redirect System.out to capture the output","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"MaYuehan"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"MaYuehan"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"MaYuehan"},"content":"        // Call the method","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"MaYuehan"},"content":"        ui.showAddedMessage(task, count);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"MaYuehan"},"content":"        // Reset System.out","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"MaYuehan"},"content":"        System.setOut(System.out);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"MaYuehan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"MaYuehan"},"content":"        // Check the output","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"MaYuehan"},"content":"        assertEquals(expectedMessage, outContent.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"MaYuehan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"MaYuehan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"MaYuehan":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MaYuehan"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"MaYuehan"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"MaYuehan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"MaYuehan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"MaYuehan"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"MaYuehan"},"content":"blah","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"MaYuehan"},"content":"deadline","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"MaYuehan"},"content":"event","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"MaYuehan"},"content":"delete 2","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"MaYuehan"},"content":"list","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"MaYuehan":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"MaYuehan"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MaYuehan":1,"-":20}}]
