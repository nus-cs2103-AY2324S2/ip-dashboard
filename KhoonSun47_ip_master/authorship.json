[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"checkstyle {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    mainClass.set(\"William\")","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    archiveBaseName \u003d \"William\"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KhoonSun47":8,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"T | 0 | sleep | NILL | NILL","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"T | 0 | play games | NILL | NILL","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"D | 0 | cs2103 | 12/12/2023 1800 | NILL","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"E | 0 | es2660 | 12/12/2023 1800 | 13/12/2023 1700","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"T | 0 | homework | NILL | NILL","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KhoonSun47":5}},{"path":"src/main/java/William.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import utilities.Parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import utilities.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import utilities.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":" * Main class for this chatbot (the other classes have been divided into","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":" * packages: commands, exceptions, tasks and utilities)","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"public class William {","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    private static String filePath \u003d \"data/tasks.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"     * Intialises the tasklist, storage and UI","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"     * @param filePath The file path","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    public William(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"            List\u003cTask\u003e tasks \u003d storage.loadFromFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"            this.taskList \u003d new TaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        } catch (FileNotFoundException | WilliamException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"     * Runs the chatbot","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        ui.openingTitle();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        Parser parser \u003d new Parser(taskList, storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        ui.interactWithUser(parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        new William(filePath).run();","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"KhoonSun47":50}},{"path":"src/main/java/commands/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":" * Contains the list of commands to be used in the switch case for William.java","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"public enum Commands {","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    list, bye, mark, unmark, todo, deadline, event, delete, find","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"KhoonSun47":8}},{"path":"src/main/java/exceptions/WilliamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":" * Represents exceptions specific to William class","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"public class WilliamException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    public WilliamException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":10}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    private LocalDateTime byDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"    public Deadline(String name, LocalDateTime byDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"        super(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    public Deadline(String name, LocalDateTime byDate, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"        super(name, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + super.outputDateAsString(byDate) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    public String getType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        return \"D\";","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    public String[] getTimes() {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        return new String[] {super.changeDateToString(byDate), \"NILL\"};","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":33}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    private LocalDateTime fromDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"    private LocalDateTime toDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"    public Event(String name, LocalDateTime fromDate, LocalDateTime toDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"        super(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    public Event(String name, LocalDateTime fromDate, LocalDateTime toDate, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"        super(name, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + super.outputDateAsString(fromDate) + \" to: \"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"                + super.outputDateAsString(toDate) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    public String getType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        return \"E\";","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    public String[] getTimes() {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        return new String[] {super.changeDateToString(fromDate), super.changeDateToString(toDate)};","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":37}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"public class Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy EEEE, ha\");","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    private String name;","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    private String type;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    private String[] times;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    public void changeIsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        this.isDone ^\u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    public String getType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        return this.type;","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    public String[] getTimes() {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        return this.times;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    public String getName() {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        return this.name;","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"    public String outputDateAsString(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        return dateTime.format(OUTPUT_FORMAT);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"    public String changeDateToString(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        return dateTime.format(INPUT_FORMAT);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.name;","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"KhoonSun47":62}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"        super(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"    public Todo(String name, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"        super(name, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    public String getType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"        return \"T\";","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    public String[] getTimes() {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        return new String[] {\"NILL\", \"NILL\"};","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":27}},{"path":"src/main/java/utilities/AdditionalInfoParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":" * Deals with formatting the additional information","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"public class AdditionalInfoParser {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"     * Returns the split input after getting the user input","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"     * @param input Input from the user","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"     * @return string[] String[] consisting of two variables: [0] \u003d\u003d command, [1] \u003d\u003d additional","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"     *         information","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    public static String[] retrieveTexts(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        String[] resultOfSplit \u003d new String[2];","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"        int indexOfFirstSpace \u003d input.indexOf(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"        if (indexOfFirstSpace \u003d\u003d -1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"            resultOfSplit[0] \u003d input;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"            resultOfSplit[1] \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"            resultOfSplit[0] \u003d input.substring(0, indexOfFirstSpace);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"            resultOfSplit[1] \u003d input.substring(indexOfFirstSpace + 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        return resultOfSplit;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"     * Splits the input regardless of \u0027/by\u0027, \u0027/to\u0027 or \u0027/from\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"     * @param input Input that is the additional details","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     * @param keywords The splitting conditions","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"     * @return string[] An array of String that contains the name and dates in seperated form","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the input does not contain the keywords","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    public static String[] splitInput(String input, String... keywords) throws WilliamException {","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        checkAdditionalDetailEmpty(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        ArrayList\u003cString\u003e parts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        String currentPart \u003d input;","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"            String[] splitParts \u003d currentPart.split(keyword, 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"            if (splitParts.length \u003c 2) {","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"                throw new WilliamException(\"The input does not contain the required \u0027\" + keyword","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"                        + \"\u0027 keyword or is missing text before/after \u0027\" + keyword","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"                        + \"\u0027 keyword. Please try again!\");","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"            parts.add(splitParts[0]);","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"            currentPart \u003d splitParts[1];","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        parts.add(currentPart);","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"        return parts.toArray(new String[0]);","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"     * Checks whether the additional detail is empty","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"     * @param input Input that is the additional detail","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the description of the additional detail is empty","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"    public static void checkAdditionalDetailEmpty(String input) throws WilliamException {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"                    \"The description of a task should not be empty. Please try again!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KhoonSun47":74}},{"path":"src/main/java/utilities/DateAndTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":" * Deals with formatting dates and times","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"public class DateAndTimeParser {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"     * Checks whether the input matches the date and time format","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"     * @param input The date and time of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the format of the date and time is wrong","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    public static void acceptDateAndTime(String input) throws WilliamException {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"            LocalDateTime.parse(input, INPUT_FORMAT);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(\"The date and time format is invalid. Please try again!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"     * Checks whether the \u0027/from\u0027 date is before the \u0027/to\u0027 date","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     * @param fromDate The input date \u0027/from\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"     * @param toDate The input date \u0027/to\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the \u0027/from\u0027 date is not before the \u0027/to\u0027 date","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    public static void checkWhetherToAndFromValid(String fromDate, String toDate)","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"            throws WilliamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        LocalDateTime fromDateModified \u003d LocalDateTime.parse(fromDate, INPUT_FORMAT);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        LocalDateTime toDateModified \u003d LocalDateTime.parse(toDate, INPUT_FORMAT);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        if (fromDateModified.isBefore(toDateModified) \u003d\u003d false) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"                    \"The \u0027/from\u0027 date and time should be before \u0027/to\u0027 date and time. Please try again!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"     * Returns a String date that is converted to LocalDateTime date","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"     * @param date Date in String","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"     * @return Date in LocalDateTime","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"    public static LocalDateTime convertStringToDate(String date) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"        LocalDateTime modifiedDate \u003d LocalDateTime.parse(date, INPUT_FORMAT);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        return modifiedDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KhoonSun47":58}},{"path":"src/main/java/utilities/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import commands.Commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"     * Initialises the tasklist and the storage","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"     * @param taskList Arraylist of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"     * @param storage Storage class to write to file","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    public Parser(TaskList taskList, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"     * Contains the status of isExit","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"     * @return isExit Status of the parseCommands to show whether the user have exited the chatbot","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        return isExit;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"     * Receives the command based on the user input and the additional information to perform","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"     * chatbox task","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"     * @param command Command based on the user input","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"     * @param additionalInformation Additional information that contains the details of the task,","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"     *        dates and time","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"     * @return True or False to see whether the user has exited the chatbot","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    public boolean parseCommands(Commands command, String additionalInformation) {","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"            switch (command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"            case todo:","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"                handleTodo(additionalInformation);","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"            case deadline:","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"                handleDeadline(additionalInformation);","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"            case event:","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"                handleEvent(additionalInformation);","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"            case list:","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"                this.taskList.printList();","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"            case delete:","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"                this.taskList.deleteFromList(additionalInformation);","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"            case mark:","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"                handleMarkAndUnmark(additionalInformation, true);","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"            case unmark:","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"                handleMarkAndUnmark(additionalInformation, false);","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"            case find:","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"                handleFind(additionalInformation);","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"            case bye:","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"                handleBye();","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"                return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        } catch (WilliamException | IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"     * Handles toDo task, and add toDo into arraylist of tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"     * @param additionalInformation","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"    private void handleTodo(String additionalInformation) throws WilliamException {","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"        AdditionalInfoParser.checkAdditionalDetailEmpty(additionalInformation);","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"        taskList.addTask(new Todo(additionalInformation));","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"     * Handles deadline task, and add deadline into arraylist of tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"     * @param additionalInformation","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"    private void handleDeadline(String additionalInformation) throws WilliamException {","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"        String[] deadlineDetails \u003d AdditionalInfoParser.splitInput(additionalInformation, \" /by \");","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"        DateAndTimeParser.acceptDateAndTime(deadlineDetails[1]);","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"        taskList.addTask(new Deadline(deadlineDetails[0],","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"                DateAndTimeParser.convertStringToDate(deadlineDetails[1])));","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"     * Handles event task, and add event into arraylist of tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"     * @param additionalInformation","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"    private void handleEvent(String additionalInformation) throws WilliamException {","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"        String[] eventDetails \u003d","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"                AdditionalInfoParser.splitInput(additionalInformation, \" /from \", \" /to \");","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"        DateAndTimeParser.acceptDateAndTime(eventDetails[1]);","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"        DateAndTimeParser.acceptDateAndTime(eventDetails[2]);","lastModifiedDate":"2024-02-06"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"        DateAndTimeParser.checkWhetherToAndFromValid(eventDetails[1], eventDetails[2]);","lastModifiedDate":"2024-02-06"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"        taskList.addTask(","lastModifiedDate":"2024-02-06"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"                new Event(eventDetails[0], DateAndTimeParser.convertStringToDate(eventDetails[1]),","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"                        DateAndTimeParser.convertStringToDate(eventDetails[2])));","lastModifiedDate":"2024-02-06"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"     * Handles mark and unmark task","lastModifiedDate":"2024-02-06"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-02-06"},{"lineNumber":132,"author":{"gitId":"KhoonSun47"},"content":"     * @param additionalInformation","lastModifiedDate":"2024-02-06"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"     * @param isMark","lastModifiedDate":"2024-02-06"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException","lastModifiedDate":"2024-02-06"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"    private void handleMarkAndUnmark(String additionalInformation, boolean isMark)","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"KhoonSun47"},"content":"            throws WilliamException {","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"        AdditionalInfoParser.checkAdditionalDetailEmpty(additionalInformation);","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"        if (isMark \u003d\u003d true) {","lastModifiedDate":"2024-02-06"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"        taskList.markAndUnmark(additionalInformation);","lastModifiedDate":"2024-02-06"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":148,"author":{"gitId":"KhoonSun47"},"content":"     * Handles finding task based on the task id","lastModifiedDate":"2024-02-06"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-02-06"},{"lineNumber":150,"author":{"gitId":"KhoonSun47"},"content":"     * @param additionalInformation","lastModifiedDate":"2024-02-06"},{"lineNumber":151,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException","lastModifiedDate":"2024-02-06"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"    private void handleFind(String additionalInformation) throws WilliamException {","lastModifiedDate":"2024-02-06"},{"lineNumber":154,"author":{"gitId":"KhoonSun47"},"content":"        AdditionalInfoParser.checkAdditionalDetailEmpty(additionalInformation);","lastModifiedDate":"2024-02-06"},{"lineNumber":155,"author":{"gitId":"KhoonSun47"},"content":"        taskList.findTasks(additionalInformation);","lastModifiedDate":"2024-02-06"},{"lineNumber":156,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":157,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":158,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":159,"author":{"gitId":"KhoonSun47"},"content":"     * Handles the event where user exits the chatbot, and add the updated tasks into file","lastModifiedDate":"2024-02-06"},{"lineNumber":160,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-02-06"},{"lineNumber":161,"author":{"gitId":"KhoonSun47"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-06"},{"lineNumber":162,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":163,"author":{"gitId":"KhoonSun47"},"content":"    private void handleBye() throws IOException {","lastModifiedDate":"2024-02-06"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-06"},{"lineNumber":165,"author":{"gitId":"KhoonSun47"},"content":"        storage.writeToFile(taskList.getTasks());","lastModifiedDate":"2024-02-06"},{"lineNumber":166,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":167,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KhoonSun47":167}},{"path":"src/main/java/utilities/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    private String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"     * Loads tasks from the hard disk","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"     * @return arraylist ArrayList of tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the lists in the txt file is not in the expected format OR if the","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"     *         pattern is wrong","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    public List\u003cTask\u003e loadFromFile() throws FileNotFoundException, WilliamException {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"        // Pattern to match lines with five parts separated by pipes (\u0027|\u0027)","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        // Each part can contain any characters, with whitespace handling Capture non-whitespace","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"        // characters in the first two parts and at least one character in the last three parts","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"        String matchingPattern \u003d","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"                \"^\\\\s*(\\\\S+)\\\\s*\\\\|\\\\s*(\\\\S+)\\\\s*\\\\|\\\\s*(.+?)\\\\s*\\\\|\\\\s*(.+?)\\\\s*\\\\|\\\\s*(.+?)\\\\s*$\";","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"        Pattern pattern \u003d Pattern.compile(matchingPattern);","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"            Matcher matcher \u003d pattern.matcher(sc.nextLine());","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"            if (matcher.matches() \u003d\u003d false) {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"                throw new WilliamException(","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"                        \"The lists is not in the expected format OR The pattern is wrong!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"            String type \u003d matcher.group(1);","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"            boolean isDone \u003d Integer.parseInt(matcher.group(2)) \u003d\u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"            String name \u003d matcher.group(3);","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"            String firstPart \u003d matcher.group(4);","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"            String secondPart \u003d matcher.group(5);","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"            switch (type) {","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"            case \"T\":","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"                tasks.add(new Todo(name, isDone));","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"            case \"E\":","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"                tasks.add(new Event(name, DateAndTimeParser.convertStringToDate(firstPart),","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"                        DateAndTimeParser.convertStringToDate(secondPart), isDone));","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"            case \"D\":","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"                tasks.add(new Deadline(name, DateAndTimeParser.convertStringToDate(firstPart),","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"                        isDone));","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"            default:","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"        sc.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"        return tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"     * Saves tasks into hard disk","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"     * @throws IOException if the arraylist cannot be written to the file","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"    public void writeToFile(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"        int actualSizeComparison \u003d tasks.size() - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"                String name \u003d task.getName();","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"                boolean isDoneBFormat \u003d task.getIsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"                int isDone \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"                if (isDoneBFormat \u003d\u003d true) {","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"                    isDone \u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"                    isDone \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"                String[] times \u003d task.getTimes();","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"                if (i !\u003d actualSizeComparison) {","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"                    sb.append(task.getType()).append(\" | \").append(isDone).append(\" | \")","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"                            .append(name).append(\" | \").append(times[0]).append(\" | \")","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"                            .append(times[1]).append(System.lineSeparator());","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"                    sb.append(task.getType()).append(\" | \").append(isDone).append(\" | \")","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"                            .append(name).append(\" | \").append(times[0]).append(\" | \")","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"                            .append(times[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"            fw.write(sb.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"            fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"KhoonSun47":119}},{"path":"src/main/java/utilities/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":" * Deals with loading tasks and saving tasks into a list (it simulates saving","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":" * and loading task from a text file for the ParserTest)","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    public StorageStub(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"        super(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    public List\u003cTask\u003e loadFromFile() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    public void writeToFile(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"KhoonSun47":30}},{"path":"src/main/java/utilities/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":" * Contains the task list e.g. it has operations to add/delete tasks in the list","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"     * Constructor if there is no existing file","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"     * Constructor if there is an existing txt file with tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"     * Prints out of all the tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    public void printList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(\"Your list is empty. Please add some task to the list first!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"                System.out.println((i + 1) + \". \" + this.tasks.get(i).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"     * Adds task into the list of tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"     * @param task Input that is the task (could be todo, deadline or event)","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(\"Now you have \" + this.tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"     * Deletes the specified task from the list","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"     * @param input The ID of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    public void deleteFromList(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"                    \"There are no task to be deleted. Please add some task to the list first!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"            int idOfItem \u003d Integer.parseInt(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"            int actualId \u003d idOfItem - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(this.tasks.get(actualId).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"            this.tasks.remove(actualId);","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(\"Now you have \" + this.tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"     * Unmarks/marks the task based on the ID","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"     * @param input The ID of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"    public void markAndUnmark(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"        int idOfItem \u003d Integer.parseInt(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        int actualId \u003d idOfItem - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks.get(actualId).changeIsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(this.tasks.get(actualId).toString() + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"     * Find the task based on whether the currTask contains the input","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"     * @param input Input from user to find the task","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"    public void findTasks(String input) throws WilliamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"        int counter \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"            String currTask \u003d this.tasks.get(i).getName();","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"            if (currTask.contains(input)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"                if (isFound \u003d\u003d false) {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"                    System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"                    isFound \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"                counter++;","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"                System.out.println(counter + \". \" + this.tasks.get(i).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println();","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"        if (isFound \u003d\u003d false) {","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"                    \"No tasks match the provided input: \" + input + \". Please try again!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"     * Getter method for task","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"     * @return arraylist Arraylist of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"        return this.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KhoonSun47":122}},{"path":"src/main/java/utilities/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":" * Contains the task list e.g. it has operations to add/delete tasks in the list","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":" * (it simulates these operations for the ParserTest)","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    public TaskListStub() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    public void deleteFromList(String input) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        int idOfItem \u003d Integer.parseInt(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        int actualId \u003d idOfItem - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        if (actualId \u003e\u003d 0 \u0026\u0026 actualId \u003c tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"            tasks.remove(actualId);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    public void markAndUnmark(String input) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        int idOfItem \u003d Integer.parseInt(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        int actualId \u003d idOfItem - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        if (actualId \u003e\u003d 0 \u0026\u0026 actualId \u003c tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"            Task task \u003d tasks.get(actualId);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"            task.changeIsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"KhoonSun47":51}},{"path":"src/main/java/utilities/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import commands.Commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":" * Deals with interactions with the user","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"     * Adds the opening message in the William Chatbot","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    public void openingTitle() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        String logo \u003d \"William\";","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(\"Hello! I\u0027m \" + logo);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"     * Returns the enum command","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"     * @param input Input that is a command in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"     * @return output Output that is a command in Commands format","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the command does not exist in the Commands class","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    public Commands retrieveCommand(String input) throws WilliamException {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"            return Commands.valueOf(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"                    \"This command \" + input + \" does not exist, please try again!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"     * Interacts with the user and operate based on their input","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"     * @param parser Contains the list of tasks and storage class","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    public void interactWithUser(Parser parser) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        while (true) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"            Commands command \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"            String[] texts \u003d AdditionalInfoParser.retrieveTexts(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"                command \u003d retrieveCommand(texts[0]);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"            } catch (WilliamException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"                System.out.println(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"                continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"            boolean checkExit \u003d parser.parseCommands(command, texts[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"            if (checkExit \u003d\u003d false) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"KhoonSun47":62}},{"path":"src/test/java/utilities/DateAndTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import exceptions.WilliamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":" * Test class for the DateAndTimeParser in utilities package","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"public class DateAndTimeParserTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the acceptDateAndTime method with the correct input, no exception thrown","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    public void acceptDateAndTime_correctDateTime_noException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"        assertDoesNotThrow(() -\u003e DateAndTimeParser.acceptDateAndTime(\"12/12/2023 1800\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        assertDoesNotThrow(() -\u003e DateAndTimeParser.acceptDateAndTime(\"13/12/2023 1700\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the acceptDateAndTime method with the wrong input, exception thrown","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    public void acceptDateAndTime_incorrectDateTime_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"            DateAndTimeParser.acceptDateAndTime(\"12-12-2023 5pm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"            fail();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        } catch (WilliamException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"            assertEquals(\"The date and time format is invalid. Please try again!\", e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the checkWhetherToAndFromValid method with the correct input, no exception thrown","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    public void checkWhetherToAndFromValid_correctToAndFrom_noException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"        assertDoesNotThrow(() -\u003e DateAndTimeParser.checkWhetherToAndFromValid(\"11/12/2023 1800\",","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"                \"12/12/2023 1800\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the checkWhetherToAndFromValid method with the wrong input, exception thrown","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"    public void checkWhetherToAndFromValid_fromDateAfterToDate_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"            DateAndTimeParser.checkWhetherToAndFromValid(\"13/12/2023 1800\", \"12/12/2023 1800\");","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"            fail();","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"        } catch (WilliamException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"            assertEquals(","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"                    \"The \u0027/from\u0027 date and time should be before \u0027/to\u0027 date and time. Please try again!\",","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"                    e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the convertStringToDate method with the correct input","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"    public void convertStringToDate() {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"        LocalDateTime expectedDate \u003d LocalDateTime.of(2023, 12, 12, 18, 0);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"        LocalDateTime actualDate \u003d DateAndTimeParser.convertStringToDate(\"12/12/2023 1800\");","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(expectedDate, actualDate);","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"KhoonSun47":73}},{"path":"src/test/java/utilities/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"package utilities;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"import commands.Commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"import tasks.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":" * Test class for the Parser in the utilities packages","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    private TaskListStub taskListStub;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    private StorageStub storageStub;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        taskListStub \u003d new TaskListStub();","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        storageStub \u003d new StorageStub(\"noStringPath\");","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        parser \u003d new Parser(taskListStub, storageStub);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for toDo switch case for the correct input","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"     * (assertTrue if it is added successfully, assertFalse if its not added","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"     * successfully)","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_toDoCommand_addsToDo() {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"        String additionalInfo \u003d \"Read Book\";","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.todo, additionalInfo);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(taskListStub.getTasks().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(taskListStub.getTasks().get(0) instanceof Todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for toDo switch case for the incorrect input","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"     * (assertTrue since it should not be added, and list should be empty)","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_incorrectToDoCommand_doesNotAddTask() {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.todo, \"\");","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(taskListStub.getTasks().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for deadline switch case for the correct input","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"     * (assertTrue if it is added successfully, assertFalse if its not added","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"     * successfully)","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_deadlineCommand_addsDeadline() {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"        String additionalInfo \u003d \"CS2103 Assignment 1 /by 12/12/2023 1800\";","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.deadline, additionalInfo);","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(taskListStub.getTasks().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(taskListStub.getTasks().get(0) instanceof Deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for deadline switch case for the incorrect","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"     * input (assertTrue since it should not be added, and list should be empty)","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_incorrectDeadlineCommand_doesNotAddTask() {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.deadline, \"CS2103 Assignment 1\");","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.deadline, \"CS2103 Assignment 1 /by\");","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.deadline, \"CS2103 Assignment 1 /by 12/12/2023 6pm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(taskListStub.getTasks().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for event switch case for the correct input","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"     * (assertTrue if it is added successfully, assertFalse if its not added","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"     * successfully)","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_eventCommand_addsDeadline() {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"        String additionalInfo \u003d \"CS2103 Assignment 2 /from 12/12/2023 1800 /to 13/12/2023 1700\";","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.event, additionalInfo);","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(taskListStub.getTasks().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(taskListStub.getTasks().get(0) instanceof Event);","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for event switch case for the incorrect","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"     * input (assertTrue since it should not be added, and list should be empty)","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_incorrectEventCommand_doesNotAddTask() {","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.event, \"CS2103 Assignment 2\");","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.event, \"CS2103 Assignment 2 /from 12/12/2023 1800 \");","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.event, \"CS2103 Assignment 2 /from 12/12/2023 1800 /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.event,","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"                \"CS2103 Assignment 2 /from 12/12/2023 1800 /to 11/12/2023 1900\");","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.event,","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"                \"CS2103 Assignment 2 /from 12/12/2023 6pm /to 12/12/2023 7pm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(taskListStub.getTasks().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for bye switch case, check whether a task been","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"     * added successfully to a file (since file should not be used for isolation, it","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"     * is temporaily stored in an arraylist instead)","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_byeCommand_addTasksIntoFile() {","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"        Todo todo \u003d new Todo(\"Test Task Added To File\");","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"        taskListStub.addTask(todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.bye, \"\");","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(storageStub.loadFromFile().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(todo, storageStub.loadFromFile().get(0));","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"        assertFalse(parser.isExit());","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for delete switch case, check whether a task","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"     * has been deleted successfully","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_deleteCommand_deleteTaskFromList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"        Todo todo \u003d new Todo(\"Test Task Added To File\");","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"        taskListStub.addTask(todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"        // Since there is only one task, the ID of the task is 1","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.delete, \"1\");","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"        assertTrue(taskListStub.getTasks().isEmpty());","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for mark switch case, check whether a task has","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"     * been marked successfully","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_markCommand_markTaskAsDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"        Todo todo \u003d new Todo(\"Test Task Added To File\", false);","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"        taskListStub.addTask(todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"        // Since there is only one task, the ID of the task is 1","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.mark, \"1\");","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(\"X\", taskListStub.getTasks().get(0).getStatusIcon());","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"     * Tests the parseCommands method for mark switch case, check whether a task has","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"KhoonSun47"},"content":"     * been marked successfully","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"KhoonSun47"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"KhoonSun47"},"content":"    public void parseCommands_markCommand_markTaskAsNotDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"KhoonSun47"},"content":"        Todo todo \u003d new Todo(\"Test Task Added To File\", true);","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"KhoonSun47"},"content":"        taskListStub.addTask(todo);","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"KhoonSun47"},"content":"        // Since there is only one task, the ID of the task is 1","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"KhoonSun47"},"content":"        parser.parseCommands(Commands.mark, \"1\");","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"KhoonSun47"},"content":"        assertEquals(\" \", taskListStub.getTasks().get(0).getStatusIcon());","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"KhoonSun47":165}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"todo make dinner","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"deadline create linkedin account /by Monday","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"mark 5","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"unmark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"java -classpath ../bin William \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KhoonSun47":1,"-":37}}]
