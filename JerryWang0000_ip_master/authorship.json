[{"path":"src/main/java/BotManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"public class BotManager {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"    private final String name;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"    BotManager(String name) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"    void greeting() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"        System.out.println(\"    Hello! I\u0027m \" + name);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"        System.out.println(\"    What can I do for you?\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"    void exit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"JerryWang0000"},"content":"    private Task createTask(String prompt) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"JerryWang0000"},"content":"        String[] order \u003d prompt.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"JerryWang0000"},"content":"        String taskType \u003d order[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"JerryWang0000"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"JerryWang0000"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"JerryWang0000"},"content":"            if (order.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"JerryWang0000"},"content":"                throw new DukeException(\"    Oops! Not sure about the description of the todo!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"JerryWang0000"},"content":"            } else if (order[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"                throw new DukeException(\"    Oops! Not sure about the description of the todo!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"JerryWang0000"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"JerryWang0000"},"content":"            return new Todo(order[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"JerryWang0000"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"JerryWang0000"},"content":"            String[] deadline \u003d order[1].split(\" /by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"JerryWang0000"},"content":"            if (deadline.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"JerryWang0000"},"content":"                throw new DukeException(\"    Oops! Incorrect format!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"JerryWang0000"},"content":"            } else if (deadline[0].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"JerryWang0000"},"content":"                throw new DukeException(\"    Oops! Not sure about the description of the deadline!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"JerryWang0000"},"content":"            } else if (deadline[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"JerryWang0000"},"content":"                throw new DukeException(\"    Oops! Not sure about the deadline!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"JerryWang0000"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"JerryWang0000"},"content":"            return new Deadline(deadline[0], deadline[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"JerryWang0000"},"content":"        case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"JerryWang0000"},"content":"            String[] startTime \u003d order[1].split(\" /from \");","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"JerryWang0000"},"content":"            if (startTime.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"JerryWang0000"},"content":"                throw new DukeException(\"    Oops! Incorrect format!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"JerryWang0000"},"content":"            } else if (startTime[0].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"JerryWang0000"},"content":"                throw new DukeException(\"    Oops! Not sure about the description of the event!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"JerryWang0000"},"content":"            } else if (startTime[1].split(\" /to \")[0].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"JerryWang0000"},"content":"                throw new DukeException(\"    Oops! Not sure about the starting time!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"JerryWang0000"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"JerryWang0000"},"content":"            String[] endTime \u003d order[1].split(\" /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"JerryWang0000"},"content":"            if (endTime.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"JerryWang0000"},"content":"                throw new DukeException(\"    Oops! Incorrect format!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"JerryWang0000"},"content":"            } else if (endTime[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"JerryWang0000"},"content":"                throw new DukeException(\"    Oops! Not sure about the ending time!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"JerryWang0000"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"JerryWang0000"},"content":"            return new Event(startTime[0], startTime[1].split(\" /to \")[0], endTime[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"JerryWang0000"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"JerryWang0000"},"content":"            throw new DukeException(\"    Sorry! I don\u0027t see what you mean...\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"JerryWang0000"},"content":"    private void addTask(String prompt) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"JerryWang0000"},"content":"        Task task \u003d createTask(prompt);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"JerryWang0000"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"JerryWang0000"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"JerryWang0000"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"JerryWang0000"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"JerryWang0000"},"content":"            System.out.println(\"    Now you have 1 task in the list\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"JerryWang0000"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"JerryWang0000"},"content":"            System.out.printf(\"    Now you have %d tasks in the list\\n%n\", tasks.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"JerryWang0000"},"content":"    private void deleteTask(int num) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"JerryWang0000"},"content":"        if (num \u003c 0 || num \u003e tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"JerryWang0000"},"content":"            throw new DukeException(\"    OOPS! Invalid Index!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"JerryWang0000"},"content":"        Task task \u003d tasks.remove(num - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"JerryWang0000"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"JerryWang0000"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"JerryWang0000"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"JerryWang0000"},"content":"            System.out.println(\"    Now you have 1 task in the list\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"JerryWang0000"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"JerryWang0000"},"content":"            System.out.printf(\"    Now you have %d tasks in the list\\n%n\", tasks.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"JerryWang0000"},"content":"    private void list() {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"JerryWang0000"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"JerryWang0000"},"content":"            System.out.println(\"    No tasks yet...\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"JerryWang0000"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"JerryWang0000"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"JerryWang0000"},"content":"                System.out.println(\"    \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"JerryWang0000"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"JerryWang0000"},"content":"        System.out.println();","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"JerryWang0000"},"content":"    private void mark(int num) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"JerryWang0000"},"content":"        if (num \u003c\u003d 0 || num \u003e tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"JerryWang0000"},"content":"            throw new DukeException(\"    OOPS! Invalid Index!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"JerryWang0000"},"content":"        Task task \u003d tasks.get(num - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"JerryWang0000"},"content":"        if (task.isDone()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"JerryWang0000"},"content":"            System.out.println(\"    Already done. No need to mark again.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"JerryWang0000"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"JerryWang0000"},"content":"            task.mark();","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"JerryWang0000"},"content":"            System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"JerryWang0000"},"content":"            System.out.println(\"      \" + task + \u0027\\n\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"JerryWang0000"},"content":"    private void unmark(int num) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"JerryWang0000"},"content":"        if (num \u003c\u003d 0 || num \u003e tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"JerryWang0000"},"content":"            throw new DukeException(\"OOPS! Invalid Index!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"JerryWang0000"},"content":"        Task task \u003d tasks.get(num - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"JerryWang0000"},"content":"        if (!task.isDone()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"JerryWang0000"},"content":"            System.out.println(\"    Not done in the first place. No need to unmark.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"JerryWang0000"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"JerryWang0000"},"content":"            task.unmark();","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"JerryWang0000"},"content":"            System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"JerryWang0000"},"content":"            System.out.println(\"      \" + task + \u0027\\n\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"JerryWang0000"},"content":"    void answer(String prompt) {","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"JerryWang0000"},"content":"        String[] order \u003d prompt.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"JerryWang0000"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"JerryWang0000"},"content":"            switch (order[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"JerryWang0000"},"content":"            case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"JerryWang0000"},"content":"                list();","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"JerryWang0000"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"JerryWang0000"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"JerryWang0000"},"content":"                mark(Integer.parseInt(order[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"JerryWang0000"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"JerryWang0000"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"JerryWang0000"},"content":"                unmark(Integer.parseInt(order[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"JerryWang0000"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"JerryWang0000"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"JerryWang0000"},"content":"                deleteTask(Integer.parseInt(order[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"JerryWang0000"},"content":"            default:","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"JerryWang0000"},"content":"                addTask(prompt);","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"JerryWang0000"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"JerryWang0000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"JerryWang0000"},"content":"            System.out.println(e);","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"JerryWang0000"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"JerryWang0000":150}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"    private String deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"    Deadline(String name, String deadline) {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"        super(name);","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s) \", deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"JerryWang0000":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"        BotManager manager \u003d new BotManager(\"Jerry\");","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"        manager.greeting();","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"        while (true) {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"            String prompt \u003d sc.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"            if (prompt.equals(\"bye\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"                manager.answer(prompt);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"        manager.exit();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"        sc.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JerryWang0000":15,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"    private final String errorMessage;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"    DukeException(String errorMessage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"        return errorMessage;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"JerryWang0000":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"    private String startTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"    private String endTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"    Event(String name, String startTime, String endTime) {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"        super(name);","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"        return \"[E]\" + super.toString() + String.format(\" (from: %s to: %s) \", startTime, endTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"JerryWang0000":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"abstract public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"    private final String name;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"    private boolean done;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"    Task(String name) {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"    boolean isDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"JerryWang0000"},"content":"        return done;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"JerryWang0000"},"content":"    void mark() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"JerryWang0000"},"content":"        this.done \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"JerryWang0000"},"content":"    void unmark() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"JerryWang0000"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"JerryWang0000"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"JerryWang0000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"JerryWang0000"},"content":"        if (done) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"JerryWang0000"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"JerryWang0000"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"JerryWang0000"},"content":"            return \"[ ] \" + name;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"JerryWang0000"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"JerryWang0000"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"JerryWang0000":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"    Todo(String name) {","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"        super(name);","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"JerryWang0000"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"JerryWang0000":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JerryWang0000"},"content":"todo borrow book","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"JerryWang0000"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"JerryWang0000"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"JerryWang0000"},"content":"list","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"JerryWang0000"},"content":"mark 2","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"JerryWang0000"},"content":"mark 1","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"JerryWang0000"},"content":"unmark 2","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"JerryWang0000"},"content":"list","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"JerryWang0000"},"content":"bye","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"JerryWang0000":9}}]
