[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"    mainClass.set(\"Dook.Dook\")","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"    archiveBaseName \u003d \"dook\"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"0liverkong":2,"-":40}},{"path":"data/dook.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"T | X | borrow book","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"T |   | read book","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"D |   | do homework | by: 2024-07-10 2334","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"T | X | meow","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"E |   | dance | from: 2023-02-03 1600 to: 2023-02-03 1800","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"0liverkong":5}},{"path":"src/main/java/Command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import Task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"import Task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import Dook.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import Dook.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"import Dook.DookException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"    private final Task task;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"     * Adds given task to the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"     * @param tasks Target tasklist to add the task to.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"     * @param ui The user interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"     * @param storage The storage interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DookException {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"        ui.println(\"Oki! I\u0027ve added this task:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"        ui.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"        tasks.printStatus();","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"        storage.write(tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"0liverkong":32}},{"path":"src/main/java/Command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import Task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"import Dook.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import Dook.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import Dook.DookException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"    public ByeCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"     * Says goodbye.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"     * @param tasks The bot Tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"     * @param ui The user interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"     * @param storage The storage interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DookException {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"        ui.println(\"Bye :(. Hope to see you again soon! ≽^- ˕ -^≼\");","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"        storage.write(tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"0liverkong":26}},{"path":"src/main/java/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import Task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"import Dook.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import Dook.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import Dook.DookException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"        return isExit;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"     * Generic Command function. Will interact with the","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"     * tasklist, user interface, and storage of the bot","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"     * depending on the type of the Command.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"     * @param tasks The bot Tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"     * @param ui The user interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"     * @param storage The storage interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DookException;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"0liverkong":24}},{"path":"src/main/java/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import Task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"import Task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import Dook.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import Dook.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"import Dook.DookException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"    private final int positionToDelete;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"    public DeleteCommand(int positionToDelete) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"        this.positionToDelete \u003d positionToDelete;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"     * Deletes a command from the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"     * @param tasks The bot TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"     * @param ui The user interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"     * @param storage The storage interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"     * @throws DookException If TaskList is empty or indexed out of bounds.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DookException {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"        Task toDelete;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"            toDelete \u003d tasks.get(positionToDelete - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"            DookException err;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"                err \u003d new DookException(\"Nooo! You don\u0027t have any tasks to delete :(\");","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"                err \u003d new DookException(String.format(\"Nooo! \" +","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"                                \"You have %d tasks!\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"                                \" Valid inputs for delete is in the range [1 - %d]\",","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"                        tasks.size(), tasks.size()));","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"            throw err;","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"        ui.println(\"Oki! Bye Bye task!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"        tasks.remove(positionToDelete - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"        ui.println(\"You deleted this task :(\");","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"        ui.println(toDelete.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"        storage.write(tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"0liverkong":46}},{"path":"src/main/java/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import Task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"import Task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import Dook.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import Dook.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"    private final String target;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"    public FindCommand(String target) {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"        this.target \u003d target;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"        ArrayList\u003cTask\u003e found \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"            if (tasks.get(i).hasSubstring(target)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"                found.add(tasks.get(i));","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"        if (found.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"            ui.println(\"No tasks foundd :(( meoww\");","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"            return;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"        ui.println(\"Okay! here are the tasks I found! :3\");","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"        for (int i \u003d 0; i \u003c found.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"            ui.println(String.format(\"%d. %s\", i + 1, found.get(i).toString()));","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"0liverkong":34}},{"path":"src/main/java/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import Dook.DookException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"import Task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import Dook.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import Dook.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"     * Lists the current tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"     * @param tasks The bot TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"     * @param ui The user interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"     * @param storage The storage interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"        ui.println(\"Here are your tasks!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"        ui.println(tasks.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"0liverkong":22}},{"path":"src/main/java/Command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import Task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"import Task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import Dook.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import Dook.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"import Dook.DookException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"    private final int positionToMark;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"    public MarkCommand(int positionToMark) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"        this.positionToMark \u003d positionToMark;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"     * @param tasks The bot TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"     * @param ui The user interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"     * @param storage The storage interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"     * @throws DookException If TaskList is empty or indexed out of bounds.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DookException {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"        Task toMark;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"            toMark \u003d tasks.get(positionToMark - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"            DookException err;","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"                err \u003d new DookException(\"Nooo! You don\u0027t have any tasks to mark :(\");","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"                err \u003d new DookException(String.format(\"Nooo! \" +","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"                                \"You have %d tasks!\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"                                \" Valid inputs for mark is in the range [1 - %d]\",","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"                        tasks.size(), tasks.size()));","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"            throw err;","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"        toMark.markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"        ui.println(\"Oki! :D Good job! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"        ui.println(toMark.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"        storage.write(tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"0liverkong":47}},{"path":"src/main/java/Command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import Task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"import Task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import Dook.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import Dook.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"import Dook.DookException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"    private final int positionToUnmark;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"    public UnmarkCommand(int positionToUnmark) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"        this.positionToUnmark \u003d positionToUnmark;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"     * Marks a task as not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"     * @param tasks The bot TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"     * @param ui The user interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"     * @param storage The storage interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"     * @throws DookException If TaskList is empty or indexed out of bounds.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DookException {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"        Task toUnmark;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"            toUnmark \u003d tasks.get(positionToUnmark - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"            DookException err;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"                err \u003d new DookException(\"Nooo! You don\u0027t have any tasks to unmark :(\");","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"                err \u003d new DookException(String.format(\"Nooo! \" +","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"                                \"You have %d tasks!\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"                                \" Valid inputs for unmark is in the range [1 - %d]\",","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"                        tasks.size(), tasks.size()));","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"            throw err;","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"        toUnmark.markAsNotDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"        ui.println(\"Lazy bum. \u003e:( I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"        ui.println(toUnmark.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"        storage.write(tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"0liverkong":46}},{"path":"src/main/java/Dook/Dook.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Dook;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import Command.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"import Task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"public class Dook {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"    private static final ArrayList\u003cString\u003e FILE_PATH \u003d new ArrayList\u003c\u003e(List.of(\"data\", \"dook.txt\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"    Dook() {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"     * Main body of the code. Repeatedly takes in a single line command","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"     * and acts on the state of Dook accordingly.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"    public void run() {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"            this.storage.checkFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"            System.out.println(\"meow :( an error happened when opening your files, please restart to prevent data loss\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"        this.ui.introduce();","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"            this.tasks \u003d this.storage.loadTaskListFromFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"            this.ui.println(\"error while loading file, specific error: \" + e);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"        } catch (DookException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"            this.ui.println(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"        boolean willExitLoop \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"        while (!willExitLoop) {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"            String input \u003d ui.getInput();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"0liverkong"},"content":"            this.ui.printSeparator();","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"0liverkong"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"0liverkong"},"content":"                Command c \u003d this.parser.parse(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"0liverkong"},"content":"                c.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"0liverkong"},"content":"                willExitLoop \u003d c.isExit();","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"0liverkong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"0liverkong"},"content":"                this.ui.printException(e);","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"0liverkong"},"content":"            } finally {","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"0liverkong"},"content":"                this.ui.printSeparator();","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"0liverkong"},"content":"     * Driver function.","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"0liverkong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"0liverkong"},"content":"        Dook dook \u003d new Dook();","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"0liverkong"},"content":"        dook.run();","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"0liverkong":67}},{"path":"src/main/java/Dook/DookException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Dook;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"public class DookException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"    public DookException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"0liverkong":7}},{"path":"src/main/java/Dook/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Dook;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import Command.AddCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"import Command.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import Command.DeleteCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import Command.MarkCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"import Command.ByeCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"import Command.ListCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"import Command.UnmarkCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"import Command.FindCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"import Task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"import Task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"import Task.TaskType;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"import Task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"import Task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"public class Parser {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"    public static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"    private static final ArrayList\u003cString\u003e TASK_TYPES \u003d new ArrayList\u003cString\u003e(Arrays.asList(\"todo\", \"deadline\", \"event\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"     * Parses a given command as a String.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"     * @param input The String command.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"     * @return The corresponding command, if valid.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"     * @throws DookException If an invalid command is detected.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"    public static Command parse(String input) throws DookException {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"        String[] split \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"        String firstWord \u003d split[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"        } else if (firstWord.equals(\"list\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"        } else if (TASK_TYPES.contains(firstWord)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"            String secondWord;","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"                secondWord \u003d split[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"                throw new DookException(\"Noo!! task description cannot be empty!!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"0liverkong"},"content":"            switch (firstWord) {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"0liverkong"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"0liverkong"},"content":"                return new AddCommand(getTask(TaskType.TODO, secondWord));","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"0liverkong"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"0liverkong"},"content":"                return new AddCommand(getTask(TaskType.DEADLINE, secondWord));","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"0liverkong"},"content":"            default:","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"0liverkong"},"content":"                return new AddCommand(getTask(TaskType.EVENT, secondWord));","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"0liverkong"},"content":"        } else if (firstWord.equals(\"mark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"0liverkong"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"0liverkong"},"content":"                String secondWord;","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"0liverkong"},"content":"                secondWord \u003d split[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"0liverkong"},"content":"                return new MarkCommand(Integer.valueOf(secondWord));","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"0liverkong"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"0liverkong"},"content":"                throw new DookException(\"Ohnoo! Please enter a number after \\\"mark\\\"!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"0liverkong"},"content":"        } else if (firstWord.equals(\"unmark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"0liverkong"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"0liverkong"},"content":"                String secondWord;","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"0liverkong"},"content":"                secondWord \u003d split[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"0liverkong"},"content":"                return new UnmarkCommand(Integer.valueOf(secondWord));","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"0liverkong"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"0liverkong"},"content":"                throw new DookException(\"Ohnoo! Please enter a number after \\\"unmark\\\"!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"0liverkong"},"content":"        } else if (firstWord.equals(\"delete\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"0liverkong"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"0liverkong"},"content":"                String secondWord;","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"0liverkong"},"content":"                secondWord \u003d split[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"0liverkong"},"content":"                return new DeleteCommand(Integer.valueOf(secondWord));","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"0liverkong"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"0liverkong"},"content":"                throw new DookException(\"Ohnoo! Please enter a number after \\\"delete\\\"!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"0liverkong"},"content":"        } else if (firstWord.equals(\"find\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"0liverkong"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"0liverkong"},"content":"                String secondWord;","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"0liverkong"},"content":"                secondWord \u003d split[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"0liverkong"},"content":"                return new FindCommand(secondWord);","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"0liverkong"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"0liverkong"},"content":"                throw new DookException(\"Ohnoo! Please enter a phrase after \\\"find\\\"!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"0liverkong"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"0liverkong"},"content":"            throw new DookException(\"I don\u0027t understand this command :( Try again!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"0liverkong"},"content":"     * Parses a given AddCommand as a String.","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"0liverkong"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"0liverkong"},"content":"     * @param taskType The specific type of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"0liverkong"},"content":"     * @param taskDetails The remaining details as a String.","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"0liverkong"},"content":"     * @return The corresponding Task, if valid.","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"0liverkong"},"content":"     * @throws DookException If an invalid format is detected.","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"0liverkong"},"content":"    public static Task getTask(TaskType taskType, String taskDetails) throws DookException {","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"0liverkong"},"content":"        String name;","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"0liverkong"},"content":"        String[] details;","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"0liverkong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"0liverkong"},"content":"            if (taskDetails.isBlank()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"0liverkong"},"content":"                throw new DookException(\":( Task.Task description cannot be empty!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"0liverkong"},"content":"            switch (taskType) {","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"0liverkong"},"content":"            case TODO:","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"0liverkong"},"content":"                return new ToDo(taskDetails);","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"0liverkong"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"0liverkong"},"content":"                details \u003d taskDetails.split(\" /by \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"0liverkong"},"content":"                name \u003d details[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"0liverkong"},"content":"                LocalDateTime doBy \u003d LocalDateTime.parse(details[1], formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"0liverkong"},"content":"                return new Deadline(name, doBy);","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"0liverkong"},"content":"            case EVENT:","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"0liverkong"},"content":"                details \u003d taskDetails.split(\" /from \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"0liverkong"},"content":"                name \u003d details[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"0liverkong"},"content":"                String[] startAndEnd \u003d details[1].split(\" /to \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"0liverkong"},"content":"                LocalDateTime start \u003d LocalDateTime.parse(startAndEnd[0], formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"0liverkong"},"content":"                LocalDateTime end \u003d LocalDateTime.parse(startAndEnd[1], formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"0liverkong"},"content":"                return new Event(name, start, end);","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"0liverkong"},"content":"            default:","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"0liverkong"},"content":"                throw new DookException(\"Oh nyo! Wrong format for \" + taskType + \" command!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"0liverkong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"0liverkong"},"content":"            throw new DookException(\"Oh nyo! Wrong format for \" + taskType + \" command!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"0liverkong"},"content":"     * Parses a given Task as a String.","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"0liverkong"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"0liverkong"},"content":"     * @param s The input line from the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"0liverkong"},"content":"     * @return The corresponding Task, if valid.","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"0liverkong"},"content":"     * @throws DookException If an invalid format is detected.","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"0liverkong"},"content":"    public static Task parseFileLineToTask(String s) throws DookException {","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"0liverkong"},"content":"        String[] split \u003d s.split(\" \\\\| \", 3);","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"0liverkong"},"content":"        String taskTypeString \u003d split[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"0liverkong"},"content":"        String isDoneString \u003d split[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"0liverkong"},"content":"        String description \u003d split[2];","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"0liverkong"},"content":"        TaskType taskType;","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"0liverkong"},"content":"        String[] details;","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"0liverkong"},"content":"        String name;","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"0liverkong"},"content":"        boolean isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"0liverkong"},"content":"        switch (taskTypeString) {","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"0liverkong"},"content":"        case \"D\":","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"0liverkong"},"content":"            taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"0liverkong"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"0liverkong"},"content":"        case \"E\":","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"0liverkong"},"content":"            taskType \u003d TaskType.EVENT;","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"0liverkong"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"0liverkong"},"content":"        case \"T\":","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"0liverkong"},"content":"            taskType \u003d TaskType.TODO;","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"0liverkong"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"0liverkong"},"content":"        default:","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"0liverkong"},"content":"            throw new DookException(\"Invalid task type at \\\"\" + s + \"\\\".\");","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"0liverkong"},"content":"        switch (isDoneString) {","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"0liverkong"},"content":"        case \"X\":","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"0liverkong"},"content":"            isDone \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"0liverkong"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"0liverkong"},"content":"        case \" \":","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"0liverkong"},"content":"            isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"0liverkong"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"0liverkong"},"content":"        default:","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"0liverkong"},"content":"            throw new DookException(\"Oh nyo!! Invalid completion indicator at \\\"\" + s + \"\\\"!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"0liverkong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"0liverkong"},"content":"            switch (taskType) {","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"0liverkong"},"content":"            case TODO:","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"0liverkong"},"content":"                return new ToDo(description, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":174,"author":{"gitId":"0liverkong"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"0liverkong"},"content":"                details \u003d description.split(\" \\\\| \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":176,"author":{"gitId":"0liverkong"},"content":"                name \u003d details[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":177,"author":{"gitId":"0liverkong"},"content":"                LocalDateTime doBy \u003d LocalDateTime.parse(details[1].split(\"by: \", 2)[1], formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"0liverkong"},"content":"                return new Deadline(name, doBy, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"0liverkong"},"content":"            case EVENT:","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"0liverkong"},"content":"                details \u003d description.split(\" \\\\| \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"0liverkong"},"content":"                name \u003d details[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"0liverkong"},"content":"                String[] startAndEnd \u003d details[1].split(\" to: \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"0liverkong"},"content":"                LocalDateTime start \u003d LocalDateTime.parse(startAndEnd[0].split(\"from: \", 2)[1], formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"0liverkong"},"content":"                LocalDateTime end \u003d LocalDateTime.parse(startAndEnd[1], formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"0liverkong"},"content":"                return new Event(name, start, end, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":186,"author":{"gitId":"0liverkong"},"content":"            default:","lastModifiedDate":"2024-01-30"},{"lineNumber":187,"author":{"gitId":"0liverkong"},"content":"                throw new DookException(\"Oh nyo! Wrong format for \" + taskType + \" command in the file... :)\");","lastModifiedDate":"2024-01-30"},{"lineNumber":188,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":189,"author":{"gitId":"0liverkong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":190,"author":{"gitId":"0liverkong"},"content":"            throw new DookException(\"Oh nyo! Wrong format for \" + taskType + \" command in the file... :(\");","lastModifiedDate":"2024-01-30"},{"lineNumber":191,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":192,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":193,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"0liverkong":193}},{"path":"src/main/java/Dook/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Dook;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import Task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"    private final ArrayList\u003cString\u003e path;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"    Storage(ArrayList\u003cString\u003e path) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"        this.path \u003d path;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"     * Writes the current TaskList to a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"     * @param tasks The current TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"     * @throws DookException If problems writing to a file is found.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"    public void write(TaskList tasks) throws DookException {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"            File f \u003d new File(String.join(\"/\", path));","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"            if (!f.exists()){","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"                f.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"            FileWriter writer \u003d new FileWriter(String.join(\"/\", path));","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"            writer.write(tasks.fileRepresentation());","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"            writer.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"            throw new DookException(\"An error occured when writing to your files...:(\" + e);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"     * Loads a file to a TaskList object.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"     * @throws IOException If problems reading from a file is found.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"     * @throws DookException If problems regarding file formatting is found.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"    public TaskList loadTaskListFromFile() throws IOException, DookException {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"0liverkong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"0liverkong"},"content":"        BufferedReader r;","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"0liverkong"},"content":"        r \u003d new BufferedReader(new FileReader(String.join(\"/\", path)));","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"0liverkong"},"content":"        String line \u003d r.readLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"0liverkong"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"0liverkong"},"content":"            taskList.addTask(Parser.parseFileLineToTask(line));","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"0liverkong"},"content":"            line \u003d r.readLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"0liverkong"},"content":"        r.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"0liverkong"},"content":"        return taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"0liverkong"},"content":"     * Checks the existence of a file to write to in the path, if it does","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"0liverkong"},"content":"     * not exist then it creates one.","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"0liverkong"},"content":"    public void checkFile() {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"0liverkong"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"0liverkong"},"content":"            String filename \u003d String.join(File.separator, path.subList(0, path.size() - 1));","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"0liverkong"},"content":"            String workingDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"0liverkong"},"content":"            String absoluteFilePath \u003d workingDirectory + File.separator + filename;","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"0liverkong"},"content":"            File file \u003d new File(absoluteFilePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"0liverkong"},"content":"            System.out.println(absoluteFilePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"0liverkong"},"content":"            if (file.mkdir()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"0liverkong"},"content":"                System.out.println(\"Meow :3 directory for your data is created!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"0liverkong"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"0liverkong"},"content":"                System.out.println(\"Meow :3 existing directory for data found!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"0liverkong"},"content":"            filename \u003d String.join(File.separator, path);","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"0liverkong"},"content":"            workingDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"0liverkong"},"content":"            absoluteFilePath \u003d workingDirectory + File.separator + filename;","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"0liverkong"},"content":"            file \u003d new File(absoluteFilePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"0liverkong"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"0liverkong"},"content":"                System.out.println(\"save file is initialised!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"0liverkong"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"0liverkong"},"content":"                System.out.println(\"save file detected!!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"0liverkong"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"0liverkong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"0liverkong"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"0liverkong":88}},{"path":"src/main/java/Dook/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Dook;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"    private static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"    public Ui() {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"    public void printSeparator() {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"     * Prints the introduction for the bot.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"    public void introduce() {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"        String logo \u003d \" ____              _    \\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"                + \"|  _ \\\\  ___   ___ | | __      ╱|、\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"                + \"| | | |/ _ \\\\ / _ \\\\| |/ /    (˚ˎ 。7  \\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"                + \"| |_| | |_| | |_| |   \u003c      |、˜〵 \\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"                + \"|____/ \\\\___/ \\\\___/|_|\\\\_\\\\     じしˍ,)ノ\\n\";","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"        printSeparator();","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"        System.out.println(\"Hello from Dook! :D meow\\n\" + logo);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"        System.out.println(\"What can I do for you? uwu\");","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"        printSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"    public void printException(Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"    public void println(String s) {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"        System.out.println(s);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"    public String getInput() {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"0liverkong":45}},{"path":"src/main/java/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"    private LocalDateTime doBy;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"    public Deadline(String name, LocalDateTime doBy) {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"        this.doBy \u003d doBy;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"    public Deadline(String name, LocalDateTime doBy, boolean done) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"        super(name, done);","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"        this.doBy \u003d doBy;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"    public String fileRepresentation() {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"        return String.format(\"D | %s | %s | by: %s\",","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"                this.getDescription(),","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"                this.doBy.format(Task.formatter));","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"                this.doBy.format(Task.formatter));","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"0liverkong":30}},{"path":"src/main/java/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"    private LocalDateTime start;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"    private LocalDateTime end;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"    public Event(String name, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"    public Event(String name, LocalDateTime start, LocalDateTime end, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"        this(name, start, end);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"    public String fileRepresentation() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"        return String.format(\"E | %s | %s | from: %s to: %s\",","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"                this.getDescription(),","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"                this.start.format(Task.formatter),","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"                this.end.format(Task.formatter));","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"                super.toString(),","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"                this.start.format(Task.formatter),","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"                this.end.format(Task.formatter));","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"0liverkong":35}},{"path":"src/main/java/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"    private String name;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"    protected static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"    Task(String name) {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"        this(name, false);","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"    Task(String name, boolean done) {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"    protected String getDescription() {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"        return this.name;","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"    public abstract String fileRepresentation();","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"    public boolean hasSubstring(String target) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"        return name.contains(target);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.name);","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"0liverkong":44}},{"path":"src/main/java/Task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"public class TaskList {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"    private static int count \u003d 0;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"        tasks.add(t);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"        count++;","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"    public void remove(int i) {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"        this.tasks.remove(i);","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"    public int size() {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"0liverkong"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"0liverkong"},"content":"    public void printStatus() {","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"0liverkong"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"0liverkong"},"content":"            System.out.println(\"Now you have no tasks on the list :(((\");","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"0liverkong"},"content":"        } else if (count \u003d\u003d 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"0liverkong"},"content":"            System.out.println(\"You have 1 task on the list!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"0liverkong"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"0liverkong"},"content":"            System.out.printf(\"You have %d tasks on the list!%n\", count);","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"0liverkong"},"content":"    public String fileRepresentation() {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"0liverkong"},"content":"        ArrayList\u003cString\u003e a \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"0liverkong"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"0liverkong"},"content":"            a.add(t.fileRepresentation());","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"0liverkong"},"content":"        return String.join(\"\\n\", a);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"0liverkong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"0liverkong"},"content":"        ArrayList\u003cString\u003e a \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"0liverkong"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"0liverkong"},"content":"            a.add(String.format(\"%d. %s\",","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"0liverkong"},"content":"                    i + 1,","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"0liverkong"},"content":"                    this.tasks.get(i)));","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"0liverkong"},"content":"        return String.join(\"\\n\", a);","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"0liverkong":58}},{"path":"src/main/java/Task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"public enum TaskType {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"    TODO,","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"    DEADLINE,","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"    EVENT,","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"0liverkong":7}},{"path":"src/main/java/Task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"        this(name);","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"    public String fileRepresentation() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"        return String.format(\"T | %s | %s\",","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"                this.getDescription());","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"0liverkong":24}},{"path":"src/test/java/Dook/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Dook;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"    public void testThrowsDookException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"        boolean isThrown \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"            Parser.parse(\"laklflaelflal\");","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"        } catch (DookException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"            isThrown \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"        assertTrue(isThrown);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"        isThrown \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"            Parser.parse(\"E | yes | a \");","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"        } catch (DookException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"0liverkong"},"content":"            isThrown \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"0liverkong"},"content":"        assertTrue(isThrown);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"0liverkong":26}},{"path":"src/test/java/Task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"package Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"    public void testFileRepresentation() {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"        Deadline d \u003d new Deadline(\"homework\", LocalDateTime.parse(\"2023-01-01 2359\", formatter));","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"        assertEquals(\"D |   | homework | by: 2023-01-01 2359\", d.fileRepresentation());","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"0liverkong":18}},{"path":"text-ui-test/data/dook.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"T |   | borrow book","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"T |   | read book","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"T |   | join sports club","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"D | X | return book | by: June 6th","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"E |   | project meeting | from: Mon 2pm to: 4pm","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"0liverkong":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"0liverkong"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"0liverkong"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"0liverkong"},"content":"todo join sports club","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"0liverkong"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"0liverkong"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"0liverkong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"0liverkong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"0liverkong"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"0liverkong"},"content":"mark1","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"0liverkong"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"0liverkong"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"0liverkong"},"content":"mark 9","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"0liverkong"},"content":"unmark 10","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"0liverkong"},"content":"mark 5","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"0liverkong"},"content":"unmark 8","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"0liverkong"},"content":"unmark","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"0liverkong"},"content":"delete  8","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"0liverkong"},"content":"delete 8","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"0liverkong"},"content":"delete 5","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"0liverkong"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"0liverkong"},"content":"bye","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"0liverkong":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"0liverkong"},"content":"java -classpath ../bin Dook \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"0liverkong":1,"-":37}}]
