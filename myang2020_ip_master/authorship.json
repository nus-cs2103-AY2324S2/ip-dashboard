[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"myang2020":1}},{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"    protected LocalDateTime end_time;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"    DeadlineTask(String name, LocalDateTime end_time, String file_format) throws DukeException{","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"        super(name, Type.D, file_format);","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"        this.end_time \u003d end_time;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"        if (this.name.isBlank()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"            String error_message \u003d \"\\tInvalid deadline description!\\n\\tEx: deadline return book /by Sunday\\n\";","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(error_message);","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"        String output;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"        if (done) {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"            output \u003d \"[\" + this.type + \"]\" + \"[X] \" + this.name + \" (by: \" + this.end_time.format(formatter) + \")\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"            output \u003d \"[\" + this.type + \"]\" + \"[ ] \" + this.name + \" (by: \" + this.end_time.format(formatter) + \")\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"        return output;","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"myang2020":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"    private TaskList todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"            todo \u003d new TaskList(storage.readFile());","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"            todo \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    public void run() {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"        String divider \u003d \"---------------------------------------------------------------\";","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"        String input;","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"        String command;","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"        Task task;","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"        int idx;","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"        ui.welcome();","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        ui.showCommands();","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        ui.divider();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"                input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"                System.out.printf(\"\\t%s\\n\", divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"                command \u003d Parser.parse(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"                switch (command) {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"                    case (\"bye\"):","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"                        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"                        scanner.close();","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"                        return;","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"                    case (\"list\"):","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"                        this.todo.list();","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"                    case(\"mark\"):","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"                        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"                            idx \u003d Parser.parse_mark(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"                            task \u003d todo.mark(idx);","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"                            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"                            System.out.printf(\"\\t\\t%s\\n\", task);","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"                        } catch (DukeException err) {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"                            System.out.println(err.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"                        }","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"                    case(\"unmark\"):","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"                        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"                            idx \u003d Parser.parse_unmark(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"                            task \u003d todo.unmark(idx);","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"                            System.out.println(\"\\tI\u0027ve unmarked this task as done:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"                            System.out.printf(\"\\t\\t%s\\n\", task);","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"                        } catch (DukeException err) {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"                            System.out.println(err.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"                        }","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"                    case (\"todo\"):","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"                        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"                            // calling the method","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"                            task \u003d Parser.parse_todo(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"                            todo.addTask(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"myang2020"},"content":"                            System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"                            System.out.printf(\"\\t\\t%s\\n\", task);","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"myang2020"},"content":"                            System.out.printf(\"\\tNow you have %d tasks in the list.\\n\", todo.size());","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"                        } catch (DukeException err) {","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"myang2020"},"content":"                            System.out.println(err.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"myang2020"},"content":"                        }","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"myang2020"},"content":"                    case (\"deadline\"):","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"myang2020"},"content":"                        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"myang2020"},"content":"                            task \u003d Parser.parse_deadline(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"myang2020"},"content":"                            todo.addTask(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"myang2020"},"content":"                            System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"myang2020"},"content":"                            System.out.printf(\"\\t\\t%s\\n\", task);","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"myang2020"},"content":"                            System.out.printf(\"\\tNow you have %d tasks in the list.\\n\", todo.size());","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"myang2020"},"content":"                        } catch (DukeException err) {","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"myang2020"},"content":"                            System.out.println(err.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"myang2020"},"content":"                        } catch (DateTimeParseException err) {","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"myang2020"},"content":"                            System.out.println(\"\\tPlease write your data in d/m/yyyy T format\");","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"myang2020"},"content":"                        }","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"myang2020"},"content":"                    case (\"event\"):","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"myang2020"},"content":"                        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"myang2020"},"content":"                            task \u003d Parser.parse_event(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"myang2020"},"content":"                            todo.addTask(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"myang2020"},"content":"                            System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"myang2020"},"content":"                            System.out.printf(\"\\t\\t%s\\n\", task);","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"myang2020"},"content":"                            System.out.printf(\"\\tNow you have %d tasks in the list.\\n\", todo.size());","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"myang2020"},"content":"                        } catch (DukeException err) {","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"myang2020"},"content":"                            System.out.println(err.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"myang2020"},"content":"                        }","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"myang2020"},"content":"                    case(\"delete\"):","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"myang2020"},"content":"                        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"myang2020"},"content":"                            idx \u003d Parser.parse_delete(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"myang2020"},"content":"                            System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"myang2020"},"content":"                            System.out.printf(\"\\t\\t%s\\n\", todo.deleteTask(idx));","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"myang2020"},"content":"                            System.out.printf(\"\\tNow you have %d tasks in the list.\\n\", todo.size());","lastModifiedDate":"2024-01-27"},{"lineNumber":129,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"myang2020"},"content":"                        } catch (DukeException err) {","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"myang2020"},"content":"                            System.out.println(err.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"myang2020"},"content":"                        }","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"myang2020"},"content":"                    default:","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"myang2020"},"content":"                        throw new DukeException(\"\\tSorry, I did not understand the command!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"myang2020"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"myang2020"},"content":"                System.out.printf(\"\\t%s\\n\", divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"myang2020"},"content":"                storage.writeFile(todo.getList());","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"myang2020"},"content":"            } catch (DukeException err) {","lastModifiedDate":"2024-01-27"},{"lineNumber":142,"author":{"gitId":"myang2020"},"content":"                System.out.println(err.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":143,"author":{"gitId":"myang2020"},"content":"                System.out.printf(\"\\t%s\\n\", divider);","lastModifiedDate":"2024-01-27"},{"lineNumber":144,"author":{"gitId":"myang2020"},"content":"            } catch (IOException err) {","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"myang2020"},"content":"                System.out.println(err.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"myang2020"},"content":"                System.out.printf(\"\\t%s\\n\", divider);","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"myang2020"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":149,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":151,"author":{"gitId":"myang2020"},"content":"    public static void main(String[] args) throws IOException, DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"myang2020"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"myang2020":151}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"    public DukeException (String str)","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"    {","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"        // calling the constructor of parent Exception","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"        super(str);","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"myang2020":7}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"    protected String start_time, end_time;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"    EventTask(String name, String start_time, String end_time, String file_format) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"        super(name, Type.E, file_format);","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"        this.start_time \u003d start_time;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"        this.end_time \u003d end_time;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"        if (this.name.isBlank() || this.start_time.isBlank() || this.end_time.isBlank()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"            String error_message \u003d \"\\tInvalid event description\\n\\tEx: event project meeting /from Mon 2pm /to 4pm\\n\";","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(error_message);","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"        String output;","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"        if (!done) {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"            output \u003d \"[\" + this.type + \"]\" + \"[ ] \" + this.name + \" (from: \" + this.start_time + \" to: \" + this.end_time + \")\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"            output \u003d \"[\" + this.type + \"]\" + \"[X] \" + this.name + \" (from: \" + this.start_time + \" to: \" + this.end_time + \")\\n\";","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"        return output;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"myang2020":24}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"    Parser() {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"    public static String parse(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"        return input.split(\" \")[0];","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"    public static TodoTask parse_todo(String input) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"        String task_name;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"        TodoTask task;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"        task_name \u003d String.join(\" \", Arrays.copyOfRange(input.split(\" \"), 1, input.split(\" \").length));","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"        if (!task_name.isBlank()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"            // calling the method","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"            task \u003d new TodoTask(task_name, input);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"            return task;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(\"\\tInvalid todo command\");","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"    public static DeadlineTask parse_deadline(String input) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"        String task_name, start, end, first_string, second_string;","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"        first_string \u003d input.split(\" /\")[0];","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"        second_string \u003d input.split(\" /\")[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"        task_name \u003d String.join(\" \", Arrays.copyOfRange(first_string.split(\" \"), 1, first_string.split(\" \").length));","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        end \u003d String.join(\" \", Arrays.copyOfRange(second_string.split(\"by \"), 1, second_string.split(\"by \").length));","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        if (!task_name.isBlank() \u0026\u0026 !first_string.isBlank() \u0026\u0026 !second_string.isBlank()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"            LocalDateTime end_time \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"            return new DeadlineTask(task_name, end_time, input);","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(\"\\tInvalid deadline command\");","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"    public static EventTask parse_event(String input) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"        if (input.split(\" /\").length \u003d\u003d 3) {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"            String first_string, second_string, third_string, task_name, start, end;","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"            first_string \u003d input.split(\" /\")[0];","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"            second_string \u003d input.split(\" /\")[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"            third_string \u003d input.split(\" /\")[2];","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"            task_name \u003d String.join(\" \", Arrays.copyOfRange(first_string.split(\" \"), 1, first_string.split(\" \").length));","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"            start \u003d String.join(\" \", Arrays.copyOfRange(second_string.split(\" \"), 1, second_string.split(\" \").length));","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"            end \u003d String.join(\" \", Arrays.copyOfRange(third_string.split(\" \"), 1, third_string.split(\" \").length));","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"            return new EventTask(task_name, start, end, input);","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(\"\\tInvalid event command\");","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"    public static int parse_delete(String input) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"        if (input.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"            return Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(\"\\tInvalid delete command\");","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"    public static int parse_mark(String input) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"        if (input.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"            return Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(\"\\tInvalid mark command\");","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"    public static int parse_unmark(String input) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"myang2020"},"content":"        if (input.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"            return Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(\"\\tInvalid unmark command\");","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"myang2020":88}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"public class Storage {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"    private final File FILE;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"        this.FILE \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    public List\u003cTask\u003e readFile() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"        String input, task_name, start, end, first_string, second_string, third_string; // for easy processing","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"        Task task;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"        List\u003cTask\u003e todo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"            System.out.println(\"Current Working Directory: \" + System.getProperty(\"user.dir\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"            Scanner scanner \u003d new Scanner(FILE);","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"                input \u003d scanner.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"                switch (input.split(\" \")[0]) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"                    case (\"todo\"):","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"                        task_name \u003d String.join(\" \", Arrays.copyOfRange(input.split(\" \"), 1, input.split(\" \").length));","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"                        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"                            // calling the method","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"                            task \u003d new TodoTask(task_name, input);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"                            todo.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"                        } catch (DukeException err) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"                            System.out.println(err.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"                    case (\"deadline\"):","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"                        first_string \u003d input.split(\" /\")[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"                        second_string \u003d input.split(\" /\")[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"                        task_name \u003d String.join(\" \", Arrays.copyOfRange(first_string.split(\" \"), 1, first_string.split(\" \").length));","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"                        end \u003d String.join(\" \", Arrays.copyOfRange(second_string.split(\"by \"), 1, second_string.split(\"by \").length));","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"                        LocalDateTime end_time \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"                        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"                            task \u003d new DeadlineTask(task_name, end_time, input);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"                            todo.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"                        } catch (DukeException err) {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"                            System.out.println(err.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"                    case (\"event\"):","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"                        first_string \u003d input.split(\" /\")[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"                        second_string \u003d input.split(\" /\")[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"                        third_string \u003d input.split(\" /\")[2];","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"                        task_name \u003d String.join(\" \", Arrays.copyOfRange(first_string.split(\" \"), 1, first_string.split(\" \").length));","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"                        start \u003d String.join(\" \", Arrays.copyOfRange(second_string.split(\" \"), 1, second_string.split(\" \").length));","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"                        end \u003d String.join(\" \", Arrays.copyOfRange(third_string.split(\" \"), 1, third_string.split(\" \").length));","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"                        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"                            task \u003d new EventTask(task_name, start, end, input);","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"                            todo.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"                        } catch (DukeException err) {","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"                            System.out.println(err.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"            return todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"            throw new IOException(err.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"myang2020"},"content":"    public void writeFile(List\u003cTask\u003e todo) throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"            FileWriter fw \u003d new FileWriter(FILE);","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"            for (Task task : todo) {","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"myang2020"},"content":"                fw.write(task.file_format + System.lineSeparator());","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"myang2020"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"myang2020"},"content":"            fw.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"myang2020"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"myang2020"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"myang2020":94}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"abstract class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"    protected Boolean done;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"    protected final String name;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"    protected Type type;","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"    protected String file_format;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"    enum Type {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"        T,D,E;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"        @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"        public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"            return name(); // Returns the name of the enum constant (e.g., \"T\", \"D\", \"E\")","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"    Task(String name, Type type, String file_format) {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"        this.file_format \u003d file_format;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"    // Mark task as done","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    public void mark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        this.done \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    // Unmark task","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"    public String getName() {","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"        return this.name;","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"myang2020":36}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"    private List\u003cTask\u003e todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"    public TaskList(List\u003cTask\u003e todo) {","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"        this.todo \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"        this.todo.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"        return this.todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    public Task deleteTask(int idx) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"        return this.todo.remove(idx - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"    public Task unmark(int idx) {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"        this.todo.get(idx - 1).unmark();","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"        return this.todo.get(idx - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"    public Task mark(int idx) {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"        this.todo.get(idx - 1).mark();","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"        return this.todo.get(idx - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    public void list() {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"        for (int i \u003d 0; i \u003c todo.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"            System.out.printf(\"\\t%d. %s\\n\", i + 1, todo.get(i));","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"    public int size() {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"        return todo.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"myang2020":49}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"    TodoTask(String name, String file_format) throws DukeException{","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"        super(name, Type.T, file_format);","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"        if (this.name.isBlank()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"            String error_message \u003d \"\\tTodo description cannot be empty!\\n\\tEx: todo return book\\n\";","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(error_message);","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"        String output;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"        if (done) {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"            output \u003d \"[\" + this.type + \"]\" + \"[X] \" + this.name + \"\\n\";","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"            output \u003d \"[\" + this.type + \"]\" + \"[ ] \" + this.name + \"\\n\";","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"        return output;","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"myang2020":26}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"    public final String divider \u003d \"---------------------------------------------------------------\";","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"    Ui() {","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"    public void welcome() {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"        String chat_name \u003d \"Dwight Schrute\";","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"        System.out.printf(\"%s\\nHello! I\u0027m %s\\nWhat Can I do for you?\\n%s\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"                , divider, chat_name, divider);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"    public void divider() {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"    public void showCommands() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"1. list - Lists out tasks\");","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"2. mark [index] - Marks task at given index as done\");","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"3. unmark [index] - Unmarks task at given index as done\");","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"4. todo [task] - Adds todo task\");","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"5. event [task] /from [start date] /to [end date] - Adds event task\");","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"6. deadline [task] /by [d/MM/yyyy HH:mm] - Adds deadline task\");","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"7. delete [index] - Deletes task at index\");","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"8. bye - Exits program\");","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"Failed to load file\");","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"    public void invalidCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"Sorry, I didn\u0027t understand you. Here are a list of commands!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"        showCommands();","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"myang2020":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"bye","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"myang2020":3}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"-":33,"myang2020":2}}]
