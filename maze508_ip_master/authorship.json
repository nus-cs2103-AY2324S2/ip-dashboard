[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"maze508"},"content":"mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"maze508"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"maze508":3}},{"path":"src/main/java/duke/DateChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"public class DateChecker {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"maze508"},"content":"     * Parses the given date string into a LocalDate object.","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"maze508"},"content":"     * @param dateString The date string to be parsed.","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"maze508"},"content":"     * @return The LocalDate object represented by the date string.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If the date string is not in the expected format.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"maze508"},"content":"    public static LocalDate parseDate(String dateString) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"maze508"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"maze508"},"content":"            return LocalDate.parse(dateString, INPUT_FORMAT);","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"maze508"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"maze508"},"content":"            throw new DukeException(\"Invalid date format. Please use yyyy-MM-dd.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"maze508"},"content":"     * Formats a LocalDate object into a string.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"maze508"},"content":"     * @param date The LocalDate object to be formatted.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"maze508"},"content":"     * @return The formatted date string (MMM dd yyyy).","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"maze508"},"content":"    public static String formatDate(LocalDate date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"maze508"},"content":"        return date.format(OUTPUT_FORMAT);","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"maze508"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"maze508":35}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"     * Constructs a Deadline with a description and due date.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"maze508"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"maze508"},"content":"     * @param by          The due date of the deadline.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If the date string is not in a valid format.","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"maze508"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"maze508"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"maze508"},"content":"        this.by \u003d DateChecker.parseDate(by);","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"maze508"},"content":"     * Returns the description of the saved task.","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"maze508"},"content":"     * @return The description of the saved task.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"maze508"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"maze508"},"content":"    public String saveData() {","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"maze508"},"content":"        return \"D | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + this.by;","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"maze508"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"maze508"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"maze508"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"maze508"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"maze508"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateChecker.formatDate(this.by) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"maze508"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"maze508":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"    private final Ui ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"     * Constructs a new Duke instance with a specified file path for storage.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"maze508"},"content":"     * @param filePath The file path for storing task data.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"maze508"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"maze508"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"maze508"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"maze508"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"maze508"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"maze508"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"maze508"},"content":"            ui.showError(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"maze508"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"maze508"},"content":"    /** Runs the Duke application. */","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"maze508"},"content":"    public void run() {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"maze508"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"maze508"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"maze508"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"maze508"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"maze508"},"content":"            String command \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"maze508"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"maze508"},"content":"                Parser.parseAndExecute(command, tasks, ui, storage);","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"maze508"},"content":"                isExit \u003d command.equals(\"bye\");","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"maze508"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"maze508"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"maze508"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"maze508"},"content":"        scanner.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"maze508"},"content":"     * Runs the Duke application.","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"maze508"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"maze508"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"maze508"},"content":"        new Duke(\"./duke.txt\").run();","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"maze508":51,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"     * @param errorMessage The error message associated with the exception.","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"        super(\"!!! \" + errorMessage + \" !!!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"maze508":11}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"     * Constructs an Event with a description, start time, and end time.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"maze508"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"maze508"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"maze508"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If the date strings are not in a valid format.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"maze508"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"maze508"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"maze508"},"content":"        this.from \u003d DateChecker.parseDate(from);","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"maze508"},"content":"        this.to \u003d DateChecker.parseDate(to);","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"maze508"},"content":"     * Returns the description of the saved task.","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"maze508"},"content":"     * @return The description of the saved task.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"maze508"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"maze508"},"content":"    public String saveData() {","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"maze508"},"content":"        return \"E | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"maze508"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"maze508"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"maze508"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"maze508"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"maze508"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + DateChecker.formatDate(this.from) + \" to: \" + DateChecker.formatDate(this.to) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"maze508"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"maze508":43}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"public class Parser {","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"     * Parses and executes a given command.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"     * @param input   The input command to parse.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"maze508"},"content":"     * @param ui      The UI for user interactions.","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"maze508"},"content":"     * @param storage The storage for tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If the command is invalid or execution fails.","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"maze508"},"content":"    public static void parseAndExecute(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"maze508"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"maze508"},"content":"            ui.showGoodbyeMessage();","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"maze508"},"content":"            return;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"maze508"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"maze508"},"content":"            ui.showTaskList(tasks);","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"maze508"},"content":"            return;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"maze508"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"maze508"},"content":"        String commandWord \u003d parts[0];","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"maze508"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"maze508"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"maze508"},"content":"                addTodo(parts[1], tasks, ui, storage);","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"maze508"},"content":"                break;","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"maze508"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"maze508"},"content":"                addDeadline(parts[1], tasks, ui, storage);","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"maze508"},"content":"                break;","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"maze508"},"content":"            case \"event\":","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"maze508"},"content":"                addEvent(parts[1], tasks, ui, storage);","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"maze508"},"content":"                break;","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"maze508"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"maze508"},"content":"                markOrUnmarkTask(parts[1], tasks, ui, storage, true);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"maze508"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"maze508"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"maze508"},"content":"                markOrUnmarkTask(parts[1], tasks, ui, storage, false);","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"maze508"},"content":"                break;","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"maze508"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"maze508"},"content":"                deleteTask(parts[1], tasks, ui, storage);","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"maze508"},"content":"                break;","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"maze508"},"content":"            case \"find\":","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"maze508"},"content":"                findTask(parts[1], tasks, ui);","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"maze508"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"maze508"},"content":"            default:","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"maze508"},"content":"                throw new DukeException(\"Invalid Command. I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"maze508"},"content":"     * Adds a todo task to the list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"maze508"},"content":"     * @param description  The description of the todo task.","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"maze508"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"maze508"},"content":"     * @param ui      The UI for user interactions.","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"maze508"},"content":"     * @param storage The storage for tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If the command is invalid or execution fails.","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"maze508"},"content":"    private static void addTodo(String description, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"maze508"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"maze508"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"maze508"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"maze508"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"maze508"},"content":"        ui.showTaskAdded(todo, tasks.getSize());","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"maze508"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"maze508"},"content":"     * Adds a deadline task to the list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"maze508"},"content":"     * @param input  The input command to parse.","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"maze508"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"maze508"},"content":"     * @param ui      The UI for user interactions.","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"maze508"},"content":"     * @param storage The storage for tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If the command is invalid or execution fails.","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"maze508"},"content":"    private static void addDeadline(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"maze508"},"content":"        String[] splitInput \u003d input.split(\" /by \");","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"maze508"},"content":"        if (splitInput.length \u003c 2 || splitInput[0].isEmpty() || splitInput[1].isEmpty()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"maze508"},"content":"            throw new DukeException(\"The deadline description or date is missing.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"maze508"},"content":"        Deadline deadline \u003d new Deadline(splitInput[0].trim(), splitInput[1].trim());","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"maze508"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"maze508"},"content":"        ui.showTaskAdded(deadline, tasks.getSize());","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"maze508"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"maze508"},"content":"     * Adds a event task to the list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"maze508"},"content":"     * @param input  The input command to parse.","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"maze508"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"maze508"},"content":"     * @param ui      The UI for user interactions.","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"maze508"},"content":"     * @param storage The storage for tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If the command is invalid or execution fails.","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"maze508"},"content":"    private static void addEvent(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"maze508"},"content":"        String[] splitInput \u003d input.split(\" /from \");","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"maze508"},"content":"        if (splitInput.length \u003c 2 || splitInput[0].isEmpty() || splitInput[1].isEmpty()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"maze508"},"content":"            throw new DukeException(\"The event description or start time is missing.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"maze508"},"content":"        String[] timeSplit \u003d splitInput[1].split(\" /to \");","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"maze508"},"content":"        if (timeSplit.length \u003c 2 || timeSplit[0].isEmpty() || timeSplit[1].isEmpty()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"maze508"},"content":"            throw new DukeException(\"The event end time or details are missing.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"maze508"},"content":"        Event event \u003d new Event(splitInput[0].trim(), timeSplit[0].trim(), timeSplit[1].trim());","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"maze508"},"content":"        tasks.addTask(event);","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"maze508"},"content":"        ui.showTaskAdded(event, tasks.getSize());","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"maze508"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"maze508"},"content":"     * Marks or unmarks a task in the list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"maze508"},"content":"     * @param input  The input command to parse.","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"maze508"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"maze508"},"content":"     * @param ui      The UI for user interactions.","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"maze508"},"content":"     * @param storage The storage for tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If the command is invalid or execution fails.","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"maze508"},"content":"    private static void markOrUnmarkTask(String input, TaskList tasks, Ui ui, Storage storage, boolean isMark) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"maze508"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":129,"author":{"gitId":"maze508"},"content":"            int idx \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"maze508"},"content":"            Task task \u003d tasks.getTask(idx);","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"maze508"},"content":"            if (isMark) {","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"maze508"},"content":"                task.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"maze508"},"content":"                ui.showMarkTask(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"maze508"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"maze508"},"content":"                task.unmark();","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"maze508"},"content":"                ui.showUnmarkTask(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"maze508"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"maze508"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-01-27"},{"lineNumber":139,"author":{"gitId":"maze508"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":140,"author":{"gitId":"maze508"},"content":"            throw new DukeException(\"The index provided is not a valid number.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":141,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":142,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":143,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":144,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"maze508"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"maze508"},"content":"     * @param input  The input command to parse.","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"maze508"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"maze508"},"content":"     * @param ui      The UI for user interactions.","lastModifiedDate":"2024-01-28"},{"lineNumber":150,"author":{"gitId":"maze508"},"content":"     * @param storage The storage for tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":151,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If the command is invalid or execution fails.","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":153,"author":{"gitId":"maze508"},"content":"    private static void deleteTask(String input, TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":154,"author":{"gitId":"maze508"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":155,"author":{"gitId":"maze508"},"content":"            int idx \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":156,"author":{"gitId":"maze508"},"content":"            Task removedTask \u003d tasks.removeTask(idx);","lastModifiedDate":"2024-01-27"},{"lineNumber":157,"author":{"gitId":"maze508"},"content":"            ui.showTaskDeleted(removedTask, tasks.getSize());","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"maze508"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"maze508"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":160,"author":{"gitId":"maze508"},"content":"            throw new DukeException(\"The index provided is not a valid number.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":161,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":162,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":163,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":165,"author":{"gitId":"maze508"},"content":"     * Finds tasks that contain the given keyword in their description.","lastModifiedDate":"2024-01-28"},{"lineNumber":166,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":167,"author":{"gitId":"maze508"},"content":"     * @param input  The input command to parse.","lastModifiedDate":"2024-01-28"},{"lineNumber":168,"author":{"gitId":"maze508"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":169,"author":{"gitId":"maze508"},"content":"     * @param ui      The UI for user interactions.","lastModifiedDate":"2024-01-28"},{"lineNumber":170,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If the command is invalid or execution fails.","lastModifiedDate":"2024-01-28"},{"lineNumber":171,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":172,"author":{"gitId":"maze508"},"content":"    private static void findTask(String input, TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":173,"author":{"gitId":"maze508"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasks(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":174,"author":{"gitId":"maze508"},"content":"        ui.showFoundTasks(foundTasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":175,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":176,"author":{"gitId":"maze508"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"maze508":176}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"import java.io.*;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"public class Storage {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"    private String filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"maze508"},"content":"     * Constructs a Storage object with a given file path.","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"maze508"},"content":"     * @param filePath The path of the file used for storage.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"maze508"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"maze508"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"maze508"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"maze508"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If there is an error loading the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"maze508"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"maze508"},"content":"        ensureDirectoryExists();","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"maze508"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"maze508"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"maze508"},"content":"        // Create the file if it does not exist","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"maze508"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"maze508"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"maze508"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"maze508"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"maze508"},"content":"                throw new DukeException(\"Error Creating File: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"maze508"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"maze508"},"content":"        // Load tasks from the file","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"maze508"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"maze508"},"content":"            String line;","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"maze508"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"maze508"},"content":"                Task task \u003d parseLineToTask(line);","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"maze508"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"maze508"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"maze508"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"maze508"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"maze508"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"maze508"},"content":"            throw new DukeException(\"Error Loading Tasks: \" + e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"maze508"},"content":"        return tasks;","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"maze508"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"maze508"},"content":"     * @param tasks The ArrayList of tasks to be saved.","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If there is an error saving the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"maze508"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"maze508"},"content":"        ensureDirectoryExists();","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"maze508"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"maze508"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"maze508"},"content":"                writer.write(task.saveData());","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"maze508"},"content":"                writer.newLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"maze508"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"maze508"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"maze508"},"content":"            throw new DukeException(\"Error Storing Tasks: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"maze508"},"content":"     * Ensures that the directory for the file exists.","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If there is an error creating the directory.","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"maze508"},"content":"    private void ensureDirectoryExists() throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"maze508"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"maze508"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"maze508"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"maze508"},"content":"                Files.createDirectories(Paths.get(this.filePath).getParent());","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"maze508"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"maze508"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"maze508"},"content":"            throw new DukeException(\"Error Creating Directory: \" + e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"maze508"},"content":"     * Parses a line from the file to a task.","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"maze508"},"content":"     * @param line The line to be parsed.","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"maze508"},"content":"     * @return The task parsed from the line.","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If the line is not in a valid format.","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"maze508"},"content":"    private static Task parseLineToTask(String line) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"maze508"},"content":"        // Assuming the format is \"T | 1 | read book\"","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"maze508"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"maze508"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-01-26"},{"lineNumber":102,"author":{"gitId":"maze508"},"content":"            throw new DukeException(\"Invalid task format in file\");","lastModifiedDate":"2024-01-26"},{"lineNumber":103,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"maze508"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"maze508"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":107,"author":{"gitId":"maze508"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-01-26"},{"lineNumber":108,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"maze508"},"content":"        switch (type) {","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"maze508"},"content":"            case \"T\":","lastModifiedDate":"2024-01-26"},{"lineNumber":111,"author":{"gitId":"maze508"},"content":"                Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":112,"author":{"gitId":"maze508"},"content":"                if (isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"maze508"},"content":"                    todo.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"maze508"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"maze508"},"content":"                return todo;","lastModifiedDate":"2024-01-26"},{"lineNumber":116,"author":{"gitId":"maze508"},"content":"            case \"D\":","lastModifiedDate":"2024-01-26"},{"lineNumber":117,"author":{"gitId":"maze508"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2024-01-26"},{"lineNumber":118,"author":{"gitId":"maze508"},"content":"                    throw new DukeException(\"Invalid deadline format in file\");","lastModifiedDate":"2024-01-26"},{"lineNumber":119,"author":{"gitId":"maze508"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":120,"author":{"gitId":"maze508"},"content":"                LocalDate byDate \u003d LocalDate.parse(parts[3], DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"maze508"},"content":"                Deadline deadline \u003d new Deadline(description, byDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"maze508"},"content":"                if (isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"maze508"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"maze508"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"maze508"},"content":"                return deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"maze508"},"content":"            case \"E\":","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"maze508"},"content":"                if (parts.length \u003c 5) {","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"maze508"},"content":"                    throw new DukeException(\"Invalid event format in file\");","lastModifiedDate":"2024-01-26"},{"lineNumber":129,"author":{"gitId":"maze508"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"maze508"},"content":"                LocalDate fromDate \u003d LocalDate.parse(parts[3], DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"maze508"},"content":"                LocalDate toDate \u003d LocalDate.parse(parts[4], DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"maze508"},"content":"                Event event \u003d new Event(description, fromDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")), toDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"maze508"},"content":"                if (isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"maze508"},"content":"                    event.markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"maze508"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"maze508"},"content":"                return event;","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"maze508"},"content":"            default:","lastModifiedDate":"2024-01-26"},{"lineNumber":138,"author":{"gitId":"maze508"},"content":"                throw new DukeException(\"Unknown task type: \" + type);","lastModifiedDate":"2024-01-26"},{"lineNumber":139,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":140,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":141,"author":{"gitId":"maze508"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"maze508":141}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"     * Constructs a Task with a description.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"maze508"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"maze508"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"maze508"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"maze508"},"content":"     * Returns empty or cross icon depending on whether the task is done.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"maze508"},"content":"     * @return A tick or cross.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"maze508"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"maze508"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"maze508"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"maze508"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"maze508"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"maze508"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"maze508"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"maze508"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"maze508"},"content":"     * Returns whether the task is done.","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"maze508"},"content":"     * @return Whether the task is done.","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"maze508"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"maze508"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"maze508"},"content":"     * Returns the description of the saved task.","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"maze508"},"content":"     * @return The description of the saved task.","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"maze508"},"content":"    public String saveData() {","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"maze508"},"content":"        return \"\";","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"maze508"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"maze508"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"maze508"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"maze508"},"content":"        return this.description;","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"maze508"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"maze508"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"maze508"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"maze508"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":74,"author":{"gitId":"maze508"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":76,"author":{"gitId":"maze508"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"maze508":76}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"public class TaskList {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"     * Constructs a TaskList object with an empty ArrayList of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"maze508"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"maze508"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"maze508"},"content":"     * Constructs a TaskList object with a given ArrayList of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"maze508"},"content":"     * @param tasks The ArrayList of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"maze508"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"maze508"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"maze508"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"maze508"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"maze508"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"maze508"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"maze508"},"content":"     * Removes a task from the TaskList.","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"maze508"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"maze508"},"content":"     * @return The task that was removed.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If the index is out of range.","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"maze508"},"content":"    public Task removeTask(int index) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"maze508"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"maze508"},"content":"            throw new DukeException(\"The task index is out of range.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"maze508"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"maze508"},"content":"     * Gets a task from the TaskList.","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"maze508"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"maze508"},"content":"     * @return The task that was retrieved.","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If the index is out of range.","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"maze508"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"maze508"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"maze508"},"content":"            throw new DukeException(\"The task index is out of range.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"maze508"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"maze508"},"content":"     * Gets a copy of the ArrayList of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"maze508"},"content":"     * @return A copy of the ArrayList of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"maze508"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"maze508"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"maze508"},"content":"     * Gets the number of tasks in the TaskList.","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"maze508"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"maze508"},"content":"    public int getSize() {","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"maze508"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"maze508"},"content":"     * Finds and returns a list of tasks that contain the given keyword in their description.","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"maze508"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"maze508"},"content":"     * @return A list of tasks that contain the keyword.","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"maze508"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"maze508"},"content":"        return tasks.stream()","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"maze508"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"maze508"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"maze508"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"maze508":92}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"     * Constructs a Todo with a description.","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"    public Todo (String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"maze508"},"content":"     * Returns the description of the saved task.","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"maze508"},"content":"     * @return The description of the saved task.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"maze508"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"maze508"},"content":"    public String saveData() {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"maze508"},"content":"        return \"T | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"maze508"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"maze508"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"maze508"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"maze508"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"maze508"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"maze508"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"maze508":32}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":" * Represents the user interface of the application.","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"public class Ui {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"     * Prints the welcome message.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"maze508"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"maze508"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"maze508"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"maze508"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"maze508"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"maze508"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"maze508"},"content":"     * Prints the task added message.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"maze508"},"content":"     * @param task The task that was added.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"maze508"},"content":"     * @param taskCount The number of tasks in the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"maze508"},"content":"    public void showTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"maze508"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"maze508"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"maze508"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"maze508"},"content":"     * Prints the task deleted message.","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"maze508"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"maze508"},"content":"     * @param taskCount The number of tasks in the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"maze508"},"content":"    public void showTaskDeleted(Task task, int taskCount) {","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"maze508"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"maze508"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"maze508"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"maze508"},"content":"     * Prints the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"maze508"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"maze508"},"content":"     * @throws DukeException If the task list is empty.","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"maze508"},"content":"    public void showTaskList(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"maze508"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"maze508"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"maze508"},"content":"            System.out.println((i + 1) + \". \" + tasks.getTask(i));","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"maze508"},"content":"     * Prints the task marked as done message.","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"maze508"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"maze508"},"content":"    public void showMarkTask(Task task) {","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"maze508"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"maze508"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"maze508"},"content":"     * Prints the task marked as not done message.","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"maze508"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"maze508"},"content":"    public void showUnmarkTask(Task task) {","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"maze508"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"maze508"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"maze508"},"content":"     * Prints the error message.","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"maze508"},"content":"     * @param message The error message.","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"maze508"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"maze508"},"content":"        System.out.println(\"ERROR: \" + message);","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"maze508"},"content":"     * Displays the list of tasks found by the search.","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"maze508"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"maze508"},"content":"     * @param tasks The list of tasks that match the search.","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"maze508"},"content":"    public void showFoundTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"maze508"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"maze508"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"maze508"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"maze508"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"maze508"},"content":"        printSeparator();","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"maze508"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"maze508"},"content":"     * Prints the separator.","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"maze508"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"maze508"},"content":"    public void printSeparator() {","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"maze508"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"maze508"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"maze508":126}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"    private Deadline deadline;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"    public void setUp() throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"maze508"},"content":"        deadline \u003d new Deadline(\"return book\", \"2024-10-10\");","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"maze508"},"content":"    public void deadlineCreation_validDetails_correctStringRepresentation() {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"maze508"},"content":"        assertEquals(\"[D][ ] return book (by: Oct 10 2024)\", deadline.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"maze508"},"content":"    public void deadlineCreation_invalidDateFormat_throwsException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"maze508"},"content":"        assertThrows(DukeException.class, () -\u003e new Deadline(\"return book\", \"2023-02-3\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"maze508"},"content":"    public void markAsDone_deadlineNotDoneBefore_markedAsDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"maze508"},"content":"        deadline.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"maze508"},"content":"        assertEquals(\"[D][X] return book (by: Oct 10 2024)\", deadline.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"maze508"},"content":"    public void markAsUndone_deadlineInitiallyDone_markedAsNotDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"maze508"},"content":"        deadline.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"maze508"},"content":"        deadline.unmark();","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"maze508"},"content":"        assertEquals(\"[D][ ] return book (by: Oct 10 2024)\", deadline.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"maze508"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"maze508":37}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"public class EventTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"    private Event event;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"    public void setUp() throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"maze508"},"content":"        event \u003d new Event(\"project meeting\", \"2023-02-01\", \"2023-02-03\");","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"maze508"},"content":"    public void eventCreation_validDetails_correctStringRepresentation() {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"maze508"},"content":"        assertEquals(\"[E][ ] project meeting (from: Feb 01 2023 to: Feb 03 2023)\", event.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"maze508"},"content":"    public void eventCreation_invalidDateFormat_throwsException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"maze508"},"content":"        assertThrows(DukeException.class, () -\u003e new Event(\"project meeting\", \"3rd August\", \"4pm\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"maze508"},"content":"    public void markAsDone_eventNotDoneBefore_markedAsDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"maze508"},"content":"        event.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"maze508"},"content":"        assertEquals(\"[E][X] project meeting (from: Feb 01 2023 to: Feb 03 2023)\", event.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"maze508"},"content":"    public void markAsUndone_eventInitiallyDone_markedAsNotDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"maze508"},"content":"        event.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"maze508"},"content":"        event.unmark();","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"maze508"},"content":"        assertEquals(\"[E][ ] project meeting (from: Feb 01 2023 to: Feb 03 2023)\", event.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"maze508"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"maze508":37}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"    private Task task1;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"    private Task task2;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"maze508"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"maze508"},"content":"    public void setUp() throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"maze508"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"maze508"},"content":"        task1 \u003d new Todo(\"read book\");","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"maze508"},"content":"        task2 \u003d new Deadline(\"return book\", \"2021-10-10\");","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"maze508"},"content":"    public void addTask_validTask_tasksAddedCorrectly() {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"maze508"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"maze508"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"maze508"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"maze508"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"maze508"},"content":"    public void removeTask_validIndex_taskRemovedCorrectly() throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"maze508"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"maze508"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"maze508"},"content":"        Task removedTask \u003d taskList.removeTask(0);","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"maze508"},"content":"        assertEquals(task1, removedTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"maze508"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"maze508"},"content":"    public void getTask_validIndex_correctTaskReturned() throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"maze508"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"maze508"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"maze508"},"content":"        Task retrievedTask \u003d taskList.getTask(1);","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"maze508"},"content":"        assertEquals(task2, retrievedTask);","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"maze508"},"content":"    public void removeTask_invalidIndex_throwsException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"maze508"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"maze508"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.removeTask(2));","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"maze508"},"content":"    public void getTask_invalidIndex_throwsException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"maze508"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"maze508"},"content":"        assertThrows(DukeException.class, () -\u003e taskList.getTask(2));","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"maze508"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"maze508":55}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"    public void todoCreation_basicDescription_stringRepresentationCorrect() {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"maze508"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"maze508"},"content":"    public void markAsDone_todoNotDoneBefore_markedAsDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"maze508"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"maze508"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"maze508"},"content":"        assertEquals(\"[T][X] read book\", todo.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"maze508"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"maze508"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"maze508"},"content":"    public void markAsUndone_todoInitiallyDone_markedAsNotDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"maze508"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"maze508"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"maze508"},"content":"        todo.unmark();","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"maze508"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"maze508"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"maze508"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"maze508":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maze508"},"content":"todo borrow book","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"maze508"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"maze508"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"maze508"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"maze508"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"maze508"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"maze508"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"maze508"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"maze508"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"maze508":9}}]
