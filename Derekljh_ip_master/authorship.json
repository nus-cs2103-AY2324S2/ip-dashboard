[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"# duke.Duke project template","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Derekljh":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"    mainClassName \u003d \u0027seedu.duke.Main\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Derekljh":17,"-":42}},{"path":"data/taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"T | 1 |  return book","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"D | 1 |  homework | Feb 01 2023 2359","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"E | 0 |  midterms | Mar 26 2023 1400 - Mar 26 2023 1600","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"T | 0 |  play games","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"D | 0 |  project | Apr 23 2023 1500","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"T | 1 |  clean room","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Derekljh":6}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"    private Label text;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"        text \u003d l;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"        text.setWrapText(true);","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"    private void flip() {","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"        db.flip();","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"        return db;","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Derekljh":47}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"    private final Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"    private static final String FILE_PATH \u003d \"./data/taskList.txt\";","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"     * Constructor for Lunaris chatbot.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"    public Duke() {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"            taskList \u003d new TaskList((storage.loadTasksFromFile()));","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"            ui.loadErrorMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"     * Runs the chatbot.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"        while (true) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"                Parser.parseCommand(input, taskList, ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"                storage.saveTasksToFile(taskList.getTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"            } catch (IOException | DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"                System.out.println(\"Sorry, Error occurred! Shutting down...\");","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Derekljh"},"content":"        ui.printGoodByeMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Derekljh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Derekljh"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"Derekljh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"Derekljh"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"Derekljh"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"Derekljh"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"Derekljh"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"Derekljh"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"Derekljh"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"Derekljh"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"Derekljh"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"Derekljh"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"Derekljh"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"Derekljh"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"Derekljh"},"content":"        stage.show();","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"Derekljh"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"Derekljh"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"Derekljh"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"Derekljh"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"Derekljh"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"Derekljh"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"Derekljh"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"Derekljh"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"Derekljh"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"Derekljh"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"Derekljh"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"Derekljh"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"Derekljh"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":110,"author":{"gitId":"Derekljh"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"Derekljh"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"Derekljh"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":116,"author":{"gitId":"Derekljh"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":117,"author":{"gitId":"Derekljh"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":118,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":119,"author":{"gitId":"Derekljh"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":120,"author":{"gitId":"Derekljh"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":121,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":122,"author":{"gitId":"Derekljh"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":123,"author":{"gitId":"Derekljh"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"Derekljh"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"Derekljh"},"content":"        });","lastModifiedDate":"2024-02-08"},{"lineNumber":126,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":127,"author":{"gitId":"Derekljh"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":128,"author":{"gitId":"Derekljh"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-08"},{"lineNumber":129,"author":{"gitId":"Derekljh"},"content":"        });","lastModifiedDate":"2024-02-08"},{"lineNumber":130,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":131,"author":{"gitId":"Derekljh"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2024-02-08"},{"lineNumber":132,"author":{"gitId":"Derekljh"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-08"},{"lineNumber":133,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":134,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":135,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":136,"author":{"gitId":"Derekljh"},"content":"     * Iteration 1:","lastModifiedDate":"2024-02-08"},{"lineNumber":137,"author":{"gitId":"Derekljh"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2024-02-08"},{"lineNumber":138,"author":{"gitId":"Derekljh"},"content":"     * @param text String containing text to add","lastModifiedDate":"2024-02-08"},{"lineNumber":139,"author":{"gitId":"Derekljh"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2024-02-08"},{"lineNumber":140,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":141,"author":{"gitId":"Derekljh"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-08"},{"lineNumber":142,"author":{"gitId":"Derekljh"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2024-02-08"},{"lineNumber":143,"author":{"gitId":"Derekljh"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-08"},{"lineNumber":144,"author":{"gitId":"Derekljh"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-08"},{"lineNumber":145,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":146,"author":{"gitId":"Derekljh"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":149,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":150,"author":{"gitId":"Derekljh"},"content":"     * Iteration 2:","lastModifiedDate":"2024-02-08"},{"lineNumber":151,"author":{"gitId":"Derekljh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-08"},{"lineNumber":152,"author":{"gitId":"Derekljh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-08"},{"lineNumber":153,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":154,"author":{"gitId":"Derekljh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-08"},{"lineNumber":155,"author":{"gitId":"Derekljh"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2024-02-08"},{"lineNumber":156,"author":{"gitId":"Derekljh"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2024-02-08"},{"lineNumber":157,"author":{"gitId":"Derekljh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-08"},{"lineNumber":158,"author":{"gitId":"Derekljh"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2024-02-08"},{"lineNumber":159,"author":{"gitId":"Derekljh"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2024-02-08"},{"lineNumber":160,"author":{"gitId":"Derekljh"},"content":"        );","lastModifiedDate":"2024-02-08"},{"lineNumber":161,"author":{"gitId":"Derekljh"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":162,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":163,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":164,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":165,"author":{"gitId":"Derekljh"},"content":"     * Generates response to user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":166,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":167,"author":{"gitId":"Derekljh"},"content":"     * @return Responds to given input.","lastModifiedDate":"2024-02-08"},{"lineNumber":168,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":169,"author":{"gitId":"Derekljh"},"content":"    String getResponse(String input) {","lastModifiedDate":"2024-02-08"},{"lineNumber":170,"author":{"gitId":"Derekljh"},"content":"        assert !input.equals(\"\") : \"input should not be empty\";","lastModifiedDate":"2024-02-16"},{"lineNumber":171,"author":{"gitId":"Derekljh"},"content":"        return \"Okay I heard: \" + input;","lastModifiedDate":"2024-02-08"},{"lineNumber":172,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":173,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Derekljh":172,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"     * @param message Error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Derekljh":12}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"public class Launcher {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Derekljh":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"    public Parser() {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"    public enum Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"        BYE, LIST, UNMARK, MARK, DELETE, TODO, DEADLINE, EVENT, UNKNOWN, FIND;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"        public static Command getCategory(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"                return Command.valueOf(input.toUpperCase());","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"                return UNKNOWN;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"     * Parses the command and executes command related tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"     * @param input Command.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"     * @param taskList The list.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"     * @param ui The ui.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"     * @throws DukeException if invalid command or format has been parsed.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"    public static void parseCommand(String input, TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"        Command category \u003d Command.getCategory(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"        int listSize \u003d taskList.getSize();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"        switch (category) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"            case BYE:","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"            case LIST:","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"                taskList.listTask(ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"                int unmarkId \u003d ui.readInt() - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"                if (unmarkId \u003c 0 || unmarkId \u003e\u003d listSize) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"                                \"please select a valid task for me to unmark!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"                        return;","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"                taskList.unmarkTask(unmarkId, ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"            case MARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"                int markId \u003d ui.readInt() - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Derekljh"},"content":"                if (markId \u003c 0 || markId \u003e\u003d listSize) {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Derekljh"},"content":"                                \"please select a valid task for me to mark!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"                        return;","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Derekljh"},"content":"                taskList.markTask(markId, ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Derekljh"},"content":"            case DELETE:","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Derekljh"},"content":"                int deleteId \u003d ui.readInt() - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Derekljh"},"content":"                if (deleteId \u003c 0 || deleteId \u003e\u003d listSize) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Derekljh"},"content":"                                \"please select a valid task for me to delete!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Derekljh"},"content":"                        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Derekljh"},"content":"                        return;","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Derekljh"},"content":"                taskList.deleteTask(deleteId, ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Derekljh"},"content":"                ui.listSizeMessage(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Derekljh"},"content":"            case TODO:","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Derekljh"},"content":"                parseToDo(taskList, ui);","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"Derekljh"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"Derekljh"},"content":"                parseDeadline(taskList, ui);","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"Derekljh"},"content":"            case EVENT:","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"Derekljh"},"content":"                parseEvent(taskList, ui);","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"Derekljh"},"content":"            case FIND:","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"Derekljh"},"content":"                String findDescription \u003d ui.readCommandLine();","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"Derekljh"},"content":"                ArrayList\u003cTask\u003e matchedTasks \u003d taskList.find(findDescription);","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"Derekljh"},"content":"                taskList.listMatchedTasks(matchedTasks, ui);","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"Derekljh"},"content":"            default:","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"Derekljh"},"content":"                try {","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"Derekljh"},"content":"                    ui.setIndentedLine();","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"Derekljh"},"content":"                    throw new DukeException(\"Sorry, I cannot understand what this is!\");","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"Derekljh"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"Derekljh"},"content":"                    ui.setIndentedLine();","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":113,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":114,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":115,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":116,"author":{"gitId":"Derekljh"},"content":"     * Parses toDo task.","lastModifiedDate":"2024-02-16"},{"lineNumber":117,"author":{"gitId":"Derekljh"},"content":"     * @param taskList The list.","lastModifiedDate":"2024-02-16"},{"lineNumber":118,"author":{"gitId":"Derekljh"},"content":"     * @param ui The Ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":119,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":120,"author":{"gitId":"Derekljh"},"content":"    public static void parseToDo(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-16"},{"lineNumber":121,"author":{"gitId":"Derekljh"},"content":"        String toDoDescription \u003d ui.readCommandLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Derekljh"},"content":"        if (toDoDescription.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Derekljh"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Derekljh"},"content":"                ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"Derekljh"},"content":"                throw new DukeException(\"Sorry, \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"Derekljh"},"content":"                        \"please give me a description of the todo as well! \u003e.\u003c\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"Derekljh"},"content":"                        \"  \" + \"Format should be todo (description)!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"Derekljh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Derekljh"},"content":"                System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Derekljh"},"content":"                ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Derekljh"},"content":"                return;","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"Derekljh"},"content":"        ToDo toDo \u003d new ToDo(toDoDescription);","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"Derekljh"},"content":"        taskList.addTask(toDo);","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"Derekljh"},"content":"        ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" + toDo);","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Derekljh"},"content":"        ui.listSizeMessage(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":140,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":141,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":142,"author":{"gitId":"Derekljh"},"content":"     * Parses deadline task.","lastModifiedDate":"2024-02-16"},{"lineNumber":143,"author":{"gitId":"Derekljh"},"content":"     * @param taskList The list.","lastModifiedDate":"2024-02-16"},{"lineNumber":144,"author":{"gitId":"Derekljh"},"content":"     * @param ui The ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":145,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":146,"author":{"gitId":"Derekljh"},"content":"    public static void parseDeadline(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-16"},{"lineNumber":147,"author":{"gitId":"Derekljh"},"content":"        String deadlineDescription \u003d ui.readCommandLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"Derekljh"},"content":"        if (!deadlineDescription.contains(\" /by \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"Derekljh"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"Derekljh"},"content":"                ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"Derekljh"},"content":"                throw new DukeException(\"Sorry, \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"Derekljh"},"content":"                        \"please give me a description of the deadline as well! \u003e.\u003c\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"Derekljh"},"content":"                        \"  \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"Derekljh"},"content":"                        \"Format should be deadline (description) /by (yyyy-MM-dd HHmm!)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"Derekljh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"Derekljh"},"content":"                System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"Derekljh"},"content":"                ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"Derekljh"},"content":"                return;","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"Derekljh"},"content":"        String[] deadlineArguments \u003d deadlineDescription.split(\" /by \");","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"Derekljh"},"content":"        String DLDescription \u003d deadlineArguments[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"Derekljh"},"content":"        String dateTime \u003d deadlineArguments[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"Derekljh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"Derekljh"},"content":"            Deadline deadline \u003d new Deadline(DLDescription, dateTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"Derekljh"},"content":"            taskList.addTask(deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"Derekljh"},"content":"            System.out.println(\"  \" + deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"Derekljh"},"content":"            ui.listSizeMessage(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"Derekljh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"Derekljh"},"content":"            System.out.println(\"Sorry! \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"Derekljh"},"content":"                    \"Format should be deadline (description) /by (yyyy-MM-dd HHmm!)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":177,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":178,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":179,"author":{"gitId":"Derekljh"},"content":"     * Parses event task.","lastModifiedDate":"2024-02-16"},{"lineNumber":180,"author":{"gitId":"Derekljh"},"content":"     * @param taskList The list.","lastModifiedDate":"2024-02-16"},{"lineNumber":181,"author":{"gitId":"Derekljh"},"content":"     * @param ui The ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":182,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":183,"author":{"gitId":"Derekljh"},"content":"    public static void parseEvent(TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-16"},{"lineNumber":184,"author":{"gitId":"Derekljh"},"content":"        String eventDescription \u003d ui.readCommandLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"Derekljh"},"content":"        if (!eventDescription.contains(\" /from \") || !eventDescription.contains(\" /to \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"Derekljh"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"Derekljh"},"content":"                ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":188,"author":{"gitId":"Derekljh"},"content":"                throw new DukeException(\"Sorry, \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"Derekljh"},"content":"                        \"please give me a description of the event as well! \u003e.\u003c\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"Derekljh"},"content":"                        \"  \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"Derekljh"},"content":"                        \"Format should be event \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"Derekljh"},"content":"                        \"(description) /from (yyyy-MM-dd HHmm) /to (yyyy-MM-dd HHmm)!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":193,"author":{"gitId":"Derekljh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"Derekljh"},"content":"                System.out.println(\"  \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"Derekljh"},"content":"                ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"Derekljh"},"content":"                return;","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":199,"author":{"gitId":"Derekljh"},"content":"        String[] eventArguments \u003d eventDescription.split(\" /from \");","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"Derekljh"},"content":"        String[] eventDuration \u003d eventArguments[1].split(\" /to \");","lastModifiedDate":"2024-01-31"},{"lineNumber":201,"author":{"gitId":"Derekljh"},"content":"        String EvDescription \u003d eventArguments[0];","lastModifiedDate":"2024-02-08"},{"lineNumber":202,"author":{"gitId":"Derekljh"},"content":"        String startTime \u003d eventDuration[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":203,"author":{"gitId":"Derekljh"},"content":"        String endTime \u003d eventDuration[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":204,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":205,"author":{"gitId":"Derekljh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":206,"author":{"gitId":"Derekljh"},"content":"            Event event \u003d new Event(EvDescription, startTime, endTime);","lastModifiedDate":"2024-02-08"},{"lineNumber":207,"author":{"gitId":"Derekljh"},"content":"            taskList.addTask(event);","lastModifiedDate":"2024-01-31"},{"lineNumber":208,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":209,"author":{"gitId":"Derekljh"},"content":"            System.out.println(\"  \" + event);","lastModifiedDate":"2024-01-31"},{"lineNumber":210,"author":{"gitId":"Derekljh"},"content":"            ui.listSizeMessage(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":211,"author":{"gitId":"Derekljh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":212,"author":{"gitId":"Derekljh"},"content":"            System.out.println(\"  \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":213,"author":{"gitId":"Derekljh"},"content":"                    \"Sorry! \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":214,"author":{"gitId":"Derekljh"},"content":"                    \"Format should be event \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":215,"author":{"gitId":"Derekljh"},"content":"                    \"(description) /from (yyyy-MM-dd HHmm) /to (yyyy-MM-dd HHmm)!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":216,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":217,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":218,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":219,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":220,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":221,"author":{"gitId":"Derekljh"},"content":"     * Parses the category from the file and creates new tasks and adds them to the tasklist.","lastModifiedDate":"2024-01-31"},{"lineNumber":222,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":223,"author":{"gitId":"Derekljh"},"content":"     * @param taskDescription Description of the task taken from the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":224,"author":{"gitId":"Derekljh"},"content":"     * @return The correct category of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":225,"author":{"gitId":"Derekljh"},"content":"     * @throws IOException if the category does not belong to any of the expected outcomes.","lastModifiedDate":"2024-01-31"},{"lineNumber":226,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":227,"author":{"gitId":"Derekljh"},"content":"    public static Task parseCategoryFromFile(String taskDescription) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":228,"author":{"gitId":"Derekljh"},"content":"        String[] argument \u003d taskDescription.split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":229,"author":{"gitId":"Derekljh"},"content":"        String category \u003d argument[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":230,"author":{"gitId":"Derekljh"},"content":"        String status \u003d argument[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":231,"author":{"gitId":"Derekljh"},"content":"        String description \u003d argument[2];","lastModifiedDate":"2024-01-31"},{"lineNumber":232,"author":{"gitId":"Derekljh"},"content":"        Task task;","lastModifiedDate":"2024-01-31"},{"lineNumber":233,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":234,"author":{"gitId":"Derekljh"},"content":"        switch (category) {","lastModifiedDate":"2024-01-31"},{"lineNumber":235,"author":{"gitId":"Derekljh"},"content":"            case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":236,"author":{"gitId":"Derekljh"},"content":"                task \u003d new ToDo(status, description);","lastModifiedDate":"2024-01-31"},{"lineNumber":237,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"Derekljh"},"content":"            case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":239,"author":{"gitId":"Derekljh"},"content":"                String by \u003d argument[3];","lastModifiedDate":"2024-01-31"},{"lineNumber":240,"author":{"gitId":"Derekljh"},"content":"                task \u003d new Deadline(status, description, by);","lastModifiedDate":"2024-01-31"},{"lineNumber":241,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":242,"author":{"gitId":"Derekljh"},"content":"            case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":243,"author":{"gitId":"Derekljh"},"content":"                String[] duration \u003d argument[3].split(\" - \");","lastModifiedDate":"2024-01-31"},{"lineNumber":244,"author":{"gitId":"Derekljh"},"content":"                String start \u003d duration[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":245,"author":{"gitId":"Derekljh"},"content":"                String end \u003d duration[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":246,"author":{"gitId":"Derekljh"},"content":"                task \u003d new Event(status, description, start, end);","lastModifiedDate":"2024-01-31"},{"lineNumber":247,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":248,"author":{"gitId":"Derekljh"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":249,"author":{"gitId":"Derekljh"},"content":"                throw new IOException(\"Error, unable to load task from file.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":250,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":251,"author":{"gitId":"Derekljh"},"content":"        return task;","lastModifiedDate":"2024-01-31"},{"lineNumber":252,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":253,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Derekljh":253}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    private final String FILE_PATH;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"     * Constructor for Storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"     * @param file The file to be stored.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"    public Storage(String file) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"        this.FILE_PATH \u003d file;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"     * Loads the tasks from the stored file.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"     * @return An arraylist of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"     * @throws DukeException if file does not contain any suitable tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"        String FILE_DIR \u003d \"./data\";","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"        File directory \u003d new File(FILE_DIR);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"            if (!directory.isDirectory()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"                directory.mkdirs();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"            Scanner fileSc \u003d new Scanner(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"            while (fileSc.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"                String taskCategory \u003d fileSc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"                Task task \u003d Parser.parseCategoryFromFile(taskCategory);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"                taskList.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"            fileSc.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"            return taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"            throw new DukeException(\"Error, unable to load tasks from file\");","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"     * Saves task to the stored file.","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"     * @param taskList The tasklist that contains the tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Derekljh"},"content":"     * @throws IOException if unable to save tasks to the stored file.","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Derekljh"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Derekljh"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Derekljh"},"content":"        StringBuilder msg \u003d new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Derekljh"},"content":"            msg.append(task.toFile()).append(\"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"        fw.write(msg.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Derekljh"},"content":"        fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Derekljh":73}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"     * Constructor for new TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"     * @param taskList Existing arrayList.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"     * Adds task.","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"     * @param task Task to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"        taskList.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"     * Deletes task.","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"     * @param deleteId Id of task to be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"     * @param ui Ui to generate deleteMessage.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"    public void deleteTask(int deleteId, Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"        ui.deleteMessage(taskList.get(deleteId));","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"        taskList.remove(deleteId);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"     * Unmarks task.","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"     * @param unmarkId Id of task to be unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"     * @param ui Ui to generate unmarkMessage.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"    public void unmarkTask(int unmarkId, Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"        taskList.get(unmarkId).markNotDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"        ui.unmarkMessage(taskList.get(unmarkId));","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"     * Marks task.","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"     * @param markId Id of task to be marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Derekljh"},"content":"     * @param ui Ui to generate markMessage.","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Derekljh"},"content":"    public void markTask(int markId, Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Derekljh"},"content":"        taskList.get(markId).markDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Derekljh"},"content":"        ui.markMessage(taskList.get(markId));","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"     * Gets tasks from taskList.","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Derekljh"},"content":"     * @return taskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Derekljh"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Derekljh"},"content":"        return this.taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Derekljh"},"content":"     * Gets size of taskList.","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Derekljh"},"content":"     * @return size of taskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Derekljh"},"content":"    public int getSize() {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Derekljh"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Derekljh"},"content":"     * Prints list of tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Derekljh"},"content":"     * @param ui Ui to generate indented messages.","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Derekljh"},"content":"    public void listTask(Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Derekljh"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Derekljh"},"content":"            System.out.println(\"  Sorry, Tasklist is empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Derekljh"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Derekljh"},"content":"            System.out.println(\"  \" + \"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Derekljh"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Derekljh"},"content":"                Task currTask \u003d taskList.get(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Derekljh"},"content":"                System.out.println(\"  \" + (i + 1) + \".\" + currTask.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Derekljh"},"content":"     * Finds tasks that match the search.","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Derekljh"},"content":"     * @param match The keyword to be used.","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Derekljh"},"content":"     * @return Arraylist of matched tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Derekljh"},"content":"    public ArrayList\u003cTask\u003e find(String match) {","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Derekljh"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Derekljh"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Derekljh"},"content":"            if (task.getDescription().contains(match)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Derekljh"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Derekljh"},"content":"        return matchedTasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"Derekljh"},"content":"     * Lists out the tasks that match the search.","lastModifiedDate":"2024-02-16"},{"lineNumber":126,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"Derekljh"},"content":"     * @param matchedTasks List that contains matched tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"Derekljh"},"content":"     * @param ui Ui to set indented line.","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Derekljh"},"content":"    public void listMatchedTasks(ArrayList\u003cTask\u003e matchedTasks, Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Derekljh"},"content":"        if (matchedTasks.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"Derekljh"},"content":"            System.out.println(\"  Sorry, there are no tasks that match your search...\");","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"Derekljh"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"Derekljh"},"content":"            System.out.println(\"  \" + \"Here are the tasks that match your search:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Derekljh"},"content":"            for(int i \u003d 0; i \u003c matchedTasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"Derekljh"},"content":"                Task currTask \u003d matchedTasks.get(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"Derekljh"},"content":"                System.out.println(\"  \" + (i + 1) + \".\" + currTask.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"Derekljh"},"content":"            ui.setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Derekljh":145}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"    static String name \u003d \"Lunaris\";","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"    static String indentedLine \u003d","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"            \"  _________________________________________________________\";","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"     * Constructor for Ui.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"    public Ui() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"     * Prints an indented line.","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"    public void setIndentedLine() {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"        System.out.println(indentedLine);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"     * Prints welcome message.","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" + \"Hey! I\u0027m \" + name + \"\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"                \"  \" + \"Is there anything I can do for you?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"     * Prints goodbye message.","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"    public void printGoodByeMessage() {","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"                \"Leaving so soon? Alright, have a great day ahead!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"     * Prints loading error message.","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"    public void loadErrorMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"                \"Error loading file... Creating new empty file\");","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"     * Prints unmark message.","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Derekljh"},"content":"     * @param task Task that was unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"    public void unmarkMessage(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" + \"Ok, I\u0027ve marked this task \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"                \"as not done yet:\" + \"\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Derekljh"},"content":"                \"  \" + task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Derekljh"},"content":"     * Prints mark message.","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Derekljh"},"content":"     * @param task Task that was marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Derekljh"},"content":"    public void markMessage(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" + \"Ok, I\u0027ve marked this task \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Derekljh"},"content":"                \"as done:\" + \"\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Derekljh"},"content":"                \"  \" + task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Derekljh"},"content":"     * Prints delete message.","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Derekljh"},"content":"     * @param task Task that was deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Derekljh"},"content":"    public void deleteMessage(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" + \"Noted. I\u0027ve removed this task:\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Derekljh"},"content":"                \"\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Derekljh"},"content":"                \"  \" + task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Derekljh"},"content":"     * Prints how many tasks are in the list.","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Derekljh"},"content":"     * @param taskList List to be counted.","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Derekljh"},"content":"    public void listSizeMessage(TaskList taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Derekljh"},"content":"        System.out.println(\"  \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Derekljh"},"content":"                \"Now you have \" + taskList.getSize() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Derekljh"},"content":"        setIndentedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Derekljh"},"content":"    public String readCommandLine() {","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Derekljh"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Derekljh"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Derekljh"},"content":"        return scanner.next();","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Derekljh"},"content":"    public int readInt() {","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Derekljh"},"content":"        return scanner.nextInt();","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Derekljh":123}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"    protected String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"    // code snippet below inspired from:","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"    // https://stackoverflow.com/questions/44600420/datetimeformatter-accepting-multiple-dates-and-converting-to-one-java-time-libr","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    protected DateTimeFormatter parser \u003d DateTimeFormatter","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"            .ofPattern(\"[yyyy-MM-dd HHmm][MMM dd yyyy HHmm]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"     * Constructor for Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"     * @param description Description of deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"     * @param by Date and Time of deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"        this.dateTime \u003d LocalDateTime.parse(by, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"     * Constructor for Deadline task with status. Used for file access.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"     * @param status isDone status of task. Either \"1\" or \"0\".","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"     * @param description Description of deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"     * @param by Date and Time of deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"    public Deadline(String status, String description, String by) {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"        super(status.equals(\"1\"), description);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"        this.dateTime \u003d LocalDateTime.parse(by, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"    public String formatDateTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"        return this.dateTime.format(DateTimeFormatter","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"                .ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"    public String toFile() {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\")","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"                + \" | \" + description + \" | \" + this.formatDateTime();","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"                + \" (by: \" + this.formatDateTime() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Derekljh":56}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"    protected String start;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    protected String end;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"    protected LocalDateTime startDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"    protected LocalDateTime endDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    // code snippet below inspired from:","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"    // https://stackoverflow.com/questions/44600420/datetimeformatter-accepting-multiple-dates-and-converting-to-one-java-time-libr","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    protected DateTimeFormatter parser \u003d DateTimeFormatter","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"            .ofPattern(\"[yyyy-MM-dd HHmm][MMM dd yyyy HHmm]\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"     * Constructor for Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"     * @param description Description of event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"     * @param start Date and Time of the start of the event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"     * @param end Date and Time of the end of the event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"        this.startDateTime \u003d LocalDateTime.parse(start, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"        this.endDateTime \u003d LocalDateTime.parse(end, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"     * Constructor for Event task with status. Used for file access.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"     * @param status isDone status of task. Either \"1\" or \"0\".","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"     * @param description Description of event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"     * @param start Date and Time of the start of the event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"     * @param end Date and Time of the end of the event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"    public Event(String status, String description, String start, String end) {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"        super(status.equals(\"1\"), description);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"        this.startDateTime \u003d LocalDateTime.parse(start, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"        this.endDateTime \u003d LocalDateTime.parse(end, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"    public String formatStartDateTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"        return this.startDateTime.format(DateTimeFormatter","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"                .ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"    public String formatEndDateTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"        return this.endDateTime.format(DateTimeFormatter","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"                .ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"    public String toFile() {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"                + \" | \" + this.formatStartDateTime() +","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Derekljh"},"content":"                \" - \" + this.formatEndDateTime();","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"Derekljh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"Derekljh"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"                + \" (from: \" + this.formatStartDateTime()","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Derekljh"},"content":"                + \" to: \" + this.formatEndDateTime() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Derekljh":70}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"     * Constructor for Task.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"     * @param description Description of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"     * Constructor for Task with status.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"     * @param isDone status of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"     * @param description Description of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"    public Task(boolean isDone, String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"     * Method to mark or unmark task.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"     * @return \"X\" if marking task, \" \" if unmarking task.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"     * Method to set status to marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"     * Method to set status to unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"    public void markNotDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"     * Method to return description of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"     * @return Description of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"        return this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"     * Method to format task for storing in storage file.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Derekljh"},"content":"     * @return formatted string representation of task for file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"    public String toFile() {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Derekljh"},"content":"        return \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Derekljh"},"content":"     * Method to return string representation of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Derekljh"},"content":"     * @return String representation of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"Derekljh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"Derekljh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Derekljh":80}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"     * Constructor for ToDo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"     * @param description Description of ToDo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"     * Constructor for ToDo task with status. Used for file access.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"     * @param status isDone status of task. Either \"1\" or \"0\".","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"     * @param description Description of ToDo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"    public ToDo(String status, String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"        super(status.equals(\"1\"), description);","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"    public String toFile() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Derekljh":34}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"    public void deadlineTestFile() {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"        assertEquals(new Deadline(\"0\", \"homework\", \"2023-02-01 2359\").toFile(),","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"                \"D | 0 |  homework | Feb 01 2023 2359\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"    public void deadlineTestString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"        assertEquals(new Deadline(\"0\", \"homework\", \"2023-02-01 2359\").toString(),","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"                \"[D][ ]  homework (by: Feb 01 2023 2359)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Derekljh":19}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"public class ToDoTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"    public void toDoTestFile() {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"        assertEquals(new ToDo(\"1\", \"return book\").toFile(), \"T | 1 |  return book\");","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    public void toDoTestString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"        assertEquals(new ToDo(\"return book\").toString(), \"[T][ ]  return book\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Derekljh":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Derekljh":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Derekljh":1,"-":20}}]
