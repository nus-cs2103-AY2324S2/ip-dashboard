[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"# banter.Banter project template","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"3. After that, locate the `src/main/java/banter.Banter.java` file, right-click it, and choose `Run banter.Banter.main()` (if the code editor is showing compile banter.errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"solomonng2001":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"checkstyle {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"    mainClass.set(\"seedu.banter.Main\")","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"    archiveFileName \u003d \u0027banter.jar\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"solomonng2001":22,"-":38}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"# Banter User Guide","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"solomonng2001":1,"-":29}},{"path":"src/main/java/seedu/banter/Banter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":" * Represents the Banter program.","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"public class Banter {","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"    private final Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"    private final Parser parser \u003d new Parser(storage);","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"        return parser.respondToUser(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"solomonng2001":18}},{"path":"src/main/java/seedu/banter/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":" * Represents the Banter program.","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"public class Launcher {","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"solomonng2001":13}},{"path":"src/main/java/seedu/banter/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.ui.MainWindow;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":" * A GUI for Banter using FXML.","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"    private final Banter banter \u003d new Banter();","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"            scene.getStylesheets().add(Objects.requireNonNull(getClass().getResource(\"/css/styles.css\"))","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"                    .toExternalForm());","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBanter(banter);","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"            stage.show();","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"solomonng2001":36}},{"path":"src/main/java/seedu/banter/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.enums.CommandType;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.errors.Errors;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.errors.InvalidBanterUsageError;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.tasks.TaskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.ui.Card;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.utilities.DateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":" * Represents a parser that parses user input and functions as the app controller.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"public class Parser {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    // Constants","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    private static final String SEPARATOR \u003d \" \";","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"    private static final String DEADLINE_DUE_DATE \u003d \"/by\";","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"    private static final String EVENT_START \u003d \"/from\";","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    private static final String EVENT_END \u003d \"/to\";","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"    // Attributes","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"     * Constructs a new Parser object.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"     * @param storage Storage object that handles loading and saving of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"    public Parser(Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        taskList \u003d this.storage.loadTaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"    // Methods","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"     * Responds to user input until the user exits the app, then print exit message.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"    public String respondToUser(String input) {","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"            CommandType command \u003d getCommandType(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"            switch (command) {","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"            case LIST:","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"                return parseList();","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"            case MARK:","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"                return parseMark(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"                return parseUnmark(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"            case TODO:","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"                return parseTodo(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"                return parseDeadline(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"            case EVENT:","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"                return parseEvent(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"            case DELETE:","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"                return parseDelete(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"            case FIND:","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"                return parseFind(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"            default:","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"                assert false : \"Invalid command type parsed\";","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        } catch (InvalidBanterUsageError e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"            Card errorMessage \u003d new Card(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"            return errorMessage.getString();","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"        return \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"    private CommandType getCommandType(String input) throws InvalidBanterUsageError {","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"            return CommandType.valueOf(input.split(SEPARATOR)[0].toUpperCase());","lastModifiedDate":"2024-01-22"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"        } catch (StringIndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"            throw Errors.INVALID_COMMAND_ERROR;","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"    private String parseList() {","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"        Card taskListMessage \u003d new Card(taskList.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"        return taskListMessage.getString();","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"    private String parseTodo(String input) throws InvalidBanterUsageError {","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"        String[] words \u003d getWords(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"            throw Errors.MISSING_TODO_DESCRIPTION_ERROR;","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"        String description \u003d joinWords(words, 1, words.length - 1);","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"        Card taskAddedMessage \u003d new Card(taskList.addNewTodo(description));","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"        storage.saveTaskList(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"        return taskAddedMessage.getString();","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"    private String parseDeadline(String input) throws InvalidBanterUsageError {","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"        String[] words \u003d getWords(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"        int indexOfDueDate \u003d indexOf(words, DEADLINE_DUE_DATE);","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"        if (indexOfDueDate \u003d\u003d -1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"            throw Errors.MISSING_DEADLINE_DUE_DATE_ERROR;","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"        String dueDateStr \u003d joinWords(words, indexOfDueDate + 1, words.length - 1);","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"        if (dueDateStr.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"            throw Errors.MISSING_DEADLINE_DUE_DATE_ERROR;","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime dueDate \u003d DateTime.getDateTimeFromUserInput(dueDateStr);","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"        String description \u003d joinWords(words, 1, indexOfDueDate - 1);","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"            throw Errors.MISSING_DEADLINE_DESCRIPTION_ERROR;","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":113,"author":{"gitId":"solomonng2001"},"content":"        Card taskAddedMessage \u003d new Card(taskList.addNewDeadline(description, dueDate));","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"        storage.saveTaskList(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"solomonng2001"},"content":"        return taskAddedMessage.getString();","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":117,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":118,"author":{"gitId":"solomonng2001"},"content":"    private String parseEvent(String input) throws InvalidBanterUsageError {","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"solomonng2001"},"content":"        String[] words \u003d getWords(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":121,"author":{"gitId":"solomonng2001"},"content":"        int indexOfEnd \u003d indexOf(words, EVENT_END);","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"solomonng2001"},"content":"        if (indexOfEnd \u003d\u003d -1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"solomonng2001"},"content":"            throw Errors.MISSING_EVENT_END_ERROR;","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":125,"author":{"gitId":"solomonng2001"},"content":"        String endStr \u003d joinWords(words, indexOfEnd + 1, words.length - 1);","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"solomonng2001"},"content":"        if (endStr.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"solomonng2001"},"content":"            throw Errors.MISSING_EVENT_END_ERROR;","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime end \u003d DateTime.getDateTimeFromUserInput(endStr);","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"solomonng2001"},"content":"        int indexOfStart \u003d indexOf(words, EVENT_START);","lastModifiedDate":"2024-02-15"},{"lineNumber":132,"author":{"gitId":"solomonng2001"},"content":"        if (indexOfStart \u003d\u003d -1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":133,"author":{"gitId":"solomonng2001"},"content":"            throw Errors.MISSING_EVENT_START_ERROR;","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":135,"author":{"gitId":"solomonng2001"},"content":"        String startStr \u003d joinWords(words, indexOfStart + 1, indexOfEnd - 1);","lastModifiedDate":"2024-02-15"},{"lineNumber":136,"author":{"gitId":"solomonng2001"},"content":"        if (startStr.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"solomonng2001"},"content":"            throw Errors.MISSING_EVENT_START_ERROR;","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":139,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime start \u003d DateTime.getDateTimeFromUserInput(startStr);","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":141,"author":{"gitId":"solomonng2001"},"content":"        String description \u003d joinWords(words, 1, indexOfStart - 1);","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"solomonng2001"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":143,"author":{"gitId":"solomonng2001"},"content":"            throw Errors.MISSING_EVENT_DESCRIPTION_ERROR;","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":145,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":146,"author":{"gitId":"solomonng2001"},"content":"        Card taskAddedMessage \u003d new Card(taskList.addNewEvent(description, start, end));","lastModifiedDate":"2024-02-15"},{"lineNumber":147,"author":{"gitId":"solomonng2001"},"content":"        storage.saveTaskList(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"solomonng2001"},"content":"        return taskAddedMessage.getString();","lastModifiedDate":"2024-02-21"},{"lineNumber":149,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":150,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":151,"author":{"gitId":"solomonng2001"},"content":"    private String parseMark(String input) throws InvalidBanterUsageError {","lastModifiedDate":"2024-02-21"},{"lineNumber":152,"author":{"gitId":"solomonng2001"},"content":"        String[] words \u003d getWords(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":153,"author":{"gitId":"solomonng2001"},"content":"        int taskNumber;","lastModifiedDate":"2024-01-22"},{"lineNumber":154,"author":{"gitId":"solomonng2001"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":155,"author":{"gitId":"solomonng2001"},"content":"            taskNumber \u003d getTaskNumber(words);","lastModifiedDate":"2024-02-15"},{"lineNumber":156,"author":{"gitId":"solomonng2001"},"content":"        } catch (IndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":157,"author":{"gitId":"solomonng2001"},"content":"            throw Errors.INVALID_MARK_TASK_NUMBER_ERROR;","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":159,"author":{"gitId":"solomonng2001"},"content":"        Card taskDoneMessage \u003d new Card(taskList.markTaskAsDone(taskNumber));","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"solomonng2001"},"content":"        storage.saveTaskList(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"solomonng2001"},"content":"        return taskDoneMessage.getString();","lastModifiedDate":"2024-02-21"},{"lineNumber":162,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":163,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":164,"author":{"gitId":"solomonng2001"},"content":"    private String parseUnmark(String input) throws InvalidBanterUsageError {","lastModifiedDate":"2024-02-21"},{"lineNumber":165,"author":{"gitId":"solomonng2001"},"content":"        String[] words \u003d getWords(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":166,"author":{"gitId":"solomonng2001"},"content":"        int taskNumber;","lastModifiedDate":"2024-01-22"},{"lineNumber":167,"author":{"gitId":"solomonng2001"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":168,"author":{"gitId":"solomonng2001"},"content":"            taskNumber \u003d getTaskNumber(words);","lastModifiedDate":"2024-02-15"},{"lineNumber":169,"author":{"gitId":"solomonng2001"},"content":"        } catch (IndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":170,"author":{"gitId":"solomonng2001"},"content":"            throw Errors.INVALID_UNMARK_TASK_NUMBER_ERROR;","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":172,"author":{"gitId":"solomonng2001"},"content":"        Card taskUndoneMessage \u003d new Card(taskList.markTaskAsUndone(taskNumber));","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"solomonng2001"},"content":"        storage.saveTaskList(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"solomonng2001"},"content":"        return taskUndoneMessage.getString();","lastModifiedDate":"2024-02-21"},{"lineNumber":175,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":176,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":177,"author":{"gitId":"solomonng2001"},"content":"    private String parseDelete(String input) throws InvalidBanterUsageError {","lastModifiedDate":"2024-02-21"},{"lineNumber":178,"author":{"gitId":"solomonng2001"},"content":"        String[] words \u003d getWords(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":179,"author":{"gitId":"solomonng2001"},"content":"        int taskNumber;","lastModifiedDate":"2024-01-22"},{"lineNumber":180,"author":{"gitId":"solomonng2001"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":181,"author":{"gitId":"solomonng2001"},"content":"            taskNumber \u003d getTaskNumber(words);","lastModifiedDate":"2024-02-15"},{"lineNumber":182,"author":{"gitId":"solomonng2001"},"content":"        } catch (IndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":183,"author":{"gitId":"solomonng2001"},"content":"            throw Errors.INVALID_DELETE_TASK_NUMBER_ERROR;","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":185,"author":{"gitId":"solomonng2001"},"content":"        Card taskDeletedMessage \u003d new Card(taskList.deleteTask(taskNumber));","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"solomonng2001"},"content":"        storage.saveTaskList(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"solomonng2001"},"content":"        return taskDeletedMessage.getString();","lastModifiedDate":"2024-02-21"},{"lineNumber":188,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":189,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":190,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":191,"author":{"gitId":"solomonng2001"},"content":"     * Finds tasks that contain the keyword(s) in the input.","lastModifiedDate":"2024-02-01"},{"lineNumber":192,"author":{"gitId":"solomonng2001"},"content":"     * @param input User input.","lastModifiedDate":"2024-02-21"},{"lineNumber":193,"author":{"gitId":"solomonng2001"},"content":"     * @throws InvalidBanterUsageError If the keyword(s) is missing.","lastModifiedDate":"2024-02-21"},{"lineNumber":194,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"solomonng2001"},"content":"    private String parseFind(String input) throws InvalidBanterUsageError {","lastModifiedDate":"2024-02-21"},{"lineNumber":196,"author":{"gitId":"solomonng2001"},"content":"        String[] words \u003d getWords(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":197,"author":{"gitId":"solomonng2001"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-15"},{"lineNumber":198,"author":{"gitId":"solomonng2001"},"content":"            throw Errors.MISSING_KEYWORD_ERROR;","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"solomonng2001"},"content":"        String keyword \u003d joinWords(words, 1, words.length - 1);","lastModifiedDate":"2024-02-15"},{"lineNumber":201,"author":{"gitId":"solomonng2001"},"content":"        Card taskFoundMessage \u003d new Card(taskList.findTasks(keyword));","lastModifiedDate":"2024-01-31"},{"lineNumber":202,"author":{"gitId":"solomonng2001"},"content":"        return taskFoundMessage.getString();","lastModifiedDate":"2024-02-21"},{"lineNumber":203,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":204,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":205,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":206,"author":{"gitId":"solomonng2001"},"content":"    // Helper methods","lastModifiedDate":"2024-01-22"},{"lineNumber":207,"author":{"gitId":"solomonng2001"},"content":"    private String[] getWords(String input) {","lastModifiedDate":"2024-02-15"},{"lineNumber":208,"author":{"gitId":"solomonng2001"},"content":"        return input.split(SEPARATOR);","lastModifiedDate":"2024-01-22"},{"lineNumber":209,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":210,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":211,"author":{"gitId":"solomonng2001"},"content":"    private String joinWords(String[] words, int start, int end) {","lastModifiedDate":"2024-02-15"},{"lineNumber":212,"author":{"gitId":"solomonng2001"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":213,"author":{"gitId":"solomonng2001"},"content":"        for (int i \u003d start; i \u003c\u003d end; i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":214,"author":{"gitId":"solomonng2001"},"content":"            if (result.length() !\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":215,"author":{"gitId":"solomonng2001"},"content":"                result.append(SEPARATOR);","lastModifiedDate":"2024-01-23"},{"lineNumber":216,"author":{"gitId":"solomonng2001"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":217,"author":{"gitId":"solomonng2001"},"content":"            result.append(words[i]);","lastModifiedDate":"2024-02-15"},{"lineNumber":218,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":219,"author":{"gitId":"solomonng2001"},"content":"        return result.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":220,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":221,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":222,"author":{"gitId":"solomonng2001"},"content":"    private int indexOf(String[] words, String prefix) {","lastModifiedDate":"2024-02-15"},{"lineNumber":223,"author":{"gitId":"solomonng2001"},"content":"        for (int i \u003d 0; i \u003c words.length; i++) {","lastModifiedDate":"2024-02-15"},{"lineNumber":224,"author":{"gitId":"solomonng2001"},"content":"            if (words[i].equals(prefix)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":225,"author":{"gitId":"solomonng2001"},"content":"                return i;","lastModifiedDate":"2024-01-22"},{"lineNumber":226,"author":{"gitId":"solomonng2001"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":227,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":228,"author":{"gitId":"solomonng2001"},"content":"        return -1;","lastModifiedDate":"2024-01-22"},{"lineNumber":229,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":230,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":231,"author":{"gitId":"solomonng2001"},"content":"    private int getTaskNumber(String[] words) throws IndexOutOfBoundsException, IllegalArgumentException {","lastModifiedDate":"2024-02-15"},{"lineNumber":232,"author":{"gitId":"solomonng2001"},"content":"        return Integer.parseInt(words[1]);","lastModifiedDate":"2024-02-15"},{"lineNumber":233,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":234,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"solomonng2001":234}},{"path":"src/main/java/seedu/banter/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.tasks.Deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.tasks.Event;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.tasks.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.tasks.TaskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":" * Represents the storage of the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    private static final String TASK_LIST_FILE_PATH \u003d \"data\" + File.separator + \"tasklist.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"    private static final DateTimeFormatter DATE_TIME_STORAGE_FORMAT \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"    private static final String EVENT_REPRESENTATION \u003d \"E\";","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    private static final String DEADLINE_REPRESENTATION \u003d \"D\";","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"    private static final String TODO_REPRESENTATION \u003d \"T\";","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"     * Loads the task list from the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"     * @return Task list loaded from the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"    public TaskList loadTaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"            File file \u003d new File(TASK_LIST_FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"                String task \u003d sc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"                String[] tokens \u003d task.split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"                String taskType \u003d tokens[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"                String status \u003d tokens[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"                boolean isDone \u003d status.equals(Task.IS_DONE_ICON);","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"                String description \u003d tokens[2];","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"                switch (taskType) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"                case TODO_REPRESENTATION:","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"                    taskList.loadTodo(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"                case DEADLINE_REPRESENTATION:","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"                    LocalDateTime by \u003d loadDateTime(tokens[3]);","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"                    taskList.loadDeadline(description, isDone, by);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"                case EVENT_REPRESENTATION:","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"                    LocalDateTime from \u003d loadDateTime(tokens[3]);","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"                    LocalDateTime to \u003d loadDateTime(tokens[4]);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"                    taskList.loadEvent(description, isDone, from, to);","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"                default:","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"                    assert false : \"Invalid task type in storage file\";","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"            taskList.sortByDateTime();","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"            return taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"            handleFileNotFound();","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"            return new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"    private void handleFileNotFound() {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"            File file \u003d new File(TASK_LIST_FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"            file.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"            System.out.println(\"Unable to create file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"     * Saves the task list to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"     * @param taskList Task list to be saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"    public void saveTaskList(TaskList taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"            FileWriter fw \u003d new FileWriter(TASK_LIST_FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"            taskList.sortByDateTime();","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"            fw.write(toStorageFormat(taskList));","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"            fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"            System.out.println(\"Unable to save task list: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"    private String toStorageFormat(TaskList taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"            sb.append(toStorageFormat(task)).append(\"\\n\");","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"        return sb.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"    private String toStorageFormat(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"        String statusDescription \u003d task.getStatus() + \" | \" + task.getDescription();","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"            return DEADLINE_REPRESENTATION + \" | \" + statusDescription + \" | \"","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"                    + toStorageFormat(((Deadline) task).getDueDateTime());","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"            return EVENT_REPRESENTATION + \" | \" + statusDescription + \" | \"","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"                    + toStorageFormat(((Event) task).getStartDateTime()) + \" | \" + toStorageFormat(((Event) task)","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"                    .getEndDateTime());","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"            return TODO_REPRESENTATION + \" | \" + statusDescription;","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"solomonng2001"},"content":"    private String toStorageFormat(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"solomonng2001"},"content":"        return dateTime.format(DATE_TIME_STORAGE_FORMAT);","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"solomonng2001"},"content":"    private LocalDateTime loadDateTime(String dateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"solomonng2001"},"content":"        return LocalDateTime.parse(dateTime, DATE_TIME_STORAGE_FORMAT);","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"solomonng2001":123}},{"path":"src/main/java/seedu/banter/enums/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.enums;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":" * Represents the different types of commands that can be executed.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"public enum CommandType {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"    LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"     * Returns the string representation of the command type in lowercase.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of the command type in lowercase.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"        return this.name().toLowerCase();","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"solomonng2001":18}},{"path":"src/main/java/seedu/banter/errors/Errors.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.errors;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":" * Represents a collection of errors that can occur in the application.","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"public class Errors {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"    // Constants","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"    public static final String INVALID_COMMAND \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    public static final String INVALID_TASK_NUMBER \u003d \"☹ OOPS!!! The task number is invalid.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    public static final String MISSING_TASK_DESCRIPTION \u003d \"☹ OOPS!!! The description of a task cannot be empty.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    public static final String MISSING_DEADLINE_DUE_DATE \u003d \"☹ OOPS!!! The due date of a deadline cannot be empty.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"    public static final String MISSING_EVENT_START \u003d \"☹ OOPS!!! The start date of an event cannot be empty.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    public static final String MISSING_EVENT_END \u003d \"☹ OOPS!!! The end date of an event cannot be empty.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    public static final String MISSING_KEYWORD \u003d \"☹ OOPS!!! The keyword(s) cannot be empty.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    // Errors","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"    public static final InvalidBanterUsageError INVALID_COMMAND_ERROR \u003d new InvalidBanterUsageError(","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"            INVALID_COMMAND, Ui.COMMAND_USAGE);","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    public static final InvalidBanterUsageError INVALID_MARK_TASK_NUMBER_ERROR \u003d new InvalidBanterUsageError(","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"            INVALID_TASK_NUMBER, Ui.MARK_USAGE);","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"    public static final InvalidBanterUsageError INVALID_UNMARK_TASK_NUMBER_ERROR \u003d new InvalidBanterUsageError(","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"            INVALID_TASK_NUMBER, Ui.UNMARK_USAGE);","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    public static final InvalidBanterUsageError INVALID_DELETE_TASK_NUMBER_ERROR \u003d new InvalidBanterUsageError(","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"            INVALID_TASK_NUMBER, Ui.DELETE_USAGE);","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    public static final InvalidBanterUsageError MISSING_TODO_DESCRIPTION_ERROR \u003d new InvalidBanterUsageError(","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"            MISSING_TASK_DESCRIPTION, Ui.TODO_USAGE);","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"    public static final InvalidBanterUsageError MISSING_DEADLINE_DESCRIPTION_ERROR \u003d new InvalidBanterUsageError(","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"            MISSING_TASK_DESCRIPTION, Ui.DEADLINE_USAGE);","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"    public static final InvalidBanterUsageError MISSING_DEADLINE_DUE_DATE_ERROR \u003d new InvalidBanterUsageError(","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"            MISSING_DEADLINE_DUE_DATE, Ui.DEADLINE_USAGE);","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"    public static final InvalidBanterUsageError MISSING_EVENT_DESCRIPTION_ERROR \u003d new InvalidBanterUsageError(","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"            MISSING_TASK_DESCRIPTION, Ui.EVENT_USAGE);","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"    public static final InvalidBanterUsageError MISSING_EVENT_START_ERROR \u003d new InvalidBanterUsageError(","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"            MISSING_EVENT_START, Ui.EVENT_USAGE);","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"    public static final InvalidBanterUsageError MISSING_EVENT_END_ERROR \u003d new InvalidBanterUsageError(","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"            MISSING_EVENT_END, Ui.EVENT_USAGE);","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"    public static final InvalidBanterUsageError MISSING_KEYWORD_ERROR \u003d new InvalidBanterUsageError(","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"            MISSING_KEYWORD, Ui.FIND_USAGE);","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"solomonng2001":44}},{"path":"src/main/java/seedu/banter/errors/InvalidBanterUsageError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.errors;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":" * Represents an error that occurs when the user uses an invalid command.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"public class InvalidBanterUsageError extends Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"     * Constructs a new InvalidBanterUsageError object.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"     * @param error Error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"     * @param usage Usage message.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    public InvalidBanterUsageError(String error, String usage) {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"        super(error + \"\\nUsage: \" + usage);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"solomonng2001":16}},{"path":"src/main/java/seedu/banter/errors/InvalidTaskNumberUsageError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.errors;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.tasks.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":" * Represents an error that occurs when the user uses an invalid task number.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"public class InvalidTaskNumberUsageError extends InvalidBanterUsageError {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"     * Constructs a new InvalidTaskNumberUsageError object.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"     * @param error Error message.","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"     * @param usage Usage message.","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"     * @param list Task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"    public InvalidTaskNumberUsageError(String error, String usage, TaskList list) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"        super(error, usage + \"\\n\" + list);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"solomonng2001":19}},{"path":"src/main/java/seedu/banter/tasks/Assertions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.tasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"class Assertions {","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"    // Assertion messages","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"    private static final String DATETIME_NOT_IN_THE_FUTURE \u003d \"Date and time must be in the future\";","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"    private static final String TASK_MUST_BE_UNMARKED \u003d \"Task must be unmarked\";","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"    // Assertion methods","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"    static void assertDateTimeIsInTheFuture(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"        assert dateTime.isAfter(LocalDateTime.now()) : DATETIME_NOT_IN_THE_FUTURE;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    static void assertTaskIsUnmarked(Task task) {","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"        assert !task.isDone() : TASK_MUST_BE_UNMARKED;","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"solomonng2001":18}},{"path":"src/main/java/seedu/banter/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.utilities.DateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":" * Represents a task of type Deadline in a task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":" * A Deadline task has a description and a due date.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    private static final String DEADLINE_ICON \u003d \"D\";","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"     * Constructs a new Deadline object that should be unmarked and in the future.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"     * @param by The due date of the Deadline task.","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"        super(description);","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"        Assertions.assertDateTimeIsInTheFuture(by);","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        Assertions.assertTaskIsUnmarked(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"     * Constructs a new Deadline object without restrictions on done status and datetime.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"     * @param isDone The done status of the Deadline task.","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"     * @param by The due date of the Deadline task.","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"     * Returns icon representing a Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"     * @return Icon representing a Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        return DEADLINE_ICON;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"     * String representation of a Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of a Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        return \"[\" + getTaskType() + \"]\" + super.toString() + \" (by: \" + DateTime.displayDateTimeToUser(by) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"     * Returns the due date of a Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"     * @return Due date of a Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"    public LocalDateTime getDueDateTime() {","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        return by;","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"     * Returns the due date of a Deadline task as the sorting priority.","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"     * @return The due date of a Deadline task as the sorting priority.","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"    public LocalDateTime getDateTimePriority() {","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        return by;","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"solomonng2001":72}},{"path":"src/main/java/seedu/banter/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.utilities.DateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":" * Represents a task of type Event in a task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":" * An Event task has a description, a start time and an end time.","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    private static final String EVENT_ICON \u003d \"E\";","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"     * Constructs a new Event object that should be unmarked and in the future.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"     * @param from The start time of the Event task.","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"     * @param to The end time of the Event task.","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"    Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"        super(description);","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"        Assertions.assertDateTimeIsInTheFuture(from);","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"        Assertions.assertDateTimeIsInTheFuture(to);","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"        Assertions.assertTaskIsUnmarked(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"     * Constructs a new Event object without restrictions on done status and datetime.","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"     * @param isDone The done status of the Event task.","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"     * @param from The start time of the Event task.","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"     * @param to The end time of the Event task.","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"    public Event(String description, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"     * Returns icon representing an Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"     * @return Icon representing an Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"        return EVENT_ICON;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"     * String representation of an Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of an Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"        return \"[\" + getTaskType() + \"]\" + super.toString() + \" (from: \" + DateTime.displayDateTimeToUser(from)","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"                + \" to: \" + DateTime.displayDateTimeToUser(to) + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"     * Returns the start time of an Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"     * @return Start time of an Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"        return from;","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"     * Returns the end time of an Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"     * @return End time of an Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"        return to;","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"     * Returns the start time of an Event task as the sorting priority.","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"     * @return The start time of an Event task as the sorting priority.","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"    public LocalDateTime getDateTimePriority() {","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"        return from;","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"solomonng2001":87}},{"path":"src/main/java/seedu/banter/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":" * Represents a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"     * Represents a task that is done.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    public static final String IS_DONE_ICON \u003d \"X\";","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"     * Represents a task that is not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"    public static final String IS_NOT_DONE_ICON \u003d \" \";","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    private final String description;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    Task(String description) {","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"        Assertions.assertTaskIsUnmarked(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"     * String representation of a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        return \"[\" + getStatus() + \"] \" + description;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"    String markAsDone() {","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + this;","lastModifiedDate":"2024-01-21"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"    String markAsUndone() {","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + this;","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"     * Returns the status of a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"     * @return Status of a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"        return isDone ? IS_DONE_ICON : IS_NOT_DONE_ICON;","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"     * Returns the description of a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"     * @return Description of a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        return description;","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"     * Returns true if a task is done.","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"     * @return True if a task is done.","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"        return isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"     * Returns true if the description of the task contains the keyword.","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"     * @param keywords Keywords to be checked.","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"     * @return True if the description of the task contains the keyword.","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"    public boolean contains(String ...keywords) {","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"        return Arrays.stream(keywords)","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"                .allMatch(keyword -\u003e description.toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"     * Returns icon representing a task type.","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"     * @return Icon representing a task type.","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"    public abstract LocalDateTime getDateTimePriority();","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"solomonng2001":95}},{"path":"src/main/java/seedu/banter/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.errors.Errors;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.errors.InvalidBanterUsageError;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.errors.InvalidTaskNumberUsageError;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"     * Constructs a new TaskList object.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"     * Adds a Todo task to the TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of the Todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"    public String addNewTodo(String description) {","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        taskList.add(todo);","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"        Assertions.assertTaskIsUnmarked(todo);","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + todo","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"                + \"\\nNow you have \" + taskList.size() + \" banter.tasks in the list.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"     * Loads a Todo task to the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"     * @param isDone Done status of the Todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"    public void loadTodo(String description, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        Todo todo \u003d new Todo(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        taskList.add(todo);","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"     * Adds a Deadline task to the TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"     * @param dueDate Due date of the Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"    public String addNewDeadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"        Deadline deadline \u003d new Deadline(description, dueDate);","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"        taskList.add(deadline);","lastModifiedDate":"2024-01-21"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"        Assertions.assertDateTimeIsInTheFuture(dueDate);","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"        Assertions.assertTaskIsUnmarked(deadline);","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + deadline","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"                + \"\\nNow you have \" + taskList.size() + \" banter.tasks in the list.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"     * Loads a Deadline task to the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"     * @param isDone Done status of the Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"     * @param dueDate Due date of the Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"    public void loadDeadline(String description, boolean isDone, LocalDateTime dueDate) {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"        Deadline deadline \u003d new Deadline(description, isDone, dueDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"        taskList.add(deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"     * Adds an Event task to the TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"     * @param eventDescription Description of the Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"     * @param start Start time of the Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"     * @param end End time of the Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of the Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"    public String addNewEvent(String eventDescription, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"        Event event \u003d new Event(eventDescription, start, end);","lastModifiedDate":"2024-01-21"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"        taskList.add(event);","lastModifiedDate":"2024-01-21"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"        Assertions.assertDateTimeIsInTheFuture(start);","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"        Assertions.assertDateTimeIsInTheFuture(end);","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"        Assertions.assertTaskIsUnmarked(event);","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + event","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"                + \"\\nNow you have \" + taskList.size() + \" banter.tasks in the list.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"     * Loads an Event task to the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"     * @param eventDescription Description of the Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"     * @param isDone Done status of the Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"     * @param start Start time of the Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"     * @param end End time of the Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"    public void loadEvent(String eventDescription, boolean isDone, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"solomonng2001"},"content":"        Event event \u003d new Event(eventDescription, isDone, start, end);","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"        taskList.add(event);","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"     * Returns the string representation of the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"            return Ui.EMPTY_LIST;","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"solomonng2001"},"content":"        this.sortByDateTime();","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"solomonng2001"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the banter.tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"solomonng2001"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-20"},{"lineNumber":118,"author":{"gitId":"solomonng2001"},"content":"            sb.append(\"\\n\").append(i + 1).append(\". \").append(taskList.get(i));","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":120,"author":{"gitId":"solomonng2001"},"content":"        return sb.toString();","lastModifiedDate":"2024-01-20"},{"lineNumber":121,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":122,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":123,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"solomonng2001"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"solomonng2001"},"content":"     * @param taskNumber Number of tasks in the TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of the task marked as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"solomonng2001"},"content":"    public String markTaskAsDone(int taskNumber) throws InvalidBanterUsageError {","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"solomonng2001"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":130,"author":{"gitId":"solomonng2001"},"content":"            return taskList.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2024-01-21"},{"lineNumber":131,"author":{"gitId":"solomonng2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":132,"author":{"gitId":"solomonng2001"},"content":"            throw new InvalidTaskNumberUsageError(Errors.INVALID_TASK_NUMBER, Ui.MARK_USAGE, this);","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":134,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":135,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":136,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"solomonng2001"},"content":"     * Marks a task as undone.","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"solomonng2001"},"content":"     * @param taskNumber Number of tasks in the TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of the task marked as undone.","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"solomonng2001"},"content":"    public String markTaskAsUndone(int taskNumber) throws InvalidBanterUsageError {","lastModifiedDate":"2024-01-22"},{"lineNumber":142,"author":{"gitId":"solomonng2001"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":143,"author":{"gitId":"solomonng2001"},"content":"            return taskList.get(taskNumber - 1).markAsUndone();","lastModifiedDate":"2024-01-21"},{"lineNumber":144,"author":{"gitId":"solomonng2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":145,"author":{"gitId":"solomonng2001"},"content":"            throw new InvalidTaskNumberUsageError(Errors.INVALID_TASK_NUMBER, Ui.UNMARK_USAGE, this);","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":147,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":148,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":149,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"solomonng2001"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"solomonng2001"},"content":"     * @param taskNumber Number of tasks in the TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of the task deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"solomonng2001"},"content":"    public String deleteTask(int taskNumber) throws InvalidBanterUsageError {","lastModifiedDate":"2024-01-22"},{"lineNumber":155,"author":{"gitId":"solomonng2001"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":156,"author":{"gitId":"solomonng2001"},"content":"            Task deleted \u003d taskList.remove(taskNumber - 1);","lastModifiedDate":"2024-01-22"},{"lineNumber":157,"author":{"gitId":"solomonng2001"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\" + deleted","lastModifiedDate":"2024-02-08"},{"lineNumber":158,"author":{"gitId":"solomonng2001"},"content":"                    + \"\\nNow you have \" + taskList.size() + \" banter.tasks in the list.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":159,"author":{"gitId":"solomonng2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":160,"author":{"gitId":"solomonng2001"},"content":"            throw new InvalidTaskNumberUsageError(Errors.INVALID_TASK_NUMBER, Ui.DELETE_USAGE, this);","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":162,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":163,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"solomonng2001"},"content":"     * Returns the iterator of the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"solomonng2001"},"content":"     * @return Iterator of the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"solomonng2001"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"solomonng2001"},"content":"        return taskList.iterator();","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"solomonng2001"},"content":"     * Returns the string representation of the list of tasks in TaskList that contain the keyword.","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"solomonng2001"},"content":"     * @param keyword Keywords to be checked.","lastModifiedDate":"2024-02-21"},{"lineNumber":176,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of the list of tasks in TaskList that contain the keyword.","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":178,"author":{"gitId":"solomonng2001"},"content":"    public String findTasks(String ...keyword) {","lastModifiedDate":"2024-02-09"},{"lineNumber":179,"author":{"gitId":"solomonng2001"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":180,"author":{"gitId":"solomonng2001"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2024-02-15"},{"lineNumber":181,"author":{"gitId":"solomonng2001"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"solomonng2001"},"content":"                result.taskList.add(task);","lastModifiedDate":"2024-02-15"},{"lineNumber":183,"author":{"gitId":"solomonng2001"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"solomonng2001"},"content":"        result.sortByDateTime();","lastModifiedDate":"2024-02-15"},{"lineNumber":186,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":187,"author":{"gitId":"solomonng2001"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-15"},{"lineNumber":188,"author":{"gitId":"solomonng2001"},"content":"        if (result.taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-15"},{"lineNumber":189,"author":{"gitId":"solomonng2001"},"content":"            return \"No matching tasks found.\";","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"solomonng2001"},"content":"        for (int i \u003d 0; i \u003c result.taskList.size(); i++) {","lastModifiedDate":"2024-02-15"},{"lineNumber":192,"author":{"gitId":"solomonng2001"},"content":"            sb.append(\"\\n\").append(i + 1).append(\". \").append(result.taskList.get(i));","lastModifiedDate":"2024-02-21"},{"lineNumber":193,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":194,"author":{"gitId":"solomonng2001"},"content":"        return sb.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":197,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":198,"author":{"gitId":"solomonng2001"},"content":"     * Sorts the TaskList by datetime.","lastModifiedDate":"2024-02-15"},{"lineNumber":199,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":200,"author":{"gitId":"solomonng2001"},"content":"    public void sortByDateTime() {","lastModifiedDate":"2024-02-15"},{"lineNumber":201,"author":{"gitId":"solomonng2001"},"content":"        taskList.sort(Comparator.comparing(Task::getDateTimePriority));","lastModifiedDate":"2024-02-21"},{"lineNumber":202,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":203,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"solomonng2001":203}},{"path":"src/main/java/seedu/banter/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":" * Represents a task of type Todo in a task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":" * A Todo task has a description and a boolean indicating whether it is done.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"    private static final String TODO_ICON \u003d \"T\";","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"     * Constructs a Todo task that should be unmarked.","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"        super(description);","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"        Assertions.assertTaskIsUnmarked(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"     * Constructs a Todo task without restrictions on done status.","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"     * @param isDone The done status of the Todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"     * Returns the icon representing a Todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"     * @return The icon representing a Todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"        return TODO_ICON;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"     * Returns the string representation of a Todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"     * @return The string representation of a Todo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        return \"[\" + getTaskType() + \"]\" + super.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"     * Returns maximum datetime as sorting priority of a Todo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"     * @return Maximum datetime as sorting priority of a Todo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"    public LocalDateTime getDateTimePriority() {","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"        return LocalDateTime.MAX;","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"solomonng2001":60}},{"path":"src/main/java/seedu/banter/ui/Card.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":" * Represents a card that can be printed to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"public class Card {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"    private String message;","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"     * Constructs a new Card object.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"     * @param message The message to be printed on the card.","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    public Card(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"        indentMessageBody();","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"    private void indentMessageBody() {","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"        String[] lines \u003d message.split(\"\\n\");","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"        for (int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"            String bigSpace \u003d \"     \";","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"            lines[i] \u003d bigSpace + lines[i];","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        message \u003d String.join(\"\\n\", lines);","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"     * Prints the card to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"    public void print() {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        String smallSpace \u003d \"    \";","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        System.out.println(smallSpace + line);","lastModifiedDate":"2024-01-20"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-20"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        System.out.println(smallSpace + line);","lastModifiedDate":"2024-01-20"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"     * Returns a string representation of the card.","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of the card.","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"    public String getString() {","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"        return message;","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"solomonng2001":46}},{"path":"src/main/java/seedu/banter/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"    private void flip() {","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"        db.dialog.getStyleClass();","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        return db;","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"    public static DialogBox getBanterDialog(String text, Image img) {","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        db.dialog.getStyleClass();","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        db.flip();","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        return db;","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"solomonng2001":65}},{"path":"src/main/java/seedu/banter/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.Banter;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"    private Banter banter;","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"            \"/images/User.jpeg\")));","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"    private final Image banterImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"            \"/images/Banter.jpeg\")));","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"     * Initializes the main window.","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"        dialogContainer.getChildren().add(DialogBox.getBanterDialog(Ui.GREET_MESSAGE.getString(), banterImage));","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"    public void setBanter(Banter b) {","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        banter \u003d b;","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Banter\u0027s reply and then appends","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"     * them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        String response \u003d banter.getResponse(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"                DialogBox.getBanterDialog(response, banterImage)","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        );","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"solomonng2001":59}},{"path":"src/main/java/seedu/banter/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.enums.CommandType;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import seedu.banter.utilities.DateTime;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":" * Represents the user interface of the application.","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"    public static final String TODO_USAGE \u003d \"todo \u003cdescription\u003e\";","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"    public static final String DEADLINE_USAGE \u003d \"deadline \u003cdescription\u003e /by \u003cdue date (time)\u003e\";","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    public static final String EVENT_USAGE \u003d \"event \u003cdescription\u003e /from \u003cstart date (time)\u003e /to \u003cend date (time)\u003e\";","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    public static final String MARK_USAGE \u003d \"mark \u003ctask number\u003e\";","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    public static final String UNMARK_USAGE \u003d \"unmark \u003ctask number\u003e\";","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"    public static final String DELETE_USAGE \u003d \"delete \u003ctask number\u003e\";","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    public static final String FIND_USAGE \u003d \"find \u003ckeyword(s)\u003e\";","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    public static final String EMPTY_LIST \u003d \"You have not added any tasks yet!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"    public static final String DATE_FORMAT \u003d \"Accepted date time formats: \" + DateTime.getAcceptedDateTimeFormats();","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"    public static final String COMMAND_USAGE \u003d \"This is what Banter can do:\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"            + CommandType.LIST + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"            + MARK_USAGE + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"            + UNMARK_USAGE + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"            + TODO_USAGE + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"            + DEADLINE_USAGE + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"            + EVENT_USAGE + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"            + DELETE_USAGE + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"            + FIND_USAGE + \"\\n\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"            + DATE_FORMAT + \"\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    public static final String GREET_MESSAGE_BODY \u003d \"Hello! I\u0027m Banter\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"            + \"What can I do for you?\\n\\n\" + COMMAND_USAGE;","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"    // Messages","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"    public static final Card GREET_MESSAGE \u003d new Card(GREET_MESSAGE_BODY);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"solomonng2001":36}},{"path":"src/main/java/seedu/banter/utilities/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.utilities;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":" * Represents a date time utility class.","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"public class DateTime {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"    private static final String[] USER_INPUT_FORMATS \u003d {\"d/M/yyyy HHmm\", \"dd/MM/yyyy HHmm\", \"d/M/yyyy\", \"dd/MM/yyyy\"};","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    private static final String USER_DISPLAY_FORMAT \u003d \"dd MMM yyyy HHmm\";","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"     * Parses a string into a LocalDateTime object.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"     * @param str String to be parsed","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"     * @return LocalDateTime object","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"    public static LocalDateTime getDateTimeFromUserInput(String str) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime parsedDateTime \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"        for (String format : USER_INPUT_FORMATS) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"                parsedDateTime \u003d LocalDateTime.parse(str, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"                // TODO: handle exception","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        if (parsedDateTime \u003d\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"            System.out.println(\"Invalid date time format\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        return parsedDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"     * Converts a LocalDateTime object into a string for display to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"     * @param dateTime LocalDateTime object","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of the LocalDateTime object","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"    public static String displayDateTimeToUser(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(USER_DISPLAY_FORMAT);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"     * Returns the string representation of accepted date time formats for user input.","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"     * @return String representation of accepted date time formats for user input.","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"    public static String getAcceptedDateTimeFormats() {","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        StringBuilder acceptedFormats \u003d new StringBuilder();","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"        for (String format : USER_INPUT_FORMATS) {","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"            if (acceptedFormats.length() \u003e 0) {","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"                acceptedFormats.append(\", \");","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"            acceptedFormats.append(format);","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        return acceptedFormats.toString();","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"solomonng2001":63}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"\u003cfx:root alignment\u003d\"TOP_LEFT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003c!-- @@author solomonng2001-reused","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Reused from https://github.com/ziqing26/ip/blob/master/src/main/java/catobot/BotDialogBox.java","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        with minor modifications --\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \u003cclip\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                \u003cCircle radius\u003d\"30.0\" centerX\u003d\"30.0\" centerY\u003d\"30.0\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cRegion\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003c/Region\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" styleClass\u003d\"label-background\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c!-- @@author --\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"solomonng2001":16,"-":15}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.banter.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"solomonng2001":19}},{"path":"src/test/java/seedu/banter/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.tasks;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    void deadlineInitialization() {","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"        Deadline deadline \u003d new Deadline(\"Assignment\", by);","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(\"Assignment\", deadline.getDescription(),","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"                \"Description should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(deadline.isDone(), \"Deadline should be initialized as undone\");","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(by, deadline.getDueDateTime(), \"Due time should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"    void deadlineInitializationWithDoneStatus() {","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"        Deadline deadline \u003d new Deadline(\"Assignment\", true, by);","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(\"Assignment\", deadline.getDescription(),","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"                \"Description should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(deadline.isDone(), \"Deadline should be initialized as done\");","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(by, deadline.getDueDateTime(), \"Due time should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"    void deadlineInitializationWithUndoneStatus() {","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"        Deadline deadline \u003d new Deadline(\"Assignment\", false, by);","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(\"Assignment\", deadline.getDescription(),","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"                \"Description should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(deadline.isDone(), \"Deadline should be initialized as undone\");","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(by, deadline.getDueDateTime(), \"Due time should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"    void deadlineToString() {","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        Deadline deadline \u003d new Deadline(\"Assignment\", false, by);","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"        String expected \u003d \"[D][ ] Assignment (by: 30 Jan 2100 1000)\";","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        String result \u003d deadline.toString();","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(expected, result, \"toString() should return the expected string representation\");","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"    void deadlineToStringWithDoneStatus() {","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"        Deadline deadline \u003d new Deadline(\"Assignment\", true, by);","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        String expected \u003d \"[D][X] Assignment (by: 30 Jan 2100 1000)\";","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        String result \u003d deadline.toString();","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(expected, result, \"toString() should return the expected string representation\");","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"    void deadlineToStringWithUndoneStatus() {","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"        Deadline deadline \u003d new Deadline(\"Assignment\", false, by);","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"        String expected \u003d \"[D][ ] Assignment (by: 30 Jan 2100 1000)\";","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"        String result \u003d deadline.toString();","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(expected, result, \"toString() should return the expected string representation\");","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"    void deadlineGetTaskType() {","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"        Deadline deadline \u003d new Deadline(\"Assignment\",","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"                LocalDateTime.of(2100, 1, 30, 10, 0));","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"        String result \u003d deadline.getTaskType();","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(\"D\", result, \"getTaskType() should return the expected icon\");","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"    void deadlineGetDueDateTime() {","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"        Deadline deadline \u003d new Deadline(\"Assignment\", by);","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime result \u003d deadline.getDueDateTime();","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(by, result, \"getDueDateTime() should return the expected due date\");","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"    void deadlineGetDateTimePriority() {","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime by \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"        Deadline deadline \u003d new Deadline(\"Assignment\", by);","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime result \u003d deadline.getDateTimePriority();","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(by, result, \"getDateTimePriority() should return the expected due date\");","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"solomonng2001":108}},{"path":"src/test/java/seedu/banter/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"class EventTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    void eventInitialization() {","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2100, 1, 30, 12, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"        Event event \u003d new Event(\"Meeting\", from, to);","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(\"Meeting\", event.getDescription(),","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"                \"Description should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(event.isDone(), \"Event should be initialized as undone\");","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(from, event.getStartDateTime(), \"Start time should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(to, event.getEndDateTime(), \"End time should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"    void eventInitializationWithDoneStatus() {","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2100, 1, 30, 12, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"        Event event \u003d new Event(\"Meeting\", true, from, to);","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(\"Meeting\", event.getDescription(),","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"                \"Description should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(event.isDone(), \"Event should be initialized as done\");","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(from, event.getStartDateTime(), \"Start time should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(to, event.getEndDateTime(), \"End time should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"    void eventInitializationWithUndoneStatus() {","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2100, 1, 30, 12, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        Event event \u003d new Event(\"Meeting\", false, from, to);","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(\"Meeting\", event.getDescription(),","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"                \"Description should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(event.isDone(), \"Event should be initialized as undone\");","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(from, event.getStartDateTime(), \"Start time should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(to, event.getEndDateTime(), \"End time should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"    void eventToString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2100, 1, 30, 12, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        Event event \u003d new Event(\"Meeting\", false, from, to);","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"        String expected \u003d \"[E][ ] Meeting (from: 30 Jan 2100 1000 to: 30 Jan 2100 1200)\";","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"        String result \u003d event.toString();","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(expected, result, \"toString() should return the expected string representation\");","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"    void eventToStringWithDoneStatus() {","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2100, 1, 30, 12, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"        Event event \u003d new Event(\"Meeting\", true, from, to);","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        String expected \u003d \"[E][X] Meeting (from: 30 Jan 2100 1000 to: 30 Jan 2100 1200)\";","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"        String result \u003d event.toString();","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(expected, result, \"toString() should return the expected string representation\");","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"    void eventToStringWithUndoneStatus() {","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2100, 1, 30, 12, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"        Event event \u003d new Event(\"Meeting\", false, from, to);","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"        String expected \u003d \"[E][ ] Meeting (from: 30 Jan 2100 1000 to: 30 Jan 2100 1200)\";","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"        String result \u003d event.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(expected, result, \"toString() should return the expected string representation\");","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"    void eventGetTaskType() {","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"        Event event \u003d new Event(\"Meeting\", false, LocalDateTime.now(), LocalDateTime.now());","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"        String result \u003d event.getTaskType();","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(\"E\", result, \"getTaskType() should return the expected task type\");","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"    void eventGetStartTime() {","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2100, 1, 30, 12, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"solomonng2001"},"content":"        Event event \u003d new Event(\"Meeting\", false, from, to);","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime result \u003d event.getStartDateTime();","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(from, result, \"getStartDateTime() should return the expected start time\");","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"    void eventGetEndTime() {","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2100, 1, 30, 12, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"        Event event \u003d new Event(\"Meeting\", false, from, to);","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime result \u003d event.getEndDateTime();","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(to, result, \"getEndDateTime() should return the expected end time\");","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":120,"author":{"gitId":"solomonng2001"},"content":"    void eventGetDateTimePriority() {","lastModifiedDate":"2024-02-21"},{"lineNumber":121,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2100, 1, 30, 10, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":122,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2100, 1, 30, 12, 0);","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"solomonng2001"},"content":"        Event event \u003d new Event(\"Meeting\", false, from, to);","lastModifiedDate":"2024-02-21"},{"lineNumber":124,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":125,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime result \u003d event.getDateTimePriority();","lastModifiedDate":"2024-02-21"},{"lineNumber":126,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":127,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(from, result, \"getDateTimePriority() should return the expected start time\");","lastModifiedDate":"2024-02-21"},{"lineNumber":128,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"solomonng2001":129}},{"path":"src/test/java/seedu/banter/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.banter.tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    void todoInitialization() {","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"        String description \u003d \"Buy groceries\";","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(description, todo.getDescription(), \"Description should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(todo.isDone(), \"Todo should be initialized as undone\");","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"    void todoInitializationWithDoneStatus() {","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"        String description \u003d \"Read a book\";","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        Todo todo \u003d new Todo(description, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(description, todo.getDescription(), \"Description should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(todo.isDone(), \"Todo should be initialized as done\");","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"    void todoInitializationWithUndoneStatus() {","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        String description \u003d \"Read a book\";","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        Todo todo \u003d new Todo(description, false);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(description, todo.getDescription(), \"Description should be initialized correctly\");","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(todo.isDone(), \"Todo should be initialized as undone\");","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"    void todoToString() {","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        String description \u003d \"Clean the house\";","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(\"[T][ ] \" + description, todo.toString(),","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"                \"toString() should return the expected string representation\");","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"    void todoToStringWithDoneStatus() {","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"        String description \u003d \"Write code\";","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        Todo todo \u003d new Todo(description, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(\"[T][X] \" + description, todo.toString(),","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"                \"toString() should return the expected string representation\");","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"    void todoToStringWithUndoneStatus() {","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"        String description \u003d \"Write code\";","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        Todo todo \u003d new Todo(description, false);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(\"[T][ ] \" + description, todo.toString(),","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"                \"toString() should return the expected string representation\");","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"    void todoGetTaskType() {","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"        Todo todo \u003d new Todo(\"Walk the dog\");","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(\"T\", todo.getTaskType(), \"getTaskType() should return the expected task type\");","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"    void todoGetDateTimePriority() {","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        Todo todo \u003d new Todo(\"Walk the dog\");","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(LocalDateTime.MAX, todo.getDateTimePriority(),","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"                \"getDateTimePriority() should return the expected datetime priority\");","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"solomonng2001":81}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"blah","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"todo read book","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"deadline submit project /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"event lecture /from Mon 4pm /to 6pm","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"mark 5","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"mark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"mark 6","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"unmark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"unmark 6","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"delete 1","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"delete 5","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"delete 2","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"mark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"delete -1","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"unmark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"deadline","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"deadline /by","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"deadline /by Monday","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"deadline submit application /by","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"event","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"event /to","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"event /from","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"event /to Monday 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"event /from Monday 2pm","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"event /from /to","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"event /from /to Monday 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"event /from Monday 2pm /to","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"event project meeting","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"event project meeting /from","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"event project meeting /to","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"event project meeting /from Monday 2pm /to","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"event project meeting /from /to Monday 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"event project meeting /from /to","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"event project meeting /from Monday 2pm","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"event project meeting /to Monday 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"solomonng2001":50}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"REM run the program, feed banter.enums from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"java -classpath ..\\bin banter.Banter \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"solomonng2001":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"solomonng2001":1,"-":37}}]
