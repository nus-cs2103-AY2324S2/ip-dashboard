[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"    archiveBaseName \u003d \"RyanGosling\"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"run {","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"-":42,"UdhayaShan1":27}},{"path":"data/task_lists.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"T | 0 | djsjdfsdfs | NA | NA | NA | NA","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"D | 0 | wdwada | 2025-01-04 | 1231 | NA | NA","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"E | 0 | moggerfk | 2024-05-05 | 0900 | 2022-01-02 | 0110","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"UdhayaShan1":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"import java_fx.Main;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"public class Launcher {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"UdhayaShan1":11}},{"path":"src/main/java/commands/CommandsEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package commands;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"public enum CommandsEnum {","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"    bye, list, mark, unmark, todo, deadline, event, delete, find, help,","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"    update;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"    public static String getAllCommands() {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"        StringBuilder commandsString \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"        commandsString.append(\"Possible commands are: \\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"        for (CommandsEnum command : values()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"            commandsString.append(command.name().toLowerCase()).append(\", \");","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"        // Remove the trailing \", \" from the string","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"        if (commandsString.length() \u003e 0) {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"            commandsString.setLength(commandsString.length() - 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"        return commandsString.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"UdhayaShan1":24}},{"path":"src/main/java/commands/CommandsParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package commands;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import exceptions.RyanGoslingException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Events;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.ResponseHandler;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"public class CommandsParser {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"    //Manages the encapsulated list of tasks","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    private TaskList taskListManager;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    private String filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    //Handles the loading and saving of tasks to text file","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"    private Storage taskLoader;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    public CommandsParser(TaskList taskListManager, String filePath, Storage taskLoader) {","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskListManager \u003d taskListManager;","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskLoader \u003d taskLoader;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"    public String parseCommands(String taskInputByUser) throws RyanGoslingException {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"        String[] commandSplit \u003d taskInputByUser.split(\" \");","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"        switch (taskInputByUser) {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"            return ResponseHandler.bye();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"        case \"list\":","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"            return taskListManager.printList();","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"        default:","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"        //Items are 0-indexed, unless otherwise stated.","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"        if (commandSplit[0].equals(String.valueOf(CommandsEnum.mark))","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"                || commandSplit[0].equals(String.valueOf(CommandsEnum.unmark))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"                String responseReturn \u003d taskListManager.changeStatusOfItem(commandSplit[0],","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"                                                                           Integer.parseInt(commandSplit[1]) - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"                taskListManager.writeToFile(taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"                return responseReturn;","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Wrong format! (un)mark \u003cnumber\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (commandSplit[0].equals(String.valueOf(CommandsEnum.todo))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"            return PatternParser.todoParser(taskInputByUser,","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"                                            taskListManager, taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (commandSplit[0].equals(String.valueOf(CommandsEnum.deadline))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"            return PatternParser.deadlineParser(taskInputByUser,","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"                                                taskListManager, taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (commandSplit[0].equals(String.valueOf(CommandsEnum.event))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"            return PatternParser.eventParser(taskInputByUser,","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"                                             taskListManager, taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (commandSplit[0].equals(String.valueOf(CommandsEnum.delete))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"            String responseReturn \u003d taskListManager.removeIndex(Integer.parseInt(commandSplit[1]) - 1);","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"            taskListManager.writeToFile(taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"            return responseReturn;","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (commandSplit[0].equals(String.valueOf(CommandsEnum.find))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"            return PatternParser.findParser(taskInputByUser,","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"                                            taskListManager);","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (commandSplit[0].equals(String.valueOf(CommandsEnum.help))) {","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"            return CommandsEnum.getAllCommands();","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (commandSplit[0].equals(String.valueOf(CommandsEnum.update))) {","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"            String responseReturn \u003d PatternParser.updateTaskParser(taskListManager, taskInputByUser, taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"            taskListManager.writeToFile(taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"            return responseReturn;","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"        else {","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"            throw new RyanGoslingException(\"I am artificially intelligent but not in a smart way. \\nTry a valid \"","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"                                                   + \"command! or check them out by typing help\");","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":77}},{"path":"src/main/java/commands/CommandsParserStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package commands;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import exceptions.RyanGoslingException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.ResponseHandler;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"public class CommandsParserStub {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"    public int parseCommandsOriginal(String task) throws RyanGoslingException {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"        String[] taskSplit \u003d task.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"        if (task.equals(String.valueOf(CommandsEnum.bye))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"            ResponseHandler.bye();","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"            return 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (task.equals(String.valueOf(CommandsEnum.list))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.printList();","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.mark))","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"                || taskSplit[0].equals(String.valueOf(CommandsEnum.unmark))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"            //All items to be 0-index referenced other than user input.","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.changeStatusOfItem(taskSplit[0], Integer.parseInt(taskSplit[1])-1);","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.todo))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"            //Idea from chatGPT","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"todo (.*?)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.add(new Todo(matcher.group(1)));","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"                System.out.println(\"task\");","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete todo command, todo \u003cevent\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.deadline))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"deadline (.*?) /by (.*?)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.add(new Deadline(matcher.group(1), matcher.group(2)));","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"                System.out.println(\"task\");","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete deadline command, \"","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"                        + \"deadline \u003cevent\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.event))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"            //System.out.println(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"event (.*?) /from (.*?) /to (.*?)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"                // Retrieve matched groups","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"                //System.out.println(matcher.group(3));","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.add(new Events(matcher.group(1), matcher.group(2), matcher.group(3)));","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"                //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"                System.out.println(\"task\");","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete event command, \"","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"                        + \"event \u003cevent\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.delete))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.removeIndex(Integer.parseInt(taskSplit[1])-1);","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"            //taskList.writeToFile(taskLoader);","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"            throw new RyanGoslingException(\"I was created in a few hours so \"","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"                    + \"I don\u0027t know what that means :(\");","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"        return 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"    public String parseCommandsReturnString(String task) throws RyanGoslingException {","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"        assert task !\u003d null : \"Task should never be null!\";","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"        //We only have tests for tasks that return a string to be printed.","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"        assert !(task.equals(\"list\")","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"                         || task.equals(\"mark\")","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"                         || task.equals(\"unmark\")","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"                         || task.equals(\"delete\"))","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"                : \"Task input for stub should not be, there is no test for this!\" + task;","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"        String[] taskSplit \u003d task.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"        if (task.equals(String.valueOf(CommandsEnum.bye))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"            return \"1\";","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.todo))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"todo (.*?)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"                return task;","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete todo command, todo \u003cevent\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.deadline))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"deadline (.*?) /by (.*?)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"                return task;","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete deadline command, \"","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"                        + \"deadline \u003cevent\u003e /by \u003ctime\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"        } else if (taskSplit[0].equals(String.valueOf(CommandsEnum.event))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"            Pattern pattern \u003d Pattern.compile(\"event (.*?) /from (.*?) /to (.*?)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"            Matcher matcher \u003d pattern.matcher(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"UdhayaShan1"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"                return task;","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(\"Incomplete event command, \"","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"                        + \"event \u003cevent\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"            throw new RyanGoslingException(\"I was created in a few hours so \"","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"                    + \"I don\u0027t know what that means :(\");","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"UdhayaShan1"},"content":"    public static void main(String[] args) throws RyanGoslingException {","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(new CommandsParserStub().parseCommandsReturnString(\"todo\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"UdhayaShan1":116}},{"path":"src/main/java/commands/PatternParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package commands;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import exceptions.RyanGoslingException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Events;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Todo;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":" * The PatternParser class provides static methods for parsing different types of task commands using regular expressions.","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":" * It includes methods for parsing \"todo,\" \"deadline,\" \"event,\" and \"find\" commands, as well as a utility method for adding tasks","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":" * to a list from a formatted string.","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"public class PatternParser {","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    private static final Pattern todoPattern \u003d Pattern.compile(\"todo (.*?)\");","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    private static final Pattern deadlinePattern \u003d Pattern.compile(\"deadline (.*?) /by (.*?) (.*?)\");","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    private static final Pattern eventPattern \u003d Pattern.compile(\"event (.*?) /from (.*?) (.*?) /to (.*?) (.*?)\");","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"    private static final Pattern findPattern \u003d Pattern.compile(\"event (.*?) /from (.*?) (.*?) /to (.*?) (.*?)\");","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String fileInputPattern \u003d \"^\\\\s*(\\\\w+)\\\\s*\\\\|\\\\s*(\\\\d+)\\\\s*\\\\|\\\\s*(\\\\S+)\\\\s*\\\\|\\\\s*\"","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"            + \"(\\\\S+)\\\\s*\"","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"            + \"\\\\|\\\\s*(\\\\S+)\\\\s*\\\\|\\\\\"","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"            + \"s*(\\\\S+)\\\\s*\\\\|\\\\s*(\\\\S+)\\\\s*$\";","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    private static final String updatePattern \u003d \"^update\\\\s+(\\\\d+)\\\\s+(\\\\S+)\\\\s+(\\\\d{4}-\\\\d{2}-\\\\d{2}|NA)\\\\s+(\\\\d{4}-\\\\d{2}-\"","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"            + \"\\\\d{2}|NA)\\\\s+(\\\\d{4}|NA)\\\\s+(\\\\d{4}|NA)$\";","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a \"todo\" command and adds the corresponding task to the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskToParse    The input string containing the \"todo\" command.","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskListManager The TaskList instance managing the list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskLoader     The Storage instance responsible for loading and saving tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A response message indicating the success or failure of the parsing operation.","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws RyanGoslingException If the input string does not match the expected \"todo\" pattern.","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"    public static String todoParser(String taskToParse, TaskList taskListManager, Storage taskLoader) throws RyanGoslingException {","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"        Matcher matcher \u003d todoPattern.matcher(taskToParse);","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"            throw new RyanGoslingException(\"Incomplete todo command, todo \u003cevent\u003e\");","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"        String responseReturn \u003d taskListManager.add(new Todo(matcher.group(1)));","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"        taskListManager.writeToFile(taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"        return responseReturn;","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a \"deadline\" command and adds the corresponding task to the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskToParse    The input string containing the \"deadline\" command.","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskListManager The TaskList instance managing the list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskLoader     The Storage instance responsible for loading and saving tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A response message indicating the success or failure of the parsing operation.","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws RyanGoslingException If the input string does not match the expected \"deadline\" pattern.","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"    public static String deadlineParser(String taskToParse, TaskList taskListManager, Storage taskLoader) throws RyanGoslingException {","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"        Matcher matcher \u003d deadlinePattern.matcher(taskToParse);","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"            throw new RyanGoslingException(\"Incomplete deadline command, \" + \"deadline \u003cevent\u003e /by \u003cdate\u003e \u003ctime\u003e \"","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"                                                   + \"\\n If no specific time, leave time as 2359\");","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"        String responseReturn \u003d taskListManager.add(new Deadline(matcher.group(1), matcher.group(2),","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"                                                                 matcher.group(3)));","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"        taskListManager.writeToFile(taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"        return responseReturn;","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses an \"event\" command and adds the corresponding task to the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskToParse    The input string containing the \"event\" command.","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskListManager The TaskList instance managing the list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskLoader     The Storage instance responsible for loading and saving tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A response message indicating the success or failure of the parsing operation.","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws RyanGoslingException If the input string does not match the expected \"event\" pattern.","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"    public static String eventParser(String taskToParse, TaskList taskListManager, Storage taskLoader) throws RyanGoslingException {","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"        Matcher matcher \u003d eventPattern.matcher(taskToParse);","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"            throw new RyanGoslingException(\"Incomplete event command, \"","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"                                                   + \"event \u003cevent\u003e /from \u003cdate\u003e \u003ctime\u003e /to \u003cdate\u003e \u003ctime\u003e\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"                                                   + \"If no time, leave time as 2359\");","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"        String responseReturn \u003d taskListManager.add(new Events(matcher.group(1), matcher.group(2), matcher.group(3),","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"                                                               matcher.group(4), matcher.group(5)));","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"        taskListManager.writeToFile(taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"        return responseReturn;","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a \"find\" command and searches for tasks containing the specified keyword.","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskToParse    The input string containing the \"find\" command.","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskListManager The TaskList instance managing the list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A response message containing the tasks matching the specified keyword.","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws RyanGoslingException If the input string does not match the expected \"find\" pattern.","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"    public static String findParser(String taskToParse, TaskList taskListManager) throws RyanGoslingException {","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"        Matcher matcher \u003d findPattern.matcher(taskToParse);","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"            return taskListManager.findTasks(matcher.group(1));","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"            throw new RyanGoslingException(\"Incomplete find command! find \u003ctask_word\u003e\");","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"     * Utility method to add a task to the list based on the formatted input line.","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"     * @param listOfTasks The list of tasks to which the task will be added.","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"UdhayaShan1"},"content":"     * @param inputLine   The formatted input line containing task details.","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws RyanGoslingException If the input line does not match the expected format.","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"UdhayaShan1"},"content":"    public static void addTasktoList(ArrayList\u003cTask\u003e listOfTasks, String inputLine) throws RyanGoslingException {","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"UdhayaShan1"},"content":"        Pattern regex \u003d Pattern.compile(fileInputPattern);","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"UdhayaShan1"},"content":"        Matcher matcher \u003d regex.matcher(inputLine);","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"UdhayaShan1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"UdhayaShan1"},"content":"            throw new RyanGoslingException(\"Task lists stored in hard drive is not in expected format!\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"UdhayaShan1"},"content":"                                                   + \"It should follow (T/E/D) | (0/1) | Description | dateFrom | \"","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"UdhayaShan1"},"content":"                                                   + \"timeFrom \"","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"UdhayaShan1"},"content":"                                                   + \"| dateTo | timeTo\");","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":130,"author":{"gitId":"UdhayaShan1"},"content":"        String typeOfTask \u003d matcher.group(1);","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"UdhayaShan1"},"content":"        int isTaskDone \u003d Integer.parseInt(matcher.group(2));","lastModifiedDate":"2024-02-10"},{"lineNumber":132,"author":{"gitId":"UdhayaShan1"},"content":"        String taskDescription \u003d matcher.group(3);","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"UdhayaShan1"},"content":"        String dateFrom \u003d matcher.group(4);","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"UdhayaShan1"},"content":"        String timeFrom \u003d matcher.group(5);","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"UdhayaShan1"},"content":"        String dateTo \u003d matcher.group(6);","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"UdhayaShan1"},"content":"        String timeTo \u003d matcher.group(7);","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"UdhayaShan1"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"UdhayaShan1"},"content":"        case \"T\":","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"UdhayaShan1"},"content":"            listOfTasks.add(new Todo(taskDescription, isTaskDone));","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"UdhayaShan1"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"UdhayaShan1"},"content":"        case \"D\":","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"UdhayaShan1"},"content":"            listOfTasks.add(new Deadline(taskDescription, dateFrom, timeFrom, isTaskDone));","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"UdhayaShan1"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":144,"author":{"gitId":"UdhayaShan1"},"content":"        case \"E\":","lastModifiedDate":"2024-02-10"},{"lineNumber":145,"author":{"gitId":"UdhayaShan1"},"content":"            listOfTasks.add(new Events(taskDescription, dateFrom, timeFrom, dateTo, timeTo, isTaskDone));","lastModifiedDate":"2024-02-10"},{"lineNumber":146,"author":{"gitId":"UdhayaShan1"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":147,"author":{"gitId":"UdhayaShan1"},"content":"        default:","lastModifiedDate":"2024-02-10"},{"lineNumber":148,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":149,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":150,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":151,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":152,"author":{"gitId":"UdhayaShan1"},"content":"    public static String updateTaskParser(TaskList taskListManager, String inputLine, Storage taskLoader) throws RyanGoslingException {","lastModifiedDate":"2024-02-10"},{"lineNumber":153,"author":{"gitId":"UdhayaShan1"},"content":"        Pattern pattern \u003d Pattern.compile(updatePattern);","lastModifiedDate":"2024-02-10"},{"lineNumber":154,"author":{"gitId":"UdhayaShan1"},"content":"        Matcher matcher \u003d pattern.matcher(inputLine);","lastModifiedDate":"2024-02-10"},{"lineNumber":155,"author":{"gitId":"UdhayaShan1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":156,"author":{"gitId":"UdhayaShan1"},"content":"            throw new RyanGoslingException(\"Invalid update command!\\n update \u003cindex\u003e \u003cnew_name\u003e \u003cdateFrom\u003e \u003cdateTo\u003e \"","lastModifiedDate":"2024-02-10"},{"lineNumber":157,"author":{"gitId":"UdhayaShan1"},"content":"                                                   + \"\u003ctimeFrom\u003e \u003ctimeTo\u003e\\nIrrelevant fields can be input as NA\");","lastModifiedDate":"2024-02-10"},{"lineNumber":158,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":159,"author":{"gitId":"UdhayaShan1"},"content":"        String indexNumber \u003d matcher.group(1);","lastModifiedDate":"2024-02-10"},{"lineNumber":160,"author":{"gitId":"UdhayaShan1"},"content":"        String newTaskName \u003d matcher.group(2);","lastModifiedDate":"2024-02-10"},{"lineNumber":161,"author":{"gitId":"UdhayaShan1"},"content":"        String dateFrom \u003d handleNA(matcher.group(3));","lastModifiedDate":"2024-02-10"},{"lineNumber":162,"author":{"gitId":"UdhayaShan1"},"content":"        String dateTo \u003d handleNA(matcher.group(4));","lastModifiedDate":"2024-02-10"},{"lineNumber":163,"author":{"gitId":"UdhayaShan1"},"content":"        String timeFrom \u003d handleNA(matcher.group(5));","lastModifiedDate":"2024-02-10"},{"lineNumber":164,"author":{"gitId":"UdhayaShan1"},"content":"        String timeTo \u003d handleNA(matcher.group(6));","lastModifiedDate":"2024-02-10"},{"lineNumber":165,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":166,"author":{"gitId":"UdhayaShan1"},"content":"        StringBuilder responseReturn \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":167,"author":{"gitId":"UdhayaShan1"},"content":"        int indexOfTask \u003d Integer.parseInt(indexNumber)-1;","lastModifiedDate":"2024-02-10"},{"lineNumber":168,"author":{"gitId":"UdhayaShan1"},"content":"        if (!taskListManager.validateIndex(indexOfTask)) {","lastModifiedDate":"2024-02-10"},{"lineNumber":169,"author":{"gitId":"UdhayaShan1"},"content":"            throw new RyanGoslingException(\"Invalid range of index!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":170,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":171,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":172,"author":{"gitId":"UdhayaShan1"},"content":"        if (!newTaskName.equals(\"NA\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":173,"author":{"gitId":"UdhayaShan1"},"content":"            taskListManager.updateNameOfTask(indexOfTask, newTaskName, taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":174,"author":{"gitId":"UdhayaShan1"},"content":"            responseReturn.append(\"Successfully updated task name to \\n\").append(newTaskName);","lastModifiedDate":"2024-02-10"},{"lineNumber":175,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":176,"author":{"gitId":"UdhayaShan1"},"content":"        String taskType \u003d taskListManager.getTaskType(indexOfTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":177,"author":{"gitId":"UdhayaShan1"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-10"},{"lineNumber":178,"author":{"gitId":"UdhayaShan1"},"content":"        case \"T\":","lastModifiedDate":"2024-02-10"},{"lineNumber":179,"author":{"gitId":"UdhayaShan1"},"content":"            boolean doesTodoHaveInvalidDateTimeInput \u003d !(dateFrom.equals(\"NA\") \u0026\u0026 dateTo.equals(\"NA\")","lastModifiedDate":"2024-02-10"},{"lineNumber":180,"author":{"gitId":"UdhayaShan1"},"content":"                                  \u0026\u0026 timeFrom.equals(\"NA\") \u0026\u0026 timeTo.equals(\"NA\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":181,"author":{"gitId":"UdhayaShan1"},"content":"            if (doesTodoHaveInvalidDateTimeInput) {","lastModifiedDate":"2024-02-10"},{"lineNumber":182,"author":{"gitId":"UdhayaShan1"},"content":"                throw new RyanGoslingException(responseReturn + \"\\nTodo cannot have any non NA time/date fields!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":183,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":184,"author":{"gitId":"UdhayaShan1"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":185,"author":{"gitId":"UdhayaShan1"},"content":"        case \"D\":","lastModifiedDate":"2024-02-10"},{"lineNumber":186,"author":{"gitId":"UdhayaShan1"},"content":"            taskListManager.updateDatesOfTask(indexOfTask, new String[]{dateFrom, \"NA\"}, taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":187,"author":{"gitId":"UdhayaShan1"},"content":"            taskListManager.updateTimesOfTask(indexOfTask, new String[]{timeFrom, \"NA\"}, taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":188,"author":{"gitId":"UdhayaShan1"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":189,"author":{"gitId":"UdhayaShan1"},"content":"        case \"E\":","lastModifiedDate":"2024-02-10"},{"lineNumber":190,"author":{"gitId":"UdhayaShan1"},"content":"            taskListManager.updateDatesOfTask(indexOfTask, new String[] {dateFrom, dateTo}, taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":191,"author":{"gitId":"UdhayaShan1"},"content":"            taskListManager.updateTimesOfTask(indexOfTask, new String[] {timeFrom, timeTo}, taskLoader);","lastModifiedDate":"2024-02-10"},{"lineNumber":192,"author":{"gitId":"UdhayaShan1"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":193,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":194,"author":{"gitId":"UdhayaShan1"},"content":"        responseReturn.append(\"\\nUpdated all fields (if any were input) successfully!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":195,"author":{"gitId":"UdhayaShan1"},"content":"        return responseReturn.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":196,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":197,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":198,"author":{"gitId":"UdhayaShan1"},"content":"    // Helper method to handle \"NA\", with help from ChatGPT","lastModifiedDate":"2024-02-10"},{"lineNumber":199,"author":{"gitId":"UdhayaShan1"},"content":"    private static String handleNA(String value) {","lastModifiedDate":"2024-02-10"},{"lineNumber":200,"author":{"gitId":"UdhayaShan1"},"content":"        return (value \u003d\u003d null) ? \"NA\" : value;","lastModifiedDate":"2024-02-10"},{"lineNumber":201,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":202,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":203,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":204,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":205,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":206,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":207,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"UdhayaShan1":207}},{"path":"src/main/java/datesandtimes/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package datesandtimes;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":" * A utility class for parsing and formatting dates and times.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"public class DateTimeParser {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a {@link LocalDate} into a formatted date string.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"     * @param date The LocalDate to be parsed.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A formatted date string in the \"MMM d yyyy\" format.","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    public static String parseDate(LocalDate date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a time string into a formatted time string.","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"     * @param timeString The time string to be parsed.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A formatted time string in the \"h:mm a\" format.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws DateTimeParseException If the time string cannot be parsed.","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    public static String parseTime(LocalTime timeString) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"        assert timeString !\u003d null : \"LocalTime object should not be null!\";","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"        return timeString.format(formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses a time string into a {@link LocalTime} object.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"     * @param timeString The time string to be parsed.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The parsed LocalTime object.","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws DateTimeParseException If the time string cannot be parsed.","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"    public static LocalTime parseTimeAsLocalTime(String timeString) {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"        assert timeString !\u003d null : \"String timeString should not be null!\";","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"        return LocalTime.parse(timeString, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"     * Main method for testing the parseDate method.","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"        // Example usage of parseDate","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println((LocalDate.parse(\"2023-02-23\")));","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"        System.out.println(parseTimeAsLocalTime(\"09:00\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"UdhayaShan1":59}},{"path":"src/main/java/exceptions/RyanGoslingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package exceptions;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"public class RyanGoslingException extends Exception {","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"    public RyanGoslingException(String message) {","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"        super(message);","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":8}},{"path":"src/main/java/java_fx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package java_fx;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.effect.DropShadow;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"    private DialogBox(String text, Image img, boolean isUser) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"        this.setSpacing(10);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"        this.dialog.setFont(Font.font(\"Comic Sans MS\", 15));","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"        Background bg \u003d isUser","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"                ? new Background(new BackgroundFill(Color.LIGHTBLUE, CornerRadii.EMPTY, Insets.EMPTY))","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"                : new Background(new BackgroundFill(Color.LIGHTGREEN, CornerRadii.EMPTY, Insets.EMPTY));","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"        this.setBackground(bg);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"        // Change text color based on user or duke","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"        // Add drop shadow effect","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"        if (!isUser) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"            DropShadow dropShadow \u003d new DropShadow();","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"            dropShadow.setColor(Color.GOLD);","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"            dropShadow.setRadius(3.0);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"            dropShadow.setOffsetX(2.0);","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"            dropShadow.setOffsetY(2.0);","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"            dialog.setEffect(dropShadow);","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"    private void flip() {","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"        return new DialogBox(text, img, true);","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"        var db \u003d new DialogBox(text, img, false);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"        db.flip();","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"        return db;","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"UdhayaShan1":87}},{"path":"src/main/java/java_fx/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package java_fx;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import main.RyanGosling;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    private RyanGosling ryanGosling \u003d new RyanGosling();","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"            stage.setTitle(\"RyanGosling Bot\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setRyanGosling(ryanGosling);","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"            stage.show();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"UdhayaShan1":33}},{"path":"src/main/java/java_fx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package java_fx;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import main.RyanGosling;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.ResponseHandler;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"    private RyanGosling ryanGosling;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/AlPacinoUser.png\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    private final Image ryanGoslingImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/RyanGoslingBot.png\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(ResponseHandler.greeting(\"Ryan Gosling\"),","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"                                                                  ryanGoslingImage));","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"    public void setRyanGosling(RyanGosling ryanGosling) {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"        this.ryanGosling \u003d ryanGosling;","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"        String response \u003d ryanGosling.getResponse(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"                DialogBox.getDukeDialog(response, ryanGoslingImage)","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"                                            );","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"UdhayaShan1":57}},{"path":"src/main/java/main/RyanGosling.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package main;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import exceptions.RyanGoslingException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.ResponseHandler;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.Ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"public class RyanGosling {","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"    Ui botDispatcher;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"    public static String chatBotName \u003d \"RyanGosling\";","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"    public RyanGosling() {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"        botDispatcher \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"        assert botDispatcher !\u003d null : \"Dispatcher object should not be null!\";","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"        botDispatcher.oneTimeLoadAllTasks();","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"        return botDispatcher.performTaskFromSingleUserInput(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":23}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import datesandtimes.DateTimeParser;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":" * Represents a task with a deadline, extending the base Task class.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"    private LocalDate dateBy;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"    private LocalTime timeBy;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"     * Constructs a Deadline task with the specified task name, deadline date, and time.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"     * @param deadline The deadline date of the task in the \"yyyy-MM-dd\" format.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"     * @param time     The deadline time of the task in the \"HHmm\" format.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    public Deadline(String taskName, String deadline, String time) {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"        super(taskName, \"D\");","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"        this.dateBy \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"        this.timeBy \u003d DateTimeParser.parseTimeAsLocalTime(time);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"        setTime(new String[]{time, \"NA\"});","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"        setDate(new String[]{deadline, \"NA\"});","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"     * Constructs a Deadline task with the specified task name, deadline date, time, and task status.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskName   The name of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"     * @param deadline   The deadline date of the task in the \"yyyy-MM-dd\" format.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"     * @param time       The deadline time of the task in the \"HHmm\" format.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"     * @param isTaskDone The status of the task (0 for not done, 1 for done).","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"    public Deadline(String taskName, String deadline, String time, int isTaskDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"        super(taskName, \"D\");","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"        assert (isTaskDone \u003d\u003d 1 || isTaskDone \u003d\u003d 0) : \"Invalid isTaskDone feed!\";","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"        this.dateBy \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        this.timeBy \u003d DateTimeParser.parseTimeAsLocalTime(time);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"        changeStatus(isTaskDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"        setTime(new String[]{time, \"NA\"});","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"        setDate(new String[]{deadline, \"NA\"});","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A formatted string containing task details.","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"        String[] currentDates \u003d this.getDates();","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"        String[] currentTimes \u003d this.getTimes();","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"        String parsedFirstDate \u003d DateTimeParser.parseDate(LocalDate.parse(currentDates[0]));","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"        String parsedFirstTime \u003d DateTimeParser.parseTime(DateTimeParser.parseTimeAsLocalTime(currentTimes[0]));","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"        return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + super.getTaskName()","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"                + \" (by: \"","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"                + parsedFirstDate","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"                + \" \"","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"                + parsedFirstTime + \")\";","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":63}},{"path":"src/main/java/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import datesandtimes.DateTimeParser;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":" * Represents an event task with a start and end date and time, extending the base Task class.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"public class Events extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"    private LocalDate startDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"    private LocalDate endDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"    private LocalTime startTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    private LocalTime endTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"     * Constructs an Events task with the specified task name, start date, start time, end date, and end time.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"     * @param dateFrom The start date of the event in the \"yyyy-MM-dd\" format.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"     * @param timeFrom The start time of the event in the \"HHmm\" format.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"     * @param dateTo   The end date of the event in the \"yyyy-MM-dd\" format.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"     * @param timeTo   The end time of the event in the \"HHmm\" format.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"    public Events(String taskName, String dateFrom, String timeFrom, String dateTo, String timeTo) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"        super(taskName, \"E\");","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"        this.startDate \u003d LocalDate.parse(dateFrom);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"        this.endDate \u003d LocalDate.parse(dateTo);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"        this.startTime \u003d DateTimeParser.parseTimeAsLocalTime(timeFrom);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"        this.endTime \u003d DateTimeParser.parseTimeAsLocalTime(timeTo);","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"        setDate(new String[]{dateFrom, dateTo});","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"        setTime(new String[]{timeFrom, timeTo});","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"     * Constructs an Events task with the specified task name, start date, start time,","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"     * end date, end time, and task status.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskName   The name of the task.","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"     * @param dateFrom   The start date of the event in the \"yyyy-MM-dd\" format.","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"     * @param timeFrom   The start time of the event in the \"HHmm\" format.","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"     * @param dateTo     The end date of the event in the \"yyyy-MM-dd\" format.","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"     * @param timeTo     The end time of the event in the \"HHmm\" format.","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"     * @param isTaskDone The status of the task (0 for not done, 1 for done).","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"    public Events(String taskName, String dateFrom, String timeFrom, String dateTo, String timeTo, int isTaskDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"        super(taskName, \"E\");","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"        assert (isTaskDone \u003d\u003d 1 || isTaskDone \u003d\u003d 0) : \"Invalid isTaskDone feed!\";","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"        changeStatus(isTaskDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"        this.startDate \u003d LocalDate.parse(dateFrom);","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"        this.endDate \u003d LocalDate.parse(dateTo);","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"        this.startTime \u003d DateTimeParser.parseTimeAsLocalTime(timeFrom);","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"        this.endTime \u003d DateTimeParser.parseTimeAsLocalTime(timeTo);","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"        setDate(new String[]{dateFrom, dateTo});","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"        setTime(new String[]{timeFrom, timeTo});","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns a string representation of the Events task.","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A formatted string containing task details.","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"        String[] currentDates \u003d this.getDates();","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"        String[] currentTimes \u003d this.getTimes();","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"        String parsedFirstDate \u003d DateTimeParser.parseDate(LocalDate.parse(currentDates[0]));","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"        String parsedSecondDate \u003d DateTimeParser.parseDate(LocalDate.parse(currentDates[1]));","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"        String parsedFirstTime \u003d DateTimeParser.parseTime(DateTimeParser.parseTimeAsLocalTime(currentTimes[0]));","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"        String parsedSecondTime \u003d DateTimeParser.parseTime(DateTimeParser.parseTimeAsLocalTime(currentTimes[1]));","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + getTaskName()","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"                + \" (from: \"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"                + parsedFirstDate + \" \"","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"                + parsedFirstTime","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"                + \" to: \"","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"                + parsedSecondDate + \" \"","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"                + parsedSecondTime + \")\";","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":79}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import utilities.ResponseHandler;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"public class Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"    private String taskName;","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"    private boolean taskDone \u003d false;","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"    private String typeOfTask;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"    private String[] dateFromAndTo \u003d new String[] {\"NA\", \"NA\"};","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"    private String[] timeFromAndTo \u003d new String[] {\"NA\", \"NA\"};","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    public Task(String taskName, String typeOfTask) {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"        this.typeOfTask \u003d typeOfTask;","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"     * Gets the name of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The name of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"        return this.taskName;","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"     * Updates the name of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"     * @param newName","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"    public void updateTaskName(String newName) {","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskName \u003d newName;","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"     * Gets the type of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"        return this.typeOfTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"     * @return {@code true} if the task is marked as done, {@code false} otherwise.","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"    public boolean isTaskDone() {","lastModifiedDate":"2024-01-20"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"        return this.taskDone;","lastModifiedDate":"2024-01-20"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"     * Gets the status icon representing whether the task is done or not.","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"     * @return The status icon (\"X\" if the task is done, \" \" (space) otherwise).","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-20"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"        String currentStatusIcon \u003d this.taskDone ? \"X\" : \" \";","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"        assert (currentStatusIcon.equals(\"X\") || currentStatusIcon.equals(\" \")) : \"Invalid getStatusIcon!\";","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"        return currentStatusIcon;","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"    public void setDate(String[] dates) {","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"        assert dates.length \u003d\u003d 2 : \"Invalid initialization of primitive dates array! \"","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"                + \"It should be of length 2\";","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"        this.dateFromAndTo[0] \u003d dates[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"        this.dateFromAndTo[1] \u003d dates[1];","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"     * Sets the time for the task based on the given array of times.","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"     * @param times An array of times representing the start and end times of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"    public void setTime(String[] times) {","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"        assert times.length \u003d\u003d 2 : \"Invalid initialization of primitive times array! \"","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"                + \"It should be of length 2\";","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"        this.timeFromAndTo[0] \u003d times[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"        this.timeFromAndTo[1] \u003d times[1];","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A formatted string including the task\u0027s status icon and name.","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.taskName;","lastModifiedDate":"2024-01-20"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"UdhayaShan1"},"content":"     * Changes the status of the task based on the given action.","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"     * @param action The action to be performed (\"mark\" to mark as done, other to mark as not done).","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"    public String changeStatus(String action) {","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"        assert action.equals(\"mark\") || action.equals(\"unmark\") : \"Action should be either \"","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"                + \"mark or unmark!\";","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskDone \u003d action.equals(\"mark\");","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"        return ResponseHandler.markActionPrint(action, this);","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"UdhayaShan1"},"content":"     * Changes the status of the task based on the given action code.","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"     * @param action The action code (1 to mark as done, 0 to mark as not done).","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"    public void changeStatus(int action) {","lastModifiedDate":"2024-01-26"},{"lineNumber":118,"author":{"gitId":"UdhayaShan1"},"content":"        this.taskDone \u003d action \u003d\u003d 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":120,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":121,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"UdhayaShan1"},"content":"     * Gets the times associated with the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"UdhayaShan1"},"content":"     * @return An array of times representing the start and end times of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"UdhayaShan1"},"content":"    public String[] getTimes() {","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"UdhayaShan1"},"content":"        assert timeFromAndTo.length \u003d\u003d 2 : \"Invalid initialization of primitive times array! \"","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"UdhayaShan1"},"content":"                + \"It should be of length 2\";","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"UdhayaShan1"},"content":"        return this.timeFromAndTo;","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":131,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":132,"author":{"gitId":"UdhayaShan1"},"content":"    public String[] getDates() {","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"UdhayaShan1"},"content":"        assert dateFromAndTo.length \u003d\u003d 2 : \"Invalid initialization of primitive dates array! \"","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"UdhayaShan1"},"content":"                + \"It should be of length 2\";","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"UdhayaShan1"},"content":"        return this.dateFromAndTo;","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":137}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"        super(taskName, \"T\");","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"    public Todo(String taskName, int isTaskDone) {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"        super(taskName, \"T\");","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"        changeStatus(isTaskDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"        return \"[T]\" + \"[\" + this.getStatusIcon() + \"] \" + super.getTaskName();","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":17}},{"path":"src/main/java/utilities/ResponseHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package utilities;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":" * A utility class for returning responses as a String.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"public class ResponseHandler {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"     * Generates a greeting message.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"     * @param chatBotName The name of the chatbot.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A greeting message.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"    public static String greeting(String chatBotName) {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"        return \"I might be \" + chatBotName","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"                + \"\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"     * Generates a goodbye message.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A goodbye message.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"    public static String bye() {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"        return \"Goodbye. Hope to see you again!\";","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"     * Generates a message with information about a task and the total number of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"     * @param task The task to be printed.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"     * @param size The total number of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A message with task information.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"    public static String commandPrint(Task task, int size) {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"                + \"\\nNow you have \" + size","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"     * Generates a message with a list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"     * @param list The list of tasks to be printed.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A message with the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"    public static String commandListPrint(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"            return \"Task list is empty :(\";","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"        StringBuilder stringOfAddedCommands \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"        for (int i \u003d 0; i \u003c list.size(); i +\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"            stringOfAddedCommands.append(i + 1).append(\". \");","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"            stringOfAddedCommands.append(\"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"            stringOfAddedCommands.append(list.get(i));","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"            if (i !\u003d list.size() - 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"                stringOfAddedCommands.append(\"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"        return stringOfAddedCommands.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"     * Generates a message indicating the result of a mark action on a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"     * @param action The action performed (\"mark\" or \"unmark\").","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"     * @param task   The task on which the action was performed.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A message with the mark action result.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"    public static String markActionPrint(String action, Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"        StringBuilder stringResponse \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"        if (action.equals(\"mark\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"            stringResponse.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"            stringResponse.append(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"        stringResponse.append(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"        return stringResponse.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"     * Generates an error message based on the provided exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"     * @param e The exception containing the error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"     * @return An error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"    public static String errorPrinter(Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"        return e.getMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"     * Generates a message with information about a removed task and the updated total number of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"     * @param task The task that was removed.","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"     * @param size The updated total number of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A message with information about the removed task.","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"    public static String removePrinter(Task task, int size) {","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"        StringBuilder stringResponse \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"        stringResponse.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"        stringResponse.append(task +\"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"        stringResponse.append(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"        return stringResponse.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"     * Generates a message with information about found tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"UdhayaShan1"},"content":"     * @param listOfFoundTasks The list of found tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A message with information about found tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"    public static String printFoundTasks(ArrayList\u003cTask\u003e listOfFoundTasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"        StringBuilder stringResponse \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"UdhayaShan1"},"content":"        if (listOfFoundTasks.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"            stringResponse.append(\"No such tasks in the list :(, try again!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"UdhayaShan1"},"content":"            stringResponse.append(\"Found! Here they are!\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"UdhayaShan1"},"content":"            for (int i \u003d 0; i \u003c listOfFoundTasks.size(); i +\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"UdhayaShan1"},"content":"                stringResponse.append(i + 1).append(\".\").append(listOfFoundTasks.get(i));","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"UdhayaShan1"},"content":"                if (i !\u003d listOfFoundTasks.size() - 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"UdhayaShan1"},"content":"                    stringResponse.append(\"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"UdhayaShan1"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"UdhayaShan1"},"content":"        return stringResponse.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"UdhayaShan1":131}},{"path":"src/main/java/utilities/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package utilities;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import commands.PatternParser;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import exceptions.RyanGoslingException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":" * The Storage class is responsible for loading and saving tasks to/from the hard drive.","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"public class Storage {","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    private final String filePath;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"     * Parses and loads tasks from the hard drive.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"     * @return An ArrayList of Task objects representing the loaded tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws FileNotFoundException If the file specified by filePath is not found.","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws RyanGoslingException  If the task data on the hard drive is not in the expected format.","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"    public ArrayList\u003cTask\u003e parseAndLoadTasks() throws FileNotFoundException, RyanGoslingException {","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"        //We first check if file directory exists. We will create the folder for user instead.","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"                Files.createDirectories(file.toPath().getParent());","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"                Files.createFile(file.toPath());","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"                System.out.println(\"File created successfully\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"                                           + \"It will appear in data folder. \" + filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"                System.err.println(\"Failed to create file.\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"                                           + \"Do try again!: \" + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"            String currentLine \u003d s.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"            PatternParser.addTasktoList(listOfTasks, currentLine);","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"        return listOfTasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"     * Writes the provided task list to the hard drive.","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskList The ArrayList of Task objects to be written to the hard drive.","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"    public void writeToTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"        StringBuilder toAdd \u003d new StringBuilder();","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i +\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"            Task taskToAdd \u003d taskList.get(i);","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"            toAdd.append(taskToAdd.getTaskType());","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"            int taskDone \u003d taskToAdd.isTaskDone() ? 1 : 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"            String[] possibleDates \u003d taskToAdd.getDates();","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"            String[] possibleTimes \u003d taskToAdd.getTimes();","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"            toAdd.append(\" | \")","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"                    .append(taskDone).append(\" | \")","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"                    .append(taskToAdd.getTaskName()).append(\" | \")","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"                    .append(possibleDates[0]).append(\" | \")","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"                    .append(possibleTimes[0]).append(\" | \")","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"                    .append(possibleDates[1]).append(\" | \")","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"                    .append(possibleTimes[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"            if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"                toAdd.append(System.lineSeparator());","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"            fw.write(toAdd.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"            fw.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"            System.out.println(\"Error writing! This a Level 5 bruh moment!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":90}},{"path":"src/main/java/utilities/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package utilities;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import datesandtimes.DateTimeParser;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":" * The TaskList class represents a list of tasks and provides methods for manipulating and interacting with the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"public class TaskList {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"     * The ArrayList containing the tasks in the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    private final ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"  ","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskList The initial list of tasks to be added to the TaskList.","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"        this.listOfTasks \u003d taskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"     * @param newTask The task to be added to the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"    public String add(Task newTask) {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"        this.listOfTasks.add(newTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        return ResponseHandler.commandPrint(newTask, this.listOfTasks.size());","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"     * Prints the entire task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"    public String printList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"        return ResponseHandler.commandListPrint(this.listOfTasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"     * Changes the status (done or not done) of a task in the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"UdhayaShan1"},"content":"     * @param taskAction The action to be performed (mark or unmark).","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"UdhayaShan1"},"content":"     * @param indexOfTask  The index of the task in the list.","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"UdhayaShan1"},"content":"    public String changeStatusOfItem(String taskAction, int indexOfTask) {","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"UdhayaShan1"},"content":"        assert !(indexOfTask \u003e\u003d listOfTasks.size() || indexOfTask \u003c 0) : \"Invalid index range!\";","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"UdhayaShan1"},"content":"        assert taskAction.equals(\"mark\") || taskAction.equals(\"unmark\") : \"Action should be either mark or unmark!\";","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"UdhayaShan1"},"content":"        return this.listOfTasks.get(indexOfTask).changeStatus(taskAction);","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"UdhayaShan1"},"content":"     * Removes a task from the list by its index.","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"UdhayaShan1"},"content":"     * @param indexOfTask The index of the task to be removed.","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"UdhayaShan1"},"content":"    public String removeIndex(int indexOfTask) {","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"UdhayaShan1"},"content":"        assert !(indexOfTask \u003e\u003d listOfTasks.size() || indexOfTask \u003c 0) : \"Invalid index range!\";","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"UdhayaShan1"},"content":"        Task taskToBeRemoved \u003d listOfTasks.get(indexOfTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"UdhayaShan1"},"content":"        this.listOfTasks.remove(indexOfTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"UdhayaShan1"},"content":"        return ResponseHandler.removePrinter(taskToBeRemoved, listOfTasks.size());","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"UdhayaShan1"},"content":"     * Writes the current task list to the hard drive using the provided Storage object.","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"UdhayaShan1"},"content":"     * @param storage The Storage object used for writing to the hard drive.","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"UdhayaShan1"},"content":"    public void writeToFile(Storage storage) {","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"UdhayaShan1"},"content":"        storage.writeToTaskList(this.listOfTasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"UdhayaShan1"},"content":"    public String findTasks(String taskPattern) {","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"UdhayaShan1"},"content":"        ArrayList\u003cTask\u003e tasksWithPattern \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"UdhayaShan1"},"content":"        for (Task task : this.listOfTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"UdhayaShan1"},"content":"            String currTaskName \u003d task.getTaskName();","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"UdhayaShan1"},"content":"            if (currTaskName.contains(taskPattern)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"UdhayaShan1"},"content":"                tasksWithPattern.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"UdhayaShan1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"UdhayaShan1"},"content":"        return ResponseHandler.printFoundTasks(tasksWithPattern);","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"UdhayaShan1"},"content":"    public void updateNameOfTask(int index, String newTaskName, Storage taskStorage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"UdhayaShan1"},"content":"        this.listOfTasks.get(index).updateTaskName(newTaskName);","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"UdhayaShan1"},"content":"        this.writeToFile(taskStorage);","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"UdhayaShan1"},"content":"    public String getTaskType(int index) {","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"UdhayaShan1"},"content":"        return this.listOfTasks.get(index).getTaskType();","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"UdhayaShan1"},"content":"    public void updateDatesOfTask(int index, String[] listOfDates, Storage taskStorage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"UdhayaShan1"},"content":"        String firstDate \u003d listOfDates[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"UdhayaShan1"},"content":"        String secondDate \u003d listOfDates[1];","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"UdhayaShan1"},"content":"        String[] originalDateList \u003d this.listOfTasks.get(index).getDates();","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"UdhayaShan1"},"content":"        if (!firstDate.equals(\"NA\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"UdhayaShan1"},"content":"            LocalDate.parse(firstDate);","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"UdhayaShan1"},"content":"            listOfDates[0] \u003d firstDate;","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"UdhayaShan1"},"content":"            listOfDates[0] \u003d originalDateList[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"UdhayaShan1"},"content":"        if (!secondDate.equals(\"NA\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"UdhayaShan1"},"content":"            LocalDate.parse(secondDate);","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"UdhayaShan1"},"content":"            listOfDates[1] \u003d secondDate;","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"UdhayaShan1"},"content":"            listOfDates[1] \u003d originalDateList[1];","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"UdhayaShan1"},"content":"        this.listOfTasks.get(index).setDate(listOfDates);","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"UdhayaShan1"},"content":"        this.writeToFile(taskStorage);","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"UdhayaShan1"},"content":"    public void updateTimesOfTask(int index, String[] listOfTimes, Storage taskStorage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"UdhayaShan1"},"content":"        String firstTime \u003d listOfTimes[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"UdhayaShan1"},"content":"        String secondTime \u003d listOfTimes[1];","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"UdhayaShan1"},"content":"        String[] originalTimeList \u003d this.listOfTasks.get(index).getTimes();","lastModifiedDate":"2024-02-10"},{"lineNumber":130,"author":{"gitId":"UdhayaShan1"},"content":"        if (!firstTime.equals(\"NA\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"UdhayaShan1"},"content":"            DateTimeParser.parseTimeAsLocalTime(firstTime);","lastModifiedDate":"2024-02-10"},{"lineNumber":132,"author":{"gitId":"UdhayaShan1"},"content":"            listOfTimes[0] \u003d firstTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"UdhayaShan1"},"content":"            listOfTimes[0] \u003d originalTimeList[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"UdhayaShan1"},"content":"        if (!secondTime.equals(\"NA\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"UdhayaShan1"},"content":"            DateTimeParser.parseTimeAsLocalTime(secondTime);","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"UdhayaShan1"},"content":"            listOfTimes[1] \u003d secondTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"UdhayaShan1"},"content":"        } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"UdhayaShan1"},"content":"            listOfTimes[1] \u003d originalTimeList[1];","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"UdhayaShan1"},"content":"        this.listOfTasks.get(index).setTime(listOfTimes);","lastModifiedDate":"2024-02-10"},{"lineNumber":144,"author":{"gitId":"UdhayaShan1"},"content":"        this.writeToFile(taskStorage);","lastModifiedDate":"2024-02-10"},{"lineNumber":145,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":146,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":147,"author":{"gitId":"UdhayaShan1"},"content":"    public boolean validateIndex(int index) {","lastModifiedDate":"2024-02-10"},{"lineNumber":148,"author":{"gitId":"UdhayaShan1"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c listOfTasks.size();","lastModifiedDate":"2024-02-10"},{"lineNumber":149,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":150,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":151,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":152,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":153,"author":{"gitId":"UdhayaShan1"},"content":"     * Overrides the toString method to provide information about the number of tasks in the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":154,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":155,"author":{"gitId":"UdhayaShan1"},"content":"     * @return A string representation of the number of tasks in the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":156,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":157,"author":{"gitId":"UdhayaShan1"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"UdhayaShan1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"UdhayaShan1"},"content":"        return \"Now you have \" + listOfTasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-10"},{"lineNumber":160,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":161,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"UdhayaShan1":161}},{"path":"src/main/java/utilities/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package utilities;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import commands.CommandsParser;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import exceptions.RyanGoslingException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import tasks.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":" * The Ui class handles the main chat listening and parsing of messages.","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"public class Ui {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"    //Handles adding/removing to array of tasks","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    private String filePath \u003d \"data/task_lists.txt\";","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    //Handles the loading and saving of tasks to text file","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    private Storage taskLoader \u003d new Storage(filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    public void oneTimeLoadAllTasks() {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"            ArrayList\u003cTask\u003e parsedTasks \u003d this.taskLoader.parseAndLoadTasks();","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"            this.taskList \u003d new TaskList(parsedTasks);","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"        } catch (RyanGoslingException | FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"            ResponseHandler.errorPrinter(e);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"            return;","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"    public String performTaskFromSingleUserInput(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        CommandsParser commandsParser \u003d new CommandsParser(this.taskList, this.filePath, this.taskLoader);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"            return commandsParser.parseCommands(userInput);","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"            return \"Problem with date or time format!\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"                    + \"Date should be in YYYY-MM-DD\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"                    + \"Time should be in 24 HR clock format\";","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        } catch (RyanGoslingException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"UdhayaShan1":46}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"UdhayaShan1":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"java_fx.MainWindow\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"UdhayaShan1":19}},{"path":"src/test/java/commands/CommandsParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package commands;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import exceptions.RyanGoslingException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":" * Test class for the CommandsParser class.","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":"public class CommandsParserTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"     * Test for the \"bye\" command.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws RyanGoslingException if an error occurs during parsing","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"    public void byeTest() throws RyanGoslingException {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(1, new CommandsParserStub().parseCommandsOriginal(\"bye\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"     * Test for the \"todo\" command.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"     * @throws RyanGoslingException if an error occurs during parsing","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    public void todoTest() throws RyanGoslingException {","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(\"todo drive\", new CommandsParserStub().parseCommandsReturnString(\"todo drive\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(\"todo LOL\", new CommandsParserStub().parseCommandsReturnString(\"todo LOL\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"            assertEquals(\"\", new CommandsParserStub().parseCommandsReturnString(\"todo\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"            fail();","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"        } catch (RyanGoslingException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"            assertEquals(\"Incomplete todo command, todo \u003cevent\u003e\", e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"UdhayaShan1":43}},{"path":"src/test/java/datesandtimes/DateTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"package datesandtimes;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"UdhayaShan1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"UdhayaShan1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"UdhayaShan1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"UdhayaShan1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"UdhayaShan1"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"UdhayaShan1"},"content":" * Test class for the DateTimeParser class.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"UdhayaShan1"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"UdhayaShan1"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"UdhayaShan1"},"content":"     * Test for the parseDate method with correct input.","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"UdhayaShan1"},"content":"    public void dateCorrectTest() {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(\"Aug 21 2019\", DateTimeParser.parseDate(LocalDate.parse(\"2019-08-21\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(\"Aug 21 2017\", DateTimeParser.parseDate(LocalDate.parse(\"2017-08-21\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"UdhayaShan1"},"content":"        assertEquals(\"May 23 2045\", DateTimeParser.parseDate(LocalDate.parse(\"2045-05-23\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"UdhayaShan1"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"UdhayaShan1"},"content":"     * Test for the parseDate method with invalid input.","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"UdhayaShan1"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"UdhayaShan1"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"UdhayaShan1"},"content":"    public void dateExceptionTest() {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"UdhayaShan1"},"content":"        // Check invalid year","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(DateTimeException.class,","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"UdhayaShan1"},"content":"                () -\u003e DateTimeParser.parseDate(LocalDate.parse(\"20455-01-21\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"UdhayaShan1"},"content":"        // Check invalid month","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(DateTimeException.class,","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"UdhayaShan1"},"content":"                () -\u003e DateTimeParser.parseDate(LocalDate.parse(\"2045-0-21\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"UdhayaShan1"},"content":"        // Check invalid day","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(DateTimeException.class,","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"UdhayaShan1"},"content":"                () -\u003e DateTimeParser.parseDate(LocalDate.parse(\"2045-05-32\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"UdhayaShan1"},"content":"        // Check mix of invalids","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(DateTimeException.class,","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"UdhayaShan1"},"content":"                () -\u003e DateTimeParser.parseDate(LocalDate.parse(\"20455-0-32\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"UdhayaShan1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"UdhayaShan1"},"content":"        // Check logical date is wrong, no Feb 31st","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"UdhayaShan1"},"content":"        assertThrows(DateTimeException.class,","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"UdhayaShan1"},"content":"                () -\u003e DateTimeParser.parseDate(LocalDate.parse(\"2045-02-31\")));","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"UdhayaShan1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"UdhayaShan1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"UdhayaShan1":53}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"UdhayaShan1"},"content":"todo borrow book","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"UdhayaShan1":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"UdhayaShan1"},"content":"java -classpath ..\\bin main.RyanGosling \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"UdhayaShan1":1}}]
