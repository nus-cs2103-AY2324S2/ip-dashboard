[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"checkstyle {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"  toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"  configFile \u003d file(\u0027./config/checkstyle/checkstyle.xml\u0027)","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"    testImplementation \u0027org.mockito:mockito-core:4.0.0\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"    ","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"    mainClass.set(\"alpa.main.Launcher\")","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"ejnan"},"content":"    archiveBaseName \u003d \"alpa\"","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"ejnan"},"content":"    archiveFileName \u003d \"alpa.jar\"","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ejnan":25,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"D | 1 | finish quiz6 | 2024-02-23 16:00","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"D | 0 | submit assignment | 2024-02-23 16:00","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"D | 0 | tP | 2024-02-23 23:59","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"E | 0 | lecture | 2024-03-23 16:00 - 2024-03-23 18:00","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"ejnan":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"# Alpa User Guide","lastModifiedDate":"2024-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"![img.png](Ui.png)","lastModifiedDate":"2024-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"Alpa is your fluffy task manager. It helps you keep track of todos, deadlines, and events - neatly organized in one place!","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"### Notes about command format","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"- Words in uppercase are to be supplied by the user.","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"    e.g. `todo TASK`, `TASK` is a parameter which can be used as `todo run`.","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"- Items in square brackets are optional.","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"  e.g. `deadline TASK /by DATE [TIME]`, can be used as `deadline run /by 24 Feb 2024` or as `deadline run /by 24 Feb 2024 11:59pm`.","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `list`) will be ignored.","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"  e.g. if the command specifies `list asdagsd`, it will be interpreted as `list`.","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"## Exiting the Programme: `help`","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"Format: `help`","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"Example: `help`","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"I am Alpa - Your Fluffy Task Manager!","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"Here are some commands you can use:","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"  1. list - lists all the tasks you have!","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"  2. todo \u003cdescription\u003e - Adds a todo task","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"  3. deadline \u003cdescription\u003e /by \u003cdate/time\u003e - Adds a new deadline task","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"  4. event \u003cdescription\u003e /at \u003cdate/time\u003e - Adds a new event task","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"  5. mark \u003ctask number\u003e - Marks a task as done","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"  6. unmark \u003ctask number\u003e - Marks a task as not done","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"  7. delete \u003ctask number\u003e - Deletes a task","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"  8. bye - Exits the application","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"  9. help - Displays this help message","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"## Adding Todos: `todo`","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"Need to remember a simple task? Add a todo!","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"Format: `todo TASK`","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"For example: `todo review lecture`","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"This will confirm that the task is successfully added:","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"You added a task human!","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"     [T][ ] review lecture","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"ejnan"},"content":"Now you have 3 tasks in your list!","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"ejnan"},"content":"## Adding Deadlines: `deadline`","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"ejnan"},"content":"Got a deadline coming up? Let\u0027s track it!","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"ejnan"},"content":"Format: `deadline TASK /by DATE [TIME]`","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"ejnan"},"content":"For example: `deadline submit assignment /by 23 Feb`","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"ejnan"},"content":"This will confirm that the task is successfully added:","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"ejnan"},"content":"You added a task human!","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"ejnan"},"content":"    [D][ ] submit assignment (by: Feb 23 2024 11:59 PM)","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"ejnan"},"content":"Now you have 3 tasks in your list!","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"ejnan"},"content":"## Adding Events: `event`","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"ejnan"},"content":"Attending an event? Don\u0027t forget it!","lastModifiedDate":"2024-02-25"},{"lineNumber":78,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"ejnan"},"content":"Format: event TASK /from START_DATE [START_TIME] /to END_DATE [END_TIME]","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"ejnan"},"content":"For example: `event meeting /from 8 Mar 3pm /to 8 Mar 4pm`","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"ejnan"},"content":"You added a task human!","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"ejnan"},"content":"     [E][ ] friend\u0027s wedding (from: Mar 8 2024 12:00 PM to: Mar 8 2024 4:00 PM)","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"ejnan"},"content":"Now you have 3 tasks in your list!","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"ejnan"},"content":"## Listing all Tasks: `list`","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"ejnan"},"content":"Want to see all your tasks? Just list them!","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"ejnan"},"content":"Format: list","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"ejnan"},"content":"For example: `list`","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":100,"author":{"gitId":"ejnan"},"content":"Your list, human!","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":102,"author":{"gitId":"ejnan"},"content":"  1. [T][ ] read book","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"ejnan"},"content":"  2. [D][ ] return library books (by: Dec 11 2024 5:00 PM) ","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"ejnan"},"content":"  3. ","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"ejnan"},"content":"## Finding tasks: `find`","lastModifiedDate":"2024-02-25"},{"lineNumber":107,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"ejnan"},"content":"Looking for a specific task? Find it easily.","lastModifiedDate":"2024-02-25"},{"lineNumber":109,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"ejnan"},"content":"Format: find KEYWORD","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":112,"author":{"gitId":"ejnan"},"content":"- Searches descriptions only.","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"ejnan"},"content":"- Returns tasks that contain the keyword, e.g., `book` will match `read book`.","lastModifiedDate":"2024-02-25"},{"lineNumber":114,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":115,"author":{"gitId":"ejnan"},"content":"For example: `find quiz`","lastModifiedDate":"2024-02-25"},{"lineNumber":116,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":117,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"ejnan"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-25"},{"lineNumber":119,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":120,"author":{"gitId":"ejnan"},"content":"[D][ ] finish quiz (by: Dec 11 2024 4:00 PM)","lastModifiedDate":"2024-02-25"},{"lineNumber":121,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":122,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":123,"author":{"gitId":"ejnan"},"content":"## Deleting Tasks: `delete`","lastModifiedDate":"2024-02-25"},{"lineNumber":124,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":125,"author":{"gitId":"ejnan"},"content":"Don\u0027t need a task anymore? Delete it.","lastModifiedDate":"2024-02-25"},{"lineNumber":126,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":127,"author":{"gitId":"ejnan"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-02-25"},{"lineNumber":128,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":129,"author":{"gitId":"ejnan"},"content":"- Deletes the task at the specified `INDEX`.","lastModifiedDate":"2024-02-25"},{"lineNumber":130,"author":{"gitId":"ejnan"},"content":"- `INDEX` is index number shown in the displayed task list. ","lastModifiedDate":"2024-02-25"},{"lineNumber":131,"author":{"gitId":"ejnan"},"content":"- The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2024-02-25"},{"lineNumber":132,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":133,"author":{"gitId":"ejnan"},"content":"For example: `delete 3`","lastModifiedDate":"2024-02-25"},{"lineNumber":134,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":135,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":136,"author":{"gitId":"ejnan"},"content":"Removed this task for you, human.","lastModifiedDate":"2024-02-25"},{"lineNumber":137,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":138,"author":{"gitId":"ejnan"},"content":"[E][ ] friend\u0027s wedding (from: Mar 8 2024 12:00 PM to: Mar 8 2024 4:00 PM)","lastModifiedDate":"2024-02-25"},{"lineNumber":139,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":140,"author":{"gitId":"ejnan"},"content":"Now you have 2 tasks left human!","lastModifiedDate":"2024-02-25"},{"lineNumber":141,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":142,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":143,"author":{"gitId":"ejnan"},"content":"## Marking Tasks as Done: `mark`","lastModifiedDate":"2024-02-25"},{"lineNumber":144,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":145,"author":{"gitId":"ejnan"},"content":"Complete a task? Mark it off.","lastModifiedDate":"2024-02-25"},{"lineNumber":146,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":147,"author":{"gitId":"ejnan"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-02-25"},{"lineNumber":148,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":149,"author":{"gitId":"ejnan"},"content":"- Marks the task at the specified `INDEX`.","lastModifiedDate":"2024-02-25"},{"lineNumber":150,"author":{"gitId":"ejnan"},"content":"- `INDEX` refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":151,"author":{"gitId":"ejnan"},"content":"- The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2024-02-25"},{"lineNumber":152,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":153,"author":{"gitId":"ejnan"},"content":"For example: `mark 5`","lastModifiedDate":"2024-02-25"},{"lineNumber":154,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":155,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":156,"author":{"gitId":"ejnan"},"content":"Marked as done, human!","lastModifiedDate":"2024-02-25"},{"lineNumber":157,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":158,"author":{"gitId":"ejnan"},"content":"    [T][X] revise for exam","lastModifiedDate":"2024-02-25"},{"lineNumber":159,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":160,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":161,"author":{"gitId":"ejnan"},"content":"## Unmarking Tasks: `unmark`","lastModifiedDate":"2024-02-25"},{"lineNumber":162,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":163,"author":{"gitId":"ejnan"},"content":"Jumped the gun? Mark a task as not done.","lastModifiedDate":"2024-02-25"},{"lineNumber":164,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":165,"author":{"gitId":"ejnan"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-02-25"},{"lineNumber":166,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":167,"author":{"gitId":"ejnan"},"content":"- Unmarks the task at the specified `INDEX`.","lastModifiedDate":"2024-02-25"},{"lineNumber":168,"author":{"gitId":"ejnan"},"content":"- `INDEX` refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":169,"author":{"gitId":"ejnan"},"content":"- The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2024-02-25"},{"lineNumber":170,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":171,"author":{"gitId":"ejnan"},"content":"For example: `unmark 5`","lastModifiedDate":"2024-02-25"},{"lineNumber":172,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":173,"author":{"gitId":"ejnan"},"content":"```","lastModifiedDate":"2024-02-25"},{"lineNumber":174,"author":{"gitId":"ejnan"},"content":"Not done with this yet, human?","lastModifiedDate":"2024-02-25"},{"lineNumber":175,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":176,"author":{"gitId":"ejnan"},"content":"    [T][ ] revise for exam","lastModifiedDate":"2024-02-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"ejnan"},"content":"## Exiting the Programme: `bye`","lastModifiedDate":"2024-02-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"ejnan"},"content":"Done for now? Say goodbye to Alpa.","lastModifiedDate":"2024-02-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":183,"author":{"gitId":"ejnan"},"content":"Format: `bye`","lastModifiedDate":"2024-02-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":185,"author":{"gitId":"ejnan"},"content":"Example: `bye`","lastModifiedDate":"2024-02-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":187,"author":{"gitId":"ejnan"},"content":"Alpa will close and await your next set of tasks!","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"ejnan":171,"-":16}},{"path":"src/main/java/alpa/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.commands;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":" * Represents a command that displays a goodbye message and exits the program.","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"     * Executes the Bye command, which ends the program.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"     * @param taskList the task list to be operated on","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"     * @param storage the storage to save the task list","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     * @return a farewell message","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"    public String executeCommand(TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"        return \"It\u0027s been a pleasure grazing through your tasks! Goodbye human! Stay cozy!\";","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"     * Returns whether or not the command is an exit command.","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"        return true;","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ejnan":32}},{"path":"src/main/java/alpa/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.commands;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import alpa.exceptions.AlpaException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":" * Represents a command that can be executed in the application.","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"public interface Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"     * Executes the command with the given task list, user interface, and storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"     * @param taskList the task list to be operated on","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     * @param storage the storage for saving and loading tasks","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"     * @return the result of executing the command","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException if there is an error executing the command","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"    String executeCommand(TaskList taskList, Storage storage) throws AlpaException;","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"    boolean isExit();","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ejnan":28}},{"path":"src/main/java/alpa/commands/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.commands;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":" * Represents the types of commands in the application.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"public enum CommandType {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"    BYE, LIST, MARK, UNMARK, FIND, TODO, DEADLINE, EVENT, DELETE, INVALID, HELP;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"     * Converts a string representation of a command into the corresponding CommandType.","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"     * @param commandString the string representation of the command","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"     * @return the corresponding CommandType, or INVALID if the commandString is not a valid command","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"    public static CommandType fromString(String commandString) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"            return CommandType.valueOf(commandString.toUpperCase());","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"            return INVALID;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ejnan":22}},{"path":"src/main/java/alpa/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.commands;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import alpa.exceptions.AlpaException;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.Deadline;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"import alpa.utils.DateTimeUtils;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"    private final String details;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"     * Constructs a DeadlineCommand object with the specified details.","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"     * @param details the details of the deadline task","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"    public DeadlineCommand(String details) {","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"        this.details \u003d details;","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"     * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"     * The deadline task includes a description and a deadline date and time.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"     * The command parses the input details and adds the deadline task to the task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"     * It also saves the updated task list to the storage.","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"     * @param taskList the task list to add the deadline task to","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"     * @param storage the storage to save the updated task list","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"     * @return a message indicating the successful addition of the deadline task","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException if the deadline format is invalid or the date/time format is invalid","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"    public String executeCommand(TaskList taskList, Storage storage) throws AlpaException {","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"            String[] parts \u003d this.details.split(\"\\\\s*/by\\\\s*\", 2);","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"                throw new AlpaException(\"Invalid deadline format, human! Use \u0027/by\u0027 to specify the deadline.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"            String description \u003d parts[0].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"            String deadlineStr \u003d parts[1].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"            LocalDateTime parsedDeadlineDateTime \u003d DateTimeUtils.parseDeadlineDateTime(deadlineStr);","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"            Deadline deadline \u003d new Deadline(description, parsedDeadlineDateTime);","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"            taskList.addTask(deadline);","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"            int size \u003d taskList.getSize();","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"            return String.format(\"You added a task human!\\n  %s\\nNow you have %d tasks in your list!\", deadline, size);","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"Invalid date or time format, human!!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"ejnan"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"ejnan"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"ejnan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"ejnan"},"content":"        return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ejnan":67}},{"path":"src/main/java/alpa/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.commands;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import alpa.exceptions.AlpaException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"    private final int index;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"     * Constructs a DeleteCommand object with the specified index.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"     * @param indexStr the index of the task to be deleted as a string","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException if the index is not a valid integer","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"    public DeleteCommand(String indexStr) throws AlpaException {","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"            this.index \u003d Integer.parseInt(indexStr) - 1;","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"\\nInvalid input for delete, human!!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"     * Executes the delete command, which removes a task from the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"     * Throws an AlpaException if the index is invalid.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"     * @param taskList the task list containing the tasks","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"     * @param storage the storage for saving tasks","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"     * @return the result of executing the command","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException if the index is out of bounds","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"    public String executeCommand(TaskList taskList, Storage storage) throws AlpaException {","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"Invalid task number, human!!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"        Task removedTask \u003d taskList.deleteTask(index);","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"        return String.format(\"Removed this task for you, human.\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"            + \"%s\\nNow you have %d tasks left human!\", removedTask, taskList.getSize());","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"     * Returns whether or not the command should exit the program.","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"     * @return true if the command should exit the program, false otherwise.","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"ejnan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"ejnan"},"content":"        return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ejnan":57}},{"path":"src/main/java/alpa/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.commands;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"import alpa.exceptions.AlpaException;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.Event;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"import alpa.utils.DateTimeUtils;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":" * Represents a command to add an event task.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"    private final String details;","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"     * Constructs an EventCommand object with the specified details.","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"     * @param details the details of the event task","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"    public EventCommand(String details) {","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"        this.details \u003d details;","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"     * Executes the event command, adding the event task to the task list, displaying the added task,","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"     * and saving the tasks to storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"     * @param taskList the task list","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"     * @param storage the storage","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"     * @return a message indicating the successful addition of the event task","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException if there is an error executing the command","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"    public String executeCommand(TaskList taskList, Storage storage) throws AlpaException {","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"            Pattern fromPattern \u003d Pattern.compile(\"\\\\s*/from\\\\s*\");","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"            Pattern toPattern \u003d Pattern.compile(\"\\\\s*/to\\\\s*\");","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"            Matcher fromMatcher \u003d fromPattern.matcher(details);","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"            Matcher toMatcher \u003d toPattern.matcher(details);","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"            if (!fromMatcher.find() || !toMatcher.find()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"                throw new AlpaException(\"Invalid event format, human! Please use \u0027/from\u0027 and \u0027/to\u0027 \"","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"                        + \"to specify the event time.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"            int fromIndex \u003d fromMatcher.start();","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"            int toIndex \u003d toMatcher.start();","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"            String description \u003d details.substring(0, fromIndex).trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"            String startStr \u003d details.substring(fromIndex + fromMatcher.group().length(), toIndex).trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"            String endStr \u003d details.substring(toIndex + toMatcher.group().length()).trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"ejnan"},"content":"            LocalDateTime startDateTime \u003d DateTimeUtils.parseDateTime(startStr);","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"ejnan"},"content":"            LocalDateTime endDateTime \u003d DateTimeUtils.tryParseEndDateTime(endStr, startDateTime.toLocalDate());","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"ejnan"},"content":"            if (endDateTime.isBefore(startDateTime)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"ejnan"},"content":"                throw new AlpaException(\"End time cannot be before start time, human!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"ejnan"},"content":"            Event event \u003d new Event(description, startDateTime, endDateTime);","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"ejnan"},"content":"            taskList.addTask(event);","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"ejnan"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"ejnan"},"content":"            int size \u003d taskList.getSize();","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"ejnan"},"content":"            return String.format(\"You added a task human!\\n  %s\\nNow you have %d tasks in your list!\", event, size);","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"ejnan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"Invalid date and time format, human!! Start: \u0027\" + details + \"\u0027.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"ejnan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"ejnan"},"content":"     * @return true if the command is an exit command, false otherwise","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"ejnan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"ejnan"},"content":"        return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ejnan":78}},{"path":"src/main/java/alpa/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.commands;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import alpa.exceptions.AlpaException;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.Task;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":" * Represents a command to find tasks based on a keyword.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"    private String keyword;","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"     * Constructs a FindCommand object with the specified keyword.","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"     * Executes the FindCommand, finding tasks that match the keyword and displaying them.","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"     * @param taskList The task list to search for tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"     * @param storage The storage to save the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"     * @return The result of executing the command.","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException If there is an error executing the command.","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"    public String executeCommand(TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"        List\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeyword(keyword);","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"            return \"No tasks found with the keyword: \" + keyword;","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"        } else {","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"            String foundTasksString \u003d foundTasks.stream()","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"                .map(Task::toString)","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"            return \"Here are the matching tasks in your list:\\n\" + foundTasksString;","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"     * Checks if the FindCommand is an exit command.","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"     * @return False, as the FindCommand is not an exit command.","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"ejnan"},"content":"        return false;","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"ejnan":56}},{"path":"src/main/java/alpa/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.commands;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":" * Represents a command that displays a help message to the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"public class HelpCommand implements Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"     * Executes the help command and returns the help message.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"     * @param storage The storage.","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     * @return The help message.","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"    public String executeCommand(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"        String helpMessage \u003d getHelpMessage();","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"        return helpMessage;","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"     * Retrieves the help message.","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"     * @return The help message.","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"    private String getHelpMessage() {","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"        return \"I am Alpa - Your Fluffy Task Manager!\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"            + \"Here are some commands you can use:\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"            + \"  1. list - lists all the tasks you have!\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"            + \"  2. todo \u003cdescription\u003e - Adds a todo task\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"            + \"  3. deadline \u003cdescription\u003e /by \u003cdate/time\u003e - Adds a new deadline task\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"            + \"  4. event \u003cdescription\u003e /at \u003cdate/time\u003e - Adds a new event task\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"            + \"  5. mark \u003ctask number\u003e - Marks a task as done\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"            + \"  6. unmark \u003ctask number\u003e - Marks a task as not done\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"            + \"  7. delete \u003ctask number\u003e - Deletes a task\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"            + \"  8. bye - Exits the application\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"            + \"  9. help - Displays this help message\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"        return false;","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"ejnan":52}},{"path":"src/main/java/alpa/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.commands;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":" * Represents an invalid command.","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":" * This class is used to create an instance of an invalid command with a specific error message.","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"public class InvalidCommand implements Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"    private String message;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"     * Constructs a new InvalidCommand object with the given error message.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"     * @param message The error message associated with the invalid command.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"    public InvalidCommand(String message) {","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"     * Executes the invalid command and returns the error message.","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"     * @param taskList the task list to operate on","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"     * @param storage the storage to save the task list","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"     * @return the error message","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"    public String executeCommand(TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"        return message; // Return the error message directly","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"        return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ejnan":42}},{"path":"src/main/java/alpa/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.commands;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"     * Executes the list command by displaying all tasks in the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"     * @param taskList The task list containing the tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"     * @param storage The storage to save the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"     * @return A string representation of the tasks in the task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"    public String executeCommand(TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"            return \"Your list is empty, human!\";","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks(); // Use getTasks() to get the list of tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"        StringBuilder listOutput \u003d new StringBuilder(\"Your list, human!\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"            listOutput.append(\"  \").append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"        return listOutput.toString().trim(); // Trim to remove the last newline character","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"     * @return False, as the list command is not an exit command.","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"        return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ejnan":43}},{"path":"src/main/java/alpa/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.commands;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import alpa.exceptions.AlpaException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"    private int index;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"     * Constructs a MarkCommand object with the specified index.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"    public MarkCommand(String index) {","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"        this.index \u003d Integer.parseInt(index.trim()) - 1;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"     * Executes the mark command by marking the task as done, displaying the task as marked,","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"     * and saving the updated task list to storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"     * @param taskList The task list containing the tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"     * @param storage The storage to save the updated task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException If there is an error executing the command.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"    public String executeCommand(TaskList taskList, Storage storage) throws AlpaException {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"Task number out of range.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"        Task task \u003d taskList.markTaskAsDone(index);","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"        return \"Marked as done, human!\\n\" + \"  \" + task;","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"        return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ejnan":51}},{"path":"src/main/java/alpa/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.commands;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import alpa.exceptions.AlpaException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":" * The Parser class is responsible for parsing user input and returning the corresponding Command object.","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"public class Parser {","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"     * @param userInput the user input to be parsed","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"     * @return the Command object corresponding to the user input","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException if there is an error during parsing","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"    public static Command parse(String userInput) throws AlpaException {","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"        // Split user input into command word and task information (if any).","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"        String[] words \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"        String commandWord \u003d words[0];","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"        String taskInfo \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"        CommandType commandType \u003d CommandType.fromString(commandWord);","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"        switch (commandType) {","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"        case HELP:","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"            // Returns a command to display help information.","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"        case BYE:","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"            // Returns a command to terminate the application.","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"        case LIST:","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"            // Returns a command to list all tasks.","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"        case FIND:","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"            // Returns a command to find tasks matching a keyword, if specified.","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"            if (taskInfo.isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"                throw new AlpaException(\"I don\u0027t know what you\u0027re trying to find, human!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"            return new FindCommand(taskInfo);","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"        case MARK:","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"            // Returns a command to mark a task as done, if a valid task number is provided.","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"            if (taskInfo.isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"                throw new AlpaException(\"I don\u0027t know what task you\u0027re referring to, human!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"            return new MarkCommand(taskInfo);","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"            // Returns a command to mark a task as not done, if a valid task number is provided.","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"            if (taskInfo.isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"                throw new AlpaException(\"I don\u0027t know what task you\u0027re referring to, human!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"            return new UnmarkCommand(taskInfo);","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"        case TODO:","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"ejnan"},"content":"            // Returns a command to add a todo task, if a description is provided.","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"ejnan"},"content":"            if (taskInfo.isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"ejnan"},"content":"                throw new AlpaException(\"You need to tell me what your todo is, human!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"ejnan"},"content":"            return new TodoCommand(taskInfo);","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"ejnan"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"ejnan"},"content":"            // Returns a command to add a deadline task, if a description and deadline are provided.","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"ejnan"},"content":"            if (taskInfo.isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"ejnan"},"content":"                throw new AlpaException(\"What and when is your deadline, human? I need more information!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"ejnan"},"content":"            return new DeadlineCommand(taskInfo);","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"ejnan"},"content":"        case EVENT:","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"ejnan"},"content":"            // Returns a command to add an event task, if a description, start time, and end time are provided.","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"ejnan"},"content":"            if (taskInfo.isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"ejnan"},"content":"                throw new AlpaException(\"What and when is your event, human? I need more information!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"ejnan"},"content":"            return new EventCommand(taskInfo);","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"ejnan"},"content":"        case DELETE:","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"ejnan"},"content":"            // Returns a command to delete a task, if a valid task number is provided.","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"ejnan"},"content":"            if (taskInfo.isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"ejnan"},"content":"                throw new AlpaException(\"I don\u0027t know what you\u0027re trying to delete, human!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"ejnan"},"content":"            return new DeleteCommand(taskInfo);","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"ejnan"},"content":"        case INVALID:","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"ejnan"},"content":"        default:","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"ejnan"},"content":"            // Returns a command indicating the input was not recognized as a valid command.","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"ejnan"},"content":"            return new InvalidCommand(\"Sorry human, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ejnan":83}},{"path":"src/main/java/alpa/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.commands;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import alpa.exceptions.AlpaException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.ToDo;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":" * Represents a command to add a todo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"    private final String description;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"     * Constructs a TodoCommand object with the given description.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"     * Executes the todo command by creating a new todo task, adding it to the task list,","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"     * displaying the added task, and saving the updated task list to storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"     * @param taskList The task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"     * @param storage The storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"     * @return a message indicating the successful addition of the todo task.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException If the description is empty.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"    public String executeCommand(TaskList taskList, Storage storage) throws AlpaException {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"\\nBaa-ad news, human! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"        int size \u003d taskList.getSize();","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"        return String.format(\"You added a task human!\\n  %s\\nNow you have %d tasks in your list!\", todo, size);","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"        return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ejnan":53}},{"path":"src/main/java/alpa/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.commands;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import alpa.exceptions.AlpaException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"    private int index;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"     * Constructs an UnmarkCommand object with the specified index.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"    public UnmarkCommand(String index) {","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"        this.index \u003d Integer.parseInt(index.trim()) - 1;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"     * Executes the unmark command, marking the specified task as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"     * @param taskList The task list containing the tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"     * @param storage The storage to save the tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"     * @return A string representation of the task that was marked as not done.","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException If there is an error executing the command.","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"    public String executeCommand(TaskList taskList, Storage storage) throws AlpaException {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"Task number out of range.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"        Task task \u003d taskList.markTaskAsNotDone(index);","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"        return String.format(\"Not done with this yet, human?\\n  %s\", task);","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"        return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ejnan":50}},{"path":"src/main/java/alpa/exceptions/AlpaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.exceptions;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":" * This class represents an exception specific to the Alpa application.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"public class AlpaException extends Exception {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"     * Constructs a new AlpaException with the specified detail message.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"     * @param message the detail message","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"    public AlpaException(String message) {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"        super(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"ejnan":16}},{"path":"src/main/java/alpa/main/Alpa.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.main;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import alpa.commands.Command;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import alpa.commands.Parser;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import alpa.exceptions.AlpaException;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":" * Represents the main class of the Alpa application.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":" * Alpa is a task management application that helps users keep track of their tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"public class Alpa {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"    private static final String FILE_PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"     * Represents the main class of the Alpa application.","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"    public Alpa() {","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"            tasks.addAll(storage.loadTasks());","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"        } catch (AlpaException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"            System.out.println(\"Failed to load tasks: \" + e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"     * Returns the task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"     * @return the task list","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"        return tasks;","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"     * Returns the storage object used by the application.","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"     * @return the storage object","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"    public Storage getStorage() {","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"        return storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"     * Processes input from the GUI and returns a response.","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"     * @param input User input from the GUI.","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"     * @return Response to be displayed in the GUI.","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"ejnan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"ejnan"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"ejnan"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"ejnan"},"content":"            return command.executeCommand(tasks, storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"ejnan"},"content":"        } catch (AlpaException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"ejnan"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"ejnan":63}},{"path":"src/main/java/alpa/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.main;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":" * A custom DialogBox control using FXML.","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"     * Creates a new DialogBox with the specified text and image.","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"     * @param img The image to be displayed in the dialog box.","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"     * @return A DialogBox with the specified text and image.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"        makeImageRound(displayPicture);","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"     * Makes the specified ImageView round.","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"ejnan"},"content":"     * @param imageView The ImageView to be made round.","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"ejnan"},"content":"    private void makeImageRound(ImageView imageView) {","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"ejnan"},"content":"        Circle clip \u003d new Circle(imageView.getFitWidth() / 2,","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"ejnan"},"content":"                                imageView.getFitHeight() / 2,","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"ejnan"},"content":"                                imageView.getFitWidth() / 2);","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"ejnan"},"content":"        imageView.setClip(clip);","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"ejnan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"ejnan"},"content":"    private void flip() {","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"ejnan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"ejnan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"ejnan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"ejnan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"ejnan"},"content":"     * Represents a dialog box that displays a message from the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"ejnan"},"content":"     * @param text The message from the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"ejnan"},"content":"     * @param img The user\u0027s profile picture.","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"ejnan"},"content":"     * @return A DialogBox representing the user\u0027s message.","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"ejnan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"ejnan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"ejnan"},"content":"        db.flip();","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"ejnan"},"content":"        db.getStyleClass().add(\"user-dialog\");","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"ejnan"},"content":"        db.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"ejnan"},"content":"        return db;","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"ejnan"},"content":"     * Represents a dialog box that displays a message from Alpa.","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"ejnan"},"content":"     * @param text The message from Alpa.","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"ejnan"},"content":"     * @param img Alpa\u0027s profile picture.","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"ejnan"},"content":"     * @return A DialogBox representing Alpa\u0027s message.","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"ejnan"},"content":"    public static DialogBox getAlpaDialog(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"ejnan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"ejnan"},"content":"        db.getStyleClass().add(\"alpa-dialog\");","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"ejnan"},"content":"        return db;","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"ejnan"},"content":"     * Represents a dialog box that displays an error message from Alpa.","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"ejnan"},"content":"     * @param text The error message from Alpa.","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"ejnan"},"content":"     * @param img Alpa\u0027s profile picture.","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"ejnan"},"content":"     * @return A DialogBox representing Alpa\u0027s error message.","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"ejnan"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"ejnan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"ejnan"},"content":"        db.getStyleClass().add(\"error-dialog\");","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"ejnan"},"content":"        return db;","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"ejnan":113}},{"path":"src/main/java/alpa/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.main;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"public class Launcher {","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"ejnan":12}},{"path":"src/main/java/alpa/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.main;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":" * A GUI for Alpa using FXML.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"    private Alpa alpa \u003d new Alpa();","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"     * Starts the application.","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"     * @param stage The stage to start the application in.","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"            stage.setTitle(\"Your Fluffy Assistant Alpa\");","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"            stage.setMinWidth(400); // Set minimum window width","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"            stage.setMinHeight(600); // Set minimum window height","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAlpa(alpa);","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"            stage.show();","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"ejnan":41}},{"path":"src/main/java/alpa/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.main;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import alpa.commands.Command;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import alpa.commands.Parser;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import alpa.exceptions.AlpaException;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"    private Alpa alpa;","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"    private Image alpaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Alpa.png\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"     * Initializes the main window.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"     * Binds the scrollPane to the dialogContainer and shows the welcome message.","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"        // Load the images","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"        userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"        alpaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Alpa.png\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"        showWelcome();","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"     * Sets the Alpa object to be used by the main window.","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"     * @param a The Alpa object to be used by the main window.","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"    public void setAlpa(Alpa a) {","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"        alpa \u003d a;","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"ejnan"},"content":"     * Shows the welcome message from Alpa.","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"ejnan"},"content":"    private void showWelcome() {","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"ejnan"},"content":"        String welcomeMessage \u003d \"Hello Human! I am your fluffy assistant, Alpa the Alpaca!\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"ejnan"},"content":"                                + \"I\u0027m here to help you sort through the woolly world of tasks.\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"ejnan"},"content":"        dialogContainer.getChildren().add(DialogBox.getAlpaDialog(welcomeMessage, alpaImage));","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"ejnan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"ejnan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"ejnan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"ejnan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"ejnan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"ejnan"},"content":"        if (!input.isBlank()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"ejnan"},"content":"            try {","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"ejnan"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"ejnan"},"content":"                String response \u003d alpa.getResponse(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"ejnan"},"content":"                dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"ejnan"},"content":"                dialogContainer.getChildren().add(DialogBox.getAlpaDialog(response, alpaImage));","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"ejnan"},"content":"                userInput.clear();","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"ejnan"},"content":"                if (command.isExit()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"ejnan"},"content":"                    closeApplication();","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"ejnan"},"content":"                }","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"ejnan"},"content":"            } catch (AlpaException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"ejnan"},"content":"                dialogContainer.getChildren().add(DialogBox.getErrorDialog(e.getMessage(), alpaImage));","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"ejnan"},"content":"                userInput.clear();","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"ejnan"},"content":"     * Closes the application window.","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"ejnan"},"content":"     * Performs any necessary cleanup before closing the window.","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"ejnan"},"content":"    private void closeApplication() {","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"ejnan"},"content":"        Stage stage \u003d (Stage) sendButton.getScene().getWindow();","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"ejnan"},"content":"        stage.close();","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"ejnan":99}},{"path":"src/main/java/alpa/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.tasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"     * Constructs a Deadline object with the given description and deadline.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"        assert description !\u003d null : \"Description cannot be empty\";","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"        assert deadline !\u003d null : \"Deadline cannot be empty\";","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"     * Returns the task in a format suitable for saving to a file.","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"     * @return The task in file format.","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"        return super.toFileFormat() + \" | \" + deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"        return \"[ D ]\" + super.toString() + \" (by: \"","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"                + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\")) + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ejnan":42}},{"path":"src/main/java/alpa/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.tasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"     * Constructs an Event object with the given description, start time, and end time.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     * @param start The start time of the event.","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"     * @param end The end time of the event.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"        assert description !\u003d null : \"Description cannot be empty\";","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"        assert start !\u003d null : \"Start time cannot be empty\";","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"        assert end !\u003d null : \"End time cannot be empty\";","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"        assert end.isAfter(start) : \"End time must be after start time\";","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"     * Returns the event task formatted for saving to a file.","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"     * @return The formatted string representation of the event task.","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"        return super.toFileFormat() + \" | \"","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"             + start.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"             + \" - \" + end.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"     * @return The string representation of the event task.","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"        return \"[ E ]\" + super.toString() + \" (from: \"","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"            + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\"))","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"            + \" to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\")) + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ejnan":51}},{"path":"src/main/java/alpa/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.tasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"    private TaskType type;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"     * Constructs a task with the given description and type.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"     * The task is initially not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     * @param type the type of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"     * @return the type of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"    public TaskType getType() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"        return type;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"     * @return the status icon of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"        return (isDone ? \"[ X ]\" : \"[   ]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"ejnan"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"ejnan"},"content":"     * @return the description of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"ejnan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"ejnan"},"content":"        return this.description;","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"ejnan"},"content":"     * Returns the task in file format.","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"ejnan"},"content":"     * @return the task in file format","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"ejnan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"ejnan"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"ejnan"},"content":"        return getType().getShortName() + \" | \" + status + \" | \" + description;","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"ejnan"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"ejnan"},"content":"     * @return the string representation of the task","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"ejnan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"ejnan"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ejnan":84}},{"path":"src/main/java/alpa/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.tasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"import alpa.exceptions.AlpaException;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"public class TaskList {","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     * Constructs list of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"     * Adds all the tasks in the given list to the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"     * @param tasks the list of tasks to be added","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"    public void addAll(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"     * Finds tasks in the task list that contain the specified keyword in their description.","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"     * @param keyword the keyword to search for in the task descriptions","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"     * @return a list of tasks that contain the specified keyword in their description","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"    public List\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"        return tasks.stream()","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"                    .filter(task -\u003e task.getDescription().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"     * Deletes a task from the task list at the specified index.","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"ejnan"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"ejnan"},"content":"     * @return The deleted task.","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException If the index is invalid.","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"ejnan"},"content":"    public Task deleteTask(int index) throws AlpaException {","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"ejnan"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"ejnan"},"content":"            return tasks.remove(index);","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"ejnan"},"content":"        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"\\nInvalid task number, human!!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"ejnan"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"ejnan"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"ejnan"},"content":"     * @return The task that has been marked as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException If the index is out of bounds.","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"ejnan"},"content":"    public Task markTaskAsDone(int index) throws AlpaException {","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"ejnan"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"\\nTask does not exist, human!!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"ejnan"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"ejnan"},"content":"        task.markAsDone();","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"ejnan"},"content":"        return task;","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"ejnan"},"content":"     * Marks a task as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"ejnan"},"content":"     * @param index The index of the task to mark as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"ejnan"},"content":"     * @return The task that was marked as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException If the index is out of bounds.","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"ejnan"},"content":"    public Task markTaskAsNotDone(int index) throws AlpaException {","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"ejnan"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"\\nTask does not exist, human!!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"ejnan"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"ejnan"},"content":"        task.markAsNotDone();","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"ejnan"},"content":"        return task;","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"ejnan"},"content":"     * Returns a copy of the list of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"ejnan"},"content":"     * @return a copy of the list of tasks","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"ejnan"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"ejnan"},"content":"        return List.copyOf(tasks);","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"ejnan"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"ejnan"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"ejnan"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"ejnan"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ejnan":116}},{"path":"src/main/java/alpa/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.tasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":" * Represents the type of a task.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"public enum TaskType {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"    TODO,","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"    DEADLINE,","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"    EVENT;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"     * Returns the short name of the task type.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"     * @return the short name of the task type","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"    public String getShortName() {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"        switch (this) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"        case TODO:","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"            return \"T\";","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"            return \"D\";","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"        case EVENT:","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"            return \"E\";","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"            return \"Unknown\";","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"     * Returns the TaskType enum value corresponding to the given short name.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"     * @param shortName the short name of the task type","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"     * @return the TaskType enum value corresponding to the given short name","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"     * @throws IllegalArgumentException if the short name is unknown","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"    public static TaskType fromShortName(String shortName) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"        switch (shortName) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"        case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"            return TODO;","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"        case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"            return DEADLINE;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"        case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"            return EVENT;","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"            throw new IllegalArgumentException(\"Unknown TaskType: \" + shortName);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ejnan":48}},{"path":"src/main/java/alpa/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.tasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":" * Represents a ToDo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"     * Constructs a ToDo task with the given description.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"     * @return A string representation of the ToDo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"        return \"[ T ]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ejnan":24}},{"path":"src/main/java/alpa/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.Task;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":" * The Ui class represents the user interface of the application.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":" * It provides methods to display messages, read user input, and handle errors.","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"public class Ui {","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"     * Initializes the scanner to read user input from the console.","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"    public Ui() {","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"     * Displays a welcome message along with an ASCII art of an Alpaca.","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"     * The Alpaca art is scaled down by half for better visibility.","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"        String logo \u003d","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"                \"     _    _             \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"                + \"    / \\\\  | |_ __   __ _ \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"                + \"   / _ \\\\ | | \u0027_ \\\\ / _` |\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"                + \"  / ___ \\\\| | |_) | (_| |\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"                + \" /_/   \\\\_\\\\_| .__/ \\\\__,_|\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"                + \"           |_|          \";","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"        String[] art \u003d {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⠀⠀⡾⣦⡀⠀⠀⡀⠀⣰⢷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⠀⣠⠗⠛⠽⠛⠋⠉⢳⡃⢨⢧⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"            \"⠀⣰⠋⠁⠀⠀⠀⠀⠀⠀⠙⠛⢾⡈⡏⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"            \"⣼⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"            \"⠸⢦⡀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"            \"⠀⢈⠟⠓⠶⠞⠒⢻⣿⡏⢳⡀⠀⠀⠀⠀⢸⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"            \"⡴⢉⠀⠀⠀⠀⠀⠈⠛⢁⣸⠇⠀⠀⠀⠀⢺⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"            \"⢧⣸⡁⠀⠀⣀⠀⠀⣠⠾⠀⠀⠀⠀⠀⠀⣹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"            \"⠀⠉⠓⢲⠾⣍⣀⣀⡿⠃⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⠀⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⠀⠀⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⠀⢀⡗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⠀⢸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⠀⣸⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠺⠦⠤⠤⣤⣄⣀⣀⡀⠀⠀⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠳⣦⣄⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⢀⡷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣆⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣆\",","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿\",","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⢹⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼\",","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⠀⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡞\",","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⠀⠈⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡇\",","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⠀⠀⠈⢻⣦⣀⠀⣏⠀⠀⠀⠀⠀⠀⢸⡆⠀⠀⢠⡄⠀⠀⠀⠀⠀⢀⡿⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⠀⠀⠀⠀⠻⡉⠙⢻⡆⠀⠀⠀⠀⠀⡾⠚⠓⣖⠛⣧⡀⠀⠀⠀⢀⡾⠁⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠙⡇⢀⡿⣦⡀⠀⢀⡴⠃⠀⠀⠈⣷⢈⠷⡆⠀⣴⠛⠀⠀⠀\",","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"ejnan"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠛⠚⠀⢸⡇⣰⠏⠁⠀⠀⠀⠀⢉⠁⢸⠷⠼⠃⠀⠀⠀⠀\"","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"ejnan"},"content":"        };","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"ejnan"},"content":"        // Image scaled down by half","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"ejnan"},"content":"        StringBuilder scaledArt \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"ejnan"},"content":"        for (int i \u003d 0; i \u003c art.length; i +\u003d 2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"ejnan"},"content":"            for (int j \u003d 0; j \u003c art[i].length(); j +\u003d 2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"ejnan"},"content":"                scaledArt.append(art[i].charAt(j));","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"ejnan"},"content":"            scaledArt.append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"ejnan"},"content":"        System.out.println(\"Hello Human! I am your fluffy assistant, \\n\" + logo + \"\\n the Alpaca! \\n\" + scaledArt);","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"ejnan"},"content":"        System.out.println(\"I\u0027m here to help you sort through the woolly world of tasks.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"ejnan"},"content":"        System.out.println(\"෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴෴⚘෴⚘෴෴⚘෴\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"ejnan"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"ejnan"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"ejnan"},"content":"        System.out.println(\"\\nIt\u0027s been a pleasure grazing through your tasks! Goodbye human! Stay cozy!\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"ejnan"},"content":"        System.out.println(\"𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"ejnan"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"ejnan"},"content":"     * @return the command entered by the user as a String.","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"ejnan"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"ejnan"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"ejnan"},"content":"     * Displays an error message when loading fails.","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"ejnan"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"ejnan"},"content":"    public void showLoadingError(String message) {","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"ejnan"},"content":"        printDecoratedMessage(message);","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"ejnan"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"ejnan"},"content":"     * @param message the error message to be displayed","lastModifiedDate":"2024-02-15"},{"lineNumber":105,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"ejnan"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"ejnan"},"content":"        printDecoratedMessage(message);","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"ejnan"},"content":"     * Displays a message indicating that a task has been added successfully.","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"ejnan"},"content":"     * @param task The task that was added.","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"ejnan"},"content":"     * @param size The number of tasks in the list after adding the new task.","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"ejnan"},"content":"    public void showAddedTask(Task task, int size) {","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"ejnan"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"ejnan"},"content":"        message.append(\"\\nYou added a task human!\\n\" + \"  \" + task).append(\"\\n\")","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"ejnan"},"content":"                .append(\"Now you have \").append(size).append(\" tasks in your list!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"ejnan"},"content":"        printDecoratedMessage(message.toString());","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"ejnan"},"content":"     * Displays the task list to the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"ejnan"},"content":"     * If the task list is empty, it prints a message indicating that the list is empty.","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"ejnan"},"content":"     * Otherwise, it prints the task list in a formatted manner.","lastModifiedDate":"2024-02-15"},{"lineNumber":127,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":128,"author":{"gitId":"ejnan"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":130,"author":{"gitId":"ejnan"},"content":"    public void showTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"ejnan"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"ejnan"},"content":"            printDecoratedMessage(\"\\nYour list is empty, human!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":133,"author":{"gitId":"ejnan"},"content":"            return;","lastModifiedDate":"2024-02-11"},{"lineNumber":134,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":135,"author":{"gitId":"ejnan"},"content":"        StringBuilder listOutput \u003d new StringBuilder(\"\\nYour list, human!\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"ejnan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"ejnan"},"content":"            listOutput.append(\"  \").append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":138,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":139,"author":{"gitId":"ejnan"},"content":"        printDecoratedMessage(listOutput.toString());","lastModifiedDate":"2024-02-11"},{"lineNumber":140,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":141,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":142,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":143,"author":{"gitId":"ejnan"},"content":"     * Displays the found tasks to the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":144,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":145,"author":{"gitId":"ejnan"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":146,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":147,"author":{"gitId":"ejnan"},"content":"    public void showFoundTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-15"},{"lineNumber":148,"author":{"gitId":"ejnan"},"content":"        StringBuilder messageBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-15"},{"lineNumber":149,"author":{"gitId":"ejnan"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":150,"author":{"gitId":"ejnan"},"content":"            messageBuilder.append(\"\\nHuman! There are no tasks!!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":151,"author":{"gitId":"ejnan"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":152,"author":{"gitId":"ejnan"},"content":"            messageBuilder.append(\"\\nHere are the matching tasks in your list human:\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":153,"author":{"gitId":"ejnan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-15"},{"lineNumber":154,"author":{"gitId":"ejnan"},"content":"                messageBuilder.append((i + 1) + \". \" + tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":155,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":156,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":157,"author":{"gitId":"ejnan"},"content":"        printDecoratedMessage(messageBuilder.toString());","lastModifiedDate":"2024-02-15"},{"lineNumber":158,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"ejnan"},"content":"     * Displays a message indicating that a task has been deleted.","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"ejnan"},"content":"     * @param task The task that has been deleted.","lastModifiedDate":"2024-02-15"},{"lineNumber":164,"author":{"gitId":"ejnan"},"content":"     * @param size The number of tasks remaining after deletion.","lastModifiedDate":"2024-02-15"},{"lineNumber":165,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":166,"author":{"gitId":"ejnan"},"content":"    public void showDeletedTask(Task task, int size) {","lastModifiedDate":"2024-02-11"},{"lineNumber":167,"author":{"gitId":"ejnan"},"content":"        printDecoratedMessage(\"\\nRemoved this task for you, human.\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":168,"author":{"gitId":"ejnan"},"content":"             + \"  \" + task + \"\\nNow you have \" + size + \" tasks left human!\");","lastModifiedDate":"2024-02-16"},{"lineNumber":169,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":170,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":171,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":172,"author":{"gitId":"ejnan"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":173,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":174,"author":{"gitId":"ejnan"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":175,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":176,"author":{"gitId":"ejnan"},"content":"    public void showMarkedAsDone(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":177,"author":{"gitId":"ejnan"},"content":"        printDecoratedMessage(\"\\nMarked as done, human!\\n\" + \"  \" + task);","lastModifiedDate":"2024-02-11"},{"lineNumber":178,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":179,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":180,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":181,"author":{"gitId":"ejnan"},"content":"     * Displays a message indicating that a task has been marked as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":182,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":183,"author":{"gitId":"ejnan"},"content":"     * @param task The task that has been marked as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":184,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":185,"author":{"gitId":"ejnan"},"content":"    public void showMarkedAsNotDone(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":186,"author":{"gitId":"ejnan"},"content":"        printDecoratedMessage(\"\\nNot done with this yet, human?\\n\" + \"  \" + task);","lastModifiedDate":"2024-02-11"},{"lineNumber":187,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":188,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":189,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":190,"author":{"gitId":"ejnan"},"content":"     * Prints a message with a decorative pattern.","lastModifiedDate":"2024-02-15"},{"lineNumber":191,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":192,"author":{"gitId":"ejnan"},"content":"     * @param message the message to be printed","lastModifiedDate":"2024-02-15"},{"lineNumber":193,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":194,"author":{"gitId":"ejnan"},"content":"    public void printDecoratedMessage(String message) {","lastModifiedDate":"2024-02-11"},{"lineNumber":195,"author":{"gitId":"ejnan"},"content":"        String decoration \u003d \"\\n↟ᨒᨒᨒ↟ᨒᨒᨒ↟ᨒᨒᨒ↟ᨒᨒᨒ↟↟ᨒᨒᨒ↟ᨒᨒᨒ↟↟ᨒᨒᨒ↟ᨒᨒᨒ↟↟ᨒᨒᨒ↟ᨒᨒᨒ↟↟ᨒᨒᨒ↟ᨒᨒᨒ↟ᨒᨒᨒ↟ᨒᨒᨒ↟↟ᨒᨒᨒ↟ᨒᨒᨒ↟↟ᨒᨒᨒ↟ᨒᨒᨒ↟↟ᨒᨒᨒ↟\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":196,"author":{"gitId":"ejnan"},"content":"        System.out.println(message + decoration);","lastModifiedDate":"2024-02-11"},{"lineNumber":197,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":198,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ejnan":198}},{"path":"src/main/java/alpa/utils/DateTimeUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.utils;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"import java.util.Locale;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":" * Utility class for parsing and formatting date and time values.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"public class DateTimeUtils {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"     * Array of date patterns used for parsing and formatting dates.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"     * The patterns include variations with and without the year component, as well as patterns with month names.","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"    private static final String[] DATE_PATTERNS \u003d {","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"        \"d/M/yyyy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"        \"d-M-yyyy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"        \"d/M/yy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"        \"d-M-yy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"        \"dMMyyyy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"        \"dMMyy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"        \"dd/MM/yyyy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"        \"dd/MM/yy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"        \"dd-MM-yyyy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"        \"dd-MM-yy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"        \"ddMMyyyy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"        \"ddMMyy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"        \"d/M\",","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"        \"d/MMM/yyyy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"        \"d/MMM/yy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"        \"d/MMM\",","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"        \"MMM/d\",","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"        \"d MMM yyyy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"        \"MMM d yyyy\",","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"        \"d MMM\",","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"        \"MMM d\",","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"    };","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"     * Array of date patterns without the year component.","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"     * Used by the parseDeadlineDateTime method to parse date-only strings","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"     * without a year component when time is not specified.","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"    private static final String[] DATE_WITHOUT_YEAR_PATTERNS \u003d {","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"        \"d/M\",","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"ejnan"},"content":"        \"d/MMM\",","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"ejnan"},"content":"        \"MMM/d\",","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"ejnan"},"content":"        \"d MMM\",","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"ejnan"},"content":"        \"MMM d\",","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"ejnan"},"content":"    };","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"ejnan"},"content":"     * An array of time patterns used for parsing and formatting time values.","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"ejnan"},"content":"     * The patterns include 12-hour and 24-hour clock format and variations with and without minutes,","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"ejnan"},"content":"     * as well as patterns with AM/PM indicators.","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"ejnan"},"content":"    private static final String[] TIME_PATTERNS \u003d {","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"ejnan"},"content":"        \"HHmm\",","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"ejnan"},"content":"        \"HH:mm\",","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"ejnan"},"content":"        \"h:mm a\",","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"ejnan"},"content":"        \"h:mma\",","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"ejnan"},"content":"        \"h a\",","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"ejnan"},"content":"        \"ha\",","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"ejnan"},"content":"    };","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"ejnan"},"content":"     * A list of DateTimeFormatters used for parsing and formatting date and time values.","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"ejnan"},"content":"    private static final List\u003cDateTimeFormatter\u003e FORMATTERS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"ejnan"},"content":"    static {","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"ejnan"},"content":"        for (String datePattern : DATE_PATTERNS) {","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"ejnan"},"content":"            for (String timePattern : TIME_PATTERNS) {","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"ejnan"},"content":"                DateTimeFormatterBuilder builder \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"ejnan"},"content":"                            .appendPattern(datePattern + \" \" + timePattern)","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"ejnan"},"content":"                            .parseDefaulting(ChronoField.YEAR_OF_ERA, LocalDate.now().getYear())","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"ejnan"},"content":"                            .parseCaseInsensitive();","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"ejnan"},"content":"                // Check if the time pattern involves AM/PM notation","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"ejnan"},"content":"                if (timePattern.contains(\"a\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"ejnan"},"content":"                    // For AM/PM time patterns, default CLOCK_HOUR_OF_AMPM and AMPM_OF_DAY if necessary","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"ejnan"},"content":"                    builder.parseDefaulting(ChronoField.CLOCK_HOUR_OF_AMPM, 11)","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"ejnan"},"content":"                        .parseDefaulting(ChronoField.AMPM_OF_DAY, 1); // Default to PM if not specified","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"ejnan"},"content":"                } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"ejnan"},"content":"                    // For 24-hour time patterns or date-only, default to the end of the day","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"ejnan"},"content":"                    builder.parseDefaulting(ChronoField.HOUR_OF_DAY, 23)","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"ejnan"},"content":"                        .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 59);","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"ejnan"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"ejnan"},"content":"                DateTimeFormatter formatter \u003d builder.toFormatter(Locale.ENGLISH);","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"ejnan"},"content":"                FORMATTERS.add(formatter);","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"ejnan"},"content":"            // Add a formatter for date only, defaulting to end of the day","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"ejnan"},"content":"            DateTimeFormatter dateFormatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"ejnan"},"content":"                        .appendPattern(datePattern)","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"ejnan"},"content":"                        .parseDefaulting(ChronoField.HOUR_OF_DAY, 23)","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"ejnan"},"content":"                        .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 59)","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"ejnan"},"content":"                        .parseCaseInsensitive()","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"ejnan"},"content":"                        .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"ejnan"},"content":"            FORMATTERS.add(dateFormatter);","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":111,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":112,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"ejnan"},"content":"     * Parses a string representation of date and time into a {@link LocalDateTime} object.","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"ejnan"},"content":"     * @param dateTimeStr the string representation of date and time","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"ejnan"},"content":"     * @return the parsed {@link LocalDateTime} object","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"ejnan"},"content":"     * @throws DateTimeParseException if the input string is not in a valid date and time format","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"ejnan"},"content":"    public static LocalDateTime parseDateTime(String dateTimeStr) throws DateTimeParseException {","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"ejnan"},"content":"        // Preprocess the input string to normalize formatting","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"ejnan"},"content":"        String normalizedDateTimeStr \u003d normalizeDateTimeString(dateTimeStr);","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"ejnan"},"content":"        for (DateTimeFormatter formatter : FORMATTERS) {","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"ejnan"},"content":"            try {","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"ejnan"},"content":"                return LocalDateTime.parse(normalizedDateTimeStr, formatter);","lastModifiedDate":"2024-02-11"},{"lineNumber":126,"author":{"gitId":"ejnan"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"ejnan"},"content":"                // Continue trying with the next formatter","lastModifiedDate":"2024-02-11"},{"lineNumber":128,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"ejnan"},"content":"        throw new DateTimeParseException(\"Invalid date or time format\", dateTimeStr, 0);","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"ejnan"},"content":"     * Normalizes a given date-time string by removing leading and trailing whitespace,","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"ejnan"},"content":"     * normalizing space around slashes (/) and dashes (-) for dates,","lastModifiedDate":"2024-02-15"},{"lineNumber":136,"author":{"gitId":"ejnan"},"content":"     * normalizing space before AM/PM markers, and ensuring AM/PM markers are uppercase.","lastModifiedDate":"2024-02-15"},{"lineNumber":137,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"ejnan"},"content":"     * @param dateTimeStr the date-time string to be normalized","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"ejnan"},"content":"     * @return the normalized date-time string","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":141,"author":{"gitId":"ejnan"},"content":"    private static String normalizeDateTimeString(String dateTimeStr) {","lastModifiedDate":"2024-02-11"},{"lineNumber":142,"author":{"gitId":"ejnan"},"content":"        // Trim leading and trailing whitespace","lastModifiedDate":"2024-02-11"},{"lineNumber":143,"author":{"gitId":"ejnan"},"content":"        String normalized \u003d dateTimeStr.trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":144,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"ejnan"},"content":"        // Normalize space around slashes (/) and dashes (-) for dates","lastModifiedDate":"2024-02-11"},{"lineNumber":146,"author":{"gitId":"ejnan"},"content":"        normalized \u003d normalized.replaceAll(\"\\\\s*/\\\\s*\", \"/\");","lastModifiedDate":"2024-02-11"},{"lineNumber":147,"author":{"gitId":"ejnan"},"content":"        normalized \u003d normalized.replaceAll(\"\\\\s*-\\\\s*\", \"-\");","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"ejnan"},"content":"        // Normalize space before AM/PM markers to ensure consistent formatting","lastModifiedDate":"2024-02-11"},{"lineNumber":150,"author":{"gitId":"ejnan"},"content":"        normalized \u003d normalized.replaceAll(\"\\\\s+(AM|am|PM|pm)\", \" $1\");","lastModifiedDate":"2024-02-11"},{"lineNumber":151,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":152,"author":{"gitId":"ejnan"},"content":"        // Ensure AM/PM markers are uppercase for consistency with patterns (optional)","lastModifiedDate":"2024-02-11"},{"lineNumber":153,"author":{"gitId":"ejnan"},"content":"        normalized \u003d normalized.replaceAll(\"am\", \"AM\").replaceAll(\"pm\", \"PM\");","lastModifiedDate":"2024-02-11"},{"lineNumber":154,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":155,"author":{"gitId":"ejnan"},"content":"        return normalized;","lastModifiedDate":"2024-02-11"},{"lineNumber":156,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":157,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":158,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"ejnan"},"content":"     * Parses a string representation of a deadline into a {@link LocalDateTime} object.","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"ejnan"},"content":"     * @param deadlineStr the string representation of the date and time","lastModifiedDate":"2024-02-22"},{"lineNumber":162,"author":{"gitId":"ejnan"},"content":"     * @return the parsed {@link LocalDateTime} object","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"ejnan"},"content":"     * @throws DateTimeParseException if the input string is not in a valid date and time format","lastModifiedDate":"2024-02-15"},{"lineNumber":164,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":165,"author":{"gitId":"ejnan"},"content":"    public static LocalDateTime parseDeadlineDateTime(String deadlineStr) throws DateTimeParseException {","lastModifiedDate":"2024-02-11"},{"lineNumber":166,"author":{"gitId":"ejnan"},"content":"        // Attempt to parse the string directly with existing formatters","lastModifiedDate":"2024-02-11"},{"lineNumber":167,"author":{"gitId":"ejnan"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":168,"author":{"gitId":"ejnan"},"content":"            return parseDateTime(deadlineStr);","lastModifiedDate":"2024-02-11"},{"lineNumber":169,"author":{"gitId":"ejnan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":170,"author":{"gitId":"ejnan"},"content":"            // Check if the input matches any of the date without year patterns","lastModifiedDate":"2024-02-11"},{"lineNumber":171,"author":{"gitId":"ejnan"},"content":"            for (String pattern : DATE_WITHOUT_YEAR_PATTERNS) {","lastModifiedDate":"2024-02-11"},{"lineNumber":172,"author":{"gitId":"ejnan"},"content":"                try {","lastModifiedDate":"2024-02-11"},{"lineNumber":173,"author":{"gitId":"ejnan"},"content":"                    DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2024-02-11"},{"lineNumber":174,"author":{"gitId":"ejnan"},"content":"                            .appendPattern(pattern)","lastModifiedDate":"2024-02-11"},{"lineNumber":175,"author":{"gitId":"ejnan"},"content":"                            .parseDefaulting(ChronoField.YEAR, LocalDate.now().getYear())","lastModifiedDate":"2024-02-11"},{"lineNumber":176,"author":{"gitId":"ejnan"},"content":"                            .parseDefaulting(ChronoField.HOUR_OF_DAY, 23) // Default to end of the day","lastModifiedDate":"2024-02-11"},{"lineNumber":177,"author":{"gitId":"ejnan"},"content":"                            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 59)","lastModifiedDate":"2024-02-11"},{"lineNumber":178,"author":{"gitId":"ejnan"},"content":"                            .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2024-02-11"},{"lineNumber":179,"author":{"gitId":"ejnan"},"content":"                    LocalDate date \u003d LocalDate.parse(deadlineStr, formatter);","lastModifiedDate":"2024-02-11"},{"lineNumber":180,"author":{"gitId":"ejnan"},"content":"                    return LocalDateTime.of(date, LocalTime.of(23, 59)); // Use end of the day","lastModifiedDate":"2024-02-11"},{"lineNumber":181,"author":{"gitId":"ejnan"},"content":"                } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-02-11"},{"lineNumber":182,"author":{"gitId":"ejnan"},"content":"                    // Ignore and try the next pattern","lastModifiedDate":"2024-02-11"},{"lineNumber":183,"author":{"gitId":"ejnan"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":184,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":185,"author":{"gitId":"ejnan"},"content":"            // If none of the patterns match, re-throw the original exception","lastModifiedDate":"2024-02-11"},{"lineNumber":186,"author":{"gitId":"ejnan"},"content":"            throw new DateTimeParseException(\"Invalid date or time format\", deadlineStr, 0);","lastModifiedDate":"2024-02-11"},{"lineNumber":187,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":188,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":189,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":190,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":191,"author":{"gitId":"ejnan"},"content":"     * Attempts to parse the end time of an event task, given the end time string and the start date.","lastModifiedDate":"2024-02-15"},{"lineNumber":192,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":193,"author":{"gitId":"ejnan"},"content":"     * @param endStr the string representation of the end time","lastModifiedDate":"2024-02-15"},{"lineNumber":194,"author":{"gitId":"ejnan"},"content":"     * @param startDate the start date of the event","lastModifiedDate":"2024-02-15"},{"lineNumber":195,"author":{"gitId":"ejnan"},"content":"     * @return the parsed {@link LocalDateTime} object","lastModifiedDate":"2024-02-15"},{"lineNumber":196,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":197,"author":{"gitId":"ejnan"},"content":"    public static LocalDateTime tryParseEndDateTime(String endStr, LocalDate startDate) {","lastModifiedDate":"2024-02-11"},{"lineNumber":198,"author":{"gitId":"ejnan"},"content":"        for (String timePattern : TIME_PATTERNS) {","lastModifiedDate":"2024-02-11"},{"lineNumber":199,"author":{"gitId":"ejnan"},"content":"            try {","lastModifiedDate":"2024-02-11"},{"lineNumber":200,"author":{"gitId":"ejnan"},"content":"                DateTimeFormatter timeFormatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2024-02-11"},{"lineNumber":201,"author":{"gitId":"ejnan"},"content":"                        .appendPattern(timePattern)","lastModifiedDate":"2024-02-11"},{"lineNumber":202,"author":{"gitId":"ejnan"},"content":"                        .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2024-02-11"},{"lineNumber":203,"author":{"gitId":"ejnan"},"content":"                LocalTime endTime \u003d LocalTime.parse(endStr, timeFormatter);","lastModifiedDate":"2024-02-11"},{"lineNumber":204,"author":{"gitId":"ejnan"},"content":"                return LocalDateTime.of(startDate, endTime);","lastModifiedDate":"2024-02-11"},{"lineNumber":205,"author":{"gitId":"ejnan"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-02-11"},{"lineNumber":206,"author":{"gitId":"ejnan"},"content":"            // Ignore and try the next time pattern","lastModifiedDate":"2024-02-11"},{"lineNumber":207,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":208,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":209,"author":{"gitId":"ejnan"},"content":"        // If none of the time patterns match, attempt parsing as full LocalDateTime","lastModifiedDate":"2024-02-11"},{"lineNumber":210,"author":{"gitId":"ejnan"},"content":"        return parseDateTime(endStr); // Fallback to using the existing parseDateTime method","lastModifiedDate":"2024-02-11"},{"lineNumber":211,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":212,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ejnan":212}},{"path":"src/main/java/alpa/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa.utils;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"import java.io.File;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"import alpa.exceptions.AlpaException;","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.Deadline;","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.Event;","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskType;","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.ToDo;","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":" * The Storage class is responsible for loading and saving tasks to a file.","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"public class Storage {","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"    private String filePath;","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"     * @param filePath The path of the file to be managed by the storage.","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"        ensureDirectoryExists();","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"     * Ensures that the directory containing the file path exists.","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"    private void ensureDirectoryExists() {","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"        File directory \u003d new File(filePath).getParentFile();","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"            directory.mkdirs();","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"ejnan"},"content":"     * Loads tasks from a file and returns them as a list.","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"ejnan"},"content":"     * @return The list of loaded tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException If the file is not found or an error occurs while reading the file.","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"ejnan"},"content":"    public List\u003cTask\u003e loadTasks() throws AlpaException {","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"ejnan"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"ejnan"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"ejnan"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"ejnan"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"ejnan"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"ejnan"},"content":"                Task task \u003d parseLineToTask(line);","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"ejnan"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"ejnan"},"content":"                    loadedTasks.add(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"ejnan"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"ejnan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"\\nFile not found human...\" + e.getMessage());","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"ejnan"},"content":"        return loadedTasks;","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"ejnan"},"content":"     * Parses a line from the file to a Task object.","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"ejnan"},"content":"     * @param line The line to be parsed.","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"ejnan"},"content":"     * @return The Task object parsed from the line.","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException If an error occurs while parsing the line.","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"ejnan"},"content":"    private Task parseLineToTask(String line) throws AlpaException {","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"ejnan"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"ejnan"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"Invalid line format: \" + line);","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"ejnan"},"content":"        TaskType taskType \u003d TaskType.fromShortName(parts[0]);","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"ejnan"},"content":"        boolean isDone \u003d \"1\".equals(parts[1]);","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"ejnan"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"ejnan"},"content":"        Task task;","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"ejnan"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"ejnan"},"content":"        case TODO:","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"ejnan"},"content":"            task \u003d parseToDoTask(description, isDone);","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"ejnan"},"content":"            break;","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"ejnan"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"ejnan"},"content":"            task \u003d parseDeadlineTask(parts, isDone);","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"ejnan"},"content":"            break;","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"ejnan"},"content":"        case EVENT:","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"ejnan"},"content":"            task \u003d parseEventTask(parts, isDone);","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"ejnan"},"content":"            break;","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"ejnan"},"content":"        default:","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"Unrecognized task type: \" + taskType);","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"ejnan"},"content":"        return task;","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"ejnan"},"content":"     * Parses a line from the file to a ToDo object.","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"ejnan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"ejnan"},"content":"     * @param isDone     Whether the task is done.","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"ejnan"},"content":"     * @return The ToDo object parsed from the line.","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"ejnan"},"content":"    private ToDo parseToDoTask(String description, boolean isDone) {","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"ejnan"},"content":"        ToDo task \u003d new ToDo(description);","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"ejnan"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"ejnan"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"ejnan"},"content":"        return task;","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"ejnan"},"content":"     * Parses a line from the file to a Deadline object.","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"ejnan"},"content":"     * @param parts The parts of the line to be parsed.","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"ejnan"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"ejnan"},"content":"     * @return The Deadline object parsed from the line.","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException If an error occurs while parsing the line.","lastModifiedDate":"2024-02-22"},{"lineNumber":128,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"ejnan"},"content":"    private Deadline parseDeadlineTask(String[] parts, boolean isDone) throws AlpaException {","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"ejnan"},"content":"        if (parts.length \u003c 4) {","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"Invalid deadline task format.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"ejnan"},"content":"        LocalDateTime time \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"ejnan"},"content":"        Deadline task \u003d new Deadline(parts[2], time);","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"ejnan"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"ejnan"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"ejnan"},"content":"        return task;","lastModifiedDate":"2024-02-22"},{"lineNumber":139,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":140,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":142,"author":{"gitId":"ejnan"},"content":"     * Parses a line from the file to an Event object.","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"ejnan"},"content":"     * @param parts The parts of the line to be parsed.","lastModifiedDate":"2024-02-22"},{"lineNumber":145,"author":{"gitId":"ejnan"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2024-02-22"},{"lineNumber":146,"author":{"gitId":"ejnan"},"content":"     * @return The Event object parsed from the line.","lastModifiedDate":"2024-02-22"},{"lineNumber":147,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException If an error occurs while parsing the line.","lastModifiedDate":"2024-02-22"},{"lineNumber":148,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":149,"author":{"gitId":"ejnan"},"content":"    private Event parseEventTask(String[] parts, boolean isDone) throws AlpaException {","lastModifiedDate":"2024-02-22"},{"lineNumber":150,"author":{"gitId":"ejnan"},"content":"        if (parts.length \u003c 5) {","lastModifiedDate":"2024-02-22"},{"lineNumber":151,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"Invalid event task format.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":152,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":153,"author":{"gitId":"ejnan"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":154,"author":{"gitId":"ejnan"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(parts[4], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":155,"author":{"gitId":"ejnan"},"content":"        Event task \u003d new Event(parts[2], start, end);","lastModifiedDate":"2024-02-22"},{"lineNumber":156,"author":{"gitId":"ejnan"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-22"},{"lineNumber":157,"author":{"gitId":"ejnan"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-22"},{"lineNumber":158,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":159,"author":{"gitId":"ejnan"},"content":"        return task;","lastModifiedDate":"2024-02-22"},{"lineNumber":160,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":161,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":162,"author":{"gitId":"ejnan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"ejnan"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2024-02-15"},{"lineNumber":164,"author":{"gitId":"ejnan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":165,"author":{"gitId":"ejnan"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2024-02-15"},{"lineNumber":166,"author":{"gitId":"ejnan"},"content":"     * @throws AlpaException If an error occurs while saving the tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":167,"author":{"gitId":"ejnan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":168,"author":{"gitId":"ejnan"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) throws AlpaException {","lastModifiedDate":"2024-02-11"},{"lineNumber":169,"author":{"gitId":"ejnan"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-11"},{"lineNumber":170,"author":{"gitId":"ejnan"},"content":"                BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2024-02-11"},{"lineNumber":171,"author":{"gitId":"ejnan"},"content":"                PrintWriter out \u003d new PrintWriter(bw)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":172,"author":{"gitId":"ejnan"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":173,"author":{"gitId":"ejnan"},"content":"                out.println(task.toFileFormat());","lastModifiedDate":"2024-02-11"},{"lineNumber":174,"author":{"gitId":"ejnan"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":175,"author":{"gitId":"ejnan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":176,"author":{"gitId":"ejnan"},"content":"            throw new AlpaException(\"\\nError! Could not save tasks!\" + e.getMessage());","lastModifiedDate":"2024-02-11"},{"lineNumber":177,"author":{"gitId":"ejnan"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":178,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":179,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"ejnan":179}},{"path":"src/main/java/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"E | 0 | project meeting | 2022-12-02 14:00 - 2022-12-02 16:00","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"E | 0 | project meeting | 2022-12-02 14:00 - 2022-12-03 16:00","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"D | 0 | return book | 2022-12-02 18:30","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"ejnan":3}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"\u003cfx:root type\u003d\"HBox\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"10\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" stylesheets\u003d\"@style.css\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"90\" fitWidth\u003d\"90\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialog-text\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"ejnan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"alpa.main.MainWindow\" stylesheets\u003d\"@style.css\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" prefHeight\u003d\"565.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" AnchorPane.bottomAnchor\u003d\"35.0\" AnchorPane.leftAnchor\u003d\"0\" AnchorPane.rightAnchor\u003d\"0\" AnchorPane.topAnchor\u003d\"0\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" fillWidth\u003d\"true\" spacing\u003d\"10\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"0\" AnchorPane.leftAnchor\u003d\"0\" AnchorPane.rightAnchor\u003d\"76\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" styleClass\u003d\"button\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"75\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0\" AnchorPane.rightAnchor\u003d\"0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"ejnan":19}},{"path":"src/test/java/alpa/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"import org.mockito.Mock;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"import org.mockito.MockitoAnnotations;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"import alpa.commands.DeadlineCommand;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.Deadline;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"class DeadlineCommandTest {","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"    @Mock","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"    private Storage mockStorage;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"    void setUp() {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"        MockitoAnnotations.openMocks(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"    void executeCommand_validDeadlineDetails_correctToFileFormat() throws Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"        String details \u003d \"finish report /by 15/12/2022\";","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"        DeadlineCommand command \u003d new DeadlineCommand(details);","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"        String expectedFormat \u003d \"D | 0 | finish report | 2022-12-15 23:59\";","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"        command.executeCommand(taskList, mockStorage);","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"        assertEquals(1, taskList.getSize()); // Ensure a deadline was added","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"        Deadline addedDeadline \u003d (Deadline) taskList.getTasks().get(0);","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"        // Verify the toFileFormat output matches the expected format","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"        String actualFormat \u003d addedDeadline.toFileFormat();","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"        assertEquals(expectedFormat, actualFormat);","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ejnan":43}},{"path":"src/test/java/alpa/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"package alpa;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"import org.mockito.Mock;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"import org.mockito.MockitoAnnotations;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"import alpa.commands.EventCommand;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.Event;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"import alpa.tasks.TaskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"import alpa.utils.Storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"ejnan"},"content":"class EventCommandTest {","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"ejnan"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"ejnan"},"content":"    @Mock","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"ejnan"},"content":"    private Storage mockStorage;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"ejnan"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"ejnan"},"content":"    void setUp() {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"        MockitoAnnotations.openMocks(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"ejnan"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"ejnan"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"ejnan"},"content":"    void executeCommand_validEventDetails_correctToFileFormat() throws Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"ejnan"},"content":"        // Arrange","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"ejnan"},"content":"        String details \u003d \"project meeting /from 12 Feb 2 PM /to 3 PM\";","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"ejnan"},"content":"        EventCommand command \u003d new EventCommand(details);","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"ejnan"},"content":"        String expectedFormat \u003d \"E | 0 | project meeting | 2024-02-12 14:00 - 2024-02-12 15:00\";","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"ejnan"},"content":"        // Act","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"ejnan"},"content":"        command.executeCommand(taskList, mockStorage);","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"ejnan"},"content":"        // Assert","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"ejnan"},"content":"        assertEquals(1, taskList.getSize()); // Ensure an event was added","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"ejnan"},"content":"        Event addedEvent \u003d (Event) taskList.getTasks().get(0);","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"ejnan"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"ejnan"},"content":"        // Format the start and end times as expected in the toFileFormat output","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"ejnan"},"content":"        String actualFormat \u003d addedEvent.toFileFormat();","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"ejnan"},"content":"        assertEquals(expectedFormat, actualFormat);","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"ejnan"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"ejnan"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"ejnan":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ejnan"},"content":"todo Read a book","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"ejnan"},"content":"deadline Return book /by 2024-02-20","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"ejnan"},"content":"event Project meeting /from 2024-02-15 10:00 /to 12:00","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"ejnan"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"ejnan"},"content":"mark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"ejnan"},"content":"unmark 2","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"ejnan"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"ejnan"},"content":"delete 2","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"ejnan"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"ejnan"},"content":"hello","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"ejnan"},"content":"todo Assignment","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"ejnan"},"content":"deadline homework tonight","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"ejnan"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"ejnan"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"ejnan":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ejnan"},"content":"java -classpath ../bin Alpa \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ejnan":1,"-":37}}]
