[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"enum TodoState {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"    UNDONE,","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"    DONE","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"    public Todo(String task) {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"        super(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"    String deadline;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"    public Deadline(String task, String deadline) {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"yadunut"},"content":"        super(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"yadunut"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"yadunut"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"yadunut"},"content":"        return \"[D] \" + super.toString() + \"(by: \" + deadline + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"yadunut"},"content":"class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"yadunut"},"content":"    String start;","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"yadunut"},"content":"    String end;","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"yadunut"},"content":"    public Event(String task, String start, String end) {","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"yadunut"},"content":"        super(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"yadunut"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"yadunut"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"yadunut"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"yadunut"},"content":"        return \"[E] \" + super.toString() + \"(from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"yadunut"},"content":"abstract class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"yadunut"},"content":"    TodoState todoState;","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"yadunut"},"content":"    String task;","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"yadunut"},"content":"    public Task(String task) {","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"yadunut"},"content":"        this.todoState \u003d TodoState.UNDONE;","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"yadunut"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"yadunut"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"yadunut"},"content":"        return \"[\" + (todoState \u003d\u003d TodoState.DONE ? \"X\" : \" \") + \"] \" + task;","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"yadunut"},"content":"class DukeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"yadunut"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"yadunut"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"yadunut"},"content":"    static String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"yadunut"},"content":"        System.out.println(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"yadunut"},"content":"        System.out.println(\"Hello! I\u0027m Brian\\nWhat can I do for you?\");","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"yadunut"},"content":"        System.out.println(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"yadunut"},"content":"        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"yadunut"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"yadunut"},"content":"        while (true) {","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"yadunut"},"content":"            String[] input \u003d sc.nextLine().split(\" \", 2);","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"yadunut"},"content":"            String method \u003d input[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"yadunut"},"content":"            String params \u003d input.length \u003d\u003d 1 ? \"\" : input[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"yadunut"},"content":"            System.out.println(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"yadunut"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"yadunut"},"content":"                switch (method) {","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"yadunut"},"content":"                    case \"list\": {","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"yadunut"},"content":"                        for (int i \u003d 0; i \u003c data.size(); i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"yadunut"},"content":"                            System.out.printf(\"%d. %s\\n\", i + 1, data.get(i));","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"yadunut"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"yadunut"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"yadunut"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"yadunut"},"content":"                    case \"mark\": {","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"yadunut"},"content":"                        if (params.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"yadunut"},"content":"                            throw new DukeException(\"The id of a mark cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"yadunut"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"yadunut"},"content":"                        int index \u003d Integer.parseInt(params) - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"yadunut"},"content":"                        data.get(index).todoState \u003d TodoState.DONE;","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"yadunut"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"yadunut"},"content":"                        System.out.println(data.get(index));","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"yadunut"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"yadunut"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"yadunut"},"content":"                    case \"unmark\": {","lastModifiedDate":"2024-01-24"},{"lineNumber":107,"author":{"gitId":"yadunut"},"content":"                        if (params.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"yadunut"},"content":"                            throw new DukeException(\"The id of a unmark cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"yadunut"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"yadunut"},"content":"                        int index \u003d Integer.parseInt(params) - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"yadunut"},"content":"                        data.get(index).todoState \u003d TodoState.UNDONE;","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"yadunut"},"content":"                        System.out.println(\"Okay! I\u0027ve marked this task as not done yet\");","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"yadunut"},"content":"                        System.out.println(data.get(index));","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"yadunut"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"yadunut"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"yadunut"},"content":"                    case \"todo\": {","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"yadunut"},"content":"                        if (params.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"yadunut"},"content":"                            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"yadunut"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":121,"author":{"gitId":"yadunut"},"content":"                        Task curr \u003d new Todo(params);","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"yadunut"},"content":"                        data.add(curr);","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"yadunut"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"yadunut"},"content":"                        System.out.println(curr);","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"yadunut"},"content":"                        System.out.printf(\"Now you have %d tasks in the list.\\n\", data.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"yadunut"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"yadunut"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"yadunut"},"content":"                    case \"deadline\": {","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"yadunut"},"content":"                        if (params.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"yadunut"},"content":"                            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"yadunut"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"yadunut"},"content":"                        String[] split \u003d params.split(\" /by \", 2);","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"yadunut"},"content":"                        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"yadunut"},"content":"                            throw new DukeException(\"The deadline of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"yadunut"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"yadunut"},"content":"                        Task curr \u003d new Deadline(split[0], split[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"yadunut"},"content":"                        data.add(curr);","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"yadunut"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"yadunut"},"content":"                        System.out.println(curr);","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"yadunut"},"content":"                        System.out.printf(\"Now you have %d tasks in the list.\\n\", data.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"yadunut"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":142,"author":{"gitId":"yadunut"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":143,"author":{"gitId":"yadunut"},"content":"                    case \"event\": {","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"yadunut"},"content":"                        if (params.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"yadunut"},"content":"                            throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":146,"author":{"gitId":"yadunut"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":147,"author":{"gitId":"yadunut"},"content":"                        String[] split1 \u003d params.split(\" /from \", 2);","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"yadunut"},"content":"                        if (split1.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":149,"author":{"gitId":"yadunut"},"content":"                            throw new DukeException(\"The from of a event cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"yadunut"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":151,"author":{"gitId":"yadunut"},"content":"                        String[] split2 \u003d split1[1].split(\" /to \", 2);","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"yadunut"},"content":"                        if (split2.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"yadunut"},"content":"                            throw new DukeException(\"The to of a event cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"yadunut"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":155,"author":{"gitId":"yadunut"},"content":"                        Task curr \u003d new Event(split1[0], split2[0], split2[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"yadunut"},"content":"                        data.add(curr);","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"yadunut"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":158,"author":{"gitId":"yadunut"},"content":"                        System.out.println(curr);","lastModifiedDate":"2024-01-24"},{"lineNumber":159,"author":{"gitId":"yadunut"},"content":"                        System.out.printf(\"Now you have %d tasks in the list.\\n\", data.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":160,"author":{"gitId":"yadunut"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":161,"author":{"gitId":"yadunut"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":162,"author":{"gitId":"yadunut"},"content":"                    case \"delete\": {","lastModifiedDate":"2024-01-24"},{"lineNumber":163,"author":{"gitId":"yadunut"},"content":"                        if (params.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":164,"author":{"gitId":"yadunut"},"content":"                            throw new DukeException(\"The id of a delete cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":165,"author":{"gitId":"yadunut"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":166,"author":{"gitId":"yadunut"},"content":"                        int index \u003d Integer.parseInt(params) - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":167,"author":{"gitId":"yadunut"},"content":"                        Task curr \u003d data.get(index - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":168,"author":{"gitId":"yadunut"},"content":"                        data.remove(index);","lastModifiedDate":"2024-01-24"},{"lineNumber":169,"author":{"gitId":"yadunut"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":170,"author":{"gitId":"yadunut"},"content":"                        System.out.println(curr);","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"yadunut"},"content":"                        System.out.printf(\"Now you have %d tasks in the list.\\n\", data.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":172,"author":{"gitId":"yadunut"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":173,"author":{"gitId":"yadunut"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":174,"author":{"gitId":"yadunut"},"content":"                    case \"bye\": {","lastModifiedDate":"2024-01-24"},{"lineNumber":175,"author":{"gitId":"yadunut"},"content":"                        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":176,"author":{"gitId":"yadunut"},"content":"                        System.exit(0);","lastModifiedDate":"2024-01-24"},{"lineNumber":177,"author":{"gitId":"yadunut"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":178,"author":{"gitId":"yadunut"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":179,"author":{"gitId":"yadunut"},"content":"                    default: {","lastModifiedDate":"2024-01-24"},{"lineNumber":180,"author":{"gitId":"yadunut"},"content":"                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-01-24"},{"lineNumber":181,"author":{"gitId":"yadunut"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":182,"author":{"gitId":"yadunut"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":183,"author":{"gitId":"yadunut"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":184,"author":{"gitId":"yadunut"},"content":"                System.out.println(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":185,"author":{"gitId":"yadunut"},"content":"            } finally {","lastModifiedDate":"2024-01-24"},{"lineNumber":186,"author":{"gitId":"yadunut"},"content":"                System.out.println(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"yadunut":184,"-":6}}]
