[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"# Jimmy project template","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"yuechen2001"},"content":"3. After that, locate the `src/main/java/Jimmy.java` file, right-click it, and choose `Run Jimmy.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yuechen2001":2,"-":22}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"    private final DateTimeFormatter informalDateFormat \u003d DateTimeFormatter.ofPattern(\"d-MM-yyyy\");","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"    private final DateTimeFormatter formalDateFormat \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"yuechen2001"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"yuechen2001"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"yuechen2001"},"content":"     * @param deadline Deadline of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"yuechen2001"},"content":"    public Deadline(String taskName, String deadline, boolean isCompleted) throws DateTimeParseException, IllegalArgumentException {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"yuechen2001"},"content":"        super(taskName, isCompleted);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"yuechen2001"},"content":"        this.deadline \u003d this.parseStringtoLocalDate(deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"yuechen2001"},"content":"        if (this.deadline.isBefore(LocalDate.now())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"yuechen2001"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"yuechen2001"},"content":"     * Converts date given by the user to LocalDate object.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"yuechen2001"},"content":"     * @param dateString Date given by the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"yuechen2001"},"content":"     * @return Date given by the user as LocalDate object.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"yuechen2001"},"content":"    private LocalDate parseStringtoLocalDate(String dateString) throws DateTimeParseException {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"yuechen2001"},"content":"        LocalDate date;","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"yuechen2001"},"content":"        date \u003d LocalDate.parse(dateString, informalDateFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"yuechen2001"},"content":"        return date;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"yuechen2001"},"content":"     * Converts LocalDate object to String.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"yuechen2001"},"content":"     * @param localDate LocalDate object.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"yuechen2001"},"content":"     * @return String representation of the LocalDate object.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"yuechen2001"},"content":"    private String parseLocalDatetoString(LocalDate localDate) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"yuechen2001"},"content":"        return localDate.format(formalDateFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"yuechen2001"},"content":"     * Details regarding the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"yuechen2001"},"content":"     * @return String representation of a deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"yuechen2001"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yuechen2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yuechen2001"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + parseLocalDatetoString(this.deadline) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"yuechen2001"},"content":"     * Format of the deadline to be saved in the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"yuechen2001"},"content":"     * @return String representation of a deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"yuechen2001"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"yuechen2001"},"content":"        return String.format(\"%s | %d | %s | %s\", \"D\", Objects.equals(super.getStatus(), \"X\") ? 1 : 0,","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"yuechen2001"},"content":"                super.getDesc(), this.deadline.format(informalDateFormat));","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":66}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"    private final LocalDate start;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"    private final LocalDate end;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"    private final DateTimeFormatter informalDateFormat \u003d DateTimeFormatter.ofPattern(\"d-MM-yyyy\");","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"    private final DateTimeFormatter formalDateFormat \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"yuechen2001"},"content":"     * Constructor for Event class.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"yuechen2001"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"yuechen2001"},"content":"     * @param start    Start time of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"yuechen2001"},"content":"     * @param end      End time of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"yuechen2001"},"content":"    public Event(String taskName, String start, String end, boolean isCompleted) throws DateTimeParseException, IllegalArgumentException {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"yuechen2001"},"content":"        super(taskName, isCompleted);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"yuechen2001"},"content":"        this.start \u003d parseStringtoLocalDate(start);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"yuechen2001"},"content":"        this.end \u003d parseStringtoLocalDate(end);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"yuechen2001"},"content":"        if (!checkValidDuration(this.start, this.end)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"yuechen2001"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"yuechen2001"},"content":"     * Checks if the start and end timing given by the user are valid","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"yuechen2001"},"content":"     * @param start Start time of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"yuechen2001"},"content":"     * @param end   End time of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"yuechen2001"},"content":"     * @return true if the start and end timing are valid, false otherwise.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"yuechen2001"},"content":"    private boolean checkValidDuration(LocalDate start, LocalDate end) {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"yuechen2001"},"content":"        boolean isStartBeforeEnd \u003d start.isBefore(end);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"yuechen2001"},"content":"        boolean isStartAfterNow \u003d start.isAfter(LocalDate.now());","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"yuechen2001"},"content":"        boolean isEndAfterNow \u003d end.isAfter(LocalDate.now());","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"yuechen2001"},"content":"        return isStartBeforeEnd \u0026\u0026 isStartAfterNow \u0026\u0026 isEndAfterNow;","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"yuechen2001"},"content":"     * Converts date given by the user to LocalDate object.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"yuechen2001"},"content":"     * @param dateString Date given by the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"yuechen2001"},"content":"     * @return Date given by the user as LocalDate object.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"yuechen2001"},"content":"    private LocalDate parseStringtoLocalDate(String dateString) throws DateTimeParseException {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"yuechen2001"},"content":"        LocalDate date;","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"yuechen2001"},"content":"        date \u003d LocalDate.parse(dateString, informalDateFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"yuechen2001"},"content":"        return date;","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"yuechen2001"},"content":"     * Converts LocalDate object to String.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"yuechen2001"},"content":"     * @param localDate LocalDate object.","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"yuechen2001"},"content":"     * @return String representation of the LocalDate object.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"yuechen2001"},"content":"    private String parseLocalDatetoString(LocalDate localDate) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"yuechen2001"},"content":"        return localDate.format(formalDateFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"yuechen2001"},"content":"     * Details regarding the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"yuechen2001"},"content":"     * @return String representation of an event.","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"yuechen2001"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"yuechen2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"yuechen2001"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + parseLocalDatetoString(this.start) + \" to: \" + parseLocalDatetoString(this.end) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"yuechen2001"},"content":"     * Format of the event to be saved in the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"yuechen2001"},"content":"     * @return String representation of an event.","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"yuechen2001"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"yuechen2001"},"content":"        return String.format(\"%s | %d | %s | %s | %s\", \"E\", Objects.equals(super.getStatus(), \"X\") ? 1 : 0, super.getDesc(), this.start.format(informalDateFormat), this.end.format(informalDateFormat));","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":82}},{"path":"src/main/java/Jimmy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"yuechen2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yuechen2001"},"content":"public class Jimmy {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yuechen2001"},"content":"    static final String FOLDER_PATH \u003d \"./data\";","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"yuechen2001"},"content":"    static final String FILE_PATH \u003d FOLDER_PATH + \"/jimmy\";","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"yuechen2001"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"yuechen2001"},"content":"     * Greets the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"yuechen2001"},"content":"    private static void greetUser() {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Hello! I\u0027m Jimmy\\nWhat can I do for you?\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"yuechen2001"},"content":"     * Writes the contents of the task list into the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"yuechen2001"},"content":"     * @throws JimmyException If the file cannot be written to.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"yuechen2001"},"content":"    private static void writeToFile() throws JimmyException {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"yuechen2001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"yuechen2001"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"yuechen2001"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"yuechen2001"},"content":"            System.out.println(\"Writing to file...\");","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"yuechen2001"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"yuechen2001"},"content":"                bufferedWriter.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"yuechen2001"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"yuechen2001"},"content":"            bufferedWriter.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"yuechen2001"},"content":"            System.out.println(\"Done with writing!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"yuechen2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"IOException: Cannot write to file.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"yuechen2001"},"content":"     * Loads the contents of the file into memory.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"yuechen2001"},"content":"     * @throws JimmyException If the file cannot be loaded.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"yuechen2001"},"content":"    private static void loadFileContents() throws JimmyException {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"yuechen2001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"yuechen2001"},"content":"            System.out.println(\"Loading file contents...\");","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"yuechen2001"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"yuechen2001"},"content":"            boolean isFolderMade \u003d file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"yuechen2001"},"content":"            boolean isFileMade \u003d file.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"yuechen2001"},"content":"            if (isFolderMade || isFileMade) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"yuechen2001"},"content":"                System.out.println(\"File not found, Jimmy is creating one for you now...\");","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"yuechen2001"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"yuechen2001"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"yuechen2001"},"content":"            String line;","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"yuechen2001"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"yuechen2001"},"content":"                parseFileString(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"yuechen2001"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"yuechen2001"},"content":"            bufferedReader.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"yuechen2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"IOException: Cannot load file.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"yuechen2001"},"content":"     * Parses the file string and appends task from memory into task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"yuechen2001"},"content":"     * @param fileString The string to be parsed.","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"yuechen2001"},"content":"    private static void parseFileString(String fileString) throws JimmyException {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"yuechen2001"},"content":"        String[] attributes \u003d fileString.split(\" \\\\| \"); // split by delimiter to obtain the task name, status and timings (if any)","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"yuechen2001"},"content":"        String taskType \u003d attributes[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"yuechen2001"},"content":"        boolean isTaskCompleted \u003d Objects.equals(attributes[1], \"1\");","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"yuechen2001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"yuechen2001"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"yuechen2001"},"content":"            case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"yuechen2001"},"content":"                String taskDesc \u003d attributes[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"yuechen2001"},"content":"                taskList.add(new Todo(taskDesc, isTaskCompleted));","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"yuechen2001"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"yuechen2001"},"content":"            case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"yuechen2001"},"content":"                String deadlineDesc \u003d attributes[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"yuechen2001"},"content":"                String deadline \u003d attributes[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"yuechen2001"},"content":"                taskList.add(new Deadline(deadlineDesc, deadline, isTaskCompleted));","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"yuechen2001"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"yuechen2001"},"content":"            case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"yuechen2001"},"content":"                String eventDesc \u003d attributes[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"yuechen2001"},"content":"                String start \u003d attributes[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"yuechen2001"},"content":"                String end \u003d attributes[4];","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"yuechen2001"},"content":"                taskList.add(new Event(eventDesc, start, end, isTaskCompleted));","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"yuechen2001"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"yuechen2001"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"yuechen2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Error: Cannot parse the date saved locally.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"yuechen2001"},"content":"     * Creates a new task and adds it to the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"yuechen2001"},"content":"     * @param instruction The type of task to be created.","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"yuechen2001"},"content":"     * @param details     The details of the task to be created.","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"yuechen2001"},"content":"     * @throws JimmyException If the task type is invalid or the details are invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"yuechen2001"},"content":"    private static void createNewTask(String instruction, String details) throws JimmyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"yuechen2001"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"yuechen2001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"yuechen2001"},"content":"            switch (instruction) {","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"yuechen2001"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"yuechen2001"},"content":"                newTask \u003d createNewTodo(details);","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"yuechen2001"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"yuechen2001"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"yuechen2001"},"content":"                try {","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"yuechen2001"},"content":"                    newTask \u003d createNewDeadline(details);","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"yuechen2001"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"yuechen2001"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"yuechen2001"},"content":"                    throw new JimmyException(\"Please enter a valid deadline.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"yuechen2001"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"yuechen2001"},"content":"            case \"event\":","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"yuechen2001"},"content":"                try {","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"yuechen2001"},"content":"                    newTask \u003d createNewEvent(details);","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"yuechen2001"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"yuechen2001"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"yuechen2001"},"content":"                    throw new JimmyException(\"Please enter a valid start and end date.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"yuechen2001"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"yuechen2001"},"content":"            default:","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"yuechen2001"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"yuechen2001"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"yuechen2001"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please enter a valid task type.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"yuechen2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Error: Cannot parse the date written by user.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":144,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"yuechen2001"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(newTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(generateListCounter() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"yuechen2001"},"content":"     * Creates a new todo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"yuechen2001"},"content":"     * @param details The details of the todo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"yuechen2001"},"content":"     * @return The new todo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"yuechen2001"},"content":"    private static Todo createNewTodo(String details) {","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"yuechen2001"},"content":"        return new Todo(details, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"yuechen2001"},"content":"     * Creates a new deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"yuechen2001"},"content":"     * @param details The details of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"yuechen2001"},"content":"     * @return The new deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"yuechen2001"},"content":"     * @throws JimmyException If the deadline task details are invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"yuechen2001"},"content":"    private static Deadline createNewDeadline(String details) throws JimmyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"yuechen2001"},"content":"        if (!details.contains(\" /by \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Sorry! \" +","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"yuechen2001"},"content":"                    \"Please use the correct format when creating a new deadline.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"yuechen2001"},"content":"        String[] deadlineDetails \u003d details.split(\" /by \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"yuechen2001"},"content":"        String deadlineName \u003d deadlineDetails[0], deadline \u003d deadlineDetails[1];","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"yuechen2001"},"content":"        if (deadlineName.length() \u003d\u003d 0 || deadline.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please check that you have entered a deadline name and a deadline.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":177,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"yuechen2001"},"content":"        return new Deadline(deadlineName, deadline, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":179,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"yuechen2001"},"content":"     * Creates a new event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"yuechen2001"},"content":"     * @param details The details of the event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"yuechen2001"},"content":"     * @return The new event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"yuechen2001"},"content":"     * @throws JimmyException If the event task details are invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":187,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":188,"author":{"gitId":"yuechen2001"},"content":"    private static Event createNewEvent(String details) throws JimmyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"yuechen2001"},"content":"        if (!details.contains(\" /from \") || !details.contains(\" /to \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Sorry! \" +","lastModifiedDate":"2024-01-29"},{"lineNumber":191,"author":{"gitId":"yuechen2001"},"content":"                    \"Please use the correct format when creating a new event.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"yuechen2001"},"content":"        String[] eventDetails \u003d details.split(\" /from | /to \");","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"yuechen2001"},"content":"        String eventName \u003d eventDetails[0], start \u003d eventDetails[1], end \u003d eventDetails[2];","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"yuechen2001"},"content":"        if (eventName.length() \u003d\u003d 0 || start.length() \u003d\u003d 0 || end.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":196,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please check that you have entered a event name, a start time and an end time.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":197,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"yuechen2001"},"content":"        return new Event(eventName, start, end, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":200,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":201,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":202,"author":{"gitId":"yuechen2001"},"content":"     * Generates the counter for the number of tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":203,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":204,"author":{"gitId":"yuechen2001"},"content":"     * @return The counter for the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":205,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":206,"author":{"gitId":"yuechen2001"},"content":"    private static String generateListCounter() {","lastModifiedDate":"2024-01-29"},{"lineNumber":207,"author":{"gitId":"yuechen2001"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":208,"author":{"gitId":"yuechen2001"},"content":"            return \"You have no tasks, create some now!\";","lastModifiedDate":"2024-01-28"},{"lineNumber":209,"author":{"gitId":"yuechen2001"},"content":"        } else if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":210,"author":{"gitId":"yuechen2001"},"content":"            return \"Now you have 1 task in the list.\";","lastModifiedDate":"2024-01-28"},{"lineNumber":211,"author":{"gitId":"yuechen2001"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":212,"author":{"gitId":"yuechen2001"},"content":"            return \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-01"},{"lineNumber":213,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":214,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":215,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":216,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":217,"author":{"gitId":"yuechen2001"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":218,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":219,"author":{"gitId":"yuechen2001"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":220,"author":{"gitId":"yuechen2001"},"content":"     * @throws JimmyException If the task index is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":221,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":222,"author":{"gitId":"yuechen2001"},"content":"    private static void deleteTask(String taskIndex) throws JimmyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"yuechen2001"},"content":"        int deleteTask;","lastModifiedDate":"2024-01-29"},{"lineNumber":224,"author":{"gitId":"yuechen2001"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":225,"author":{"gitId":"yuechen2001"},"content":"            deleteTask \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":226,"author":{"gitId":"yuechen2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":227,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please only enter an integer.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":228,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":229,"author":{"gitId":"yuechen2001"},"content":"        if (deleteTask \u003c 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":230,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please only enter a positive integer.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":231,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":232,"author":{"gitId":"yuechen2001"},"content":"        } else if (deleteTask \u003e\u003d getListSize()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":233,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"The task you are looking for does not exist.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":234,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":235,"author":{"gitId":"yuechen2001"},"content":"        Task deletedTask \u003d taskList.remove(deleteTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":236,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":237,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(deletedTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":238,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(generateListCounter() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":239,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":240,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":241,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":242,"author":{"gitId":"yuechen2001"},"content":"     * Displays the tasks in the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":243,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":244,"author":{"gitId":"yuechen2001"},"content":"    private static void displayTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":245,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":246,"author":{"gitId":"yuechen2001"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":247,"author":{"gitId":"yuechen2001"},"content":"            if (i \u003d\u003d taskList.size() - 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":248,"author":{"gitId":"yuechen2001"},"content":"                System.out.println((i + 1) + \".\" + taskList.get(i).toString() + \"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":249,"author":{"gitId":"yuechen2001"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":250,"author":{"gitId":"yuechen2001"},"content":"                System.out.println((i + 1) + \".\" + taskList.get(i).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":251,"author":{"gitId":"yuechen2001"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":252,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":253,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":254,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":255,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":256,"author":{"gitId":"yuechen2001"},"content":"     * Marks a task as complete.","lastModifiedDate":"2024-02-01"},{"lineNumber":257,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":258,"author":{"gitId":"yuechen2001"},"content":"     * @param taskIndex The index of the task to be marked as complete.","lastModifiedDate":"2024-02-01"},{"lineNumber":259,"author":{"gitId":"yuechen2001"},"content":"     * @throws JimmyException If the task index is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":260,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":261,"author":{"gitId":"yuechen2001"},"content":"    private static void markTaskComplete(String taskIndex) throws JimmyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":262,"author":{"gitId":"yuechen2001"},"content":"        int completeTask;","lastModifiedDate":"2024-01-29"},{"lineNumber":263,"author":{"gitId":"yuechen2001"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":264,"author":{"gitId":"yuechen2001"},"content":"            completeTask \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":265,"author":{"gitId":"yuechen2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":266,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please only enter an integer.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":267,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":268,"author":{"gitId":"yuechen2001"},"content":"        if (completeTask \u003c 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":269,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please only enter a positive integer.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":270,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":271,"author":{"gitId":"yuechen2001"},"content":"        } else if (completeTask \u003e\u003d getListSize()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":272,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"The task you are looking for does not exist.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":273,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":274,"author":{"gitId":"yuechen2001"},"content":"        Task curr \u003d taskList.get(completeTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":275,"author":{"gitId":"yuechen2001"},"content":"        curr.markAsComplete();","lastModifiedDate":"2024-01-28"},{"lineNumber":276,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":277,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":278,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":279,"author":{"gitId":"yuechen2001"},"content":"     * Marks a task as incomplete.","lastModifiedDate":"2024-02-01"},{"lineNumber":280,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":281,"author":{"gitId":"yuechen2001"},"content":"     * @param taskIndex The index of the task to be marked as incomplete.","lastModifiedDate":"2024-02-01"},{"lineNumber":282,"author":{"gitId":"yuechen2001"},"content":"     * @throws JimmyException If the task index is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":283,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":284,"author":{"gitId":"yuechen2001"},"content":"    private static void markTaskIncomplete(String taskIndex) throws JimmyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":285,"author":{"gitId":"yuechen2001"},"content":"        int incompleteTask;","lastModifiedDate":"2024-01-29"},{"lineNumber":286,"author":{"gitId":"yuechen2001"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":287,"author":{"gitId":"yuechen2001"},"content":"            incompleteTask \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":288,"author":{"gitId":"yuechen2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":289,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please only enter an integer.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":290,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":291,"author":{"gitId":"yuechen2001"},"content":"        if (incompleteTask \u003c 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":292,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"Please only enter a positive integer.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":293,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":294,"author":{"gitId":"yuechen2001"},"content":"        } else if (incompleteTask \u003e\u003d getListSize()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":295,"author":{"gitId":"yuechen2001"},"content":"            throw new JimmyException(\"The task you are looking for does not exist.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":296,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":297,"author":{"gitId":"yuechen2001"},"content":"        Task curr \u003d taskList.get(incompleteTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":298,"author":{"gitId":"yuechen2001"},"content":"        curr.markAsIncomplete();","lastModifiedDate":"2024-01-28"},{"lineNumber":299,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":300,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":301,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":302,"author":{"gitId":"yuechen2001"},"content":"     * Gets the size of the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":303,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":304,"author":{"gitId":"yuechen2001"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":305,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":306,"author":{"gitId":"yuechen2001"},"content":"    private static int getListSize() {","lastModifiedDate":"2024-01-29"},{"lineNumber":307,"author":{"gitId":"yuechen2001"},"content":"        return taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":308,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":309,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":310,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":311,"author":{"gitId":"yuechen2001"},"content":"     * Exits the bot.","lastModifiedDate":"2024-02-01"},{"lineNumber":312,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":313,"author":{"gitId":"yuechen2001"},"content":"    private static void exit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":314,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":315,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":316,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":317,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":318,"author":{"gitId":"yuechen2001"},"content":"     * Runs the bot.","lastModifiedDate":"2024-02-01"},{"lineNumber":319,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":320,"author":{"gitId":"yuechen2001"},"content":"     * @param args The arguments passed in.","lastModifiedDate":"2024-02-01"},{"lineNumber":321,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":322,"author":{"gitId":"yuechen2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":323,"author":{"gitId":"yuechen2001"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":324,"author":{"gitId":"yuechen2001"},"content":"        greetUser();","lastModifiedDate":"2024-01-29"},{"lineNumber":325,"author":{"gitId":"yuechen2001"},"content":"        boolean isBotRunning \u003d true; // flag to check if bot is running","lastModifiedDate":"2024-02-01"},{"lineNumber":326,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":327,"author":{"gitId":"yuechen2001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":328,"author":{"gitId":"yuechen2001"},"content":"            loadFileContents();","lastModifiedDate":"2024-02-01"},{"lineNumber":329,"author":{"gitId":"yuechen2001"},"content":"        } catch (JimmyException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":330,"author":{"gitId":"yuechen2001"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":331,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":332,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":333,"author":{"gitId":"yuechen2001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":334,"author":{"gitId":"yuechen2001"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":335,"author":{"gitId":"yuechen2001"},"content":"                while (isBotRunning) {","lastModifiedDate":"2024-02-01"},{"lineNumber":336,"author":{"gitId":"yuechen2001"},"content":"                    String userInput \u003d sc.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":337,"author":{"gitId":"yuechen2001"},"content":"                    String[] inputArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":338,"author":{"gitId":"yuechen2001"},"content":"                    String instruction;","lastModifiedDate":"2024-01-29"},{"lineNumber":339,"author":{"gitId":"yuechen2001"},"content":"                    String details \u003d \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":340,"author":{"gitId":"yuechen2001"},"content":"                    if (inputArray.length \u003e 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":341,"author":{"gitId":"yuechen2001"},"content":"                        instruction \u003d inputArray[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":342,"author":{"gitId":"yuechen2001"},"content":"                        details \u003d inputArray[1];","lastModifiedDate":"2024-01-29"},{"lineNumber":343,"author":{"gitId":"yuechen2001"},"content":"                    } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":344,"author":{"gitId":"yuechen2001"},"content":"                        instruction \u003d inputArray[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":345,"author":{"gitId":"yuechen2001"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":346,"author":{"gitId":"yuechen2001"},"content":"                    switch (instruction) {","lastModifiedDate":"2024-01-29"},{"lineNumber":347,"author":{"gitId":"yuechen2001"},"content":"                    case \"bye\":","lastModifiedDate":"2024-01-29"},{"lineNumber":348,"author":{"gitId":"yuechen2001"},"content":"                        exit();","lastModifiedDate":"2024-01-29"},{"lineNumber":349,"author":{"gitId":"yuechen2001"},"content":"                        isBotRunning \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":350,"author":{"gitId":"yuechen2001"},"content":"                        break;","lastModifiedDate":"2024-02-01"},{"lineNumber":351,"author":{"gitId":"yuechen2001"},"content":"                    case \"list\":","lastModifiedDate":"2024-01-29"},{"lineNumber":352,"author":{"gitId":"yuechen2001"},"content":"                        displayTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":353,"author":{"gitId":"yuechen2001"},"content":"                        break;","lastModifiedDate":"2024-01-29"},{"lineNumber":354,"author":{"gitId":"yuechen2001"},"content":"                    case \"mark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":355,"author":{"gitId":"yuechen2001"},"content":"                        markTaskComplete(details);","lastModifiedDate":"2024-01-29"},{"lineNumber":356,"author":{"gitId":"yuechen2001"},"content":"                        break;","lastModifiedDate":"2024-01-29"},{"lineNumber":357,"author":{"gitId":"yuechen2001"},"content":"                    case \"unmark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":358,"author":{"gitId":"yuechen2001"},"content":"                        markTaskIncomplete(details);","lastModifiedDate":"2024-01-29"},{"lineNumber":359,"author":{"gitId":"yuechen2001"},"content":"                        break;","lastModifiedDate":"2024-01-29"},{"lineNumber":360,"author":{"gitId":"yuechen2001"},"content":"                    case \"delete\":","lastModifiedDate":"2024-01-29"},{"lineNumber":361,"author":{"gitId":"yuechen2001"},"content":"                        deleteTask(details);","lastModifiedDate":"2024-01-29"},{"lineNumber":362,"author":{"gitId":"yuechen2001"},"content":"                        break;","lastModifiedDate":"2024-01-29"},{"lineNumber":363,"author":{"gitId":"yuechen2001"},"content":"                    default:","lastModifiedDate":"2024-01-29"},{"lineNumber":364,"author":{"gitId":"yuechen2001"},"content":"                        createNewTask(instruction, details);","lastModifiedDate":"2024-01-29"},{"lineNumber":365,"author":{"gitId":"yuechen2001"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":366,"author":{"gitId":"yuechen2001"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":367,"author":{"gitId":"yuechen2001"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":368,"author":{"gitId":"yuechen2001"},"content":"                System.out.println(\"Error: Please only use the specified commands in the user guide.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":369,"author":{"gitId":"yuechen2001"},"content":"            } finally {","lastModifiedDate":"2024-02-01"},{"lineNumber":370,"author":{"gitId":"yuechen2001"},"content":"                writeToFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":371,"author":{"gitId":"yuechen2001"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":372,"author":{"gitId":"yuechen2001"},"content":"        } catch (JimmyException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":373,"author":{"gitId":"yuechen2001"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":374,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":375,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":376,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":376}},{"path":"src/main/java/JimmyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"public class JimmyException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"     * Constructor for JimmyException class.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"     * @param error Error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"    public JimmyException(String error) {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"        super(error);","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"yuechen2001":11}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"abstract public class Task implements Serializable {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"    protected final String desc;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"    private boolean isCompleted;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"    public abstract String toFileString();","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"     * Constructor for Task class.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"yuechen2001"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"yuechen2001"},"content":"    public Task(String taskName, boolean isCompleted) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"yuechen2001"},"content":"        this.desc \u003d taskName;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yuechen2001"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"yuechen2001"},"content":"     * Marks the task as complete.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"yuechen2001"},"content":"    public void markAsComplete() {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yuechen2001"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(this.toString() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"yuechen2001"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"yuechen2001"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yuechen2001"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(this.toString() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"yuechen2001"},"content":"     * Returns the status of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"yuechen2001"},"content":"     * @return \"X\" if the task is completed, \" \" otherwise.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"yuechen2001"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yuechen2001"},"content":"        return this.isCompleted","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yuechen2001"},"content":"                ? \"X\"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yuechen2001"},"content":"                : \" \";","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yuechen2001"},"content":"    public String getDesc() {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"yuechen2001"},"content":"        return this.desc;","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"yuechen2001"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"yuechen2001"},"content":"     * @return Description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"yuechen2001"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yuechen2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yuechen2001"},"content":"        return \"[\" + this.getStatus() + \"] \" + this.desc;","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":62}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"     * Constructor for Todo class.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"    public Todo(String taskName, boolean isCompleted) {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"        super(taskName, isCompleted);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"yuechen2001"},"content":"     * Details regarding the todo.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"yuechen2001"},"content":"     * @return String representation of a todo.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"yuechen2001"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yuechen2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yuechen2001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"yuechen2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"yuechen2001"},"content":"     * Format of the todo to be saved in the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"yuechen2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"yuechen2001"},"content":"     * @return String representation of a todo.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"yuechen2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"yuechen2001"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"yuechen2001"},"content":"        return String.format(\"%s | %d | %s\", \"T\", Objects.equals(super.getStatus(), \"X\") ? 1 : 0, super.getDesc());","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"todo eat breakfast","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"todo go for lunch","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"mark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"mark 2","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"mark 3","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"unmark 3","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"delete 1","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yuechen2001"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yuechen2001"},"content":"bye","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yuechen2001"},"content":"java -classpath ..\\bin Jimmy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yuechen2001":1,"-":20}}]
