[{"path":"src/main/java/Chitty.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gowthaman-01"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"gowthaman-01"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gowthaman-01"},"content":" * Chatbot-style application for managing tasks.","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gowthaman-01"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gowthaman-01"},"content":"public class Chitty {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gowthaman-01"},"content":"    // Constants","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gowthaman-01"},"content":"    private static final String CHATBOT_NAME \u003d \"Chitty\";","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gowthaman-01"},"content":"    private static final String GREETING_MESSAGE \u003d String.format(\"Hello! I\u0027m %s\\nWhat can I do for you?\\n\", CHATBOT_NAME);","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gowthaman-01"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gowthaman-01"},"content":"    private static final String ADD_TASK \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gowthaman-01"},"content":"    private static final String LIST_TASKS \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"gowthaman-01"},"content":"    private static final String TASK_LENGTH \u003d \"Now you have %d tasks in the list.\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"gowthaman-01"},"content":"    private static final String MARK_TASK \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"gowthaman-01"},"content":"    private static final String UNMARK_TASK \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"gowthaman-01"},"content":"    private static final String DELETE_TASK \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"gowthaman-01"},"content":"    private static final String INVALID_INPUT \u003d \"Invalid input, please double check your input values!\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"gowthaman-01"},"content":"    private static final String INVALID_COMMAND \u003d \"Invalid command, please only use the following commands:\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"gowthaman-01"},"content":"            \"todo, deadline, event, list, mark, unmark, delete, bye \\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"gowthaman-01"},"content":"    private static final String SPACING \u003d \"----------------------------------------------------------\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"gowthaman-01"},"content":"    private static final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"gowthaman-01"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"gowthaman-01"},"content":"    private static void greet() {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"gowthaman-01"},"content":"        System.out.println(SPACING + GREETING_MESSAGE + SPACING);","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"gowthaman-01"},"content":"     * Adds a new To-do task to the task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"gowthaman-01"},"content":"     * @param taskDescription The description of the To-do task.","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"gowthaman-01"},"content":"     * @throws InvalidInputFormatException If the task description is invalid.","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"gowthaman-01"},"content":"    private static void addTodo(String taskDescription) throws InvalidInputFormatException {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"gowthaman-01"},"content":"        if (taskDescription.trim().isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"gowthaman-01"},"content":"            throw new InvalidInputFormatException(\"todo\");","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"gowthaman-01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"gowthaman-01"},"content":"        Task newTask \u003d new Todo(taskDescription);","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"gowthaman-01"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"gowthaman-01"},"content":"        System.out.println(SPACING + ADD_TASK + newTask + \"\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"gowthaman-01"},"content":"                String.format(TASK_LENGTH, taskList.getLength())+ SPACING);","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"gowthaman-01"},"content":"     * Adds a new Deadline task to the task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"gowthaman-01"},"content":"     * @param deadlineDetails Array containing the deadline task description and deadline date.","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"gowthaman-01"},"content":"     * @throws InvalidInputFormatException If the input format for the deadline is invalid.","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"gowthaman-01"},"content":"    private static void addDeadline(String[] deadlineDetails) throws InvalidInputFormatException {","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"gowthaman-01"},"content":"        if (deadlineDetails.length \u003c 2 || deadlineDetails[1].split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"gowthaman-01"},"content":"            throw new InvalidInputFormatException(\"deadline\");","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"gowthaman-01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"gowthaman-01"},"content":"        String deadlineDescription \u003d deadlineDetails[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"gowthaman-01"},"content":"        String deadline \u003d deadlineDetails[1].split(\" \", 2)[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"gowthaman-01"},"content":"        Task newTask \u003d new Deadline(deadlineDescription, deadline);","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"gowthaman-01"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"gowthaman-01"},"content":"        System.out.println(SPACING + ADD_TASK + newTask + \"\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"gowthaman-01"},"content":"                String.format(TASK_LENGTH, taskList.getLength())+ SPACING);","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"gowthaman-01"},"content":"     * Adds a new Event task to the task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"gowthaman-01"},"content":"     * @param eventDetails Array containing the event description and its start and end times.","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"gowthaman-01"},"content":"     * @throws InvalidInputFormatException If the input format for the event is invalid.","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"gowthaman-01"},"content":"    private static void addEvent(String[] eventDetails) throws InvalidInputFormatException {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"gowthaman-01"},"content":"        if (eventDetails.length \u003c 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"gowthaman-01"},"content":"            throw new InvalidInputFormatException(\"event\");","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"gowthaman-01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"gowthaman-01"},"content":"        String eventDescription \u003d eventDetails[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"gowthaman-01"},"content":"        String[] fromToDetails \u003d eventDetails[1].split(\"/\", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"gowthaman-01"},"content":"        if (fromToDetails.length \u003c 2","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"gowthaman-01"},"content":"                || fromToDetails[0].split(\" \", 2).length \u003c 2","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"gowthaman-01"},"content":"                || fromToDetails[1].split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"gowthaman-01"},"content":"            throw new InvalidInputFormatException(\"event\");","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"gowthaman-01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"gowthaman-01"},"content":"        String from \u003d fromToDetails[0].split(\" \", 2)[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"gowthaman-01"},"content":"        String to \u003d fromToDetails[1].split(\" \", 2)[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"gowthaman-01"},"content":"        Task newTask \u003d new Event(eventDescription, from, to);","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"gowthaman-01"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"gowthaman-01"},"content":"        System.out.println(SPACING + ADD_TASK + newTask + \"\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"gowthaman-01"},"content":"                String.format(TASK_LENGTH, taskList.getLength())+ SPACING);","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"gowthaman-01"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"gowthaman-01"},"content":"    private static void listTasks() {","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"gowthaman-01"},"content":"        System.out.println(SPACING + LIST_TASKS + taskList + SPACING);","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"gowthaman-01"},"content":"     * Marks a task as completed based on the given index.","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"gowthaman-01"},"content":"     * @param i The index of the task in the list to be marked.","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"gowthaman-01"},"content":"    private static void markTask(int i) {","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"gowthaman-01"},"content":"        Task updatedTask \u003d taskList.markTask(i - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"gowthaman-01"},"content":"        System.out.println(SPACING + MARK_TASK + updatedTask + \"\\n\" + SPACING);","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"gowthaman-01"},"content":"     * Unmarks a task, indicating it is not completed, based on the given index.","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"gowthaman-01"},"content":"     * @param i The index of the task in the list to be unmarked.","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"gowthaman-01"},"content":"    private static void unmarkTask(int i) {","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"gowthaman-01"},"content":"        Task updatedTask \u003d taskList.unmarkTask(i - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"gowthaman-01"},"content":"        System.out.println(SPACING + UNMARK_TASK + updatedTask + \"\\n\" + SPACING);","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"gowthaman-01"},"content":"     * Deletes a task from the task list based on the given index.","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"gowthaman-01"},"content":"     * @param i The index of the task to delete.","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"gowthaman-01"},"content":"    private static void delete(int i) {","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"gowthaman-01"},"content":"        Task deletedTask \u003d taskList.deleteTask(i - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"gowthaman-01"},"content":"        System.out.println(SPACING + DELETE_TASK + deletedTask + \"\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"gowthaman-01"},"content":"                String.format(TASK_LENGTH, taskList.getLength()) + SPACING);","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"gowthaman-01"},"content":"     * Displays a goodbye message to the user and terminates the application.","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"gowthaman-01"},"content":"    private static void bye() {","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"gowthaman-01"},"content":"        System.out.println(SPACING + GOODBYE_MESSAGE + SPACING);","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"gowthaman-01"},"content":"     * Displays a message indicating that the user input is invalid.","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"gowthaman-01"},"content":"    private static void invalidInput() { System.out.println(SPACING + INVALID_INPUT + SPACING); }","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"gowthaman-01"},"content":"     * Displays a specific message indicating why the user input is invalid.","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"gowthaman-01"},"content":"     * @param message The specific message about invalid input.","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"gowthaman-01"},"content":"    private static void invalidInput(String message) { System.out.println(SPACING + message + SPACING); }","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"gowthaman-01"},"content":"     * Displays a message indicating that the user command is invalid.","lastModifiedDate":"2024-01-25"},{"lineNumber":148,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":149,"author":{"gitId":"gowthaman-01"},"content":"    private static void invalidCommand() { System.out.println(SPACING + INVALID_COMMAND + SPACING); }","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"gowthaman-01"},"content":"     * Processes the user input and executes the corresponding command.","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"gowthaman-01"},"content":"     * @param input The user input split into command and arguments.","lastModifiedDate":"2024-01-25"},{"lineNumber":155,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":156,"author":{"gitId":"gowthaman-01"},"content":"    public static int handleInput(String[] input) {","lastModifiedDate":"2024-01-25"},{"lineNumber":157,"author":{"gitId":"gowthaman-01"},"content":"        String commandString \u003d input[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":158,"author":{"gitId":"gowthaman-01"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":159,"author":{"gitId":"gowthaman-01"},"content":"            Command command \u003d Command.valueOf(commandString.toUpperCase());","lastModifiedDate":"2024-01-25"},{"lineNumber":160,"author":{"gitId":"gowthaman-01"},"content":"            switch (command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":161,"author":{"gitId":"gowthaman-01"},"content":"                case LIST:","lastModifiedDate":"2024-01-25"},{"lineNumber":162,"author":{"gitId":"gowthaman-01"},"content":"                    listTasks();","lastModifiedDate":"2024-01-25"},{"lineNumber":163,"author":{"gitId":"gowthaman-01"},"content":"                    return 0;","lastModifiedDate":"2024-01-25"},{"lineNumber":164,"author":{"gitId":"gowthaman-01"},"content":"                case TODO:","lastModifiedDate":"2024-01-25"},{"lineNumber":165,"author":{"gitId":"gowthaman-01"},"content":"                    addTodo(input[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":166,"author":{"gitId":"gowthaman-01"},"content":"                    return 0;","lastModifiedDate":"2024-01-25"},{"lineNumber":167,"author":{"gitId":"gowthaman-01"},"content":"                case DEADLINE:","lastModifiedDate":"2024-01-25"},{"lineNumber":168,"author":{"gitId":"gowthaman-01"},"content":"                    addDeadline(input[1].split(\"/\", 2));","lastModifiedDate":"2024-01-25"},{"lineNumber":169,"author":{"gitId":"gowthaman-01"},"content":"                    return 0;","lastModifiedDate":"2024-01-25"},{"lineNumber":170,"author":{"gitId":"gowthaman-01"},"content":"                case EVENT:","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"gowthaman-01"},"content":"                    addEvent(input[1].split(\"/\", 2));","lastModifiedDate":"2024-01-25"},{"lineNumber":172,"author":{"gitId":"gowthaman-01"},"content":"                    return 0;","lastModifiedDate":"2024-01-25"},{"lineNumber":173,"author":{"gitId":"gowthaman-01"},"content":"                case MARK:","lastModifiedDate":"2024-01-25"},{"lineNumber":174,"author":{"gitId":"gowthaman-01"},"content":"                    markTask(Integer.parseInt(input[1]));","lastModifiedDate":"2024-01-25"},{"lineNumber":175,"author":{"gitId":"gowthaman-01"},"content":"                    return 0;","lastModifiedDate":"2024-01-25"},{"lineNumber":176,"author":{"gitId":"gowthaman-01"},"content":"                case UNMARK:","lastModifiedDate":"2024-01-25"},{"lineNumber":177,"author":{"gitId":"gowthaman-01"},"content":"                    unmarkTask(Integer.parseInt(input[1]));","lastModifiedDate":"2024-01-25"},{"lineNumber":178,"author":{"gitId":"gowthaman-01"},"content":"                    return 0;","lastModifiedDate":"2024-01-25"},{"lineNumber":179,"author":{"gitId":"gowthaman-01"},"content":"                case DELETE:","lastModifiedDate":"2024-01-25"},{"lineNumber":180,"author":{"gitId":"gowthaman-01"},"content":"                    delete(Integer.parseInt(input[1]));","lastModifiedDate":"2024-01-25"},{"lineNumber":181,"author":{"gitId":"gowthaman-01"},"content":"                    return 0;","lastModifiedDate":"2024-01-25"},{"lineNumber":182,"author":{"gitId":"gowthaman-01"},"content":"                case BYE:","lastModifiedDate":"2024-01-25"},{"lineNumber":183,"author":{"gitId":"gowthaman-01"},"content":"                    bye();","lastModifiedDate":"2024-01-25"},{"lineNumber":184,"author":{"gitId":"gowthaman-01"},"content":"                    return 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":185,"author":{"gitId":"gowthaman-01"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":186,"author":{"gitId":"gowthaman-01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":187,"author":{"gitId":"gowthaman-01"},"content":"        catch (InvalidInputFormatException exception) {","lastModifiedDate":"2024-01-25"},{"lineNumber":188,"author":{"gitId":"gowthaman-01"},"content":"            invalidInput(exception.getMessage() + \"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":189,"author":{"gitId":"gowthaman-01"},"content":"        } catch (IllegalArgumentException exception) {","lastModifiedDate":"2024-01-25"},{"lineNumber":190,"author":{"gitId":"gowthaman-01"},"content":"            invalidCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":191,"author":{"gitId":"gowthaman-01"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2024-01-25"},{"lineNumber":192,"author":{"gitId":"gowthaman-01"},"content":"            invalidInput();","lastModifiedDate":"2024-01-25"},{"lineNumber":193,"author":{"gitId":"gowthaman-01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":194,"author":{"gitId":"gowthaman-01"},"content":"        return 0;","lastModifiedDate":"2024-01-25"},{"lineNumber":195,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":196,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":197,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":198,"author":{"gitId":"gowthaman-01"},"content":"     * The main method to start the chatbot. Initializes the application and handles user input.","lastModifiedDate":"2024-01-25"},{"lineNumber":199,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":200,"author":{"gitId":"gowthaman-01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":201,"author":{"gitId":"gowthaman-01"},"content":"        greet();","lastModifiedDate":"2024-01-25"},{"lineNumber":202,"author":{"gitId":"gowthaman-01"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":203,"author":{"gitId":"gowthaman-01"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":204,"author":{"gitId":"gowthaman-01"},"content":"            String[] input \u003d scanner.nextLine().split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":205,"author":{"gitId":"gowthaman-01"},"content":"            int exit \u003d handleInput(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":206,"author":{"gitId":"gowthaman-01"},"content":"            if (exit \u003d\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":207,"author":{"gitId":"gowthaman-01"},"content":"                return;","lastModifiedDate":"2024-01-25"},{"lineNumber":208,"author":{"gitId":"gowthaman-01"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":209,"author":{"gitId":"gowthaman-01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":210,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":211,"author":{"gitId":"gowthaman-01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gowthaman-01":211}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gowthaman-01"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"gowthaman-01"},"content":" * Enum representing the various commands available in the application.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"gowthaman-01"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gowthaman-01"},"content":"public enum Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gowthaman-01"},"content":"     * Command to list all tasks.","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gowthaman-01"},"content":"    LIST,","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gowthaman-01"},"content":"     * Command to add a new to-do task.","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"gowthaman-01"},"content":"    TODO,","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"gowthaman-01"},"content":"     * Command to add a new task with a deadline.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"gowthaman-01"},"content":"    DEADLINE,","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"gowthaman-01"},"content":"     * Command to add a new event task.","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"gowthaman-01"},"content":"    EVENT,","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"gowthaman-01"},"content":"     * Command to mark a task as completed.","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"gowthaman-01"},"content":"    MARK,","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"gowthaman-01"},"content":"     * Command to unmark a completed task.","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"gowthaman-01"},"content":"    UNMARK,","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"gowthaman-01"},"content":"     * Command to delete a task.","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"gowthaman-01"},"content":"    DELETE,","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"gowthaman-01"},"content":"     * Command to terminate the application.","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"gowthaman-01"},"content":"    BYE","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"gowthaman-01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gowthaman-01":44}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gowthaman-01"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"gowthaman-01"},"content":" * Represents a deadline, which is a specialized form of Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"gowthaman-01"},"content":" * This class adds a specific deadline to the task description.","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gowthaman-01"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gowthaman-01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gowthaman-01"},"content":"    private static final String DEADLINE_PREFIX \u003d \"[D]\";","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gowthaman-01"},"content":"    private final String deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gowthaman-01"},"content":"     * Constructs a new Deadline with the given description and deadline.","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gowthaman-01"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"gowthaman-01"},"content":"     * @param deadline The deadline date as a String.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"gowthaman-01"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"gowthaman-01"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"gowthaman-01"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"gowthaman-01"},"content":"     * Returns a string representation of the Deadline.","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"gowthaman-01"},"content":"     * The string includes the Deadline identifier, followed by the Task\u0027s string representation,","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"gowthaman-01"},"content":"     * and the specified deadline.","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"gowthaman-01"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"gowthaman-01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"gowthaman-01"},"content":"        return DEADLINE_PREFIX + super.toString() + \"(by: \" + this.deadline + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"gowthaman-01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gowthaman-01":29}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gowthaman-01"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"gowthaman-01"},"content":" * Represents an event, which is a specialized form of Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"gowthaman-01"},"content":" * This class adds specific start and end times to the task description.","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gowthaman-01"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gowthaman-01"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gowthaman-01"},"content":"    private static final String EVENT_PREFIX \u003d \"[E]\";","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gowthaman-01"},"content":"    private final String from;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gowthaman-01"},"content":"    private final String to;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gowthaman-01"},"content":"     * Constructs a new Event with the given description, start time, and end time.","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"gowthaman-01"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"gowthaman-01"},"content":"     * @param from The start time of the event as a String.","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"gowthaman-01"},"content":"     * @param to The end time of the event as a String.","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"gowthaman-01"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"gowthaman-01"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"gowthaman-01"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"gowthaman-01"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"gowthaman-01"},"content":"     * Returns a string representation of the Event.","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"gowthaman-01"},"content":"     * The string includes the Event identifier, followed by the Task\u0027s string representation,","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"gowthaman-01"},"content":"     * and the specified start and end times.","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"gowthaman-01"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"gowthaman-01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"gowthaman-01"},"content":"        return EVENT_PREFIX + super.toString() + \"(from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"gowthaman-01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gowthaman-01":32}},{"path":"src/main/java/InvalidInputFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gowthaman-01"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"gowthaman-01"},"content":" * Exception thrown when the input format for a task is invalid.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"gowthaman-01"},"content":" * This can occur if the user input does not conform to the expected format for a specific type of task.","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gowthaman-01"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gowthaman-01"},"content":"public class InvalidInputFormatException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gowthaman-01"},"content":"     * Constructs an InvalidInputFormatException with the specified task type.","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gowthaman-01"},"content":"     * @param taskType The type of task for which the input format is invalid.","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gowthaman-01"},"content":"    public InvalidInputFormatException(String taskType) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gowthaman-01"},"content":"        super(String.format(\"Invalid format for %s task!\", taskType));","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"gowthaman-01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gowthaman-01":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gowthaman-01"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"gowthaman-01"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"gowthaman-01"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gowthaman-01"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gowthaman-01"},"content":"    private final String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gowthaman-01"},"content":"    private boolean done;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gowthaman-01"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gowthaman-01"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"gowthaman-01"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"gowthaman-01"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"gowthaman-01"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"gowthaman-01"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"gowthaman-01"},"content":"    public void mark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"gowthaman-01"},"content":"        this.done \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"gowthaman-01"},"content":"     * Unmarks the task, setting it to not completed.","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"gowthaman-01"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"gowthaman-01"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"gowthaman-01"},"content":"     * Returns a string representation of the Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"gowthaman-01"},"content":"     * The string includes the task\u0027s completion status and its description.","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"gowthaman-01"},"content":"     * The completion status is represented by \u0027[X]\u0027 for a completed task and \u0027[ ]\u0027 for an incomplete task.","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"gowthaman-01"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"gowthaman-01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"gowthaman-01"},"content":"        String checkBox \u003d this.done ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"gowthaman-01"},"content":"        return checkBox + \" \" + this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"gowthaman-01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gowthaman-01":42}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gowthaman-01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"gowthaman-01"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gowthaman-01"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gowthaman-01"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gowthaman-01"},"content":"public class TaskList {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gowthaman-01"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gowthaman-01"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gowthaman-01"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"gowthaman-01"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"gowthaman-01"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"gowthaman-01"},"content":"     * @param t The task to be added.","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"gowthaman-01"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"gowthaman-01"},"content":"        this.list.add(t);","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"gowthaman-01"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"gowthaman-01"},"content":"    public int getLength() {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"gowthaman-01"},"content":"        return this.list.size();","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"gowthaman-01"},"content":"     * Marks a task as completed.","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"gowthaman-01"},"content":"     * @param i The index of the task to mark.","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"gowthaman-01"},"content":"     * @return The marked task.","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"gowthaman-01"},"content":"    public Task markTask(int i) {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"gowthaman-01"},"content":"        Task t \u003d this.list.get(i);","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"gowthaman-01"},"content":"        t.mark();","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"gowthaman-01"},"content":"        return t;","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"gowthaman-01"},"content":"     * Unmarks a completed task.","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"gowthaman-01"},"content":"     * @param i The index of the task to unmark.","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"gowthaman-01"},"content":"     * @return The unmarked task.","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"gowthaman-01"},"content":"    public Task unmarkTask(int i) {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"gowthaman-01"},"content":"        Task t \u003d this.list.get(i);","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"gowthaman-01"},"content":"        t.unmark();","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"gowthaman-01"},"content":"        return t;","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"gowthaman-01"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"gowthaman-01"},"content":"     * @param i The index of the task to delete.","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"gowthaman-01"},"content":"     * @return The deleted task.","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"gowthaman-01"},"content":"    public Task deleteTask(int i) {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"gowthaman-01"},"content":"        return this.list.remove(i);","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"gowthaman-01"},"content":"     * Returns a string representation of the TaskList.","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"gowthaman-01"},"content":"     * Each task in the list is converted to a string and appended to the result.","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"gowthaman-01"},"content":"     * Tasks are numbered and listed in the order they are stored in the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"gowthaman-01"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"gowthaman-01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"gowthaman-01"},"content":"        StringBuilder displayString \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"gowthaman-01"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"gowthaman-01"},"content":"        for (Task t: list) {","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"gowthaman-01"},"content":"            displayString.append(count).append(\". \").append(t.toString()).append(\"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"gowthaman-01"},"content":"            count++;","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"gowthaman-01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"gowthaman-01"},"content":"        return displayString.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"gowthaman-01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gowthaman-01":81}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gowthaman-01"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"gowthaman-01"},"content":" * Represents a to-do item, which is a specialized form of Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"gowthaman-01"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gowthaman-01"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gowthaman-01"},"content":"    private static final String TODO_PREFIX \u003d \"[T]\";","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gowthaman-01"},"content":"     * Constructs a new To-do with the given description.","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gowthaman-01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gowthaman-01"},"content":"     * @param description The description of the to-do item.","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gowthaman-01"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"gowthaman-01"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"gowthaman-01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"gowthaman-01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"gowthaman-01"},"content":"     * Returns a string representation of the To-do.","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"gowthaman-01"},"content":"     * The string includes the To-do identifier, followed by the Task\u0027s string representation.","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"gowthaman-01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"gowthaman-01"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"gowthaman-01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"gowthaman-01"},"content":"        return TODO_PREFIX + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"gowthaman-01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"gowthaman-01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gowthaman-01":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gowthaman-01"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"gowthaman-01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"gowthaman-01"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gowthaman-01"},"content":"list","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gowthaman-01":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"gowthaman-01"},"content":"java -classpath ../bin Chitty \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gowthaman-01":1,"-":37}}]
