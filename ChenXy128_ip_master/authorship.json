[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"    testImplementation project(path: \u0027:\u0027)","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ChenXy128":1,"-":42}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.exception;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"    protected String message;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ChenXy128":8}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.main;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":" * Represents the main class of the Duke application, a personal assistant chatbot","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":" * that helps users to keep track of various tasks. The application is capable of","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":" * understanding commands to add, delete, mark, and list tasks among other functionalities.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":" * Duke uses a combination of components to manage tasks:","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":" * - {@link duke.storage.Storage} for loading from and saving tasks to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":" * - {@link duke.parser.Parser} for interpreting user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":" * - {@link duke.ui.Ui} for handling interactions with the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":" * - {@link duke.tasklist.TaskList} for storing and managing a list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":" * The application supports tasks of types: Todo, Deadline, and Event, which can be","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":" * added, marked as done, deleted, and listed. It operates in a loop, processing user","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":" * commands until a termination command is received.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    private static final String FILE_PATH \u003d System.getProperty(\"user.home\") + File.separator","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"            + \"Downloads\" + File.separator + \"duke.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"    private TaskList list;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"     * Constructs a new Duke object with a specified file path for data storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"     * Initializes the UI, Parser, TaskList, and Storage components of Duke.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"     * @param filePath The path of the file where task data is stored.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"        this.list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"        this.storage \u003d new Storage(filePath, parser);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"        ","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"     * Enum representing possible instructions that Duke can process.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"    public enum Instruction {","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, BYE, FIND, ANYTHING_ELSE","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"     * Determines the type of instruction given by the user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"     * @param input The raw input string from the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"     * @return The Instruction that corresponds to the user\u0027s command.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"    public Instruction getInstr(String input) {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"        if (input.toLowerCase().startsWith(\"list\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.LIST;","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.MARK;","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.UNMARK;","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.TODO;","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.DEADLINE;","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.EVENT;","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.DELETE;","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"find\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.FIND;","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"        } else if (input.toLowerCase().startsWith(\"bye\")){","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.BYE;","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"        } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"            return Instruction.ANYTHING_ELSE;","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"ChenXy128"},"content":"     * Starts the Duke application. This method sets up necessary components,","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"ChenXy128"},"content":"     * loads existing tasks from storage, and processes user input until the \"bye\"","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"ChenXy128"},"content":"     * command is received.","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the application encounters an error it cannot recover from.","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"ChenXy128"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"ChenXy128"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"        Duke duke \u003d new Duke(FILE_PATH);","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"ChenXy128"},"content":"            duke.storage.loadFile(duke.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"ChenXy128"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"ChenXy128"},"content":"            duke.ui.loadingError();","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"ChenXy128"},"content":"        duke.ui.greeting();","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"ChenXy128"},"content":"        while(isRunning) {","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"ChenXy128"},"content":"            String inputFromUser \u003d sc.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"ChenXy128"},"content":"            Instruction instruction \u003d duke.getInstr(inputFromUser);","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"ChenXy128"},"content":"        ","lastModifiedDate":"2024-01-26"},{"lineNumber":112,"author":{"gitId":"ChenXy128"},"content":"            switch (instruction) {","lastModifiedDate":"2024-01-26"},{"lineNumber":113,"author":{"gitId":"ChenXy128"},"content":"            case LIST:","lastModifiedDate":"2024-01-26"},{"lineNumber":114,"author":{"gitId":"ChenXy128"},"content":"                duke.ui.listing(duke.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":116,"author":{"gitId":"ChenXy128"},"content":"            case MARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":117,"author":{"gitId":"ChenXy128"},"content":"                duke.ui.handleMarkError(inputFromUser, duke.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"ChenXy128"},"content":"                Task taskToBeMarked \u003d duke.parser.getTaskTobeMarked(inputFromUser, duke.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"ChenXy128"},"content":"                taskToBeMarked.markDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"ChenXy128"},"content":"                duke.ui.marking(taskToBeMarked);","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"ChenXy128"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"ChenXy128"},"content":"                    duke.storage.changeFileContent(duke.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"ChenXy128"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"ChenXy128"},"content":"                    duke.ui.changingFileError();","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"ChenXy128"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"ChenXy128"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"ChenXy128"},"content":"                duke.ui.handleUnmarkError(inputFromUser, duke.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"ChenXy128"},"content":"                Task taskToBeUnmarked \u003d duke.parser.getTaskToBeUnmarked(inputFromUser, duke.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"ChenXy128"},"content":"                taskToBeUnmarked.markUndone();","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"ChenXy128"},"content":"                duke.ui.unmarking(taskToBeUnmarked);","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"ChenXy128"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"ChenXy128"},"content":"                    duke.storage.changeFileContent(duke.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"ChenXy128"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"ChenXy128"},"content":"                    duke.ui.changingFileError();","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"ChenXy128"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":138,"author":{"gitId":"ChenXy128"},"content":"            case TODO:","lastModifiedDate":"2024-01-26"},{"lineNumber":139,"author":{"gitId":"ChenXy128"},"content":"                duke.ui.handleTodoError(inputFromUser);","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"ChenXy128"},"content":"                Task todoTask \u003d duke.parser.createToDo(inputFromUser);","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"ChenXy128"},"content":"                duke.ui.echo(todoTask, duke.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"ChenXy128"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"ChenXy128"},"content":"                    duke.storage.addTaskToFile((todoTask));","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"ChenXy128"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"ChenXy128"},"content":"                    duke.ui.changingFileError();","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"ChenXy128"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":148,"author":{"gitId":"ChenXy128"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-26"},{"lineNumber":149,"author":{"gitId":"ChenXy128"},"content":"                duke.ui.handleDeadlineError(inputFromUser);","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"ChenXy128"},"content":"                Task deadlineTask \u003d duke.parser.createDeadline(inputFromUser, duke.ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"ChenXy128"},"content":"                duke.ui.echo(deadlineTask, duke.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"ChenXy128"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"ChenXy128"},"content":"                    duke.storage.addTaskToFile((deadlineTask));","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"ChenXy128"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"ChenXy128"},"content":"                    duke.ui.changingFileError();","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"ChenXy128"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":158,"author":{"gitId":"ChenXy128"},"content":"            case EVENT:","lastModifiedDate":"2024-01-26"},{"lineNumber":159,"author":{"gitId":"ChenXy128"},"content":"                duke.ui.handleEventError(inputFromUser);","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"ChenXy128"},"content":"                Task eventTask \u003d duke.parser.createEvent(inputFromUser, duke.ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"ChenXy128"},"content":"                duke.ui.echo(eventTask, duke.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"ChenXy128"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"ChenXy128"},"content":"                    duke.storage.addTaskToFile((eventTask));","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"ChenXy128"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"ChenXy128"},"content":"                    duke.ui.changingFileError();","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"ChenXy128"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":168,"author":{"gitId":"ChenXy128"},"content":"            case DELETE:","lastModifiedDate":"2024-01-26"},{"lineNumber":169,"author":{"gitId":"ChenXy128"},"content":"                int indexOfTaskToDelete \u003d Integer.parseInt(inputFromUser.substring(7));","lastModifiedDate":"2024-01-26"},{"lineNumber":170,"author":{"gitId":"ChenXy128"},"content":"                duke.ui.handleDeleteError(duke.list,indexOfTaskToDelete);","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"ChenXy128"},"content":"                Task taskToDelete \u003d duke.parser.getTaskToDelete(inputFromUser, duke.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"ChenXy128"},"content":"                duke.ui.deleting(taskToDelete, duke.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"ChenXy128"},"content":"                duke.list.delete(taskToDelete);","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"ChenXy128"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"ChenXy128"},"content":"                    duke.storage.changeFileContent(duke.list);","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"ChenXy128"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"ChenXy128"},"content":"                    duke.ui.changingFileError();","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"ChenXy128"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":180,"author":{"gitId":"ChenXy128"},"content":"            case FIND:","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"ChenXy128"},"content":"                String keyword \u003d duke.parser.getKeywordForFind(inputFromUser);","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"ChenXy128"},"content":"                this.ui.finding(duke.list, keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"ChenXy128"},"content":"            case BYE:","lastModifiedDate":"2024-01-26"},{"lineNumber":185,"author":{"gitId":"ChenXy128"},"content":"                duke.ui.bye();","lastModifiedDate":"2024-02-02"},{"lineNumber":186,"author":{"gitId":"ChenXy128"},"content":"                isRunning \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"ChenXy128"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":188,"author":{"gitId":"ChenXy128"},"content":"            default:","lastModifiedDate":"2024-01-26"},{"lineNumber":189,"author":{"gitId":"ChenXy128"},"content":"                throw new DukeException(\"Can\u0027t understand your instruction\");","lastModifiedDate":"2024-01-26"},{"lineNumber":190,"author":{"gitId":"ChenXy128"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":191,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":192,"author":{"gitId":"ChenXy128"},"content":"        sc.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":193,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":194,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":196,"author":{"gitId":"ChenXy128"},"content":"     * The main entry point of the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":197,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":198,"author":{"gitId":"ChenXy128"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2024-02-03"},{"lineNumber":199,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the application encounters an unrecoverable error during startup.","lastModifiedDate":"2024-02-03"},{"lineNumber":200,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":201,"author":{"gitId":"ChenXy128"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":202,"author":{"gitId":"ChenXy128"},"content":"        new Duke(FILE_PATH).run();","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ChenXy128":202,"-":2}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":" * The Parser class is responsible for interpreting user input and converting it into","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":" * commands that can be executed by the Duke application. It also handles parsing","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":" * of task data from and to the storage format.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"     * Parses the input command to identify the task to be marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"     * @param list The TaskList containing all tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"     * @return The Task to be marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"    public Task getTaskTobeMarked(String input, TaskList list) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"        int index \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"        return list.getTask(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"     * Parses the input command to identify the task to be unmarked (marked as not done).","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"     * @param list The TaskList containing all tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"     * @return The Task to be unmarked.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"    public Task getTaskToBeUnmarked(String input, TaskList list) {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"        int index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"        return list.getTask(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"     * Parses the input command to identify the task to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"     * @param list The TaskList containing all tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"     * @return The Task to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"    public Task getTaskToDelete(String input, TaskList list) {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"        int indexOfTaskToDelete \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"        return list.getTask(indexOfTaskToDelete);","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"    public String getKeywordForFind(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"        return input.substring(5);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"     * Creates a ToDo task from the input command.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"     * @return A new ToDo Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"    public Task createToDo(String input) {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"        String todoDescription \u003d input.substring(5);","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"        return new ToDo(todoDescription);","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"     * Creates a Deadline task from the input command, including parsing the due date.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"     * @param ui The UI instance to handle user interactions.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"     * @return A new Deadline Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the input date is invalid or the input format is incorrect.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"    public Task createDeadline(String input, Ui ui) throws DukeException{","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"        int indexOfBy \u003d input.indexOf(\"/by\");","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"ChenXy128"},"content":"        String deadlineDescription \u003d input.substring(9, indexOfBy - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"        String deadline \u003d input.substring(indexOfBy + 4);","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"        LocalDate by \u003d this.formatInputDate(deadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"        ui.handleInvalidInputDate(deadline, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"), by);","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"        return new Deadline(deadlineDescription, by);","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"ChenXy128"},"content":"     * Creates an Event task from the input command, including parsing the start and end dates.","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"ChenXy128"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"ChenXy128"},"content":"     * @param ui The UI instance to handle user interactions.","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"ChenXy128"},"content":"     * @return A new Event Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If any input date is invalid or the input format is incorrect.","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"ChenXy128"},"content":"    public Task createEvent(String input, Ui ui) throws DukeException{","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"ChenXy128"},"content":"        int indexOfFrom \u003d input.indexOf(\"/from\");","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"        int indexOfTo \u003d input.indexOf(\"/to\");","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"        String eventDescription \u003d input.substring(6, indexOfFrom - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"        String startString \u003d input.substring(indexOfFrom + 6, indexOfTo - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"ChenXy128"},"content":"        String endString \u003d input.substring(indexOfTo + 4);","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"ChenXy128"},"content":"        LocalDate start \u003d this.formatInputDate(startString);","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"ChenXy128"},"content":"        LocalDate end \u003d this.formatInputDate(endString);","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"ChenXy128"},"content":"        ui.handleInvalidInputDate(startString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"), start);","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"ChenXy128"},"content":"        ui.handleInvalidInputDate(endString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"), end);","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"ChenXy128"},"content":"        return new Event(eventDescription, start, end);","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"ChenXy128"},"content":"     * Parses a string representation of a task from the storage file into a Task object.","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"ChenXy128"},"content":"     * @param line The string representation of the task from the storage file.","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"ChenXy128"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"ChenXy128"},"content":"    public Task parseStringToTask(String line) {","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"ChenXy128"},"content":"        char typeOfTask \u003d line.charAt(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"ChenXy128"},"content":"        char status \u003d line.charAt(4);","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"ChenXy128"},"content":"        Task t \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"ChenXy128"},"content":"        if (typeOfTask \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"ChenXy128"},"content":"            String description \u003d line.substring(7);","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"ChenXy128"},"content":"            t \u003d new ToDo(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"ChenXy128"},"content":"        } else if (typeOfTask \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"ChenXy128"},"content":"            int indexOfTime \u003d line.indexOf(\"(by: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"ChenXy128"},"content":"            String description \u003d line.substring(7, indexOfTime - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"ChenXy128"},"content":"            String byString \u003d line.substring(indexOfTime + 5, line.indexOf(\")\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"ChenXy128"},"content":"            LocalDate by \u003d parseFileDateToStorageDate(byString);","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"ChenXy128"},"content":"            t \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"ChenXy128"},"content":"        } else if (typeOfTask \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"ChenXy128"},"content":"            int indexOfStartTime \u003d line.indexOf(\"(from\");","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"ChenXy128"},"content":"            int indexOfEndTime \u003d line .indexOf(\"to\");","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"ChenXy128"},"content":"            String description \u003d line.substring(7, indexOfStartTime - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"ChenXy128"},"content":"            String startString \u003d line.substring(indexOfStartTime + 6, indexOfEndTime - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"ChenXy128"},"content":"            String endString \u003d line.substring(indexOfEndTime + 3, line.indexOf(\")\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"ChenXy128"},"content":"            LocalDate start \u003d parseFileDateToStorageDate(startString);","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"ChenXy128"},"content":"            LocalDate end \u003d parseFileDateToStorageDate(endString);","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"ChenXy128"},"content":"            t \u003d new Event(description, start, end);","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"ChenXy128"},"content":"        boolean doneOrNot \u003d (status \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"ChenXy128"},"content":"        t.setStatus(doneOrNot);","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"ChenXy128"},"content":"        return t;","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"ChenXy128"},"content":"     * Converts a date string from the file storage format into a LocalDate object.","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"ChenXy128"},"content":"     * @param fileDate The date string in the file storage format.","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"ChenXy128"},"content":"     * @return The LocalDate object corresponding to the date string.","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"ChenXy128"},"content":"    public LocalDate parseFileDateToStorageDate(String fileDate) {","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"ChenXy128"},"content":"        DateTimeFormatter fileDateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"ChenXy128"},"content":"        LocalDate date \u003d LocalDate.parse(fileDate, fileDateFormatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"ChenXy128"},"content":"        DateTimeFormatter storageDateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"ChenXy128"},"content":"        String acceptedDate \u003d date.format(storageDateFormatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"ChenXy128"},"content":"        return LocalDate.parse(acceptedDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"ChenXy128"},"content":"     * Formats an input date string from the user into a LocalDate object.","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"ChenXy128"},"content":"     * @param input The date string input by the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"ChenXy128"},"content":"     * @return The LocalDate object formatted according to the application\u0027s storage format.","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the input date format is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"ChenXy128"},"content":"    public LocalDate formatInputDate(String input) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"ChenXy128"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"ChenXy128"},"content":"        LocalDate date \u003d LocalDate.parse(input, inputFormatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"ChenXy128"},"content":"        DateTimeFormatter storageFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"ChenXy128"},"content":"        String acceptedDate \u003d date.format(storageFormatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"ChenXy128"},"content":"        return LocalDate.parse(acceptedDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ChenXy128":171}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":" * Handles loading from and saving tasks to the file system. This class provides functionality","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":" * to read tasks from a file upon startup and write tasks to the same file when tasks are added","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":" * or modified.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"    protected String filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"    protected Parser parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"     * Creates an instance of Storage with a specified file path for task data and a parser","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"     * for converting task data between its textual representation and Task objects.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"     * @param filePath The path of the file where task data is stored.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"     * @param parser The parser used to interpret and format task data.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"    public Storage(String filePath, Parser parser) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"    public Parser getParser() {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"        return this.parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"    public String getFilePath() {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"        return this.filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"     * Loads the tasks from the file specified by filePath into the provided TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"     * If the file does not exist, it will be created.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"     * @param list The TaskList to which the loaded tasks will be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"     * @return The updated TaskList with tasks loaded from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs during reading from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"    public TaskList loadFile(TaskList list) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"        String filePath \u003d this.getFilePath();","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"            file.createNewFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"            String taskContent \u003d sc.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"            Task t \u003d this.getParser().parseStringToTask(taskContent);","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"            list.add(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"        return list;","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"     * Adds a task to the task data file. This method appends the task\u0027s string representation","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"     * to the end of the file, ensuring it is saved persistently.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"     * @param task The task to be added to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs during writing to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"    public void addTaskToFile(Task task) throws IOException{","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"        FileWriter fw \u003d new FileWriter(this.getFilePath(), true);","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"        fw.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"        fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"     * Writes a given string to the task data file, overwriting its current contents.","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"     * This method is used for updating the entire task list in the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"     * @param textToAdd The complete string representation of the task list to write to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs during writing to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"    public void writeToFile(String textToAdd) throws IOException{","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"        FileWriter fw \u003d new FileWriter(this.getFilePath());","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ChenXy128"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"ChenXy128"},"content":"        fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"ChenXy128"},"content":"     * Updates the task data file with the current contents of the TaskList. This method","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"ChenXy128"},"content":"     * generates the complete string representation of all tasks in the list and writes it","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"ChenXy128"},"content":"     * to the file, replacing any existing content.","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"ChenXy128"},"content":"     * @param list The TaskList containing all current tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"ChenXy128"},"content":"     * @throws IOException If an I/O error occurs during writing to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"    public void changeFileContent(TaskList list) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"        StringBuilder contentBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"ChenXy128"},"content":"        for (Task t: list.getList()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"ChenXy128"},"content":"            contentBuilder.append(t.toString()).append(System.lineSeparator());","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"ChenXy128"},"content":"        writeToFile(contentBuilder.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ChenXy128":106}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"        return this.by;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDateForPrinting(this.getBy()) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ChenXy128":19}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"public class Event extends Task{","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"    protected LocalDate start;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"    protected LocalDate end;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"    public LocalDate getStart() {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"        return this.start;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"    public LocalDate getEnd() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"        return this.end;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"        return \"[E]\" + super.toString() + \" (from \" + formatDateForPrinting(this.getStart())","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"                + \" to \" + formatDateForPrinting(this.getEnd()) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ChenXy128":26}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"        return this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"    public static String formatDateForPrinting(LocalDate date) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"        return date.format(outputFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ChenXy128":44}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ChenXy128":11}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.tasklist;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"        return this.list;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"    public void add(Task t) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"        this.getList().add(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    public void delete(Task t) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"        this.getList().remove(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"    public int size() {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"        return this.getList().size();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c this.size() ? this.getList().get(index) : null;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"    public boolean contains(Task t) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"        return this.getList().contains(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"        int num \u003d 0;","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"        for (Task t: this.getList()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"            if (t.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"                num +\u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"                sb.append(num).append(\".\").append(t.toString()).append(System.lineSeparator());","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"        if (num \u003d\u003d 0) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"            sb.append(\"No tasks match your find query for: \").append(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ChenXy128":54}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":" * The Ui class handles all user interactions for the Duke application. It is responsible","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":" * for displaying messages to the user, including greetings, task operations feedback, and errors.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"     * Prints a message to the user indicating a task has been added, and displays the current","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"     * total number of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"     * @param task The task that has been added.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"     * @param list The task list to which the task was added.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"    public void echo(Task task, TaskList list) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"        String echo \u003d \"Got it. I\u0027ve added this task:\\n\" + \"  \" + task.toString() + \"\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"            + \"Now you have \" + (list.size() + 1) + \" tasks in the list\"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"            + \"\\n___________________________________\" ;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"        System.out.println(echo);","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"        list.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"     * Prints a greeting message to the user when the application starts.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"    public void greeting() {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"        String greeting \u003d \"___________________________________\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"            + \"Hello! I\u0027m Jinni\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"            + \"What can I do for you?\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"            + \"___________________________________\" ;","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"        System.out.println(greeting);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"     * Lists all tasks currently in the task list, displaying each task\u0027s status and description.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"     * @param list The task list containing the tasks to be listed.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"    public void listing(TaskList list) {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"        System.out.println(\"Here are the tasks in your list\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"            System.out.println(\"\\n___________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"            int num \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"            for (Task t : list.getList()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"                System.out.println(num + \".\" + t.toString() + \"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"                num++;","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"            System.out.println(\"___________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"ChenXy128"},"content":"     * Prints a message to the user indicating that a specific task has been marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"ChenXy128"},"content":"     * @param t The task that has been marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"ChenXy128"},"content":"    public void marking(Task t) {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"ChenXy128"},"content":"        System.out.println(\"Nice! I have marked this task as done\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"ChenXy128"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ChenXy128"},"content":"        System.out.println(\"___________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"ChenXy128"},"content":"     * Prints a message to the user indicating that a specific task has been unmarked.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"ChenXy128"},"content":"     * @param t The task that has been unmarked.","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"ChenXy128"},"content":"    public void unmarking(Task t) {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ChenXy128"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"ChenXy128"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"ChenXy128"},"content":"        System.out.println(\"___________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"ChenXy128"},"content":"     * Prints a message to the user indicating a task has been deleted, and displays the current","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"ChenXy128"},"content":"     * total number of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"ChenXy128"},"content":"     * @param t The task that has been deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"ChenXy128"},"content":"     * @param list The task list from which the task was deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"ChenXy128"},"content":"    public void deleting(Task t, TaskList list) {","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ChenXy128"},"content":"        String toPrint \u003d \"Noted. I\u0027ve removed this task:\\n\" + \"  \" + t.toString() + \"\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ChenXy128"},"content":"            + \"Now you have \" + (list.size() - 1) + \" tasks in the list\"","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"ChenXy128"},"content":"            + \"\\n___________________________________\" ;","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"ChenXy128"},"content":"        System.out.println(toPrint);","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"ChenXy128"},"content":"    public void finding(TaskList list, String keyword) throws DukeException{","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"ChenXy128"},"content":"        String result \u003d list.findTask(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"ChenXy128"},"content":"        String toPrint \u003d \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"ChenXy128"},"content":"                + result","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"ChenXy128"},"content":"                + \"\\n___________________________________\" ;","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"ChenXy128"},"content":"        System.out.println(toPrint);","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"ChenXy128"},"content":"     * Prints a goodbye message to the user when the application exits.","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"ChenXy128"},"content":"    public void bye() {","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"ChenXy128"},"content":"        String bye \u003d \"___________________________________\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"ChenXy128"},"content":"            + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"ChenXy128"},"content":"            + \"___________________________________\";","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"ChenXy128"},"content":"        System.out.println(bye);","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"ChenXy128"},"content":"     * Prints an error message to the user if the application fails to load the task file.","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"ChenXy128"},"content":"    public void loadingError() {","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"ChenXy128"},"content":"        System.out.println(\"File not found\");","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"ChenXy128"},"content":"     * Prints an error message to the user if the application encounters an error while attempting","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"ChenXy128"},"content":"     * to modify the task file.","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"ChenXy128"},"content":"    public void changingFileError() {","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"ChenXy128"},"content":"        System.out.println(\"File not found\");","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"ChenXy128"},"content":"     * Checks for errors in the mark command input by the user and throws an exception if the input is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"ChenXy128"},"content":"     * @param inputFromUser The user input for marking a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"ChenXy128"},"content":"     * @param list The task list against which to validate the input.","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the specified task index is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"ChenXy128"},"content":"    public void handleMarkError(String inputFromUser, TaskList list) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"ChenXy128"},"content":"        if (Integer.parseInt(inputFromUser.substring(5)) \u003e list.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"You do not have that many tasks\");","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"ChenXy128"},"content":"        if (Integer.parseInt(inputFromUser.substring(5)) \u003c 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"No negative task number\");","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"ChenXy128"},"content":"     * Checks for errors in the unmark command input by the user and throws an exception if the input is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"ChenXy128"},"content":"     * @param inputFromUser The user input for unmarking a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"ChenXy128"},"content":"     * @param list The task list against which to validate the input.","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the specified task index is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"ChenXy128"},"content":"    public void handleUnmarkError(String inputFromUser, TaskList list) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"ChenXy128"},"content":"        if (Integer.parseInt(inputFromUser.substring(7)) \u003e list.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"You do not have that many tasks\");","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"ChenXy128"},"content":"        if (Integer.parseInt(inputFromUser.substring(7)) \u003c 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"No negative task number\");","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"ChenXy128"},"content":"     * Validates the input for a todo command and throws an exception if the input is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"ChenXy128"},"content":"     * @param inputFromUser The user input for creating a todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the task description is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"ChenXy128"},"content":"    public void handleTodoError(String inputFromUser) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"ChenXy128"},"content":"        if (!(inputFromUser.substring(4).matches(\".*\\\\S.*\"))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"Description of the task can\u0027t be empty\");","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"ChenXy128"},"content":"     * Validates the input for a deadline command and throws an exception if the input is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":176,"author":{"gitId":"ChenXy128"},"content":"     * @param inputFromUser The user input for creating a deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":177,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the task description or date is empty or invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"ChenXy128"},"content":"    public void handleDeadlineError(String inputFromUser) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"ChenXy128"},"content":"        if (!(inputFromUser.substring(8).matches(\".*\\\\S.*\"))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"Description of the task can\u0027t be empty\");","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"ChenXy128"},"content":"     * Validates the input for an event command and throws an exception if the input is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"ChenXy128"},"content":"     * @param inputFromUser The user input for creating an event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the task description or dates are empty or invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"ChenXy128"},"content":"    public void handleEventError(String inputFromUser) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":192,"author":{"gitId":"ChenXy128"},"content":"        if (!(inputFromUser.substring(5).matches(\".*\\\\S.*\"))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":193,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"Description of the task can\u0027t be empty\");","lastModifiedDate":"2024-02-02"},{"lineNumber":194,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":196,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":198,"author":{"gitId":"ChenXy128"},"content":"     * Validates the input for a delete command and throws an exception if the task index is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":199,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":200,"author":{"gitId":"ChenXy128"},"content":"     * @param list The task list from which a task is to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":201,"author":{"gitId":"ChenXy128"},"content":"     * @param indexOfTaskToDelete The index of the task to delete.","lastModifiedDate":"2024-02-03"},{"lineNumber":202,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the task index is out of bounds.","lastModifiedDate":"2024-02-03"},{"lineNumber":203,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"ChenXy128"},"content":"    public void handleDeleteError(TaskList list, int indexOfTaskToDelete) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":205,"author":{"gitId":"ChenXy128"},"content":"        if (list.size() \u003c 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":206,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"No task at the moment\");","lastModifiedDate":"2024-02-02"},{"lineNumber":207,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":208,"author":{"gitId":"ChenXy128"},"content":"        if (indexOfTaskToDelete \u003e list.size() || indexOfTaskToDelete \u003c 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":209,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"Check you task number\");","lastModifiedDate":"2024-02-02"},{"lineNumber":210,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":211,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":212,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":213,"author":{"gitId":"ChenXy128"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":214,"author":{"gitId":"ChenXy128"},"content":"     * Validates a date input by the user, ensuring it matches the expected format.","lastModifiedDate":"2024-02-03"},{"lineNumber":215,"author":{"gitId":"ChenXy128"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":216,"author":{"gitId":"ChenXy128"},"content":"     * @param inputDate The date string input by the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":217,"author":{"gitId":"ChenXy128"},"content":"     * @param formatter The DateTimeFormatter against which to validate the input date.","lastModifiedDate":"2024-02-03"},{"lineNumber":218,"author":{"gitId":"ChenXy128"},"content":"     * @param date The LocalDate object parsed from the inputDate.","lastModifiedDate":"2024-02-03"},{"lineNumber":219,"author":{"gitId":"ChenXy128"},"content":"     * @throws DukeException If the input date does not match the expected format.","lastModifiedDate":"2024-02-03"},{"lineNumber":220,"author":{"gitId":"ChenXy128"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":221,"author":{"gitId":"ChenXy128"},"content":"    public void handleInvalidInputDate(String inputDate, DateTimeFormatter formatter, LocalDate date) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":222,"author":{"gitId":"ChenXy128"},"content":"        if (!(inputDate.equals(date.format(formatter)))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":223,"author":{"gitId":"ChenXy128"},"content":"            throw new DukeException(\"Did you enter a valid date or is the date entered of format \u003cdd/mm/yyyy\u003e\");","lastModifiedDate":"2024-02-02"},{"lineNumber":224,"author":{"gitId":"ChenXy128"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":225,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":226,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":227,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ChenXy128":227}},{"path":"src/test/java/duke/parsertest/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.parsertest;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"    public void createToDo_validInput_success() throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"        String input \u003d \"todo buy milk\";","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"        ","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"        Task result \u003d parser.createToDo(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":" ","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"        assertTrue(result instanceof ToDo, \"The result should be an instance of ToDos\");","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"        assertEquals(\"buy milk\", result.getDescription(), \"The description of the todo should match the input\");","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"    public void createToDo_invalidInput_throwsException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"        String input \u003d \"todo\";","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"        ","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"        assertThrows(StringIndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"            parser.createToDo(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"        }, \"Expected createToDo to throw StringIndexOutOfBoundException as task description is empty\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"                \"but it did not\");","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"        ","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ChenXy128":38}},{"path":"src/test/java/duke/storagetest/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"package duke.storagetest;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ChenXy128"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ChenXy128"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ChenXy128"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ChenXy128"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ChenXy128"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ChenXy128"},"content":"    private TaskList list;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ChenXy128"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ChenXy128"},"content":"    @TempDir","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ChenXy128"},"content":"    Path tempDir;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ChenXy128"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ChenXy128"},"content":"    void setUp() {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ChenXy128"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ChenXy128"},"content":"        list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ChenXy128"},"content":"        storage \u003d new Storage(tempDir.resolve(\"dukeTest.txt\").toString(), parser);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ChenXy128"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ChenXy128"},"content":"    void testLoadFile_emptyFile() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ChenXy128"},"content":"        Files.createFile(tempDir.resolve(\"dukeTest.txt\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ChenXy128"},"content":"        TaskList loadedList \u003d storage.loadFile(new TaskList(new ArrayList\u003c\u003e()));","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ChenXy128"},"content":"        assertTrue(loadedList.getList().isEmpty(), \"Loaded list should be empty for an empty file\");","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ChenXy128"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ChenXy128"},"content":"    void testAddTaskToFile() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ChenXy128"},"content":"        Task task \u003d new ToDo(\"running\");","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ChenXy128"},"content":"        storage.addTaskToFile(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ChenXy128"},"content":"        String content \u003d Files.readString(tempDir.resolve(\"dukeTest.txt\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ChenXy128"},"content":"        assertTrue(content.contains(\"running\"), \"File should contain the added task\u0027s description\");","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ChenXy128"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ChenXy128"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ChenXy128"},"content":"    void testChangeFileContent() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ChenXy128"},"content":"        Task task1 \u003d new ToDo(\"sleep\");","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"ChenXy128"},"content":"        Task task2 \u003d new ToDo(\"eat\");","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"ChenXy128"},"content":"        list.add(task1);","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ChenXy128"},"content":"        list.add(task2);","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ChenXy128"},"content":"        storage.changeFileContent(list);","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ChenXy128"},"content":"        String content \u003d Files.readString(tempDir.resolve(\"dukeTest.txt\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ChenXy128"},"content":"        assertTrue(content.contains(\"sleep\") \u0026\u0026 content.contains(\"eat\"), \"File should contain both tasks\u0027 descriptions\");","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ChenXy128"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ChenXy128"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ChenXy128"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ChenXy128":60}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChenXy128"},"content":"deadline ip /by friday","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"ChenXy128"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"ChenXy128"},"content":"mark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"ChenXy128"},"content":"todo running","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"ChenXy128"},"content":"event meeting /from 9pm /to 10pm","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"ChenXy128"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"ChenXy128"},"content":"mark 2","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"ChenXy128"},"content":"mark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"ChenXy128"},"content":"unmark 2","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"ChenXy128"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"ChenXy128"},"content":"mark 3","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"ChenXy128"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"ChenXy128"},"content":"bye","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"ChenXy128":13}}]
