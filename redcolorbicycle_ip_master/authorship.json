[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    public String typeid() {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"        return \"D\";","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"    public String timeprint() {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"        String bystring \u003d formatter.format(by);","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"        return (\"~\" + bystring);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"    private Storage storage; //deals with loading and saving","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"    private TaskList tasks; //operations to add and delete","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"    private final Ui ui; //deals with interactions from user","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"    public Duke(String filePath) { //creating a Duke object","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    public void run() {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"        ui.greet();","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"        Parser parser \u003d new Parser(scanner, tasks, storage);","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"        parser.read();","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"        Duke bearducky \u003d new Duke(\"./data/tasks.txt\");","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"        bearducky.run();","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"redcolorbicycle":23,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"    protected LocalDate start;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"    protected LocalDate end;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    public String typeid() {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"        return \"E\";","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"    public String timeprint() {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"        String startstring \u003d formatter.format(start);","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"        String endstring \u003d formatter.format(end);","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"        return (\"~\" + startstring+\"~\" + endstring);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":30}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"    private TaskList tasklist;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    public Parser(Scanner s, TaskList t, Storage st){","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"        scanner \u003d s;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"        tasklist \u003d t;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"        storage \u003d st;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"    public void read() {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"            String userInputLowercase \u003d userInput.toLowerCase();","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"            if (checkFeeding(userInputLowercase)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"                ui.happy();","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"                continue;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"            } else if (checkIfBaseCommand(userInputLowercase)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"                handleBaseCommand(userInput.split(\" \"));","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"                storage.writeToFile(tasklist);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"            } else if (checkIfLeave(userInputLowercase)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"                ui.goodbye();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"            } else if (checkIfList(userInputLowercase)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"                handleList(tasklist);","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"            } else if (checkIfTodo(userInputLowercase)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"                handleTodo(userInput, tasklist);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"                storage.writeToFile(tasklist);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"            } else if (checkIfEvent(userInputLowercase)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"                handleEvent(userInput, tasklist);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"                storage.writeToFile(tasklist);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"            } else if (checkIfDeadline(userInputLowercase)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"                handleDeadline(userInput, tasklist);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"                storage.writeToFile(tasklist);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"                ui.instructionMessage();","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"    public void handleEvent(String s, TaskList t) {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"        String eventname \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"        String[] temp \u003d s.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"        if (temp.length \u003d\u003d 1 || temp[1].startsWith(\"/from\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"Event cannot be blank\");","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"            return;","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"        for (int a \u003d 1; a \u003c temp.length; a++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"            if (temp[a].startsWith(\"/from\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"            eventname \u003d eventname.concat(temp[a]);","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"            eventname \u003d eventname.concat(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"            String[] findperiod \u003d s.split(\" /from \");","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"            String start \u003d findperiod[1].split(\" /to \")[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"            String end \u003d findperiod[1].split(\" /to \")[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"            if (!canBeHandled(start) || !canBeHandled(end)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"                System.out.println(\"Please enter a event with the format event eventname /from dd/mm/yyyy /to dd/mm/yyyy!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"                return;","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"            Task ne \u003d new Event(eventname, DateConvert(start), DateConvert(end));","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"            t.add(ne);","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"Task added! You now have \" + t.length() +\" tasks to attend to.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"            return;","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (ArrayIndexOutOfBoundsException b) {","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"Please enter a event with the format event eventname /from dd/mm/yyyy /to dd/mm/yyyy!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean canBeHandled(String s) {","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"        return !(DateConvert(s) \u003d\u003d null);","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"    public LocalDate DateConvert(String s) {","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"        String[] patterns \u003d {\"MM/dd/yyyy\", \"M/dd/yyyy\", \"MM/d/yyyy\",","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"                \"M/d/yyyy\", \"MM-dd-yyyy\", \"M-dd-yyyy\", \"MM-d-yyyy\", \"M-d-yyyy\"};","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"        for (String pattern : patterns) {","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"                LocalDate date \u003d LocalDate.parse(s, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"                return date; // Return the parsed date if successful","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"                // Parsing failed for the current pattern, try the next one","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"        return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"    public void handleDeadline(String s, TaskList t) {","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"        String deadlinename \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"        String[] temp \u003d s.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"        if (temp.length \u003d\u003d 1 || temp[1].startsWith(\"/by\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"Deadline cannot be blank\");","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"            return;","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"redcolorbicycle"},"content":"        //create the deadline name","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"redcolorbicycle"},"content":"        for (int a \u003d 1; a \u003c temp.length; a++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"redcolorbicycle"},"content":"            if (temp[a].startsWith(\"/by\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"redcolorbicycle"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"redcolorbicycle"},"content":"            deadlinename \u003d deadlinename.concat(temp[a]);","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"redcolorbicycle"},"content":"            deadlinename \u003d deadlinename.concat(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"redcolorbicycle"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"redcolorbicycle"},"content":"            String[] finddeadline \u003d s.split(\" /by \");","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"redcolorbicycle"},"content":"            String deadline \u003d finddeadline[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"            if (!canBeHandled(deadline)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"redcolorbicycle"},"content":"                System.out.println(\"Please enter a deadline with the format deadline deadlinename /by dd/mm/yyyy!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"redcolorbicycle"},"content":"                return;","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"redcolorbicycle"},"content":"            Task nd \u003d new Deadline(deadlinename, DateConvert(deadline));","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"redcolorbicycle"},"content":"            t.add(nd);","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"Task added! You now have \" + t.length() +\" tasks to attend to.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"redcolorbicycle"},"content":"            return;","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (ArrayIndexOutOfBoundsException b) {","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"Please enter a deadline with the format deadline deadlinename /by dd/mm/yyyy!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"redcolorbicycle"},"content":"    public void handleTodo(String s, TaskList t) {","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"redcolorbicycle"},"content":"        String todoname \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"redcolorbicycle"},"content":"        String[] temp \u003d s.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"redcolorbicycle"},"content":"        if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"Todo cannot be blank\");","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"redcolorbicycle"},"content":"            return;","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"redcolorbicycle"},"content":"        for (int a \u003d 1; a \u003c temp.length; a++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"redcolorbicycle"},"content":"            todoname \u003d todoname.concat(temp[a]);","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"redcolorbicycle"},"content":"            todoname \u003d todoname.concat(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"redcolorbicycle"},"content":"        Task nt \u003d new ToDo(todoname);","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"redcolorbicycle"},"content":"        t.add(nt);","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"redcolorbicycle"},"content":"        System.out.println(\"Task added! You now have \" + t.length() +\" tasks to attend to.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkIfTodo(String s) {","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"redcolorbicycle"},"content":"        return s.startsWith(\"todo \");","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkIfEvent(String s) {","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"redcolorbicycle"},"content":"        return s.startsWith(\"event \");","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkIfDeadline(String s) {","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"redcolorbicycle"},"content":"        return s.startsWith(\"deadline \");","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"redcolorbicycle"},"content":"    public void handleList(TaskList t) {","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"redcolorbicycle"},"content":"        if (t.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"You\u0027re a lazy duck get back on the grind\");","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"redcolorbicycle"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"redcolorbicycle"},"content":"            t.iterateout();","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkIfList(String f) {","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"redcolorbicycle"},"content":"        return (f.equals(\"list\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkFeeding(String f) {","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"redcolorbicycle"},"content":"        return (f.equals(\"feed bread to bearducky\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkIfLeave(String f) {","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"redcolorbicycle"},"content":"        return (f.equals(\"bye\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"redcolorbicycle"},"content":"    public boolean checkIfBaseCommand(String f) {","lastModifiedDate":"2024-01-29"},{"lineNumber":177,"author":{"gitId":"redcolorbicycle"},"content":"        return (f.startsWith(\"mark \") || f.startsWith(\"unmark \") || f.startsWith(\"delete \"));","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"redcolorbicycle"},"content":"    public void handleBaseCommand(String[] commandsplit) {","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"redcolorbicycle"},"content":"        String firstword \u003d commandsplit[0].toLowerCase();","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"redcolorbicycle"},"content":"        int num \u003d Integer.parseInt(commandsplit[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":183,"author":{"gitId":"redcolorbicycle"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"redcolorbicycle"},"content":"            if (firstword.equals(\"mark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"redcolorbicycle"},"content":"                tasklist.mark(num - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":186,"author":{"gitId":"redcolorbicycle"},"content":"            } else if (firstword.equals(\"unmark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"redcolorbicycle"},"content":"                tasklist.unmark(num - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"redcolorbicycle"},"content":"            } else if (firstword.equals(\"delete\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"redcolorbicycle"},"content":"                tasklist.delete(num - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":191,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"[angry quacking] I can only mark numbers!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (IndexOutOfBoundsException a) {","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"[exasperated quacking] You\u0027re not that busy - numbers from 1 to \" + tasklist.length() +","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"redcolorbicycle"},"content":"                    \" only, please.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":196,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":197,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":199,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":200,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"redcolorbicycle":200}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    private File infostored;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"    private String filepath;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    public void writeToFile(TaskList tasklist) {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"        String filePath \u003d filepath; // Specify the file path","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"        // Your new content to replace the existing content","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"            // Iterate through the list of items","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"            for (int i \u003d 0; i \u003c tasklist.length(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"                // Write the content of each item to the file","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"                Task task \u003d tasklist.getTask(i);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"                writer.write(task.typeid()+\"~\"+task.markstatus()+\"~\"+task.getDescription()+task.timeprint());","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"                writer.newLine(); // Add a newline character after each item","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"Your input has been saved!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"    public void makeNewDirectory() {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"        File location \u003d new File(\"./data\");","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"        if (location.mkdirs()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"Successfully made new directory!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"Data file already exists.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"    public void makeNewFile(String filepath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"                // Create the file if it doesn\u0027t exist","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"redcolorbicycle"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"redcolorbicycle"},"content":"                    System.out.println(\"File successfully created.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"redcolorbicycle"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"redcolorbicycle"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"redcolorbicycle"},"content":"                file \u003d new File(\"./data/tasks.txt\"); //hardcode option","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"redcolorbicycle"},"content":"                System.out.println(\"Filepath invalid. Data has been stored to the filepath ./data/tasks.txt\");","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"redcolorbicycle"},"content":"        infostored \u003d file;","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"redcolorbicycle"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"redcolorbicycle"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"redcolorbicycle"},"content":"        if (infostored.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"redcolorbicycle"},"content":"            return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"redcolorbicycle"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"redcolorbicycle"},"content":"            Scanner s \u003d new Scanner(infostored);","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"redcolorbicycle"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"redcolorbicycle"},"content":"                String nextinput \u003d s.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"redcolorbicycle"},"content":"                Task task \u003d convert(nextinput);","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"redcolorbicycle"},"content":"                tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"redcolorbicycle"},"content":"            return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"redcolorbicycle"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"redcolorbicycle"},"content":"        return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"redcolorbicycle"},"content":"    public Task convert(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"redcolorbicycle"},"content":"        //assuming the file content is the task type first, then marked or not, then the name, then start/due and end","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"redcolorbicycle"},"content":"        //separated by ~","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"redcolorbicycle"},"content":"        String[] inputs \u003d input.split(\"~\");","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"redcolorbicycle"},"content":"        String type \u003d inputs[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"redcolorbicycle"},"content":"        boolean marked \u003d inputs[1].equals(\"marked\");","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"redcolorbicycle"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"redcolorbicycle"},"content":"        switch (type) {","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"redcolorbicycle"},"content":"        case \"T\" -\u003e {","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"redcolorbicycle"},"content":"            Task task \u003d new ToDo(inputs[2]);","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"redcolorbicycle"},"content":"            if (marked) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"redcolorbicycle"},"content":"                task.mark();","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"redcolorbicycle"},"content":"            return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"redcolorbicycle"},"content":"        case \"E\" -\u003e {","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"redcolorbicycle"},"content":"            LocalDate start \u003d LocalDate.parse(inputs[3], dateFormatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"redcolorbicycle"},"content":"            LocalDate end \u003d LocalDate.parse(inputs[4], dateFormatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"redcolorbicycle"},"content":"            Task task \u003d new Event(inputs[2], start, end);","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"redcolorbicycle"},"content":"            if (marked) {","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"redcolorbicycle"},"content":"                task.mark();","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"redcolorbicycle"},"content":"            return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"redcolorbicycle"},"content":"        case \"D\" -\u003e {","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"redcolorbicycle"},"content":"            LocalDate due \u003d LocalDate.parse(inputs[3], dateFormatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"redcolorbicycle"},"content":"            Task task \u003d new Deadline(inputs[2], due);","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"redcolorbicycle"},"content":"            if (marked) {","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"redcolorbicycle"},"content":"                task.mark();","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"redcolorbicycle"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"redcolorbicycle"},"content":"            return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"redcolorbicycle"},"content":"        return new Task(\"Error\");","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"redcolorbicycle"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"redcolorbicycle"},"content":"        filepath \u003d filePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"redcolorbicycle"},"content":"        makeNewDirectory(); //creates a new data file in the same folder if not already existing","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"redcolorbicycle"},"content":"        makeNewFile(filePath); //creates a new file in filepath if not already existing","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"redcolorbicycle":120}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"    public String timeprint() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"        return \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    public String typeid() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"        return \"T\";","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"        return description;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"    public String markstatus() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"            return \"marked\";","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"            return \"unmarked\";","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"        return (\"[\"+ this.getStatusIcon()+\"] \" + this.description);","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"    public void mark() {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"redcolorbicycle"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"redcolorbicycle"},"content":"    //...","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":47}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"    private List\u003cTask\u003e tasklist;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"        tasklist \u003d tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    public Task getTask(int n) {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"        return tasklist.get(n);","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"    public void add(Task t) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"        tasklist.add(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"    public void mark(int num) {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"        tasklist.get(num).mark();","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"    public void unmark(int num) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"        tasklist.get(num).unmark();","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"    public void delete(int num) {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"        tasklist.remove(num);","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"redcolorbicycle"},"content":"    public int length() {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"redcolorbicycle"},"content":"        return tasklist.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"redcolorbicycle"},"content":"    public void iterateout() {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"redcolorbicycle"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"redcolorbicycle"},"content":"            System.out.println((i + 1) + \". \" + tasklist.get(i));","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"redcolorbicycle"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"redcolorbicycle":42}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"    protected String by;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":13}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"    public Ui () {","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"        System.out.println(\"Invalid filepath.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"    public void greet() {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"        System.out.println(\"Quack! My name is Bearducky. I am a duck with a bear hat and a baseball bat.\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"                \"How may I help you today?\");","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"redcolorbicycle"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"redcolorbicycle"},"content":"    public void happy() {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"redcolorbicycle"},"content":"        System.out.println(\"[happy quacking]\");","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"redcolorbicycle"},"content":"    public void goodbye() {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"redcolorbicycle"},"content":"        System.out.println(\"[sad quacking] Can I have some bread before you go?\");","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"redcolorbicycle"},"content":"    public void instructionMessage() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"redcolorbicycle"},"content":"        System.out.println(\"[quack] I don\u0027t understand that command. If you would like to add a task to the Duckalendar,\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"redcolorbicycle"},"content":"                \" please specify with the task type - \\\"todo\\\", \\\"deadline\\\" or \\\"event\\\" followed by a space in front of the task\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"redcolorbicycle"},"content":"                \" name.\\n For deadlines, please add a /by followed by the deadline (eg. /by 2/12/2019 1800) . For events, please add a / followed by the start time,\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"redcolorbicycle"},"content":"                \" then another / followed by the end time.\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"redcolorbicycle"},"content":"                \" To mark or unmark the nth task on the list, enter the command \\\"mark n\\\" or \\\"unmark n\\\" where n is the number on the list.\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"redcolorbicycle"},"content":"                \" To delete the nth task on the list, enter the command \\\"delete n\\\" where n is the number on the list.\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"redcolorbicycle"},"content":"                \" If you would like me to list the things you are procrastinating, please enter the word \\\"list\\\".\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"redcolorbicycle"},"content":"                \" \\n If you would like to leave, please enter the word \\\"bye\\\". \\n Do also feel free to also type the words \\\"feed bread to bearducky\\\"?\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"redcolorbicycle"},"content":"                \" [Hopeful quacking]\");","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"redcolorbicycle"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"redcolorbicycle"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"redcolorbicycle":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"redcolorbicycle"},"content":"test","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"redcolorbicycle"},"content":"todo cs2103","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"redcolorbicycle"},"content":"deadline cs2103 /by tonight","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"redcolorbicycle"},"content":"event cs2103 /tonight 8pm /tonight 11pm","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"redcolorbicycle"},"content":"listi","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"redcolorbicycle"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"redcolorbicycle"},"content":"unmark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"redcolorbicycle"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"redcolorbicycle"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"redcolorbicycle"},"content":"feed bread to bearducky","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"redcolorbicycle"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"redcolorbicycle":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"redcolorbicycle"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"redcolorbicycle":1,"-":20}}]
