[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"checkstyle {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"    mainClass.set(\"skyler.main.Skyler\")","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"eunrcn":8,"-":41}},{"path":"data/Git.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"1. Create and Switch to the Branch:","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"git checkout -b *branch name*","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"2. Make the necessary change. During this process, commit your changes regularly.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"git add .","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"git commit -m \"Commit message\"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"git push origin *branch name*","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"3. Switch to Master Branch:","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"git checkout master","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"4. Merge new branch to Master with a Merge Commit:","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"git merge --no-ff *branch name* -m \"Merge branch-Level-8 for Level 8 implementation\"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"This will create a merge commit even if it\u0027s a fast-forward merge.","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"5. Tag the Merge Commit:","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"git tag *branch name*","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"6. git push","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"git push origin master","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"git push origin *branch name*","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"git push origin --tags","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"eunrcn":23}},{"path":"data/Skyler.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"[E][ ] Team meeting (from: Jan 20 2022 to: Jan 21 2022)","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"eunrcn":1}},{"path":"src/main/java/skyler/exception/SkylerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.exception;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"public class SkylerException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"    public SkylerException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"eunrcn":7}},{"path":"src/main/java/skyler/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"import skyler.task.ToDo;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"    public static void processUserInput(String userInput) throws SkylerException {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"            TaskList.listTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"            TaskList.addTask(new ToDo(getTaskDescription(userInput, 4), false));","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"            String[] parts \u003d userInput.split(\"/by\", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"            if (parts.length !\u003d 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"                        \"Invalid \u0027deadline\u0027 command. Please provide a valid description and deadline.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"            String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"            String by \u003d parts[1].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"            LocalDate byDate \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"            TaskList.addTask(new Deadline(description, byDate, false));","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"            String[] parts \u003d userInput.split(\"/from\", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"            if (parts.length !\u003d 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Invalid \u0027event\u0027 command. Please provide a valid description and timeframe.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"            String description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"            String from \u003d parts[1].split(\"/to\")[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"            String to \u003d parts[1].split(\"/to\")[1].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"            LocalDate fromDate \u003d LocalDate.parse(from, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"            LocalDate toDate \u003d LocalDate.parse(to, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"            TaskList.addTask(new Event(description, fromDate, toDate, false));","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"            TaskList.deleteTask(userInput);","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"            TaskList.markTask(userInput);","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"            TaskList.unmarkTask(userInput);","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"view\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"            TaskList.viewTasksOnDate(userInput);","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"I\u0027m sorry, I don\u0027t understand that command.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"    public static String getTaskDescription(String userInput, int startIndex, String... keywords)","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"            throws SkylerException {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"        String description \u003d userInput.substring(startIndex).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"            if (description.startsWith(keyword)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"                description \u003d description.substring(keyword.length()).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"The description of a task cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"        return description;","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"eunrcn":68}},{"path":"src/main/java/skyler/main/Skyler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"public class Skyler {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"    private static final String CHATBOT_NAME \u003d \"Skyler\";","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"        Ui.printGreeting(CHATBOT_NAME);","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"        Storage.loadTasksFromFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"        while (true) {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"            String userInput \u003d Ui.getUserInput(scanner);","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"                Ui.printByeMessage();","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"                scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"                Storage.saveTasksToFile(); // Save tasks before exiting","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"                Parser.processUserInput(userInput);","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"            } catch (SkylerException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"                Ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"        scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":34}},{"path":"src/main/java/skyler/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"import skyler.task.ToDo;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    private static final String FILE_PATH \u003d \"./data/Skyler.txt\";","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    public static void loadTasksFromFile() {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"                String data \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"                Task task \u003d parseTaskFromFile(data);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"                tasks.add(task); // Add the task to the common list","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"            scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"        } catch (IOException | SkylerException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"            System.out.println(\"An error occurred while loading tasks.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"    public static Task parseTaskFromFile(String data) throws SkylerException {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"        String taskType \u003d data.substring(1, 2); // Extracting task type (T, D, E)","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"        boolean isDone \u003d data.charAt(4) \u003d\u003d \u0027X\u0027; // Assuming \u0027x\u0027 represents a completed task","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"        String details \u003d data.substring(7).trim(); // Extracting task details","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"        switch (taskType) {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"            case \"T\":","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"                return new ToDo(details, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"            case \"D\":","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"                int byIndex \u003d details.indexOf(\"(by:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"                String descriptionD \u003d details.substring(0, byIndex).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"                String byString \u003d details.substring(byIndex + 4, details.length() - 1).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"                LocalDate byDate \u003d LocalDate.parse(byString, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"                return new Deadline(descriptionD, byDate, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"            case \"E\":","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"                int fromIndex \u003d details.indexOf(\"(from:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"                int toIndex \u003d details.indexOf(\"to:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"                String descriptionE \u003d details.substring(0, fromIndex).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"                String fromString \u003d details.substring(fromIndex + 6, toIndex).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"                String toString \u003d details.substring(toIndex + 3, details.length() - 1).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"                LocalDate fromDate \u003d LocalDate.parse(fromString, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"                LocalDate toDate \u003d LocalDate.parse(toString, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"                return new Event(descriptionE, fromDate, toDate, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"            default:","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Unknown task type in the file: \" + data);","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"    public static void saveTasksToFile() {","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"                writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"            writer.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"            System.out.println(\"An error occurred while saving tasks.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"    // Add this method to get the common tasks list for TaskList.java","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"eunrcn"},"content":"    public static List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"        return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"eunrcn":82}},{"path":"src/main/java/skyler/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"    private static List\u003cTask\u003e tasks \u003d Storage.getTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"    static void addTask(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"        Storage.saveTasksToFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"Skyler: Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"Skyler: Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"    static void listTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"Skyler: Here are the tasks in your list:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"    public static void deleteTask(String userInput) throws SkylerException {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"            int taskId \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"            if (isValidTaskId(taskId)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"                Task removedTask \u003d tasks.remove(taskId - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"Skyler: Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"  \" + removedTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"Skyler: Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"                Storage.saveTasksToFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"Invalid command. Please use \u0027delete \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"    public static void markTask(String userInput) throws SkylerException {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"            int taskId \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"            if (isValidTaskId(taskId)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"                Task task \u003d tasks.get(taskId - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"                task.markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"Skyler: Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"  \" + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"                Storage.saveTasksToFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"Invalid command. Please use \u0027mark \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"    public static void unmarkTask(String userInput) throws SkylerException {","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"            int taskId \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"            if (isValidTaskId(taskId)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"                Task task \u003d tasks.get(taskId - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"                task.markAsUndone();","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"Skyler: OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"  \" + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"                Storage.saveTasksToFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"Invalid command. Please use \u0027unmark \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"eunrcn"},"content":"    public static boolean isValidTaskId(int taskId) {","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"eunrcn"},"content":"        return taskId \u003e 0 \u0026\u0026 taskId \u003c\u003d tasks.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"eunrcn"},"content":"    public static void viewTasksOnDate(String userInput) throws SkylerException {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"eunrcn"},"content":"            String dateString \u003d userInput.split(\" \")[1];","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"eunrcn"},"content":"            LocalDate dateToView \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"eunrcn"},"content":"            System.out.println(\"Skyler: Here are the tasks for \"","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"eunrcn"},"content":"                    + dateToView.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \":\");","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"eunrcn"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"eunrcn"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"eunrcn"},"content":"                    LocalDate deadlineDate \u003d ((Deadline) task).getBy();","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"eunrcn"},"content":"                    if (deadlineDate.equals(dateToView)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"eunrcn"},"content":"                        System.out.println(\"  \" + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"eunrcn"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"eunrcn"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"eunrcn"},"content":"                    LocalDate fromDate \u003d ((Event) task).getFrom();","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"eunrcn"},"content":"                    LocalDate toDate \u003d ((Event) task).getTo();","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"eunrcn"},"content":"                    if ((dateToView.isEqual(fromDate) || dateToView.isAfter(fromDate)) \u0026\u0026","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"eunrcn"},"content":"                            (dateToView.isEqual(toDate) || dateToView.isBefore(toDate))) {","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"eunrcn"},"content":"                        System.out.println(\"  \" + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"eunrcn"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"eunrcn"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"eunrcn"},"content":"            System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"eunrcn"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"Invalid \u0027view\u0027 command. Please provide a valid date in yyyy-MM-dd format.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"eunrcn":121}},{"path":"src/main/java/skyler/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"    private static final String LINE \u003d \"------------------------------------------------------------\";","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"    public static void printGreeting(String chatbotName) {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"   /\\\\_/\\\\\");","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"  ( o.o ) Hello! I\u0027m \" + chatbotName);","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"   \u003e ^ \u003c What can I do for you?\");","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"    public static String getUserInput(Scanner scanner) {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"        System.out.print(\"You: \");","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"        return userInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"Skyler: Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"    public static void printErrorMessage(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"Skyler: Woof, \" + message);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"eunrcn":30}},{"path":"src/main/java/skyler/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"    private LocalDate by;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) throws SkylerException {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"        return by;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":24}},{"path":"src/main/java/skyler/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"    private LocalDate from;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"    private LocalDate to;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"    public Event(String description, LocalDate from, LocalDate to, boolean isDone) throws SkylerException {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"        return from;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"        return to;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) +","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"                \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":30}},{"path":"src/main/java/skyler/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":28}},{"path":"src/main/java/skyler/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":12}},{"path":"src/test/java/skyler/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"    public void processUserInput_eventCommand_addsEventTask() throws SkylerException {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"        String userInput \u003d \"event Team meeting /from 2022-01-20 /to 2022-01-21\";","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"        Parser.processUserInput(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"        assertEquals(\"[E][ ] Team meeting (from: Jan 20 2022 to: Jan 21 2022)\", Storage.getTasks().get(0).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"    public void processUserInput_invalidCommand_throwsSkylerException() {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"        String userInput \u003d \"invalidCommand\";","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"        assertThrows(SkylerException.class, () -\u003e Parser.processUserInput(userInput));","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"eunrcn":24}},{"path":"src/test/java/skyler/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"public class EventTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"    public void testEventToString() throws SkylerException {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"        LocalDate from \u003d LocalDate.of(2022, 2, 10);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"        LocalDate to \u003d LocalDate.of(2022, 2, 15);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"        Event event \u003d new Event(\"Test Event\", from, to, false);","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"        String expectedString \u003d \"[E][ ] Test Event (from: Feb 10 2022 to: Feb 15 2022)\";","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"        assertEquals(expectedString, event.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"eunrcn":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"todo read a book","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"java -classpath ../bin Skyler \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"eunrcn":1,"-":37}}]
