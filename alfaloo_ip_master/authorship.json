[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"# Lulu Task Manager ðŸ¤–","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"Lulu Task Manager is a simple command-line task manager written in Java. Keep track of your tasks with ease!","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"## Table of Contents","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"- [Features](#features)","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"- [Installation](#installation)","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"- [Usage](#usage)","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"- [Contributing](#contributing)","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"- [License](#license)","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"## Introduction","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"Lulu Task Manager is a Java-based task management application. It allows users to add, mark, unmark, and delete tasks, as well as perform queries based on specific criteria. The application utilizes a command-line interface for a straightforward user experience.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"## Features","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"- **Task Management:** Add, mark, unmark, and delete tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"- **Task Types:** Support for different task types, including Todo, Deadline, and Event.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"- **Query Tasks:** Find tasks based on specific criteria like name or date.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"- [x] Task 1","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"- [ ] Task 2","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"- [ ] Task 3","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"## Installation","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"Ensure you have Java installed on your system. Clone the repository and compile the Java files.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"```bash","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"# Clone the repository","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"git clone https://github.com/your-username/lulu-task-manager.git","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"# Compile the Java files","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"javac -d . src/*.java","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"This is Lulu `Lulu chatbot \u003d new Lulu();`.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"```java","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        Lulu chatbot \u003d new Lulu();","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        UI.start();","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"            chatbot.respond();","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        UI.exit();","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alfaloo":47,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"checkstyle {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"    mainClass.set(\"Lulu\")","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"    archiveBaseName \u003d \"lulu\"","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alfaloo":22,"-":40}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import ui.UI;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":" * The AddCommand class represents a command to add a new task to the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":" * It extends the Command class and implements the execute method to carry out the addition of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"     * The task to be added.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    private Task task;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"     * The string representation of the data to be saved in storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    private String saveData;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"     * Constructs an AddCommand with the specified task and saveData.","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"     * @param task     The task to be added.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"     * @param saveData The string representation of the data to be saved in storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    public AddCommand(Task task, String saveData) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"        this.saveData \u003d saveData;","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"     * Executes the AddCommand, adding the task to the task list, saving data in storage,","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"     * and printing a confirmation message to the user.","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"     * @param tasks   The TaskList to which the task is added.","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"     * @param storage The Storage to save the task data.","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        storage.writeLine(this.saveData);","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        UI.print(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"        UI.print(\"\\t\" + this.task);","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        UI.print(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        String result \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        result +\u003d \"\\t\" + this.task + \"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        result +\u003d String.format(\"Now you have %d tasks in the list.\\n\", tasks.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"        return result;","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"     * Retrieves the string representation of the data to be saved in storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"     * @return The saveData string.","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"    public String getTestData() {","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        return saveData;","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":65}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":" * An abstract class representing a command in the task management system.","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"     * Enum representing various types of commands.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    public enum Types {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"        LIST,","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"        MARK,","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"        UNMARK,","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"        DELETE,","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"        TODO,","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"        DEADLINE,","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"        EVENT,","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"        QUERY,","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"        FIND;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"     * Executes the command, modifying the task list and storage as needed.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"     * @param tasks   The {@code TaskList} to be modified.","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"     * @param storage The {@code Storage} to be modified.","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    public abstract String execute(TaskList tasks, Storage storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"     * Gets test data associated with the command.","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"     * @return A string containing test data for the command.","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    public abstract String getTestData();","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":40}},{"path":"src/main/java/command/ManageCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidStatusUpdateException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import ui.UI;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":" * The ManageCommand class represents a command to manage tasks, such as marking, unmarking, or deleting.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":" * It extends the Command class and implements the execute method to perform the specified manage action.","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"public class ManageCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"     * The type of manage command (MARK, UNMARK, DELETE).","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"    private Command.Types type;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"     * The index of the task to be managed.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    private int[] indices;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"     * Constructs a ManageCommand with the specified command type and index.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"     * @param type  The type of manage command (MARK, UNMARK, DELETE).","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"     * @param indices The index of the task to be managed.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    @SafeVarargs","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    public ManageCommand(Command.Types type, int... indices) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"     * Executes the ManageCommand, performing the specified manage action on the given task list and storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"     * @param tasks   The TaskList on which the manage action is performed.","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"     * @param storage The Storage where changes are saved.","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        switch (this.type) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        case MARK:","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"            return mark(tasks, storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"            return unmark(tasks, storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        case DELETE:","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"            return delete(tasks, storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"            return \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"     * Retrieves an empty string as test data associated with ManageCommand.","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"     * @return An empty string used for testing.","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"    public String getTestData() {","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        return \"\";","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"     * Marks the task at the specified index as done, updating its status in the task list and storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"     * @param tasks   The TaskList from which the task is marked.","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"     * @param storage The Storage where changes are saved.","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"    public String mark(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"        for (int index : this.indices) {","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"            if (index \u003e\u003d tasks.getSize() || index \u003c 0) {","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"                UI.print(String.format(\"Oops! %d is not a valid index.\", index));","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"                result +\u003d String.format(\"Oops! %d is not a valid index.\\n\", index);","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"                continue;","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"                task.updateStatus(true);","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"                UI.print(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"                UI.print(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"                result +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"                result +\u003d task + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"                String line \u003d storage.readLine(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"                String newLine \u003d line.substring(0, line.length() - 5) + \"true\";","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"                storage.updateLine(index, newLine);","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"                storage.updateLine(index, newLine);","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"            } catch (InvalidStatusUpdateException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"                UI.print(\"This task was already marked!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"                UI.print(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"                result +\u003d \"This task was already marked!\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"                result +\u003d task + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"        return result;","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"     * Unmarks the task at the specified index, updating its status in the task list and storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"     * @param tasks   The TaskList from which the task is unmarked.","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"     * @param storage The Storage where changes are saved.","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"    public String unmark(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"        for (int index : this.indices) {","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"            if (index \u003e\u003d tasks.getSize() || index \u003c 0) {","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"                UI.print(String.format(\"Oops! %d is not a valid index.\", index));","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"                result +\u003d String.format(\"Oops! %d is not a valid index.\\n\", index);","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"                continue;","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"                task.updateStatus(false);","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"                UI.print(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"                UI.print(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"                result +\u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"                result +\u003d task + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"                String line \u003d storage.readLine(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"                String newLine \u003d line.substring(0, line.length() - 4) + \"false\";","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"                storage.updateLine(index, newLine);","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"            } catch (InvalidStatusUpdateException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"                UI.print(\"This task was already unmarked!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"                UI.print(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"                result +\u003d \"This task was already unmarked!\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"                result +\u003d task + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"        return result;","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"     * Deletes the task at the specified index, removing it from the task list and storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"     * @param tasks   The TaskList from which the task is deleted.","lastModifiedDate":"2024-01-27"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"     * @param storage The Storage where changes are saved.","lastModifiedDate":"2024-01-27"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"    public String delete(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"        for (int index : this.indices) {","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"            if (index \u003e\u003d tasks.getSize() || index \u003c 0) {","lastModifiedDate":"2024-01-27"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"                UI.print(String.format(\"Oops! %d is not a valid index.\", index));","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"                result +\u003d String.format(\"Oops! %d is not a valid index.\\n\", index);","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"                continue;","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"            Task removed \u003d tasks.deleteTask(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"            storage.deleteLine(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"alfaloo"},"content":"            UI.print(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"            UI.print(\"\\t\" + removed);","lastModifiedDate":"2024-01-27"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"            result +\u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"            result +\u003d removed + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"alfaloo"},"content":"        UI.print(String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"alfaloo"},"content":"        result +\u003d String.format(\"Now you have %d tasks in the list.\", tasks.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"alfaloo"},"content":"        return result;","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":169,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":169}},{"path":"src/main/java/command/QueryCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import task.Event;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import task.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import ui.UI;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":" * The QueryCommand class represents a command to query tasks based on type and date.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":" * It extends the Command class and implements the execute method to perform the specified query action.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"public class QueryCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"     * The type of query command.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    private Command.Types commandType;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"     * The type of task to be queried (deadline, event).","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    private String query;","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"     * The date used for querying tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    private LocalDate date;","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"     * Constructs a QueryCommand with the specified command type, query type, and date.","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"     * @param commandType The type of query command.","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"     * @param query   The type of task to be queried (deadline, event).","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"     * @param date        The date used for querying tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    public QueryCommand(Command.Types commandType, String query, LocalDate date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        this.query \u003d query;","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"     * Executes the QueryCommand, performing the specified query action on the given task list and storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"     * @param tasks   The TaskList on which the query action is performed.","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"     * @param storage The Storage where changes are saved.","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"        switch (this.commandType) {","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        case QUERY:","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"            return query(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"        case FIND:","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"            return find(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"            return \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"     * Retrieves the query type as test data associated with QueryCommand.","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"     * @return The query type used for testing.","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"    public String getTestData() {","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        return this.query;","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"     * Finds tasks based on the specified query type and date, printing the results to the UI.","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"     * @param tasks   The TaskList from which tasks are queried.","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"    public String query(TaskList tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"        String formattedDate \u003d this.date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"        if (this.query.equals(\"deadline\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"            UI.print(\"Below are deadlines that are due on \" + formattedDate);","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"            String result \u003d \"Below are deadlines that are due on \" + formattedDate + \"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"            for (Task task : tasks.fetchAll()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"                if (task instanceof Deadline \u0026\u0026 task.queryByDate(this.date)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"                    UI.print(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"                    result +\u003d task + \"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"            return result;","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"        } else if (this.query.equals(\"event\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"            UI.print(\"Below are events that are operating on \" + formattedDate);","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"            String result \u003d \"Below are events that are operating on \" + formattedDate + \"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"            for (Task task : tasks.fetchAll()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"                if (task instanceof Event \u0026\u0026 task.queryByDate(date)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"                    UI.print(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"                    result +\u003d task + \"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"            return result;","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"            UI.print(\"Could not query given task type\");","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"            return \"Could not query given task type\";","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"     * Finds and prints tasks in the task list that match the specified query.","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"     * @param tasks   The TaskList from which tasks are queried.","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"    public String find(TaskList tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"        UI.print(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"        String result \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"        for (Task task : tasks.fetchAll()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"            if (task.getName().contains(this.query)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"                UI.print(index + \".\" + task);","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"                result +\u003d index + \".\" + task + \"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"        return result;","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":126}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":" * An exception indicating the inability to decipher the input string.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":" * This exception is specific to the lulu.Lulu application and is a subclass of {@link LuluException}.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"public class InvalidCommandException extends LuluException {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"        super(\"Could not decipher input string\");","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":11}},{"path":"src/main/java/exceptions/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":" * An exception indicating the detection of an invalid date.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":" * This exception is specific to the lulu.Lulu application and is a subclass of {@link LuluException}.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"public class InvalidDateException extends LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"    public InvalidDateException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"        super(\"Invalid date detected\");","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":11}},{"path":"src/main/java/exceptions/InvalidSlashParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":" * An exception indicating an inability to decipher the command after a slash in the input.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":" * This exception is specific to the lulu.Lulu application and is a subclass of {@link LuluException}.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"public class InvalidSlashParameterException extends LuluException {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"    public InvalidSlashParameterException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"        super(\"Could not decipher command after slash\");","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":11}},{"path":"src/main/java/exceptions/InvalidStatusUpdateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":" * An exception indicating an invalid attempt to update the status of a task to a value that has already been set.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":" * This exception is specific to the lulu.Lulu application and is a subclass of {@link LuluException}.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"public class InvalidStatusUpdateException extends LuluException {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"    public InvalidStatusUpdateException() {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"        super(\"Status was already updated to desired value\");","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":11}},{"path":"src/main/java/exceptions/LuluException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package exceptions;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":" * An exception class specific to the lulu.Lulu application, extending the base {@code Exception}.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":" * This exception is used to handle errors and exceptional conditions within the lulu.Lulu application.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"public class LuluException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"    public LuluException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":11}},{"path":"src/main/java/javafxgui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package javafxgui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    private String backgroundColor;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    private void flip() {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        DialogBox dialogbox \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"        dialogbox.setBackgroundColor(\"BEIGE\");","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        return dialogbox;","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"    public static DialogBox getLuluDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        db.flip();","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        db.setBackgroundColor(\"LIGHTGRAY\");","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        return db;","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"    public void setBackgroundColor(String color) {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"        backgroundColor \u003d color;","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        if (backgroundColor !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"            String colorStyle \u003d String.format(\"-fx-background-color: %s;\", color);","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"            setStyle(colorStyle);","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alfaloo":74}},{"path":"src/main/java/javafxgui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package javafxgui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import lulu.Lulu;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    private Lulu lulu \u003d new Lulu();","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setLulu(lulu);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().displayStartMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"            stage.show();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alfaloo":33}},{"path":"src/main/java/javafxgui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package javafxgui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import lulu.Lulu;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":" * Controller for javafx.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    private Lulu lulu;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    private Image luluImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaLulu.jpg\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    public void setLulu(Lulu d) {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        lulu \u003d d;","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"     * Handles the user\u0027s input in the chat application. Displays the user\u0027s input, Lulu\u0027s response, and updates the UI","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"     * accordingly. If the user enters \"bye,\" schedules a program exit after 2 seconds.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"    public void handleUserInput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        String userText \u003d userInput.getText().toLowerCase();","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        String luluText \u003d lulu.getResponse(userText);","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        // Add user and Lulu dialog boxes to the dialog container","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"                DialogBox.getLuluDialog(luluText, luluImage)","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"        );","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        // Clear the user input field","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        // Check if the user entered \"bye\" and schedule program exit after 3 seconds","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        if (userText.equals(\"bye\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"            exit();","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"     * Displays the initial greeting message from Lulu when the chat application starts.","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"     * The message includes a welcome greeting and an inquiry about how Lulu can assist the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"    public void displayStartMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"        String greetingMessage \u003d \"Hello! I\u0027m Lulu.\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        dialogContainer.getChildren().add(DialogBox.getLuluDialog(greetingMessage, luluImage));","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"     * Schedules the program to exit after a 3-second delay. This method is typically called when the user inputs \"bye.\"","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"     * Uses a ScheduledExecutorService to execute the Platform.exit() method after the specified delay.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"    public void exit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"        // Schedule program exit after 2 seconds","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"        ScheduledExecutorService scheduler \u003d Executors.newSingleThreadScheduledExecutor();","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"        scheduler.schedule(() -\u003e Platform.exit(), 2, TimeUnit.SECONDS);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"        scheduler.shutdown();","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alfaloo":86}},{"path":"src/main/java/lulu/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package lulu;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import javafxgui.Main;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"public class Launcher {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"alfaloo":13}},{"path":"src/main/java/lulu/Lulu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package lulu;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidDateException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidSlashParameterException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import exceptions.LuluException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import ui.UI;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":" * The main class for lulu.Lulu, a simple chatbot application.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":" * lulu.Lulu interacts with the user through a command-line interface (CLI)","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":" * to perform tasks such as adding, listing, and deleting tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"public class Lulu {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    /** The storage component for managing data persistence. */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    /** The task list for storing and managing tasks. */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    /** The parser for interpreting user input and generating commands. */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"     * Constructs a new instance of lulu.Lulu with default configurations.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"     * Initializes the storage, task list, and parser.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    public Lulu() {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        storage \u003d new Storage(\"src/main/resources/data/lulu.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        tasks \u003d new TaskList(storage.retrieveLines());","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"     * Listens for user input and responds accordingly until the user exits.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"     * Handles various user commands and exceptions during interaction.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    public void respond() {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        while (true) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"            String input \u003d UI.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"                if (input.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"                    break;","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"                } else if (input.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"                    UI.printTasks(this.tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"                } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"                    Command command \u003d parser.parse(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"                    command.execute(this.tasks, this.storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"                UI.print(\"Sorry, I don\u0027t think I quite understood what you meant...\");","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"            } catch (InvalidDateException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"                UI.print(\"Please ensure that you are inputting valid start and end dates.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"            } catch (InvalidSlashParameterException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"                UI.print(\"Please ensure that you are inputting valid date parameters.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"            } catch (LuluException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"                UI.print(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"     * Processes user input and generates a response based on the given command.","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"     * @return A response generated based on the user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"     *         If the input is \"bye\", returns a farewell message.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"     *         If the input is \"list\", returns a formatted string of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"     *         For other inputs, parses the input into a command and executes it,","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"     *         returning the result of the command execution.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"     *         If the input is not recognized or an exception occurs during processing,","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"     *         returns an appropriate error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"            if (input.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"                return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"            } else if (input.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"                return UI.printTasks(this.tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"                Command command \u003d parser.parse(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"                return command.execute(this.tasks, this.storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"            return \"Sorry, I don\u0027t think I quite understood what you meant...\";","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"            return \"Please ensure that you are inputting valid start and end dates.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"        } catch (InvalidSlashParameterException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"            return \"Please ensure that you are inputting valid date parameters.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"        } catch (LuluException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"     * The main method to run the lulu.Lulu chatbot application.","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"     * Creates an instance of lulu.Lulu, starts the application, and handles exceptions.","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"     * Exits the application with a goodbye message.","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"     * @param args The command-line arguments (not used).","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"        Lulu chatbot \u003d new Lulu();","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"        UI.start();","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"            chatbot.respond();","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"        UI.exit();","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alfaloo":116}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package parser;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import command.AddCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import command.Command;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import command.ManageCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import command.QueryCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidDateException;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidSlashParameterException;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import exceptions.LuluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"import task.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"import task.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":" * The Parser class is responsible for parsing user input and creating corresponding Command objects.","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":" * It includes methods for parsing various commands such as adding, managing, and querying tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"public class Parser {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"     * Parses the input string and creates the corresponding Command object.","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"     * @return The Command object based on the parsed input.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"     * @throws LuluException If an error occurs during parsing.","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    public Command parse(String input) throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        String firstWord \u003d input.split(\" \")[0];","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"        if (input.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"            return manageTasks(Command.Types.LIST, input);","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        } else if (firstWord.equals(\"mark\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"            return manageTasks(Command.Types.MARK, input);","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        } else if (firstWord.equals(\"unmark\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"            return manageTasks(Command.Types.UNMARK, input);","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        } else if (firstWord.equals(\"delete\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"            return manageTasks(Command.Types.DELETE, input);","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        } else if (firstWord.equals(\"todo\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"            return addTasks(Command.Types.TODO, input);","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        } else if (firstWord.equals(\"deadline\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"            return addTasks(Command.Types.DEADLINE, input);","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        } else if (firstWord.equals(\"event\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"            return addTasks(Command.Types.EVENT, input);","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"        } else if (firstWord.equals(\"query\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"            return manageTasks(Command.Types.QUERY, input);","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        } else if (firstWord.equals(\"find\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"            return manageTasks(Command.Types.FIND, input);","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"     * Creates a ManageCommand object based on the specified command type and input.","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"     * @param command The type of ManageCommand (MARK, UNMARK, DELETE, FIND).","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"     * @param input   The user input string.","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"     * @return The ManageCommand object.","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"     * @throws LuluException If an error occurs during parsing.","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"    public Command manageTasks(Command.Types command, String input) throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        switch (command) {","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        case MARK:","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"            return mark(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"            return unmark(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"        case DELETE:","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"            return delete(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"        case QUERY:","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"            return query(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        case FIND:","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"            return find(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"        default:","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"     * Creates an AddCommand object based on the specified command type and input.","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"     * @param command The type of AddCommand (TODO, DEADLINE, EVENT).","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"     * @param input   The user input string.","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"     * @return The AddCommand object.","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"     * @throws LuluException If an error occurs during parsing.","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"    public Command addTasks(Command.Types command, String input) throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"        switch (command) {","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"        case TODO:","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"            return todo(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"            return deadline(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"        case EVENT:","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"            return event(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"        default:","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"     * Parses the input string for a MARK command and creates the corresponding ManageCommand object.","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"     * @return The ManageCommand object for marking a task.","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"     * @throws LuluException If an error occurs during parsing.","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"    public Command mark(String input) throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"        int[] indices \u003d new int[words.length - 1];","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"        for (int i \u003d 1; i \u003c words.length; i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"            indices[i - 1] \u003d Integer.valueOf(words[i]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"        return new ManageCommand(Command.Types.MARK, indices);","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"     * Parses the input string for an UNMARK command and creates the corresponding ManageCommand object.","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"     * @return The ManageCommand object for unmarking a task.","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"     * @throws LuluException If an error occurs during parsing.","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"    public Command unmark(String input) throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"        int[] indices \u003d new int[words.length - 1];","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"        for (int i \u003d 1; i \u003c words.length; i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"            indices[i - 1] \u003d Integer.valueOf(words[i]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"        return new ManageCommand(Command.Types.UNMARK, indices);","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"     * Parses the input string for a DELETE command and creates the corresponding ManageCommand object.","lastModifiedDate":"2024-01-27"},{"lineNumber":141,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":142,"author":{"gitId":"alfaloo"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-01-27"},{"lineNumber":143,"author":{"gitId":"alfaloo"},"content":"     * @return The ManageCommand object for deleting a task.","lastModifiedDate":"2024-01-27"},{"lineNumber":144,"author":{"gitId":"alfaloo"},"content":"     * @throws LuluException If an error occurs during parsing.","lastModifiedDate":"2024-01-27"},{"lineNumber":145,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":146,"author":{"gitId":"alfaloo"},"content":"    public Command delete(String input) throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":147,"author":{"gitId":"alfaloo"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"alfaloo"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":149,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-01-27"},{"lineNumber":150,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":151,"author":{"gitId":"alfaloo"},"content":"        int[] indices \u003d new int[words.length - 1];","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"alfaloo"},"content":"        for (int i \u003d 1; i \u003c words.length; i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"alfaloo"},"content":"            indices[i - 1] \u003d Integer.valueOf(words[i]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"alfaloo"},"content":"        return new ManageCommand(Command.Types.DELETE, indices);","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":157,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"alfaloo"},"content":"     * Parses the input string for a FIND command and creates the corresponding QueryCommand object.","lastModifiedDate":"2024-01-27"},{"lineNumber":160,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":161,"author":{"gitId":"alfaloo"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-01-27"},{"lineNumber":162,"author":{"gitId":"alfaloo"},"content":"     * @return The QueryCommand object for finding tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":163,"author":{"gitId":"alfaloo"},"content":"     * @throws LuluException If an error occurs during parsing.","lastModifiedDate":"2024-01-27"},{"lineNumber":164,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":165,"author":{"gitId":"alfaloo"},"content":"    public Command query(String input) throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":166,"author":{"gitId":"alfaloo"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":167,"author":{"gitId":"alfaloo"},"content":"        if (words.length \u003c\u003d 2) {","lastModifiedDate":"2024-01-27"},{"lineNumber":168,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-01-27"},{"lineNumber":169,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":170,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":171,"author":{"gitId":"alfaloo"},"content":"        String taskType \u003d words[1].toLowerCase();","lastModifiedDate":"2024-01-27"},{"lineNumber":172,"author":{"gitId":"alfaloo"},"content":"        LocalDate date \u003d LocalDate.parse(words[2]);","lastModifiedDate":"2024-01-27"},{"lineNumber":173,"author":{"gitId":"alfaloo"},"content":"        return new QueryCommand(Command.Types.QUERY, taskType, date);","lastModifiedDate":"2024-01-27"},{"lineNumber":174,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":175,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":176,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"alfaloo"},"content":"     * Parses the input command to create a {@code QueryCommand} for searching tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"alfaloo"},"content":"     * @param input The user input containing the search query.","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"alfaloo"},"content":"     * @return A {@code QueryCommand} object with the search query and type.","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"alfaloo"},"content":"     * @throws InvalidCommandException If the input command is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"alfaloo"},"content":"     * @throws LuluException           If there is an exception specific to the lulu.Lulu application.","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"alfaloo"},"content":"    public Command find(String input) throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":186,"author":{"gitId":"alfaloo"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":187,"author":{"gitId":"alfaloo"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":188,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-01-27"},{"lineNumber":189,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":190,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":191,"author":{"gitId":"alfaloo"},"content":"        String queryString \u003d words[1].toLowerCase();","lastModifiedDate":"2024-01-27"},{"lineNumber":192,"author":{"gitId":"alfaloo"},"content":"        return new QueryCommand(Command.Types.FIND, queryString, null);","lastModifiedDate":"2024-01-27"},{"lineNumber":193,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":194,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":195,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":196,"author":{"gitId":"alfaloo"},"content":"     * Parses the input string for a TODO command and creates the corresponding AddCommand object.","lastModifiedDate":"2024-01-27"},{"lineNumber":197,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":198,"author":{"gitId":"alfaloo"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-01-27"},{"lineNumber":199,"author":{"gitId":"alfaloo"},"content":"     * @return The AddCommand object for adding a Todo task.","lastModifiedDate":"2024-01-27"},{"lineNumber":200,"author":{"gitId":"alfaloo"},"content":"     * @throws LuluException If an error occurs during parsing.","lastModifiedDate":"2024-01-27"},{"lineNumber":201,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":202,"author":{"gitId":"alfaloo"},"content":"    public Command todo(String input) throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":203,"author":{"gitId":"alfaloo"},"content":"        if (input.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":204,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-01-27"},{"lineNumber":205,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":206,"author":{"gitId":"alfaloo"},"content":"        String name \u003d input.substring(5).strip();","lastModifiedDate":"2024-01-27"},{"lineNumber":207,"author":{"gitId":"alfaloo"},"content":"        Todo todo \u003d new Todo(name);","lastModifiedDate":"2024-01-27"},{"lineNumber":208,"author":{"gitId":"alfaloo"},"content":"        String data \u003d String.format(\"todo,%s,%b\", name, todo.getStatus());","lastModifiedDate":"2024-01-27"},{"lineNumber":209,"author":{"gitId":"alfaloo"},"content":"        Command command \u003d new AddCommand(todo, data);","lastModifiedDate":"2024-01-27"},{"lineNumber":210,"author":{"gitId":"alfaloo"},"content":"        return command;","lastModifiedDate":"2024-01-27"},{"lineNumber":211,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":212,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":213,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":214,"author":{"gitId":"alfaloo"},"content":"     * Parses the input string for a DEADLINE command and creates the corresponding AddCommand object.","lastModifiedDate":"2024-01-27"},{"lineNumber":215,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":216,"author":{"gitId":"alfaloo"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-01-27"},{"lineNumber":217,"author":{"gitId":"alfaloo"},"content":"     * @return The AddCommand object for adding a Deadline task.","lastModifiedDate":"2024-01-27"},{"lineNumber":218,"author":{"gitId":"alfaloo"},"content":"     * @throws LuluException If an error occurs during parsing.","lastModifiedDate":"2024-01-27"},{"lineNumber":219,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":220,"author":{"gitId":"alfaloo"},"content":"    public Command deadline(String input) throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":221,"author":{"gitId":"alfaloo"},"content":"        if (input.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":222,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-01-27"},{"lineNumber":223,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":224,"author":{"gitId":"alfaloo"},"content":"        int indexBy \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-01-27"},{"lineNumber":225,"author":{"gitId":"alfaloo"},"content":"        if (!input.substring(indexBy + 1).split(\" \")[0].equals(\"by\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":226,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidSlashParameterException();","lastModifiedDate":"2024-01-27"},{"lineNumber":227,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":228,"author":{"gitId":"alfaloo"},"content":"        String name \u003d input.substring(9, indexBy).strip();","lastModifiedDate":"2024-01-27"},{"lineNumber":229,"author":{"gitId":"alfaloo"},"content":"        String by \u003d input.substring(indexBy + 3).strip();","lastModifiedDate":"2024-01-27"},{"lineNumber":230,"author":{"gitId":"alfaloo"},"content":"        Deadline deadline \u003d new Deadline(name, LocalDate.parse(by));","lastModifiedDate":"2024-01-27"},{"lineNumber":231,"author":{"gitId":"alfaloo"},"content":"        String data \u003d String.format(\"deadline,%s,%s,%b\", name, by, deadline.getStatus());","lastModifiedDate":"2024-01-27"},{"lineNumber":232,"author":{"gitId":"alfaloo"},"content":"        Command command \u003d new AddCommand(deadline, data);","lastModifiedDate":"2024-01-27"},{"lineNumber":233,"author":{"gitId":"alfaloo"},"content":"        return command;","lastModifiedDate":"2024-01-27"},{"lineNumber":234,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":235,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":236,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":237,"author":{"gitId":"alfaloo"},"content":"     * Parses the input string for an EVENT command and creates the corresponding AddCommand object.","lastModifiedDate":"2024-01-27"},{"lineNumber":238,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":239,"author":{"gitId":"alfaloo"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-01-27"},{"lineNumber":240,"author":{"gitId":"alfaloo"},"content":"     * @return The AddCommand object for adding an Event task.","lastModifiedDate":"2024-01-27"},{"lineNumber":241,"author":{"gitId":"alfaloo"},"content":"     * @throws LuluException If an error occurs during parsing.","lastModifiedDate":"2024-01-27"},{"lineNumber":242,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":243,"author":{"gitId":"alfaloo"},"content":"    public Command event(String input) throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":244,"author":{"gitId":"alfaloo"},"content":"        if (input.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":245,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2024-01-27"},{"lineNumber":246,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":247,"author":{"gitId":"alfaloo"},"content":"        int indexFrom \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-01-27"},{"lineNumber":248,"author":{"gitId":"alfaloo"},"content":"        int indexTo \u003d input.indexOf(\u0027/\u0027, indexFrom + 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":249,"author":{"gitId":"alfaloo"},"content":"        if (!input.substring(indexFrom + 1).split(\" \")[0].equals(\"from\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":250,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidSlashParameterException();","lastModifiedDate":"2024-01-27"},{"lineNumber":251,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":252,"author":{"gitId":"alfaloo"},"content":"        if (!input.substring(indexTo + 1).split(\" \")[0].equals(\"to\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":253,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidSlashParameterException();","lastModifiedDate":"2024-01-27"},{"lineNumber":254,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":255,"author":{"gitId":"alfaloo"},"content":"        String name \u003d input.substring(6, indexFrom).strip();","lastModifiedDate":"2024-01-27"},{"lineNumber":256,"author":{"gitId":"alfaloo"},"content":"        String from \u003d input.substring(indexFrom + 5, indexTo).strip();","lastModifiedDate":"2024-01-27"},{"lineNumber":257,"author":{"gitId":"alfaloo"},"content":"        String to \u003d input.substring(indexTo + 3).strip();","lastModifiedDate":"2024-01-27"},{"lineNumber":258,"author":{"gitId":"alfaloo"},"content":"        if (LocalDate.parse(to).isBefore(LocalDate.parse(from))) {","lastModifiedDate":"2024-01-27"},{"lineNumber":259,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2024-01-27"},{"lineNumber":260,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":261,"author":{"gitId":"alfaloo"},"content":"        Event event \u003d new Event(name, LocalDate.parse(from), LocalDate.parse(to));","lastModifiedDate":"2024-01-27"},{"lineNumber":262,"author":{"gitId":"alfaloo"},"content":"        String data \u003d String.format(\"event,%s,%s,%s,%b\", name, from, to, event.getStatus());","lastModifiedDate":"2024-01-27"},{"lineNumber":263,"author":{"gitId":"alfaloo"},"content":"        Command command \u003d new AddCommand(event, data);","lastModifiedDate":"2024-01-27"},{"lineNumber":264,"author":{"gitId":"alfaloo"},"content":"        return command;","lastModifiedDate":"2024-01-27"},{"lineNumber":265,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":266,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":266}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import java.util.List;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"import ui.UI;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":" * The Storage class handles reading from and writing to a file for data persistence.","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":" * It provides methods for retrieving lines, writing a line, reading a line by index,","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":" * updating a line, and deleting a line from the stored data.","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"public class Storage {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    /** The file path for data storage. */","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    private String filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    /** The File object representing the file for data storage. */","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    private File file;","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    /** The Path object representing the file path. */","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    private Path path;","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"     * Initializes the File and Path objects for data storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"     * @param filePath The path to the file for data storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"        this.path \u003d Path.of(this.filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"     * Retrieves all lines from the stored data in the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"     * @return A List of strings representing the lines from the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    public List\u003cString\u003e retrieveLines() {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"            Scanner scanner \u003d new Scanner(this.file);","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"                result.add(scanner.nextLine());","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"            UI.print(\"Invalid file path provided, session will not be saved.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        return result;","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"     * Writes a line of data to the file for data storage.","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"     * @param data The data to be written to the file.","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"    public void writeLine(String data) {","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.file, true));","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"            writer.write(data);","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"            writer.newLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"            writer.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"            UI.print(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"     * Reads a line from the stored data based on the specified index.","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"     * @param index The index of the line to be read.","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"     * @return The string representing the line at the specified index.","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"    public String readLine(int index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"            Scanner scanner \u003d new Scanner(this.file);","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"            int i \u003d 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"            String line \u003d \"\";","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"                line \u003d scanner.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"                if (i \u003d\u003d index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"                    return line;","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"                i++;","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"            UI.print(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"        return null;","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"     * Updates a line in the stored data based on the specified index.","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"     * @param index The index of the line to be updated.","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"alfaloo"},"content":"     * @param data The updated data to replace the existing line.","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"alfaloo"},"content":"    public void updateLine(int index, String data) {","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"alfaloo"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(this.path);","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"alfaloo"},"content":"            lines.set(index, data);","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"alfaloo"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.file, false));","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"alfaloo"},"content":"            writer.write(\"\");","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"alfaloo"},"content":"            writer \u003d new BufferedWriter(new FileWriter(this.file, true));","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"alfaloo"},"content":"            for (String str : lines) {","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"alfaloo"},"content":"                writer.write(str);","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"alfaloo"},"content":"                writer.newLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"alfaloo"},"content":"            writer.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"alfaloo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"alfaloo"},"content":"            UI.print(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"alfaloo"},"content":"     * Deletes a line from the stored data based on the specified index.","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"alfaloo"},"content":"     * @param index The index of the line to be deleted.","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"alfaloo"},"content":"    public void deleteLine(int index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"alfaloo"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"alfaloo"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(this.path);","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"alfaloo"},"content":"            lines.remove(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"alfaloo"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.file, false));","lastModifiedDate":"2024-01-27"},{"lineNumber":129,"author":{"gitId":"alfaloo"},"content":"            writer.write(\"\");","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"alfaloo"},"content":"            writer \u003d new BufferedWriter(new FileWriter(this.file, true));","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"alfaloo"},"content":"            for (String str : lines) {","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"alfaloo"},"content":"                writer.write(str);","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"alfaloo"},"content":"                writer.newLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"alfaloo"},"content":"            writer.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"alfaloo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"alfaloo"},"content":"            UI.print(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":139,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":140,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":140}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":" * The Deadline class represents a task with a specific end date.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":" * It extends the Task class and includes methods to query by date and provide a formatted string representation.","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    /** The end date of the deadline. */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    private LocalDate endDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"     * Constructs a Deadline task with the specified name and end date.","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"     * @param name The name of the deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"     * @param endDate The end date of the deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    public Deadline(String name, LocalDate endDate) {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"     * Queries whether the deadline occurs on the specified date.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"     * @param date The date to be queried.","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"     * @return true if the deadline occurs on the specified date, false otherwise.","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    public boolean queryByDate(LocalDate date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        return date.isEqual(this.endDate);","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"     * Provides a formatted string representation of the Deadline task.","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"     * @return A string representing the Deadline task in a readable format.","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        String by \u003d this.endDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        return String.format(\"[D]%s %s (by: %s)\", (super.isMarked ? \"[X]\" : \"[ ]\"), super.name, by);","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"alfaloo":45}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":" * The Event class represents a task with a start date and an end date.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":" * It extends the Task class and includes methods to query by date and provide a formatted string representation.","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    /** The start date of the event. */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    private LocalDate startDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    /** The end date of the event. */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    private LocalDate endDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"     * Constructs an Event task with the specified name, start date, and end date.","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"     * @param name The name of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"     * @param startDate The start date of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"     * @param endDate The end date of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    public Event(String name, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"     * Queries whether the event occurs on the specified date.","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"     * @param date The date to be queried.","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"     * @return true if the event occurs on the specified date, false otherwise.","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"    public boolean queryByDate(LocalDate date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"        return (date.isAfter(this.startDate) \u0026\u0026 date.isBefore(this.endDate))","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"                || date.isEqual(this.startDate) || date.isEqual(this.endDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"     * Provides a formatted string representation of the Event task.","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"     * @return A string representing the Event task in a readable format.","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"        String from \u003d this.startDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        String to \u003d this.endDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        return String.format(\"[E]%s %s (from: %s to: %s)\", (super.isMarked ? \"[X]\" : \"[ ]\"), super.name, from, to);","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"alfaloo":51}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidStatusUpdateException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":" * The {@code Task} class represents a generic task with a name and a status.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":" * It provides methods to update the task\u0027s status, get the task\u0027s name,","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":" * get the task\u0027s status, query the task by date, and retrieve a string","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":" * representation of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    /** The name of the task. */","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    protected String name;","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"    /** The status of the task (marked or unmarked). */","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    protected boolean isMarked;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"     * Constructs a new task with the specified name and initializes","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"     * its status as unmarked.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"     * @param name The name of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"     * Updates the status of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"     * @param status The new status of the task (true if marked, false if unmarked).","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"     * @throws InvalidStatusUpdateException If the new status is the same as the current status.","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"    public void updateStatus(boolean status) throws InvalidStatusUpdateException {","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        if (this.isMarked \u003d\u003d status) {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"            throw new InvalidStatusUpdateException();","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        this.isMarked \u003d status;","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"     * Gets the name of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"     * @return The name of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"    public String getName() {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        return this.name;","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"     * Gets the status of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"     * @return The status of the task (true if marked, false if unmarked).","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"        return this.isMarked;","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"     * Queries the task by date. This method is overridden by subclasses.","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"     * @param date The date to query.","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"     * @return {@code true} if the task is relevant to the specified date, {@code false} otherwise.","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"    public boolean queryByDate(LocalDate date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"        return false;","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"        return \"[T]\" + (this.isMarked ? \"[X] \" : \"[ ] \") + this.name;","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"alfaloo":82}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":" * The Todo class represents a simple task without a specific date.","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":" * It extends the Task class and provides a formatted string representation.","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"     * Constructs a Todo task with the specified name.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"     * @param name The name of the todo task.","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"     * Provides a formatted string representation of the Todo task.","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"     * @return A string representing the Todo task in a readable format.","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"        return \"[T]\" + (super.isMarked ? \"[X] \" : \"[ ] \") + super.name;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"alfaloo":25}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package tasklist;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidStatusUpdateException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import task.Event;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import task.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import task.Todo;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"import ui.UI;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":" * The TaskList class manages a list of tasks and provides methods","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":" * to add, retrieve, delete, and fetch tasks from the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"public class TaskList {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    /** The list of tasks managed by the TaskList. */","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"     * Constructs a TaskList based on the data provided.","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"     * Parses the input data and initializes the list of tasks accordingly.","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"     * @param data The list of strings representing task data.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    public TaskList(List\u003cString\u003e data) {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"        for (String line : data) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"            String[] words \u003d line.split(\",\");","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"                if (words[0].equals(\"todo\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"                    Todo todo \u003d new Todo(words[1]);","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"                    if (words[2].equals(\"true\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"                        todo.updateStatus(true);","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"                    }","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"                    this.tasks.add(todo);","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"                } else if (words[0].equals(\"deadline\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"                    Deadline deadline \u003d new Deadline(words[1], LocalDate.parse(words[2]));","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"                    if (words[3].equals(\"true\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"                        deadline.updateStatus(true);","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"                    }","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"                    this.tasks.add(deadline);","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"                } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"                    Event event \u003d new Event(words[1], LocalDate.parse(words[2]), LocalDate.parse(words[3]));","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"                    if (words[4].equals(\"true\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"                        event.updateStatus(true);","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"                    }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"                    this.tasks.add(event);","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"            } catch (InvalidStatusUpdateException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"                UI.print(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"     * @return true if the task is successfully added.","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"    public boolean addTask(Task task) {","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"        return this.tasks.add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"alfaloo"},"content":"     * Retrieves a task from the TaskList based on the specified index.","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"alfaloo"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"alfaloo"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"alfaloo"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"alfaloo"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"alfaloo"},"content":"     * Deletes a task from the TaskList based on the specified index.","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"alfaloo"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"alfaloo"},"content":"     * @return The task that was removed from the TaskList.","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"alfaloo"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"alfaloo"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"alfaloo"},"content":"     * Gets the number of tasks in the TaskList.","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"alfaloo"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"alfaloo"},"content":"    public int getSize() {","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"alfaloo"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"alfaloo"},"content":"     * Fetches all tasks from the TaskList.","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"alfaloo"},"content":"     * @return A List containing all tasks in the TaskList.","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"alfaloo"},"content":"    public List\u003cTask\u003e fetchAll() {","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"alfaloo"},"content":"        return this.tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":100}},{"path":"src/main/java/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":" * The UI class responsible for handling user interface interactions.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":" * It provides methods for printing messages, reading user input, and displaying tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"public class UI {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"     * Prints the specified text to the console with an indentation.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"     * @param text The text to be printed.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    public static void print(Object text) {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"        System.out.println(\"\\t\" + text.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"     * Initiates the lulu.Lulu application.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"     * Prints a welcome message to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    public static void start() {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"        UI.print(\"Hello! I\u0027m Lulu \\n\\tWhat can I do for you?\");","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"     * Exits the lulu.Lulu application.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"     * Prints a goodbye message to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"    public static void exit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        UI.print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"     * Reads the next line of input from the user.","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"     * @return A String representing the user\u0027s input with leading and trailing whitespaces removed.","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"    public static String nextLine() {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        return scanner.nextLine().strip();","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"     * Prints the tasks in the provided TaskList with indices.","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"     * @param tasks The TaskList containing tasks to be printed.","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"    public static String printTasks(TaskList tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"        UI.print(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"            String output \u003d (i + 1) + \".\" + tasks.getTask(i);","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"            UI.print(output);","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        String result \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"            String output \u003d (i + 1) + \".\" + tasks.getTask(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"            result +\u003d output + \"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"        return result;","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":64}},{"path":"src/main/resources/data/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"todo todo1","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"deadline deadline1 /by 2023-01-02","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"event event1 /from 2022-03-04 /to 2024-05-06","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"todo todo2","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":4}},{"path":"src/main/resources/data/lulu.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"todo,todo1,false","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"event,event1,2022-03-04,2024-05-06,false","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"todo,great day,false","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"todo,a,false","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"todo,b,false","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"alfaloo":5}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"        \u003cTextFlow fx:id\u003d\"textFlow\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"            \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"                \u003cInsets top\u003d\"0\" right\u003d\"10\" bottom\u003d\"0\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"        \u003c/TextFlow\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"            \u003cclip\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"                \u003cCircle radius\u003d\"49.5\" centerX\u003d\"49.5\" centerY\u003d\"49.5\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alfaloo":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"javafxgui.MainWindow\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"588.0\" /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"alfaloo":19}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package parser;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidDateException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import exceptions.InvalidSlashParameterException;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import exceptions.LuluException;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import command.Command;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"    public void test1() throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"        String input \u003d \"event event1 /from 2022-03-04 /to 2024-05-06\";","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"        Command command \u003d parser.parse(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"        assertEquals(\"event,event1,2022-03-04,2024-05-06,false\", command.getTestData());","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"    public void test2() throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"        String input \u003d \"event event1 /from 2022-03-04 /to 2022-03-04\";","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"        Command command \u003d parser.parse(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"        assertEquals(\"event,event1,2022-03-04,2022-03-04,false\", command.getTestData());","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    public void test3() throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"        String input \u003d \"find deadline 2023-01-02\";","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"        Command command \u003d parser.parse(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        assertEquals(\"deadline\", command.getTestData());","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    public void test4() {","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"        String input \u003d \"event event1 /from 2022-03-04 /to 2021-03-04\";","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"        assertThrows(InvalidDateException.class, () -\u003e parser.parse(input));","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"    public void test5() {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"        String input \u003d \"event\";","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e parser.parse(input));","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"    public void test6() {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        String input \u003d \"event event1 /from 2022-03-04 / 2023-03-04\";","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"        assertThrows(InvalidSlashParameterException.class, () -\u003e parser.parse(input));","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":59}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"package task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"import exceptions.*;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"alfaloo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"alfaloo"},"content":"import command.Command;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"alfaloo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"alfaloo"},"content":"public class TaskTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"alfaloo"},"content":"    public void test1() throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"alfaloo"},"content":"        Task task \u003d new Todo(\"test1\");","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"alfaloo"},"content":"        assertEquals(false, task.getStatus());","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"alfaloo"},"content":"    public void test2() throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"alfaloo"},"content":"        Task task \u003d new Todo(\"test2\");","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"alfaloo"},"content":"        task.updateStatus(true);","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"alfaloo"},"content":"        assertEquals(true, task.getStatus());","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"alfaloo"},"content":"    public void test3() throws LuluException {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"alfaloo"},"content":"        Task task \u003d new Todo(\"test3\");","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"alfaloo"},"content":"        assertThrows(InvalidStatusUpdateException.class, () -\u003e task.updateStatus(false));","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"alfaloo"},"content":"    public void test4() {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"alfaloo"},"content":"        Task task \u003d new Deadline(\"test4\", LocalDate.parse(\"2022-01-01\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"alfaloo"},"content":"        boolean query \u003d task.queryByDate(LocalDate.parse(\"2022-01-01\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"alfaloo"},"content":"        assertEquals(true, query);","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"alfaloo"},"content":"    public void test5() {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"alfaloo"},"content":"        Task task \u003d new Deadline(\"test5\", LocalDate.parse(\"2022-01-01\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"alfaloo"},"content":"        boolean query \u003d task.queryByDate(LocalDate.parse(\"2021-01-01\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"alfaloo"},"content":"        assertEquals(false, query);","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"alfaloo"},"content":"    public void test6() {","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"alfaloo"},"content":"        Task task \u003d new Event(\"test6\", LocalDate.parse(\"2020-01-01\"), LocalDate.parse(\"2022-01-01\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"alfaloo"},"content":"        boolean query \u003d task.queryByDate(LocalDate.parse(\"2021-01-01\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"alfaloo"},"content":"        assertEquals(true, query);","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"alfaloo"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"alfaloo"},"content":"    public void test7() {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"alfaloo"},"content":"        Task task \u003d new Event(\"test7\", LocalDate.parse(\"2021-01-01\"), LocalDate.parse(\"2022-01-01\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"alfaloo"},"content":"        boolean query \u003d task.queryByDate(LocalDate.parse(\"2020-01-01\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"alfaloo"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"alfaloo"},"content":"        assertEquals(false, query);","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"alfaloo"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"alfaloo"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"alfaloo":65}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alfaloo"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"alfaloo"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"alfaloo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"alfaloo"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"alfaloo":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"alfaloo"},"content":"java -classpath ../bin Lulu \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alfaloo":1,"-":37}}]
