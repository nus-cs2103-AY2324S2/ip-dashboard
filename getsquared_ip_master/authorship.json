[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"# Toothless","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"Toothless is a chatbot that remembers your tasks with its singular braincell.","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"\u003e Made of **100% void** üêà‚Äç‚¨õ","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"![Screenshot of Toothless GUI](/docs/Ui.png)","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"4. After that, locate the `src/main/java/toothless/Launcher.java` file, right-click it, and choose `Run Launcher` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see a welcome message from Toothless:","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"    /\\_/\\","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"   ( o.o )","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    \u003e ^ \u003c","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"   Nya-ice to meet you! I\u0027m Toothless :D","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"   What can I do for you?","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"## User Guide","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"The User Guide can be found [here](https://getsquared.github.io/ip/).","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"getsquared":17,"-":11}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"    ","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"checkstyle {","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"    mainClass.set(\"toothless.Launcher\")","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"    archiveBaseName \u003d \"toothless\"","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"getsquared":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"# Toothless User Guide","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"![Screenshot of Toothless GUI](Ui.png)","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"Toothless is a chatbot that remembers your tasks with its singular braincell.","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"\u003e Made of **100% void** üêà‚Äç‚¨õ","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"Link to the Github Respository [here](https://github.com/getsquared/ip/).","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"## Features","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"### List tasks: `list`","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"List all current tasks in the task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"Format: `list`","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"Expected outcome:","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"1. [T][ ] clean room","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"    Tags: #chore","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"2. [D][X] book assignment (by: Feb 1 2024, 18:00)","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    Tags: #hw, #english","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"3. [E][ ] dinner (from: Feb 2 2024, 18:00 to: Feb 2 2024, 20:30)","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"    Tags: #family","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"### Add todo: `todo`","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"Add a task to do with a description.","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"Example: `todo wash dishes`","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"Expected outcome:","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"    [T][ ] wash dishes","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"    Tags: NIL","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"Nya-ow you have 4 tasks in the list.","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"### Add deadline: `deadline` ","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"Add a deadline with a description and due date.","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e \u003chh:mm\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"Example: `deadline math tutorial /by 2024-02-05 23:59`","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"Expected outcome:","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"    [D][ ] math tutorial (by: Feb 5 2024, 23:59)","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"    Tags: NIL","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"Nya-ow you have 5 tasks in the list.","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"### Add event: `event`","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"Add an event with a description, and start and end date.","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"Format: `event \u003cdescription\u003e /from \u003cyyyy-mm-dd\u003e \u003chh:mm\u003e /to \u003cyyyy-mm-dd\u003e \u003chh:mm\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"Example: `event camp /from 2024-02-07 10:00 /to 2024-02-09 18:00`","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"Expected outcome:","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"    [E][ ] camp (from: Feb 7 2024, 10:00 to: Feb 9 2024, 18:00)","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"    Tags: NIL","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"Nya-ow you have 6 tasks in the list.","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"getsquared"},"content":"### Delete task: `delete`","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"getsquared"},"content":"Delete task from the list.","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"getsquared"},"content":"Format: `delete \u003ctaskIndex\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"getsquared"},"content":"Example: `delete 4`","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"getsquared"},"content":"Expected outcome:","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":82,"author":{"gitId":"getsquared"},"content":"Noted. I\u0027ve remeowved this task:","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"getsquared"},"content":"    [T][ ] wash dishes","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"getsquared"},"content":"    Tags: NIL","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"getsquared"},"content":"Nya-ow you have 5 tasks in the list.","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"getsquared"},"content":"### Mark task as done: `mark` ","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"getsquared"},"content":"Mark task as done.","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"getsquared"},"content":"Format: `mark \u003ctaskIndex\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"getsquared"},"content":"Example: `mark 1`","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"getsquared"},"content":"Expected outcome:","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"getsquared"},"content":"Ameowzing! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"getsquared"},"content":"    [T][X] clean room","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"getsquared"},"content":"    Tags: #chore","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"getsquared"},"content":"### Mark task as not done: `unmark` ","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"getsquared"},"content":"Mark task as not done.","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"getsquared"},"content":"Format: `unmark \u003ctaskIndex\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"getsquared"},"content":"Example: `unmark 1`","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"getsquared"},"content":"Expected outcome:","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"getsquared"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"getsquared"},"content":"    [T][ ] clean room","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"getsquared"},"content":"    Tags: #chore","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"getsquared"},"content":"### Find task: `find` ","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"getsquared"},"content":"Find task by keyword.","lastModifiedDate":"2024-02-18"},{"lineNumber":118,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":119,"author":{"gitId":"getsquared"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"getsquared"},"content":"Example: `find book`","lastModifiedDate":"2024-02-18"},{"lineNumber":122,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"getsquared"},"content":"Expected outcome:","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":125,"author":{"gitId":"getsquared"},"content":"Here are the meow-tching tasks in your list:","lastModifiedDate":"2024-02-18"},{"lineNumber":126,"author":{"gitId":"getsquared"},"content":"1. [D][X] book assignment (by: Feb 1 2024, 18:00)","lastModifiedDate":"2024-02-18"},{"lineNumber":127,"author":{"gitId":"getsquared"},"content":"    Tags: #hw, #english","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":130,"author":{"gitId":"getsquared"},"content":"### Tag task: `tag`","lastModifiedDate":"2024-02-18"},{"lineNumber":131,"author":{"gitId":"getsquared"},"content":"Tag task with tag word.","lastModifiedDate":"2024-02-18"},{"lineNumber":132,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"getsquared"},"content":"Format: `tag \u003ctaskIndex\u003e \u003ctagWord\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":135,"author":{"gitId":"getsquared"},"content":"Example: `tag 4 hw`","lastModifiedDate":"2024-02-18"},{"lineNumber":136,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":137,"author":{"gitId":"getsquared"},"content":"Expected outcome:","lastModifiedDate":"2024-02-18"},{"lineNumber":138,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":139,"author":{"gitId":"getsquared"},"content":"Ameowzing! I\u0027ve tagged this task:","lastModifiedDate":"2024-02-18"},{"lineNumber":140,"author":{"gitId":"getsquared"},"content":"    [D][ ] math tutorial (by: Feb 5 2024, 23:59)","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"getsquared"},"content":"    Tags: #hw","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":143,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":144,"author":{"gitId":"getsquared"},"content":"### Untag task: `untag`","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"getsquared"},"content":"Remove tag word on task.","lastModifiedDate":"2024-02-18"},{"lineNumber":146,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":147,"author":{"gitId":"getsquared"},"content":"Format: `untag \u003ctaskIndex\u003e \u003ctagWord\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":148,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":149,"author":{"gitId":"getsquared"},"content":"Example: `untag 4 hw`","lastModifiedDate":"2024-02-18"},{"lineNumber":150,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":151,"author":{"gitId":"getsquared"},"content":"Expected outcome:","lastModifiedDate":"2024-02-18"},{"lineNumber":152,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":153,"author":{"gitId":"getsquared"},"content":"OK, I\u0027ve removed the tag for this task:","lastModifiedDate":"2024-02-18"},{"lineNumber":154,"author":{"gitId":"getsquared"},"content":"    [D][ ] math tutorial (by: Feb 5 2024, 23:59)","lastModifiedDate":"2024-02-18"},{"lineNumber":155,"author":{"gitId":"getsquared"},"content":"    Tags: NIL","lastModifiedDate":"2024-02-18"},{"lineNumber":156,"author":{"gitId":"getsquared"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":158,"author":{"gitId":"getsquared"},"content":"### Saving data","lastModifiedDate":"2024-02-18"},{"lineNumber":159,"author":{"gitId":"getsquared"},"content":"All task data is automatically saved after any command. There is no need to save manually. The data can be found in a","lastModifiedDate":"2024-02-18"},{"lineNumber":160,"author":{"gitId":"getsquared"},"content":"text file `[JAR file location]/data/tasklist.txt`.","lastModifiedDate":"2024-02-18"},{"lineNumber":161,"author":{"gitId":"getsquared"},"content":"\u003e [!CAUTION]","lastModifiedDate":"2024-02-18"},{"lineNumber":162,"author":{"gitId":"getsquared"},"content":"\u003e Do not manually change the data file unnecessarily. If any data in the file has an invalid format, Toothless will ","lastModifiedDate":"2024-02-18"},{"lineNumber":163,"author":{"gitId":"getsquared"},"content":"\u003e discard all the data and start a new blank task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":165,"author":{"gitId":"getsquared"},"content":"## Command Summary","lastModifiedDate":"2024-02-18"},{"lineNumber":166,"author":{"gitId":"getsquared"},"content":"* `list`","lastModifiedDate":"2024-02-18"},{"lineNumber":167,"author":{"gitId":"getsquared"},"content":"* `todo \u003cdescription\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":168,"author":{"gitId":"getsquared"},"content":"* `deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd hh:mm\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":169,"author":{"gitId":"getsquared"},"content":"* `event \u003cdescription\u003e /from \u003cyyyy-mm-dd hh:mm\u003e /to \u003cyyyy-mm-dd hh:mm\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":170,"author":{"gitId":"getsquared"},"content":"* `delete \u003ctaskIndex\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":171,"author":{"gitId":"getsquared"},"content":"* `mark \u003ctaskIndex\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":172,"author":{"gitId":"getsquared"},"content":"* `unmark \u003ctaskIndex\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":173,"author":{"gitId":"getsquared"},"content":"* `find \u003ckeyword\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":174,"author":{"gitId":"getsquared"},"content":"* `tag \u003ctaskIndex\u003e \u003ctagWord\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":175,"author":{"gitId":"getsquared"},"content":"* `untag \u003ctaskIndex\u003e \u003ctagWord\u003e`","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"getsquared":150,"-":25}},{"path":"src/main/java/toothless/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"public class Launcher {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"getsquared":12}},{"path":"src/main/java/toothless/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"import toothless.ui.MainWindow;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":" * A GUI for Toothless using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    private Toothless toothless \u003d new Toothless();","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"            stage.setTitle(\"Toothless\");","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setToothless(toothless);","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"            stage.show();","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"getsquared":33}},{"path":"src/main/java/toothless/Toothless.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import toothless.exception.ToothlessException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"import toothless.parser.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import toothless.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import toothless.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"import toothless.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":" * The main class for the Toothless TaskList chatbot.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"public class Toothless {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"    private static final String FILE_PATH \u003d \"./data/tasklist.txt\";","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"     * A private constructor to initialize the chatbot.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"    public Toothless() {}","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"     * Initializes Toothless.","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"     * @return String message in case of initialization error.","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"    public String initialize() {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"        String message \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"            this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"            this.tasks \u003d new TaskList(this.storage.loadStorage());","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"        } catch (ToothlessException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"            message +\u003d e.getMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"            message +\u003d \"\\nSorry, tasklist.txt is corrupted. Starting a blank tasklist.\";","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"        return message;","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"     * Gets response to user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"     * @param input User input from GUI.","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"     * @return String of Toothless\u0027 response.","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"            response +\u003d parser.parseInput(tasks, ui, input);","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"        } catch (ToothlessException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"            response +\u003d e.getMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"            storage.saveToStorage(tasks.getTasks());","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"        } catch (ToothlessException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"            response +\u003d e.getMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"getsquared"},"content":"        return response;","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"getsquared":65,"-":1}},{"path":"src/main/java/toothless/exception/ToothlessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":" * Exception class for Toothless chatbot.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"public class ToothlessException extends Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"     * A public constructor to initialize the exception.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"     * @param message The message for the exception to be thrown.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"    public ToothlessException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"getsquared":15}},{"path":"src/main/java/toothless/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import toothless.exception.ToothlessException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import toothless.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"import toothless.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"import toothless.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":" * A class that parses, resolves and validates user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"public class Parser {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"     * Parses user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"     * @param tasks TaskList that is operated on when user command is executed.","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"     * @param ui Ui class used to print messages.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"     * @param userInput User input string to be parsed.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"     * @return String of response.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if user input is invalid.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    public String parseInput(TaskList tasks, Ui ui, String userInput) throws ToothlessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"        if (userInput.startsWith(\"list\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"            response \u003d ui.getListMessage(tasks.getTasks(),","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"                    \"Oops! Looks like you haven\u0027t added any tasks yet!\",","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"                    \"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"            response \u003d parseIndexInput(tasks, ui, userInput, \"mark\");","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"            response \u003d parseIndexInput(tasks, ui, userInput, \"unmark\");","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"            response \u003d parseIndexInput(tasks, ui, userInput, \"delete\");","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"            response \u003d parseFindInput(tasks, ui, userInput);","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"        } else if (userInput.startsWith(\"tag\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"            response \u003d parseTagInput(tasks, ui, userInput, \"tag\");","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"        } else if (userInput.startsWith(\"untag\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"            response \u003d parseTagInput(tasks, ui, userInput, \"untag\");","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"            response \u003d parseToDoInput(tasks, ui, userInput);","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"            response \u003d parseDeadlineInput(tasks, ui, userInput);","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"            response \u003d parseEventInput(tasks, ui, userInput);","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Sorry, I don\u0027t understand what that means D:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"        return response;","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"     * Parses the user input for commands dealing with list indexes.","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"     * @param tasks TaskList that is operated on when user command is executed.","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"     * @param ui Ui class used to print messages.","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"     * @param indexInput User input string for list item to be validated.","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"     * @param command The user command that uses the list item.","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"     * @return String of response to list item commands.","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if user input is invalid or in the wrong format.","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"    public String parseIndexInput(TaskList tasks, Ui ui, String indexInput, String command) throws ToothlessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"getsquared"},"content":"        // check format","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"        if (!indexInput.matches(\"(mark|unmark|delete)\\\\s\\\\d+\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"                    String.format(\"Sorry, purr-lease use the format: %s \u003clistIndex\u003e\", command));","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"        // split input and get integer","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"        String[] listInputSplit \u003d indexInput.strip().split(\"\\\\s+\");","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"getsquared"},"content":"        int listIndex \u003d Integer.parseInt(listInputSplit[1]);","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"getsquared"},"content":"        // check if within list index","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"getsquared"},"content":"        if (listIndex \u003c 1 || listIndex \u003e tasks.getSize()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Apurrlogies, there\u0027s no task at that index.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"getsquared"},"content":"        // operate on tasklist according to command","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"getsquared"},"content":"        switch (command) {","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"getsquared"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"getsquared"},"content":"            Task markedTask \u003d tasks.markTask(listIndex);","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"getsquared"},"content":"            return ui.getMarkedTaskMessage(markedTask);","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"getsquared"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"getsquared"},"content":"            Task unmarkedTask \u003d tasks.unmarkTask(listIndex);","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"getsquared"},"content":"            return ui.getUnmarkedTaskMessage(unmarkedTask);","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"getsquared"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"getsquared"},"content":"            Task deletedTask \u003d tasks.deleteTask(listIndex);","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"getsquared"},"content":"            return ui.getDeletedTaskMessage(deletedTask, tasks.getSize());","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"getsquared"},"content":"        default:","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Sorry, I don\u0027t understand what that means D:\");","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"getsquared"},"content":"     * Parses the user input for find command.","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"getsquared"},"content":"     * @param tasks TaskList where keyword is to be searched.","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"getsquared"},"content":"     * @param ui Ui class used to print messages.","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"getsquared"},"content":"     * @param findInput The user input for find command.","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"getsquared"},"content":"     * @return String response of find command.","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if input is invalid or wrong format.","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"getsquared"},"content":"    public String parseFindInput(TaskList tasks, Ui ui, String findInput) throws ToothlessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"getsquared"},"content":"        if (!findInput.matches(\"find\\\\s[^/]+\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Apurrlogies, please use the format: find \u003ckeyword\u003e\");","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"getsquared"},"content":"        String keyword \u003d findInput.replace(\"find\", \"\").strip();","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"getsquared"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Sorry, keyword cannot be empty.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":109,"author":{"gitId":"getsquared"},"content":"        ArrayList\u003cTask\u003e keywordTasks \u003d tasks.findKeyword(keyword);","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"getsquared"},"content":"        return ui.getListMessage(keywordTasks,","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"getsquared"},"content":"                \"Oops! Looks like there are no tasks matching the keyword!\",","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"getsquared"},"content":"                \"Here are the meow-tching tasks in your list:\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"getsquared"},"content":"     * Parses the user input for tag and untag command.","lastModifiedDate":"2024-02-14"},{"lineNumber":117,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":118,"author":{"gitId":"getsquared"},"content":"     * @param tasks TaskList where task tags operations are performed.","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"getsquared"},"content":"     * @param ui Ui class used to print messages.","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"getsquared"},"content":"     * @param tagInput The user input for tag commands.","lastModifiedDate":"2024-02-14"},{"lineNumber":121,"author":{"gitId":"getsquared"},"content":"     * @param command The specific tag command.","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"getsquared"},"content":"     * @return String response of tag or untag command.","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if input is invalid or wrong format.","lastModifiedDate":"2024-02-14"},{"lineNumber":124,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":125,"author":{"gitId":"getsquared"},"content":"    public String parseTagInput(TaskList tasks, Ui ui, String tagInput, String command) throws ToothlessException {","lastModifiedDate":"2024-02-14"},{"lineNumber":126,"author":{"gitId":"getsquared"},"content":"        if (!tagInput.matches(\"(tag|untag)\\\\s\\\\d+\\\\s[^/]+\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":127,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(","lastModifiedDate":"2024-02-14"},{"lineNumber":128,"author":{"gitId":"getsquared"},"content":"                    String.format(\"Sorry, purr-lease use the format: %s \u003ctaskListIndex\u003e \u003ctagLabel\u003e\", command));","lastModifiedDate":"2024-02-18"},{"lineNumber":129,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":130,"author":{"gitId":"getsquared"},"content":"        String[] tagInputSplit \u003d tagInput.strip().split(\"\\\\s+\");","lastModifiedDate":"2024-02-14"},{"lineNumber":131,"author":{"gitId":"getsquared"},"content":"        int listIndex \u003d Integer.parseInt(tagInputSplit[1]);","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"getsquared"},"content":"        // check if within list index","lastModifiedDate":"2024-02-14"},{"lineNumber":133,"author":{"gitId":"getsquared"},"content":"        if (listIndex \u003c 1 || listIndex \u003e tasks.getSize()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":134,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Apurrlogies, there\u0027s no task at that index.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":135,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":136,"author":{"gitId":"getsquared"},"content":"        // operate on tasklist according to command","lastModifiedDate":"2024-02-14"},{"lineNumber":137,"author":{"gitId":"getsquared"},"content":"        switch (command) {","lastModifiedDate":"2024-02-14"},{"lineNumber":138,"author":{"gitId":"getsquared"},"content":"        case \"tag\":","lastModifiedDate":"2024-02-14"},{"lineNumber":139,"author":{"gitId":"getsquared"},"content":"            Task taggedTask \u003d tasks.addTaskTag(listIndex, tagInputSplit[2]);","lastModifiedDate":"2024-02-14"},{"lineNumber":140,"author":{"gitId":"getsquared"},"content":"            return ui.getTaggedTaskMessage(taggedTask);","lastModifiedDate":"2024-02-14"},{"lineNumber":141,"author":{"gitId":"getsquared"},"content":"        case \"untag\":","lastModifiedDate":"2024-02-14"},{"lineNumber":142,"author":{"gitId":"getsquared"},"content":"            Task untaggedTask \u003d tasks.untagTask(listIndex, tagInputSplit[2]);","lastModifiedDate":"2024-02-14"},{"lineNumber":143,"author":{"gitId":"getsquared"},"content":"            return ui.getUntaggedTaskMessage(untaggedTask);","lastModifiedDate":"2024-02-14"},{"lineNumber":144,"author":{"gitId":"getsquared"},"content":"        default:","lastModifiedDate":"2024-02-14"},{"lineNumber":145,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Sorry, I don\u0027t understand what that means D:\");","lastModifiedDate":"2024-02-14"},{"lineNumber":146,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":147,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":148,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":149,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"getsquared"},"content":"     * Validates the user input for todo command.","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":152,"author":{"gitId":"getsquared"},"content":"     * @param tasks TaskList that new ToDo Task is added to.","lastModifiedDate":"2024-02-13"},{"lineNumber":153,"author":{"gitId":"getsquared"},"content":"     * @param ui Ui class used to print messages.","lastModifiedDate":"2024-02-13"},{"lineNumber":154,"author":{"gitId":"getsquared"},"content":"     * @param toDoInput User input string for todo command.","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"getsquared"},"content":"     * @return String response of todo command.","lastModifiedDate":"2024-02-13"},{"lineNumber":156,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if user input is invalid or wrong format.","lastModifiedDate":"2024-02-13"},{"lineNumber":157,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"getsquared"},"content":"    public String parseToDoInput(TaskList tasks, Ui ui, String toDoInput) throws ToothlessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":159,"author":{"gitId":"getsquared"},"content":"        if (!toDoInput.matches(\"todo\\\\s[^/]+\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":160,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Apurrlogies, please use the format: todo \u003cdescription\u003e\");","lastModifiedDate":"2024-02-18"},{"lineNumber":161,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":162,"author":{"gitId":"getsquared"},"content":"        String taskDescription \u003d toDoInput.replace(\"todo\", \"\").strip();","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"getsquared"},"content":"        if (taskDescription.isBlank()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Apurr-logies, task description cannot be empty.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":165,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"getsquared"},"content":"        Task newTask \u003d tasks.addToDoToList(taskDescription);","lastModifiedDate":"2024-02-13"},{"lineNumber":167,"author":{"gitId":"getsquared"},"content":"        return ui.getNewTaskMessage(newTask, tasks.getSize());","lastModifiedDate":"2024-02-13"},{"lineNumber":168,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":171,"author":{"gitId":"getsquared"},"content":"     * Validates the user input for deadline command.","lastModifiedDate":"2024-02-04"},{"lineNumber":172,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":173,"author":{"gitId":"getsquared"},"content":"     * @param tasks TaskList that new Deadline Task is added to.","lastModifiedDate":"2024-02-13"},{"lineNumber":174,"author":{"gitId":"getsquared"},"content":"     * @param ui Ui class used to print messages.","lastModifiedDate":"2024-02-13"},{"lineNumber":175,"author":{"gitId":"getsquared"},"content":"     * @param deadlineInput User input string for deadline command.","lastModifiedDate":"2024-02-04"},{"lineNumber":176,"author":{"gitId":"getsquared"},"content":"     * @return String response of deadline command.","lastModifiedDate":"2024-02-13"},{"lineNumber":177,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if user input is invalid or in the wrong format.","lastModifiedDate":"2024-02-04"},{"lineNumber":178,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":179,"author":{"gitId":"getsquared"},"content":"    public String parseDeadlineInput(TaskList tasks, Ui ui, String deadlineInput) throws ToothlessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":180,"author":{"gitId":"getsquared"},"content":"        if (!deadlineInput.matches(\"deadline\\\\s[^/]+\\\\s/by\\\\s\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\s\\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":181,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Sorry, purr-lease use the format: \"","lastModifiedDate":"2024-02-08"},{"lineNumber":182,"author":{"gitId":"getsquared"},"content":"                    + \"deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd hh:mm\u003e.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":183,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"getsquared"},"content":"        String[] deadlineAttributes \u003d deadlineInput.replace(\"deadline\", \"\")","lastModifiedDate":"2024-02-13"},{"lineNumber":185,"author":{"gitId":"getsquared"},"content":"                .strip().split(\"\\\\s*/by\\\\s*\");","lastModifiedDate":"2024-02-13"},{"lineNumber":186,"author":{"gitId":"getsquared"},"content":"        if (deadlineAttributes[0].isBlank()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":187,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Sorry, task description cannot be empty.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":188,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":189,"author":{"gitId":"getsquared"},"content":"        Task newTask \u003d tasks.addDeadlineToList(deadlineAttributes[0], deadlineAttributes[1]);","lastModifiedDate":"2024-02-13"},{"lineNumber":190,"author":{"gitId":"getsquared"},"content":"        return ui.getNewTaskMessage(newTask, tasks.getSize());","lastModifiedDate":"2024-02-13"},{"lineNumber":191,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":192,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":194,"author":{"gitId":"getsquared"},"content":"     * Validates the user input for event command.","lastModifiedDate":"2024-02-04"},{"lineNumber":195,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":196,"author":{"gitId":"getsquared"},"content":"     * @param tasks TaskList that new Event Task is added to.","lastModifiedDate":"2024-02-13"},{"lineNumber":197,"author":{"gitId":"getsquared"},"content":"     * @param ui Ui class used to print messages.","lastModifiedDate":"2024-02-13"},{"lineNumber":198,"author":{"gitId":"getsquared"},"content":"     * @param eventInput User input string for event command.","lastModifiedDate":"2024-02-04"},{"lineNumber":199,"author":{"gitId":"getsquared"},"content":"     * @return String response of event command.","lastModifiedDate":"2024-02-13"},{"lineNumber":200,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if user input is invalid or in the wrong format.","lastModifiedDate":"2024-02-04"},{"lineNumber":201,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"getsquared"},"content":"    public String parseEventInput(TaskList tasks, Ui ui, String eventInput) throws ToothlessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":203,"author":{"gitId":"getsquared"},"content":"        if (!eventInput.matches(\"event\\\\s[^/]+\\\\s/from\\\\s\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\s\\\\d{2}:\\\\d{2}\\\\s\"","lastModifiedDate":"2024-02-13"},{"lineNumber":204,"author":{"gitId":"getsquared"},"content":"                + \"/to\\\\s\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\s\\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":205,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Sorry, purr-lease use the format: \"","lastModifiedDate":"2024-02-08"},{"lineNumber":206,"author":{"gitId":"getsquared"},"content":"                    + \"event \u003cdescription\u003e /from \u003cyyyy-mm-dd hh:mm\u003e /to \u003cyyyy-mm-dd hh:mm\u003e\");","lastModifiedDate":"2024-02-18"},{"lineNumber":207,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":208,"author":{"gitId":"getsquared"},"content":"        String[] eventAttributes \u003d eventInput.replace(\"event\", \"\")","lastModifiedDate":"2024-02-13"},{"lineNumber":209,"author":{"gitId":"getsquared"},"content":"                .strip().split(\"\\\\s*/from\\\\s*|\\\\s*/to\\\\s*\");","lastModifiedDate":"2024-02-13"},{"lineNumber":210,"author":{"gitId":"getsquared"},"content":"        if (eventAttributes[0].isBlank()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":211,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Apurrlogies, the task description cannot be empty.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":212,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":213,"author":{"gitId":"getsquared"},"content":"        Task newTask \u003d tasks.addEventToList(eventAttributes[0], eventAttributes[1], eventAttributes[2]);","lastModifiedDate":"2024-02-13"},{"lineNumber":214,"author":{"gitId":"getsquared"},"content":"        return ui.getNewTaskMessage(newTask, tasks.getSize());","lastModifiedDate":"2024-02-13"},{"lineNumber":215,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":216,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"getsquared":216}},{"path":"src/main/java/toothless/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"import toothless.exception.ToothlessException;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"import toothless.task.Deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"import toothless.task.Event;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"import toothless.task.Tag;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"import toothless.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"import toothless.task.ToDo;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":" * A class to deal with loading data from and saving data to file in computer.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    private static final DateTimeFormatter DATETIME_PARSE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"    private String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"    private File file;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"     * A public constructor to initialize storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"     * @param filePath A String indicating the filepath where data would be stored.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if file failed to be created.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"    public Storage(String filePath) throws ToothlessException {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"                if (!file.getParentFile().exists()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"                    file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"     * Loads data from file into ArrayList of Task objects.","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"     * @return ArrayList of Task objects with data from file.","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if file is corrupted.","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"    public ArrayList\u003cTask\u003e loadStorage() throws ToothlessException {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"            Scanner tasklistScanner \u003d new Scanner(this.file);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"            while (tasklistScanner.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"                String line \u003d tasklistScanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"                String[] taskArgs \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"                addTaskToTaskList(tasks, taskArgs);","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"            tasklistScanner.close();","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"getsquared"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"        return tasks;","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"getsquared"},"content":"     * Adds task from storage to task list.","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"getsquared"},"content":"     * @param tasks ArrayList of Task objects.","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"getsquared"},"content":"     * @param taskArgs String array of task arguments.","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if task arguments from file are corrupted.","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"getsquared"},"content":"    private void addTaskToTaskList(ArrayList\u003cTask\u003e tasks, String[] taskArgs) throws ToothlessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"getsquared"},"content":"            // get task type, done status, description","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"getsquared"},"content":"            String taskType \u003d taskArgs[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"getsquared"},"content":"            boolean isDone \u003d taskArgs[1].equals(\"0\") ? false : true;","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"getsquared"},"content":"            String taskDescription \u003d taskArgs[2];","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"getsquared"},"content":"            // get tags","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"getsquared"},"content":"            ArrayList\u003cTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"getsquared"},"content":"            if (!taskArgs[3].contains(\"NIL\") || taskArgs[3].isBlank()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"getsquared"},"content":"                String[] tagLabelsArray \u003d taskArgs[3].split(\", \");","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"getsquared"},"content":"                for (String label : tagLabelsArray) {","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"getsquared"},"content":"                    tags.add(new Tag(label));","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"getsquared"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"getsquared"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"getsquared"},"content":"            // add tasks by type","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"getsquared"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"getsquared"},"content":"                ToDo newToDo \u003d new ToDo(taskDescription, isDone, tags);","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"getsquared"},"content":"                tasks.add(newToDo);","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"getsquared"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"getsquared"},"content":"                LocalDateTime deadlineBy \u003d LocalDateTime.parse(taskArgs[4], DATETIME_PARSE_FORMATTER);","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"getsquared"},"content":"                Deadline newDeadline \u003d new Deadline(taskDescription, isDone, tags, deadlineBy);","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"getsquared"},"content":"                tasks.add(newDeadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"getsquared"},"content":"            } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"getsquared"},"content":"                LocalDateTime eventFrom \u003d LocalDateTime.parse(taskArgs[4], DATETIME_PARSE_FORMATTER);","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"getsquared"},"content":"                LocalDateTime eventTo \u003d LocalDateTime.parse(taskArgs[5], DATETIME_PARSE_FORMATTER);","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"getsquared"},"content":"                Event newEvent \u003d new Event(taskDescription, isDone, tags, eventFrom, eventTo);","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"getsquared"},"content":"                tasks.add(newEvent);","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"getsquared"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"getsquared"},"content":"                throw new ToothlessException(\"Sorry, tasklist.txt seems to contain a corrupted task type.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"getsquared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"getsquared"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Sorry, tasks seem to have missing arguments.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"getsquared"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Sorry, task seems to have corrupted datetime. \"","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"getsquared"},"content":"                    + \"The format should be yyyy-mm-dd hh:mm\");","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"getsquared"},"content":"     * Saves data from ArrayList of Tasks to data file.","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"getsquared"},"content":"     * @param tasks ArrayList of Tasks to save into file.","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if saving failed.","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"getsquared"},"content":"    public void saveToStorage(ArrayList\u003cTask\u003e tasks) throws ToothlessException {","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"getsquared"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath, false);","lastModifiedDate":"2024-02-13"},{"lineNumber":124,"author":{"gitId":"getsquared"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"getsquared"},"content":"                fileWriter.write(t.toStorageString() + System.lineSeparator());","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"getsquared"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"getsquared"},"content":"            fileWriter.close();","lastModifiedDate":"2024-02-13"},{"lineNumber":128,"author":{"gitId":"getsquared"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Sorry, saving to tasklist.txt failed.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"getsquared":133}},{"path":"src/main/java/toothless/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":" * A class inherited from Task with deadline due.","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"     * A public constructor to initialize a new Deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"     * @param description A String to describe the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"     * @param by A LocalDateTime for the deadline due of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"     * A public constructor to initialize a Deadline with an isDone value.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"     * @param description A String to describe the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"     * @param isDone A Boolean to describe if the task is done.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"     * @param by A LocalDateTime for the deadline due of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"    public Deadline(String description, boolean isDone, ArrayList\u003cTag\u003e tags, LocalDateTime by) {","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"        super(description, isDone, tags);","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"        return \"D | \" + super.toStorageString() + \" | \"","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")) + \")\\n\\t\"","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"                + this.getTagsString();","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"getsquared":48}},{"path":"src/main/java/toothless/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":" * A class inherited from Task with start and end datetime.","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"     * A public constructor to initialize a new Event.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"     * @param description A String to describe the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"     * @param from A LocalDateTime for the start of the Event.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"     * @param to A LocalDateTime for the end of the Event.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"     * A public constructor to initialize a new Event with an isDone value.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"     * @param description A String to describe the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"     * @param isDone A Boolean to describe if the task is done.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"     * @param from A LocalDateTime for the start of the Event.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"     * @param to A LocalDateTime for the end of the Event.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"    public Event(String description, boolean isDone, ArrayList\u003cTag\u003e tags, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"        super(description, isDone, tags);","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"        return \"E | \" + super.toStorageString() + String.format(\" | %s | %s\",","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"        return \"[E]\" + super.toString() + String.format(\" (from: %s to: %s)\\n\\t\",","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")),","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")))","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"                + this.getTagsString();","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"getsquared":55}},{"path":"src/main/java/toothless/task/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.task;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":" * A Tag class to be assigned to Tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"public class Tag {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"    private String label;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"     * A public constructor to initialise a Tag.","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"     * @param label String of label of tag.","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"    public Tag(String label) {","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"        this.label \u003d label;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"     * Gets the label of the Tag.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"     * @return String label of Tag.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"    public String getLabel() {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"        return this.label;","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"    public String toString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"        return \"#\" + this.label;","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"            return true;","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"        } else if (obj instanceof Tag) {","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"            Tag tag \u003d (Tag) obj;","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"            return this.getLabel().equals(tag.getLabel());","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"        return false;","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"getsquared":40}},{"path":"src/main/java/toothless/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import toothless.exception.ToothlessException;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":" * Abstract class to represent something to be done.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"    private String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"    private ArrayList\u003cTag\u003e tags;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"     * A public constructor to initialize a new task.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"     * @param description A String to describe the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"        this.tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"     * A public constructor to initialize a task with an isDone value.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"     * @param description A String to describe the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"     * @param isDone A Boolean to describe if the task is done.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"    public Task(String description, boolean isDone, ArrayList\u003cTag\u003e tags) {","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"     * Returns the done status icon of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"     * @return The String indicating X if done, and nothing if not.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"     * Returns a binary of the done status of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"     * @return The String indicating 1 if done, and 0 if not.","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"    public String getStatusBinary() {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"        return (this.isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"     * Returns size of tag list.","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"     * @return Integer of size of tag list.","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"    public int getTagListSize() {","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"        return this.tags.size();","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":71,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"getsquared"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"getsquared"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":76,"author":{"gitId":"getsquared"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"getsquared"},"content":"     * Adds a new Tag to tags list.","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"getsquared"},"content":"     * @param label String label of tag to be added.","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if duplicate tag.","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"getsquared"},"content":"    public void addTag(String label) throws ToothlessException {","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"getsquared"},"content":"        Tag newTag \u003d new Tag(label);","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"getsquared"},"content":"        if (tags.contains(newTag)) {","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"This task already has the tag \" + label + \".\");","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"getsquared"},"content":"        tags.add(newTag);","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"getsquared"},"content":"     * Deletes a tag from tags list.","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"getsquared"},"content":"     * @param label String label of tag to be deleted.","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if tag not in list.","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"getsquared"},"content":"    public void unTag(String label) throws ToothlessException {","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"getsquared"},"content":"        Tag toDeleteTag \u003d new Tag(label);","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"getsquared"},"content":"        if (tags.indexOf(toDeleteTag) \u003d\u003d -1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"This task does not have the tag \" + label + \".\");","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"getsquared"},"content":"        tags.remove(toDeleteTag);","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"getsquared"},"content":"     * Gets string of all tags of this task.","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"getsquared"},"content":"     * @return String of all tags.","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"getsquared"},"content":"    public String getTagsString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"getsquared"},"content":"        String result \u003d \"Tags: \";","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"getsquared"},"content":"        int tagListSize \u003d this.getTagListSize();","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"getsquared"},"content":"        if (tagListSize \u003d\u003d 0) {","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"getsquared"},"content":"            result +\u003d \"NIL\";","lastModifiedDate":"2024-02-14"},{"lineNumber":117,"author":{"gitId":"getsquared"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":118,"author":{"gitId":"getsquared"},"content":"            for (int i \u003d 0; i \u003c tagListSize; i++) {","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"getsquared"},"content":"                result +\u003d this.tags.get(i);","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"getsquared"},"content":"                if (i !\u003d tagListSize - 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":121,"author":{"gitId":"getsquared"},"content":"                    result +\u003d \", \";","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"getsquared"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"getsquared"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":124,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":125,"author":{"gitId":"getsquared"},"content":"        return result;","lastModifiedDate":"2024-02-14"},{"lineNumber":126,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":127,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":128,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":129,"author":{"gitId":"getsquared"},"content":"     * Gets string of all tags of this task for storage.","lastModifiedDate":"2024-02-14"},{"lineNumber":130,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":131,"author":{"gitId":"getsquared"},"content":"     * @return String of all tags for storage.","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":133,"author":{"gitId":"getsquared"},"content":"    public String getTagsStorageString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":134,"author":{"gitId":"getsquared"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":135,"author":{"gitId":"getsquared"},"content":"        int tagListSize \u003d this.getTagListSize();","lastModifiedDate":"2024-02-14"},{"lineNumber":136,"author":{"gitId":"getsquared"},"content":"        if (tagListSize \u003d\u003d 0) {","lastModifiedDate":"2024-02-14"},{"lineNumber":137,"author":{"gitId":"getsquared"},"content":"            result \u003d \"NIL\";","lastModifiedDate":"2024-02-14"},{"lineNumber":138,"author":{"gitId":"getsquared"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":139,"author":{"gitId":"getsquared"},"content":"            for (int i \u003d 0; i \u003c tagListSize; i++) {","lastModifiedDate":"2024-02-14"},{"lineNumber":140,"author":{"gitId":"getsquared"},"content":"                result +\u003d this.tags.get(i).getLabel();","lastModifiedDate":"2024-02-14"},{"lineNumber":141,"author":{"gitId":"getsquared"},"content":"                if (i !\u003d tagListSize - 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":142,"author":{"gitId":"getsquared"},"content":"                    result +\u003d \", \";","lastModifiedDate":"2024-02-14"},{"lineNumber":143,"author":{"gitId":"getsquared"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":144,"author":{"gitId":"getsquared"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":145,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":146,"author":{"gitId":"getsquared"},"content":"        return result;","lastModifiedDate":"2024-02-14"},{"lineNumber":147,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":148,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":149,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"getsquared"},"content":"     * Returns a String representing the task formatted for storage in data file.","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":152,"author":{"gitId":"getsquared"},"content":"     * @return String representing the task formatted for storage in data file.","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"getsquared"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"getsquared"},"content":"        return String.format(\"%s | %s | %s\", this.getStatusBinary(), this.description, this.getTagsStorageString());","lastModifiedDate":"2024-02-14"},{"lineNumber":156,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":159,"author":{"gitId":"getsquared"},"content":"     * Returns a String representing the task formatted for printing.","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":161,"author":{"gitId":"getsquared"},"content":"     * @return String representing the task formatted for printing.","lastModifiedDate":"2024-02-04"},{"lineNumber":162,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":163,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":164,"author":{"gitId":"getsquared"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":165,"author":{"gitId":"getsquared"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":167,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"getsquared":167}},{"path":"src/main/java/toothless/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"import toothless.exception.ToothlessException;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":" * A TaskList class to store and operate on tasks in list.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"    private static final DateTimeFormatter DATETIME_PARSE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"     * A public constructor to initialize new TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"     * A public constructor to initialize new TaskList with given ArrayList.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"     * @param taskArrayList ArrayList with Tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"        this.tasks \u003d taskArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"     * @return integer of number of tasks in the list.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"     * Getter for ArrayList of Tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"     * @return ArrayList of Tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"     * Marks a task in the list as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"     * @param index Index of task to mark as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"     * @return Marked task.","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"    public Task markTask(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"        assert index \u003c\u003d tasks.size() : \"index should be less than or equal to size of tasks\";","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"        return task;","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"     * Marks a task in the list as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"     * @param index Index of task to mark as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"     * @return Unmarked task.","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"    public Task unmarkTask(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"getsquared"},"content":"        assert index \u003c\u003d tasks.size() : \"index should be less than or equal to size of tasks\";","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"getsquared"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"getsquared"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"getsquared"},"content":"        return task;","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"getsquared"},"content":"     * Deletes a task in the list.","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"getsquared"},"content":"     * @param index Index of task to delete.","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"getsquared"},"content":"     * @return Deleted task.","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"getsquared"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"getsquared"},"content":"        assert index \u003c\u003d tasks.size() : \"index should be less than or equal to size of tasks\";","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"getsquared"},"content":"        Task deletedTask \u003d tasks.get(index - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"getsquared"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"getsquared"},"content":"        return deletedTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"getsquared"},"content":"     * Finds and returns a list of tasks with given keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"getsquared"},"content":"     * @param keyword A String to search in tasklist.","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"getsquared"},"content":"     * @return List of tasks with keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"getsquared"},"content":"    public ArrayList\u003cTask\u003e findKeyword(String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"getsquared"},"content":"        assert keyword !\u003d null : \"keyword should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"getsquared"},"content":"        assert !keyword.isBlank() : \"keyword should not be an empty string\";","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"getsquared"},"content":"        ArrayList\u003cTask\u003e keywordTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"getsquared"},"content":"        for (Task currentTask : this.tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"getsquared"},"content":"            if (currentTask.toString().contains(keyword)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"getsquared"},"content":"                keywordTasks.add(currentTask);","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"getsquared"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"getsquared"},"content":"        return keywordTasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"getsquared"},"content":"     * Adds Tag to a Task in TaskList.","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"getsquared"},"content":"     * @param index Integer index of task to add tag to.","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"getsquared"},"content":"     * @param label String label of tag to add to task.","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"getsquared"},"content":"     * @return Task with new tag added.","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if task already has tag with same label.","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"getsquared"},"content":"    public Task addTaskTag(int index, String label) throws ToothlessException {","lastModifiedDate":"2024-02-14"},{"lineNumber":117,"author":{"gitId":"getsquared"},"content":"        assert index \u003c\u003d tasks.size() : \"index should be less than or equal to size of tasks\";","lastModifiedDate":"2024-02-14"},{"lineNumber":118,"author":{"gitId":"getsquared"},"content":"        assert label !\u003d null : \"label should not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"getsquared"},"content":"        assert !label.isBlank() : \"label should not be an empty string\";","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"getsquared"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2024-02-14"},{"lineNumber":121,"author":{"gitId":"getsquared"},"content":"        task.addTag(label);","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"getsquared"},"content":"        return task;","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":124,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":125,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":126,"author":{"gitId":"getsquared"},"content":"     * Deletes Tag from a Task in TaskList.","lastModifiedDate":"2024-02-14"},{"lineNumber":127,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":128,"author":{"gitId":"getsquared"},"content":"     * @param index Integer index of task to delete tag from.","lastModifiedDate":"2024-02-14"},{"lineNumber":129,"author":{"gitId":"getsquared"},"content":"     * @param label String label of tag to delete from task.","lastModifiedDate":"2024-02-14"},{"lineNumber":130,"author":{"gitId":"getsquared"},"content":"     * @return Task with tag deleted.","lastModifiedDate":"2024-02-14"},{"lineNumber":131,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if task does not have tag with given label.","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":133,"author":{"gitId":"getsquared"},"content":"    public Task untagTask(int index, String label) throws ToothlessException {","lastModifiedDate":"2024-02-14"},{"lineNumber":134,"author":{"gitId":"getsquared"},"content":"        assert index \u003c\u003d tasks.size() : \"index should be less than or equal to size of tasks\";","lastModifiedDate":"2024-02-14"},{"lineNumber":135,"author":{"gitId":"getsquared"},"content":"        assert label !\u003d null : \"label should not be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":136,"author":{"gitId":"getsquared"},"content":"        assert !label.isBlank() : \"label should not be an empty string\";","lastModifiedDate":"2024-02-14"},{"lineNumber":137,"author":{"gitId":"getsquared"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2024-02-14"},{"lineNumber":138,"author":{"gitId":"getsquared"},"content":"        task.unTag(label);","lastModifiedDate":"2024-02-14"},{"lineNumber":139,"author":{"gitId":"getsquared"},"content":"        return task;","lastModifiedDate":"2024-02-14"},{"lineNumber":140,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":141,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":142,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"getsquared"},"content":"     * Adds ToDo task to list.","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":145,"author":{"gitId":"getsquared"},"content":"     * @param taskDescription String to describe the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"getsquared"},"content":"     * @return New ToDo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"getsquared"},"content":"    public Task addToDoToList(String taskDescription) {","lastModifiedDate":"2024-02-04"},{"lineNumber":149,"author":{"gitId":"getsquared"},"content":"        assert taskDescription !\u003d null : \"taskDescription should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":150,"author":{"gitId":"getsquared"},"content":"        assert !taskDescription.isBlank() : \"taskDescription should not be an empty string\";","lastModifiedDate":"2024-02-13"},{"lineNumber":151,"author":{"gitId":"getsquared"},"content":"        Task newTask \u003d new ToDo(taskDescription);","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"getsquared"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"getsquared"},"content":"        return newTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"getsquared"},"content":"     * Adds Deadline task to list.","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":159,"author":{"gitId":"getsquared"},"content":"     * @param taskDescription String to describe the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"getsquared"},"content":"     * @param by String for datetime deadline the task is due by.","lastModifiedDate":"2024-02-04"},{"lineNumber":161,"author":{"gitId":"getsquared"},"content":"     * @return New Deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":162,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if datetime fails to parse.","lastModifiedDate":"2024-02-04"},{"lineNumber":163,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":164,"author":{"gitId":"getsquared"},"content":"    public Task addDeadlineToList(String taskDescription, String by) throws ToothlessException {","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"getsquared"},"content":"        assert taskDescription !\u003d null : \"taskDescription should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":166,"author":{"gitId":"getsquared"},"content":"        assert !taskDescription.isBlank() : \"taskDescription should not be an empty string\";","lastModifiedDate":"2024-02-13"},{"lineNumber":167,"author":{"gitId":"getsquared"},"content":"        assert by !\u003d null : \"by should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":168,"author":{"gitId":"getsquared"},"content":"        assert !by.isBlank() : \"by should not be an empty string\";","lastModifiedDate":"2024-02-13"},{"lineNumber":169,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"getsquared"},"content":"            LocalDateTime deadlineBy \u003d LocalDateTime.parse(by, DATETIME_PARSE_FORMATTER);","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"getsquared"},"content":"            Task newTask \u003d new Deadline(taskDescription, deadlineBy);","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"getsquared"},"content":"            tasks.add(newTask);","lastModifiedDate":"2024-02-04"},{"lineNumber":173,"author":{"gitId":"getsquared"},"content":"            return newTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":174,"author":{"gitId":"getsquared"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Sorry, /by field datetime should be in the following format: \"","lastModifiedDate":"2024-02-18"},{"lineNumber":176,"author":{"gitId":"getsquared"},"content":"                    + \"yyyy-mm-dd hh:mm\");","lastModifiedDate":"2024-02-13"},{"lineNumber":177,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":181,"author":{"gitId":"getsquared"},"content":"     * Adds Event task to list.","lastModifiedDate":"2024-02-04"},{"lineNumber":182,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":183,"author":{"gitId":"getsquared"},"content":"     * @param taskDescription String to describe the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":184,"author":{"gitId":"getsquared"},"content":"     * @param from String for datetime start of event.","lastModifiedDate":"2024-02-04"},{"lineNumber":185,"author":{"gitId":"getsquared"},"content":"     * @param to String for datetime end of event.","lastModifiedDate":"2024-02-04"},{"lineNumber":186,"author":{"gitId":"getsquared"},"content":"     * @return New Event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":187,"author":{"gitId":"getsquared"},"content":"     * @throws ToothlessException if datetime fails to parse.","lastModifiedDate":"2024-02-04"},{"lineNumber":188,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":189,"author":{"gitId":"getsquared"},"content":"    public Task addEventToList(String taskDescription, String from, String to) throws ToothlessException {","lastModifiedDate":"2024-02-04"},{"lineNumber":190,"author":{"gitId":"getsquared"},"content":"        assert taskDescription !\u003d null : \"taskDescription should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":191,"author":{"gitId":"getsquared"},"content":"        assert !taskDescription.isBlank() : \"taskDescription should not be an empty string\";","lastModifiedDate":"2024-02-13"},{"lineNumber":192,"author":{"gitId":"getsquared"},"content":"        assert from !\u003d null : \"from should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":193,"author":{"gitId":"getsquared"},"content":"        assert !from.isBlank() : \"from should not be an empty string\";","lastModifiedDate":"2024-02-13"},{"lineNumber":194,"author":{"gitId":"getsquared"},"content":"        assert to !\u003d null : \"to should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":195,"author":{"gitId":"getsquared"},"content":"        assert !to.isBlank() : \"to should not be an empty string\";","lastModifiedDate":"2024-02-13"},{"lineNumber":196,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"getsquared"},"content":"            LocalDateTime eventFrom \u003d LocalDateTime.parse(from, DATETIME_PARSE_FORMATTER);","lastModifiedDate":"2024-02-02"},{"lineNumber":198,"author":{"gitId":"getsquared"},"content":"            LocalDateTime eventTo \u003d LocalDateTime.parse(to, DATETIME_PARSE_FORMATTER);","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"getsquared"},"content":"            Task newTask \u003d new Event(taskDescription, eventFrom, eventTo);","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"getsquared"},"content":"            tasks.add(newTask);","lastModifiedDate":"2024-02-04"},{"lineNumber":201,"author":{"gitId":"getsquared"},"content":"            return newTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"getsquared"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"getsquared"},"content":"            throw new ToothlessException(\"Sorry, /from and /to field datetime should be in the following format: \"","lastModifiedDate":"2024-02-18"},{"lineNumber":204,"author":{"gitId":"getsquared"},"content":"                    + \"yyyy-mm-dd hh:mm\");","lastModifiedDate":"2024-02-13"},{"lineNumber":205,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":206,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":207,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":208,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"getsquared":208}},{"path":"src/main/java/toothless/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":" * A simple task with only a description.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"     * A public constructor to initialize a new ToDo.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"     * @param description A String to describe the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"     * A public constructor to initialize a ToDo with an isDone value.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"     * @param description A String to describe the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"     * @param isDone A Boolean to describe if the task is done.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"    public ToDo(String description, boolean isDone, ArrayList\u003cTag\u003e tags) {","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"        super(description, isDone, tags);","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"        return \"T | \" + super.toStorageString();","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"        return \"[T]\" + super.toString() + \"\\n\\t\" + this.getTagsString();","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"getsquared":37}},{"path":"src/main/java/toothless/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"import toothless.Toothless;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"    private Toothless toothless;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"    private Image toothlessImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaToothless.jpg\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"     * Initializes the MainWindow.","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"        dialogContainer.getChildren().add(ToothlessDialogBox.getDialog(","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"                \" /\\\\_/\\\\\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"                        + \"( o.o )\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"                        + \"\u003e ^ \u003c\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"                        + \"Nya-ice to meet you! I\u0027m Toothless :D\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"                        + \"What can I do for you?\", toothlessImage)","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"        );","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"     * Sets Toothless object.","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"     * @param t Toothless object.","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"    public void setToothless(Toothless t) {","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"        toothless \u003d t;","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"        String initializeErrorMessage \u003d toothless.initialize();","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"        if (!initializeErrorMessage.isBlank()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"                    ToothlessDialogBox.getDialog(initializeErrorMessage, toothlessImage)","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"            );","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Toothless\u0027s reply","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"        String response \u003d toothless.getResponse(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"                UserDialogBox.getDialog(input, userImage),","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"                ToothlessDialogBox.getDialog(response, toothlessImage)","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"getsquared"},"content":"        );","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"getsquared"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"getsquared":74}},{"path":"src/main/java/toothless/ui/ToothlessDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.ui;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":" * This control represents a dialog box consisting of an ImageView to represent Toothless\u0027 face and a text","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":" * containing text from Toothless.","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"public class ToothlessDialogBox extends HBox {","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"    private ToothlessDialogBox(String text, Image img) {","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/ToothlessDialogBox.fxml\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"    public static ToothlessDialogBox getDialog(String text, Image img) {","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"        return new ToothlessDialogBox(text, img);","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"getsquared":39}},{"path":"src/main/java/toothless/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import toothless.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":" * Class for dealing with interactions with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"public class Ui {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"     * Returns new task message.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"     * @param newTask New Task to be printed.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"     * @param taskListSize Size of tasklist.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"     * @return String message of new task.","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"    public String getNewTaskMessage(Task newTask, int taskListSize) {","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\\t%s\\nNya-ow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"                newTask, taskListSize);","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"     * Returns deleted task message.","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"     * @param deletedTask Deleted Task to be printed.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"     * @param taskListSize Size of tasklist.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"     * @return String message of deleted task.","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"    public String getDeletedTaskMessage(Task deletedTask, int taskListSize) {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"        return String.format(\"Noted. I\u0027ve remeowved this task:\\n\\t%s\\nNya-ow you have %d tasks in the list.\",","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"                deletedTask, taskListSize);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"     * Returns marked task message.","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"     * @param markedTask Marked Task to be printed.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"     * @return String message of marked task.","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"    public String getMarkedTaskMessage(Task markedTask) {","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"        return \"Ameowzing! I\u0027ve marked this task as done:\\n\\t\" + markedTask;","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"     * Returns unmarked task message.","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"     * @param unmarkedTask Unmarked Task to be printed.","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"     * @return String message of unmarked task.","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"    public String getUnmarkedTaskMessage(Task unmarkedTask) {","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\\t\" + unmarkedTask;","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"     * Returns tagged task message.","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"     * @param taggedTask Tagged Task to be printed.","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"     * @return String message of Tagged task.","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"    public String getTaggedTaskMessage(Task taggedTask) {","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"        return \"Ameowzing! I\u0027ve tagged this task:\\n\\t\" + taggedTask;","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"     * Returns untagged task message.","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"     * @param untaggedTask Untagged Task to be printed.","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"     * @return String message of untagged task.","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"getsquared"},"content":"    public String getUntaggedTaskMessage(Task untaggedTask) {","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"getsquared"},"content":"        return \"OK, I\u0027ve removed the tag for this task:\\n\\t\" + untaggedTask;","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"getsquared"},"content":"     * Prints the TaskList in order.","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"getsquared"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"getsquared"},"content":"     * @param taskArrayList The ArrayList of Tasks to be printed.","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"getsquared"},"content":"     * @param noTasksMessage String message when there are no tasks in the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"getsquared"},"content":"     * @param introMessage String message before the list of tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"getsquared"},"content":"     * @return String message of list.","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"getsquared"},"content":"    public String getListMessage(ArrayList\u003cTask\u003e taskArrayList, String noTasksMessage, String introMessage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"getsquared"},"content":"        if (taskArrayList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"getsquared"},"content":"            return noTasksMessage;","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"getsquared"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"getsquared"},"content":"            String listString \u003d introMessage;","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"getsquared"},"content":"            for (int i \u003d 1; i \u003c\u003d taskArrayList.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"getsquared"},"content":"                listString +\u003d i + \". \" + taskArrayList.get(i - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"getsquared"},"content":"                if (i \u003c taskArrayList.size()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"getsquared"},"content":"                    listString +\u003d \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"getsquared"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"getsquared"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"getsquared"},"content":"            return listString;","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"getsquared":97}},{"path":"src/main/java/toothless/ui/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.ui;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":" * This control represents a dialog box consisting of an ImageView to represent the user\u0027s profile picture and a text","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":" * containing text from the user.","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"public class UserDialogBox extends HBox {","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"    private UserDialogBox(String text, Image img) {","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserDialogBox.fxml\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"    public static UserDialogBox getDialog(String text, Image img) {","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"        return new UserDialogBox(text, img);","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"getsquared":39}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"toothless.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"getsquared":19}},{"path":"src/main/resources/view/ToothlessDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"\u003cfx:root alignment\u003d\"TOP_LEFT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"            \u003cclip\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"                \u003cCircle radius\u003d\"30.0\" centerX\u003d\"30.0\" centerY\u003d\"30.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"        \u003cRegion\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"                \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"        \u003c/Region\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003c!-- @@author getsquared-reused","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Reused from https://github.com/ziqing26/ip/blob/master/src/main/java/catobot/BotDialogBox.java","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            with minor modifications","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #B600BC; -fx-text-fill: #FFFFFF;","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        -fx-label-padding: 8; -fx-border-radius: 10; -fx-background-radius: 10;\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c!-- @@author --\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"getsquared":25,"-":7}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        \u003c!-- @@author getsquared-reused","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            Reused from https://github.com/ziqing26/ip/blob/master/src/main/java/catobot/BotDialogBox.java","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            with minor modifications","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #4700B2; -fx-text-fill: #FFFFFF;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        -fx-label-padding: 10; -fx-border-radius: 10; -fx-background-radius: 5;\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003c!-- @@author --\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"        \u003cRegion\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"                \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"        \u003c/Region\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"            \u003cclip\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"                \u003cCircle radius\u003d\"30.0\" centerX\u003d\"30.0\" centerY\u003d\"30.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"getsquared":25,"-":7}},{"path":"src/test/java/toothless/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"import toothless.task.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"import toothless.ui.Ui;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"    public void validateEventInput_normalInput_success() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\\t\"","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"                        + \"[E][ ] dinner (from: Feb 2 2024, 18:00 to: Feb 2 2024, 20:30)\\n\\tTags: NIL\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"                        + \"Nya-ow you have 1 tasks in the list.\",","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"                new Parser().parseEventInput(tasks, ui, \"event dinner /from 2024-02-02 18:00 /to 2024-02-02 20:30\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    public void validateEventInput_emptyInput_exceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"\", new Parser().parseEventInput(tasks, ui, \"event\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"Sorry, purr-lease use the format: \"","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"                    + \"event \u003cdescription\u003e /from \u003cyyyy-mm-dd hh:mm\u003e /to \u003cyyyy-mm-dd hh:mm\u003e\", e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"    public void validateEventInput_emptyDescription_exceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"\",","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"                    new Parser().parseEventInput(tasks, ui, \"event    /from 2024-02-02 18:00 /to 2024-02-02 20:30\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"Apurrlogies, the task description cannot be empty.\", e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"    public void validateEventInput_emptyFrom_exceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"\",","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"                    new Parser().parseEventInput(tasks, ui, \"event dinner /from    /to 2024-02-02 20:30\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"Sorry, purr-lease use the format: \"","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"                    + \"event \u003cdescription\u003e /from \u003cyyyy-mm-dd hh:mm\u003e /to \u003cyyyy-mm-dd hh:mm\u003e\", e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"    public void validateEventInput_emptyTo_exceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"getsquared"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"\",","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"                    new Parser().parseEventInput(tasks, ui, \"event dinner /from 2024-02-02 18:00 /to    \"));","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"Sorry, purr-lease use the format: \"","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"getsquared"},"content":"                    + \"event \u003cdescription\u003e /from \u003cyyyy-mm-dd hh:mm\u003e /to \u003cyyyy-mm-dd hh:mm\u003e\", e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"getsquared"},"content":"    public void validateEventInput_doubleFrom_exceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"getsquared"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"getsquared"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"\",","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"getsquared"},"content":"                    new Parser().parseEventInput(tasks, ui,","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"getsquared"},"content":"                            \"event dinner /from 2024-02-02 18:00 /from 2024-02-02 20:30\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"getsquared"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"getsquared"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"Sorry, purr-lease use the format: \"","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"getsquared"},"content":"                    + \"event \u003cdescription\u003e /from \u003cyyyy-mm-dd hh:mm\u003e /to \u003cyyyy-mm-dd hh:mm\u003e\", e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"getsquared"},"content":"    public void validateEventInput_extraFields_exceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"getsquared"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"getsquared"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"\",","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"getsquared"},"content":"                    new Parser().parseEventInput(tasks, ui, \"event dinner /from 2024-02-02 18:00\"","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"getsquared"},"content":"                            + \" /from 2024-02-02 20:30 /to 2024-02-02 20:30\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"getsquared"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"getsquared"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"Sorry, purr-lease use the format: \"","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"getsquared"},"content":"                    + \"event \u003cdescription\u003e /from \u003cyyyy-mm-dd hh:mm\u003e /to \u003cyyyy-mm-dd hh:mm\u003e\", e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"getsquared"},"content":"    public void validateEventInput_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"getsquared"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":109,"author":{"gitId":"getsquared"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"\",","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"getsquared"},"content":"                    new Parser().parseEventInput(tasks, ui, \"event dinner /from 2024-13-02 25:00\"","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"getsquared"},"content":"                            + \" /to 2024-02-90 30:30\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"getsquared"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"getsquared"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"Sorry, /from and /to field datetime should be in the following format: \"","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"getsquared"},"content":"                    + \"yyyy-mm-dd hh:mm\", e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"getsquared":120}},{"path":"src/test/java/toothless/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package toothless.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"    public void addEventToList_normalInput_success() throws Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"        tasks.addEventToList(\"event\", \"2024-02-02 18:30\", \"2024-02-02 22:00\");","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"        assertEquals(\"[E][ ] event (from: Feb 2 2024, 18:30 to: Feb 2 2024, 22:00)\\n\\tTags: NIL\",","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"                tasks.getTasks().get(0).toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"    public void addEventToList_wrongDateTime_exceptionThrown() {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"            tasks.addEventToList(\"event\", \"2024-13-02 25:30\", \"10pm\");","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"            assertEquals(\"Sorry, /from and /to field datetime should be in the following format: \"","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"                    + \"yyyy-mm-dd hh:mm\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"getsquared":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"aaa","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"todo ","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"todo read book","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"deadline return book /by","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"deadline return book /by 2024-02-02 20:24","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"event dinner /from 5pm /to 7pm","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"event dinner /from 2024-02-02 18:00 /to 2024-02-02 20:30 ","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"event party /to 2024-02-02 23:59 /from 2024-02-02 21:00","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"mark 5","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"unmark ","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"delete 4","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"find book","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"getsquared":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\toothless\\*.java","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"java -classpath ..\\bin toothless.Toothless \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"getsquared":2,"-":19}}]
