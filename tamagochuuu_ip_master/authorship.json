[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"    mainClass.set(\"Mitsuki.Mitsuki\")","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"    //mainClassName \u003d \u0027Mitsuki.Mitsuki\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"tamagochuuu"},"content":"    //archiveFileName \u003d \u0027Mitsuki.jar\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"    archiveBaseName \u003d \"Mitsuki\"","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"tamagochuuu":4}},{"path":"list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"[D][X] fbffhiuy (by Dec 12 1212)","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"[D][ ] a (by Dec 20 2024)","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"[D][ ] borr (by Nov 12 1111)","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tamagochuuu":3}},{"path":"src/main/java/Mitsuki/AlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":" * Contains information on the AlreadyDoneException class.","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"public class AlreadyDoneException extends MitsukiException {","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for an AlreadyDoneException object.","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     * @param message Handled by the super constructor.","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"    public AlreadyDoneException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"            super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"     * Checks if the task was done. If task was done, throws exception.","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     * @param task the task to be checked","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     * @throws AlreadyDoneException the exception that will be thrown if task was already done.","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"    public static void validate(Task task) throws AlreadyDoneException {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"        if (task.isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"            throw new AlreadyDoneException(\"Task Already Marked As Done\");","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":29}},{"path":"src/main/java/Mitsuki/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"import java.sql.ClientInfoStatus;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":" * Contains information for the creation of Deadline objects.","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"     * The deadline of the Deadline object to be created.","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     * A constructor for a Deadline object.","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     * Used when \u0027deadline\u0027 is given as a String.","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"     * @param description The description of the Deadline object to be created.","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"     *                    Handled by the super constructor in the Task class.","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"     * @param deadline The deadline of the Deadline object, when given as a String object.","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"        super(description);","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"            this.deadline \u003d LocalDate.parse(deadline, DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(ex);","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"     * A constructor for a Deadline object.","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"tamagochuuu"},"content":"     * used when \u0027deadline\u0027 is given as a LocalDate.","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"tamagochuuu"},"content":"     * @param description The description of the Deadline object to be created.","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"tamagochuuu"},"content":"     *                    Handled by the super constructor in the Task class.","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"tamagochuuu"},"content":"     * @param deadline The deadline of the Deadline object, when given as a LocalDate object.","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"tamagochuuu"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"tamagochuuu"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"tamagochuuu"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"tamagochuuu"},"content":"     * Converts the Deadline object into a human-readable String to be displayed to the user.","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"tamagochuuu"},"content":"     * @return String object that represents the Deadline object.","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"tamagochuuu"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"tamagochuuu"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"tamagochuuu"},"content":"        return \"[D]\" + super.toString() + \" (by \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":58}},{"path":"src/main/java/Mitsuki/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * Contains information on the EmptyTaskException class.","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"public class EmptyTaskException extends MitsukiException {","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for an EmptyTaskException object.","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"     * @param message Handled by the super constructor.","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"    public EmptyTaskException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     * Checks if a todo task\u0027s description is empty. Throws exception if it is.","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     * @param description the task\u0027s description.","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"     * @throws EmptyTaskException the exception that will be thrown if no task description is given.","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"    public static void validate(String description) throws EmptyTaskException {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"            throw new EmptyTaskException(\"Empty Task Given\");","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"     * Checks if a deadline or event task\u0027s description is empty. Throws exception if it is.","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"tamagochuuu"},"content":"     * @param tokens The array of strings containing the components of the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"tamagochuuu"},"content":"     * @throws EmptyTaskException the exception that will be thrown if no task description is given.","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"tamagochuuu"},"content":"    public static void timedValidate(String[] tokens) throws EmptyTaskException {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"        if (tokens[0].isBlank()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"tamagochuuu"},"content":"            throw new EmptyTaskException(\"Empty Task Given\");","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":41}},{"path":"src/main/java/Mitsuki/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * Contains information for the creation of Event objects.","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     * The time when the event starts.","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"    protected String startTime;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"     * The time when the event ends.","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"    protected String endTime;","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for an Event object.","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"     * @param description The description of the Event object to be created.","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"     *                    Handled by the super constructor in the Task class.","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"     * @param startTime The time when the event starts.","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"     * @param endTime The time when the event ends.","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"tamagochuuu"},"content":"     * Converts the Event object into a human-readable String to be displayed to the user.","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"tamagochuuu"},"content":"     * @return String object that represents the Event object.","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"tamagochuuu"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"tamagochuuu"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"tamagochuuu"},"content":"        return \"[E]\" + super.toString() + \" (\" + startTime + endTime + \")\";","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":42}},{"path":"src/main/java/Mitsuki/MissingDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * Contains information on the MissingDeadlineException class.","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"public class MissingDeadlineException extends MitsukiException {","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for a MissingDeadlineException object.","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"     * @param message Handled by the super constructor.","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"    public MissingDeadlineException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     * Checks if a deadline task\u0027s deadline is given. Throws exception if it is not.","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     * @param tokens The array of strings containing the components of the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"     * @throws MissingDeadlineException the exception that will be thrown if no deadline is given.","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"    public static void validate(String[] tokens) throws MissingDeadlineException {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"            throw new MissingDeadlineException(\"No Deadline Given\");","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":29}},{"path":"src/main/java/Mitsuki/MissingEventTimingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * Contains information on the MissingEventTimingException class.","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"public class MissingEventTimingException extends MitsukiException {","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for a MissingEventTimingException object.","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"     * @param message Handled by the super constructor.","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"    public MissingEventTimingException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     * Checks if an event task\u0027s start and end timings are given. Throws exception either one is not.","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     * @param tokens The array of strings containing the components of the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"     * @throws MissingEventTimingException the exception that will be thrown if","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"     *          either event start or end timing is not given.","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"    public static void validate(String[] tokens) throws MissingEventTimingException {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"        if (tokens.length !\u003d 3) {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"            throw new MissingEventTimingException(\"No Event Timing Given\");","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":30}},{"path":"src/main/java/Mitsuki/Mitsuki.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"import java.io.File;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":" * The main class of Mitsuki the Chat bot.","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"public class Mitsuki {","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"     * The user\u0027s todo list.","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"    protected static TaskList toDoList;","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"    private final Parser parser;","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"     * A constructor for a Mitsuki object","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"     * @param filePath the file where the saved list can be found, if it exists.","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"    public Mitsuki(String filePath) {","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"            toDoList \u003d new TaskList(Storage.load());","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"tamagochuuu"},"content":"            ui.loadList();","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"tamagochuuu"},"content":"        } catch(FileNotFoundException ex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"tamagochuuu"},"content":"            ui.loadError();","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"tamagochuuu"},"content":"            File saveFile \u003d new File(\"list.txt\");","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"            try {","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"tamagochuuu"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"tamagochuuu"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"tamagochuuu"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"tamagochuuu"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"tamagochuuu"},"content":"     * Runs the Mitsuki chatbot and takes in user commands.","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"tamagochuuu"},"content":"    public void run() {","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"tamagochuuu"},"content":"        // Greeting the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"tamagochuuu"},"content":"        ui.greet();","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"tamagochuuu"},"content":"        // Initiating the \u0027command\u0027 variable.","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"tamagochuuu"},"content":"        String command \u003d \"nil\";","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"tamagochuuu"},"content":"        parser.parse(command);","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"tamagochuuu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"tamagochuuu"},"content":"        new Mitsuki(\"list.txt\").run();","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tamagochuuu":64}},{"path":"src/main/java/Mitsuki/MitsukiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" * Contains information on the MitsukiException class.","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"public class MitsukiException extends Exception {","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for a MitsukiException object.","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"     * @param message Handled by the super constructor.","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"    public MitsukiException(String message) {","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"        super(message);","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     * Checks if a command is valid for the Chat Bot.","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"     * @param command The command to be checked.","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"     * @throws MitsukiException The exception that will be thrown if command is invalid.","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"    public static void validate(String command, ArrayList\u003cString\u003e commands) throws MitsukiException {","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"        if (!commands.contains(command)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"            throw new MitsukiException(\"Invalid Command Given\");","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tamagochuuu":31}},{"path":"src/main/java/Mitsuki/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"public class Parser {","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"     * Initiating the scanner for user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"    private final Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     * A list of commands that can be given to Mitsuki.","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"    protected ArrayList\u003cString\u003e commands \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"     * A constructor for a Parser object.","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"     * Adds all currently available commands to the list of commands","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"     * that will be used by the Parser object.","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"    public Parser() {","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"        // Adding the commands to the list of commands Mitsuki can execute.","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"        this.commands.add(\"help\");","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"tamagochuuu"},"content":"        this.commands.add(\"list\");","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"tamagochuuu"},"content":"        this.commands.add(\"todo\");","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"tamagochuuu"},"content":"        this.commands.add(\"deadline\");","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"tamagochuuu"},"content":"        this.commands.add(\"event\");","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"        this.commands.add(\"mark\");","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"tamagochuuu"},"content":"        this.commands.add(\"unmark\");","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"tamagochuuu"},"content":"        this.commands.add(\"delete\");","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"tamagochuuu"},"content":"        this.commands.add(\"bye\");","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"tamagochuuu"},"content":"        this.commands.add(\"find\");","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"tamagochuuu"},"content":"     * Processes user input and calls the relevant method based","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"tamagochuuu"},"content":"     * on what user comand is.","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"tamagochuuu"},"content":"     * @param command the command to be executed.","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"tamagochuuu"},"content":"    public void parse(String command) {","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"tamagochuuu"},"content":"        // The loop that takes in user input and determines what to do.","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"tamagochuuu"},"content":"        while (command !\u003d null) {","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"tamagochuuu"},"content":"            // Taking in next user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"tamagochuuu"},"content":"            command \u003d scan.next();","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"tamagochuuu"},"content":"            // Making sure user is giving a valid command.","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"tamagochuuu"},"content":"            try {","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"tamagochuuu"},"content":"                MitsukiException.validate(command, commands);","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"tamagochuuu"},"content":"            } catch (MitsukiException ex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"tamagochuuu"},"content":"                ui.invalidCommandMessage();","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"tamagochuuu"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"tamagochuuu"},"content":"            // Calling the method based on what the user input is.","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"tamagochuuu"},"content":"            switch (command) {","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"tamagochuuu"},"content":"            case \"help\":","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"tamagochuuu"},"content":"                ui.printHelpList(commands);","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"tamagochuuu"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"tamagochuuu"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"tamagochuuu"},"content":"                TaskList.deadline(scan);","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"tamagochuuu"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"tamagochuuu"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"tamagochuuu"},"content":"                TaskList.todo(scan);","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"tamagochuuu"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"tamagochuuu"},"content":"            case \"event\":","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"tamagochuuu"},"content":"                TaskList.event(scan);","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"tamagochuuu"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"tamagochuuu"},"content":"            case \"list\":","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"tamagochuuu"},"content":"                TaskList.list();","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"tamagochuuu"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"tamagochuuu"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"tamagochuuu"},"content":"                TaskList.mark(scan);","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"tamagochuuu"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"tamagochuuu"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"tamagochuuu"},"content":"                TaskList.unmark(scan);","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"tamagochuuu"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"tamagochuuu"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"tamagochuuu"},"content":"                TaskList.delete(scan);","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"tamagochuuu"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"tamagochuuu"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"tamagochuuu"},"content":"                try {","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"tamagochuuu"},"content":"                    Storage.save(\"list.txt\");","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"tamagochuuu"},"content":"                } catch (IOException ex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"tamagochuuu"},"content":"                    ui.printErrorMessage(ex);","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"tamagochuuu"},"content":"                }","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"tamagochuuu"},"content":"                ui.printByeMessage(scan);","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"tamagochuuu"},"content":"            case \"find\":","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"tamagochuuu"},"content":"                TaskList.find(scan);","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"tamagochuuu"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"tamagochuuu"},"content":"            default:","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"tamagochuuu"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"tamagochuuu"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tamagochuuu":114}},{"path":"src/main/java/Mitsuki/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"import java.io.File;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"public class Storage {","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"    private static String filePath;","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"     * Retrieves the saved list file from the hard disk.","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"     * @return an array list of tasks that the user previously added.","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"     * @throws FileNotFoundException if file does not exist yet.","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"    public static ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"        File list \u003d new File(filePath);","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"tamagochuuu"},"content":"        Scanner scanner \u003d new Scanner(list);","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"tamagochuuu"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"tamagochuuu"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"            String fullString \u003d scanner.nextLine();","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"tamagochuuu"},"content":"            if (fullString.contains(\"[T]\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"tamagochuuu"},"content":"                String description \u003d fullString.substring(7);","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"tamagochuuu"},"content":"                Task nextTask \u003d new Todo(description);","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"tamagochuuu"},"content":"                if (fullString.contains(\"[X]\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"tamagochuuu"},"content":"                    nextTask.markAsDone();","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"tamagochuuu"},"content":"                }","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"tamagochuuu"},"content":"                taskList.add(nextTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"tamagochuuu"},"content":"            } else if (fullString.contains(\"[D]\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"tamagochuuu"},"content":"                int descriptionEnd \u003d fullString.indexOf(\u0027(\u0027);","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"tamagochuuu"},"content":"                int deadlineEnd \u003d fullString.indexOf(\u0027)\u0027);","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"tamagochuuu"},"content":"                String description \u003d fullString.substring(7, descriptionEnd - 1);","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"tamagochuuu"},"content":"                String deadline \u003d fullString.substring(descriptionEnd + 4, deadlineEnd);","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"tamagochuuu"},"content":"                LocalDate processedDeadline \u003d LocalDate.parse(deadline, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"tamagochuuu"},"content":"                Task nextTask \u003d new Deadline(description, processedDeadline);","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"tamagochuuu"},"content":"                if (fullString.contains(\"[X]\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"tamagochuuu"},"content":"                    nextTask.markAsDone();","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"tamagochuuu"},"content":"                }","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"tamagochuuu"},"content":"                taskList.add(nextTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"tamagochuuu"},"content":"            } else if (fullString.contains(\"[E]\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"tamagochuuu"},"content":"                int descriptionEnd \u003d fullString.indexOf(\u0027(\u0027);","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"tamagochuuu"},"content":"                int startTimeEnd \u003d fullString.indexOf(\"to\");","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"tamagochuuu"},"content":"                int endTimeEnd \u003d fullString.indexOf(\u0027)\u0027);","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"tamagochuuu"},"content":"                String description \u003d fullString.substring(7, descriptionEnd - 2);","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"tamagochuuu"},"content":"                String startTime \u003d fullString.substring(descriptionEnd + 1, startTimeEnd - 1);","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"tamagochuuu"},"content":"                String endTime \u003d fullString.substring(startTimeEnd - 1, endTimeEnd);","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"tamagochuuu"},"content":"                Task nextTask \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"tamagochuuu"},"content":"                if (fullString.contains(\"[X]\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"tamagochuuu"},"content":"                    nextTask.markAsDone();","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"tamagochuuu"},"content":"                }","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"tamagochuuu"},"content":"                taskList.add(nextTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"tamagochuuu"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"tamagochuuu"},"content":"        return taskList;","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"tamagochuuu"},"content":"     * Saves the user\u0027s list as a text file in the hard disk.","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"tamagochuuu"},"content":"     * @param fileName the file name of the file to be saved.","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"tamagochuuu"},"content":"     * @throws IOException if file cannot be created.","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"tamagochuuu"},"content":"    public static void save(String fileName) throws IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"tamagochuuu"},"content":"        File list \u003d new File(fileName);","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"tamagochuuu"},"content":"        FileWriter saver \u003d new FileWriter(list);","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"tamagochuuu"},"content":"        for (int i \u003d 0; i \u003c Mitsuki.toDoList.size(); i++) {","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"tamagochuuu"},"content":"            saver.write(Mitsuki.toDoList.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"I have saved your list for your future reference. :D\");","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"tamagochuuu"},"content":"        saver.close();","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tamagochuuu":101}},{"path":"src/main/java/Mitsuki/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * Contains information for the creation of Task objects.","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     * The description of the Task object to be created.","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"     * The completion status of the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"     * When set to true, the task is completed.","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"     * When set to false, the task is incomplete.","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"     * All task objects are incomplete when created.","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for a Task object.","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"     * @param description The description for the Task object to be created.","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"tamagochuuu"},"content":"     * Returns an icon \u0027X\u0027 if task is incomplete.","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"tamagochuuu"},"content":"     * Returns an icon \u0027 \u0027 if task is complete.","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"tamagochuuu"},"content":"     * @return String","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"tamagochuuu"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"tamagochuuu"},"content":"     * Marks a task as complete by setting \u0027isDone\u0027 to true.","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"tamagochuuu"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"tamagochuuu"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"tamagochuuu"},"content":"     * Marks a task as incomplete by setting \u0027isDone\u0027 to false.","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"tamagochuuu"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"tamagochuuu"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"tamagochuuu"},"content":"     * Converts the Task object into a human-readable String to be displayed to the user.","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"tamagochuuu"},"content":"     * @return String object that represents the Task object.","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"tamagochuuu"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"tamagochuuu"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"tamagochuuu"},"content":"        String status \u003d this.getStatusIcon();","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"tamagochuuu"},"content":"        return \"[\"+ status + \"] \" + description;","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"tamagochuuu":64}},{"path":"src/main/java/Mitsuki/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":" * Contains the task list, as well as operations to edit the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"public class TaskList {","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"    private static ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"        return list;","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"        TaskList.list \u003d list;","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"        list.add(task);","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"    public int size() {","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"        return list.size();","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"        return list.get(index);","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"tamagochuuu"},"content":"     * Adds a deadline item to the user\u0027s list.","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"tamagochuuu"},"content":"     * Uses \u0027/\u0027 to separate the deadline from the task.","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"     * E.g. \u0027deadline Return book /By Sunday 2pm\u0027 adds the task","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"tamagochuuu"},"content":"     *      [D][ ] Return book (By Sunday 2pm)","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"tamagochuuu"},"content":"     *      to the user\u0027s list","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"tamagochuuu"},"content":"     * Throws an exception if empty task description or no deadline is given.","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"tamagochuuu"},"content":"     * @param scan the scanner used to scan the details of the deadline to add.","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"tamagochuuu"},"content":"    public static void deadline(Scanner scan) {","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"tamagochuuu"},"content":"        String fullString \u003d scan.nextLine();","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"tamagochuuu"},"content":"        String[] tokens \u003d fullString.split(\"/\");","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"tamagochuuu"},"content":"            EmptyTaskException.timedValidate(tokens);","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"tamagochuuu"},"content":"        } catch(EmptyTaskException ex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"Please give a description for your deadline item. Try again!\");","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"tamagochuuu"},"content":"            return;","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"tamagochuuu"},"content":"        int endOfDesc \u003d fullString.indexOf(\"/by\");","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"tamagochuuu"},"content":"        String description \u003d fullString.substring(1, endOfDesc - 1);","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"tamagochuuu"},"content":"        String deadline \u003d fullString.substring(endOfDesc + 4);","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"tamagochuuu"},"content":"        String[] parts \u003d {description, deadline};","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"tamagochuuu"},"content":"            MissingDeadlineException.validate(parts);","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"tamagochuuu"},"content":"        } catch (MissingDeadlineException ex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"Please give a deadline for your deadline item. Try again! XD\");","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"E.g. Type \u0027deadline return book /by 20/12/2024\u0027 to add the task \u0027return book\u0027 \" +","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"tamagochuuu"},"content":"                    \"\\nwith a deadline of \u002720 Dec 2024\u0027 to your list.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"tamagochuuu"},"content":"            return;","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"tamagochuuu"},"content":"        Task task \u003d new Deadline(description, deadline);","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"tamagochuuu"},"content":"        list.add(task);","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"OK, I have added the task \u0027\" + description + \"\u0027 to your list! :)\");","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Now you have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"tamagochuuu"},"content":"     * Adds a todo item to the user\u0027s list.","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"tamagochuuu"},"content":"     * E.g. \u0027todo Go running\u0027 adds the task","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"tamagochuuu"},"content":"     *      [T][ ] Go running","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"tamagochuuu"},"content":"     *      to the user\u0027s list.","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"tamagochuuu"},"content":"     * Throws an exception if empty task description is given.","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"tamagochuuu"},"content":"     * @param scan the scanner used to scan the details of the todo to add.","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"tamagochuuu"},"content":"    public static void todo(Scanner scan) {","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"tamagochuuu"},"content":"        String description1 \u003d scan.nextLine();","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"tamagochuuu"},"content":"            EmptyTaskException.validate(description1);","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"tamagochuuu"},"content":"        } catch(EmptyTaskException ex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"Please give a description for your todo item. Try again!\");","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"tamagochuuu"},"content":"            return;","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"tamagochuuu"},"content":"        String trimmed1 \u003d description1.trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"tamagochuuu"},"content":"        Task task1 \u003d new Todo(trimmed1);","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"tamagochuuu"},"content":"        list.add(task1);","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"OK, I have added the task \u0027\" + trimmed1 + \"\u0027 to your list! :)\");","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Now you have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"tamagochuuu"},"content":"     * Adds an event item to the user\u0027s list.","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"tamagochuuu"},"content":"     * Uses \u0027/\u0027 to take in the timing of the event.","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"tamagochuuu"},"content":"     * E.g. \u0027event Party /From Friday 8pm /to 11pm\u0027 adds the task","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"tamagochuuu"},"content":"     *      [E][ ] Party (From Friday 8pm to 11pm)","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"tamagochuuu"},"content":"     *      to the user\u0027s list.","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"tamagochuuu"},"content":"     * Throws an exception if no task description, or no event start or end timing is given.","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"tamagochuuu"},"content":"     * @param scan the scanner used to scan the details of the event to add.","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"tamagochuuu"},"content":"    public static void event(Scanner scan) {","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"tamagochuuu"},"content":"        String fullString1 \u003d scan.nextLine();","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"tamagochuuu"},"content":"        String[] tokens1 \u003d fullString1.split(\"/\");","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"tamagochuuu"},"content":"            EmptyTaskException.timedValidate(tokens1);","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"tamagochuuu"},"content":"            MissingEventTimingException.validate(tokens1);","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"tamagochuuu"},"content":"        } catch(EmptyTaskException ex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"Please give a description for your event item. Try again!\");","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"tamagochuuu"},"content":"            return;","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"tamagochuuu"},"content":"        } catch(MissingEventTimingException ex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"Please give a time period for your event item. Try again! XD\");","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"E.g. Type \u0027event meeting /From Monday 10am /to 12pm\u0027 to add the task \u0027meeting\u0027 \\n\" +","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"tamagochuuu"},"content":"                    \"with a time period \u0027From Monday 10am to 12pm\u0027 to your list.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"tamagochuuu"},"content":"            return;","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"tamagochuuu"},"content":"        String description2 \u003d tokens1[0];","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"tamagochuuu"},"content":"        String trimmed2 \u003d description2.trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"tamagochuuu"},"content":"        String from \u003d tokens1[1];","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"tamagochuuu"},"content":"        String to \u003d tokens1[2];","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"tamagochuuu"},"content":"        String toTrimmed \u003d to.trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"tamagochuuu"},"content":"        Task task2 \u003d new Event(trimmed2, from, toTrimmed);","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"tamagochuuu"},"content":"        list.add(task2);","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"OK, I have added the task \u0027\" + trimmed2 + \"\u0027 to your list! :)\");","lastModifiedDate":"2024-02-20"},{"lineNumber":134,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Now you have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"tamagochuuu"},"content":"     * Displays the user\u0027s current todo list.","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":140,"author":{"gitId":"tamagochuuu"},"content":"    public static void list() {","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Here are the items in your list:\");","lastModifiedDate":"2024-02-20"},{"lineNumber":142,"author":{"gitId":"tamagochuuu"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"tamagochuuu"},"content":"        int j \u003d 1;","lastModifiedDate":"2024-02-20"},{"lineNumber":144,"author":{"gitId":"tamagochuuu"},"content":"        while (i \u003c list.size()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":145,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(j + \". \" + list.get(i).toString());","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"tamagochuuu"},"content":"            i++;","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"tamagochuuu"},"content":"            j++;","lastModifiedDate":"2024-02-20"},{"lineNumber":148,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":149,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":150,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":151,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":152,"author":{"gitId":"tamagochuuu"},"content":"     * Marks an item on the user\u0027s todo list as done.","lastModifiedDate":"2024-02-20"},{"lineNumber":153,"author":{"gitId":"tamagochuuu"},"content":"     * E.g. \u0027mark 3\u0027 marks the 3rd item on the list as done.","lastModifiedDate":"2024-02-20"},{"lineNumber":154,"author":{"gitId":"tamagochuuu"},"content":"     * Informs user that the task is marked as done, and also displays the task.","lastModifiedDate":"2024-02-20"},{"lineNumber":155,"author":{"gitId":"tamagochuuu"},"content":"     * If task was already marked as done, exception is thrown and user is informed that they","lastModifiedDate":"2024-02-20"},{"lineNumber":156,"author":{"gitId":"tamagochuuu"},"content":"     * had already completed the task.","lastModifiedDate":"2024-02-20"},{"lineNumber":157,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":158,"author":{"gitId":"tamagochuuu"},"content":"     * @param scan the scanner used to scan the index of the task to mark.","lastModifiedDate":"2024-02-20"},{"lineNumber":159,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":160,"author":{"gitId":"tamagochuuu"},"content":"    public static void mark(Scanner scan) {","lastModifiedDate":"2024-02-20"},{"lineNumber":161,"author":{"gitId":"tamagochuuu"},"content":"        int index \u003d scan.nextInt();","lastModifiedDate":"2024-02-20"},{"lineNumber":162,"author":{"gitId":"tamagochuuu"},"content":"        Task theTask \u003d list.get(index - 1);","lastModifiedDate":"2024-02-20"},{"lineNumber":163,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":164,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":165,"author":{"gitId":"tamagochuuu"},"content":"            AlreadyDoneException.validate(theTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":166,"author":{"gitId":"tamagochuuu"},"content":"        } catch(AlreadyDoneException ex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":167,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"You have already completed this task! :D\");","lastModifiedDate":"2024-02-20"},{"lineNumber":168,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(theTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":169,"author":{"gitId":"tamagochuuu"},"content":"            return;","lastModifiedDate":"2024-02-20"},{"lineNumber":170,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":171,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":172,"author":{"gitId":"tamagochuuu"},"content":"        theTask.markAsDone();","lastModifiedDate":"2024-02-20"},{"lineNumber":173,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Ok, I have marked this task as done. :D\\n\" + theTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":174,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":175,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":176,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":177,"author":{"gitId":"tamagochuuu"},"content":"     * Marks an item on the user\u0027s todo list as not done.","lastModifiedDate":"2024-02-20"},{"lineNumber":178,"author":{"gitId":"tamagochuuu"},"content":"     * E.g. \u0027unmark 3\u0027 marks the 3rd item on the list as not done.","lastModifiedDate":"2024-02-20"},{"lineNumber":179,"author":{"gitId":"tamagochuuu"},"content":"     * Informs user that the task is marked as not done, and also displays the task.","lastModifiedDate":"2024-02-20"},{"lineNumber":180,"author":{"gitId":"tamagochuuu"},"content":"     * If task was already marked as not done, exception is thrown and user is informed that they","lastModifiedDate":"2024-02-20"},{"lineNumber":181,"author":{"gitId":"tamagochuuu"},"content":"     * had not yet completed the task.","lastModifiedDate":"2024-02-20"},{"lineNumber":182,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":183,"author":{"gitId":"tamagochuuu"},"content":"     * @param scan the scanner used to scan the index of the task to unmark.","lastModifiedDate":"2024-02-20"},{"lineNumber":184,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":185,"author":{"gitId":"tamagochuuu"},"content":"    public static void unmark(Scanner scan) {","lastModifiedDate":"2024-02-20"},{"lineNumber":186,"author":{"gitId":"tamagochuuu"},"content":"        int index1 \u003d scan.nextInt();","lastModifiedDate":"2024-02-20"},{"lineNumber":187,"author":{"gitId":"tamagochuuu"},"content":"        Task aTask \u003d list.get(index1 - 1);","lastModifiedDate":"2024-02-20"},{"lineNumber":188,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":189,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":190,"author":{"gitId":"tamagochuuu"},"content":"            WasNotDoneException.validate(aTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":191,"author":{"gitId":"tamagochuuu"},"content":"        } catch(WasNotDoneException ex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":192,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"You had not completed this task! :O\");","lastModifiedDate":"2024-02-20"},{"lineNumber":193,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(aTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":194,"author":{"gitId":"tamagochuuu"},"content":"            return;","lastModifiedDate":"2024-02-20"},{"lineNumber":195,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":196,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":197,"author":{"gitId":"tamagochuuu"},"content":"        aTask.markAsNotDone();","lastModifiedDate":"2024-02-20"},{"lineNumber":198,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Ok, I have marked this task as not done yet. :O\\n\" + aTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":199,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":200,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":201,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":202,"author":{"gitId":"tamagochuuu"},"content":"     * Deletes an item from the user\u0027s todo list.","lastModifiedDate":"2024-02-20"},{"lineNumber":203,"author":{"gitId":"tamagochuuu"},"content":"     * E.g. \u0027delete 3\u0027 deletes the 3rd item on the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":204,"author":{"gitId":"tamagochuuu"},"content":"     * Informs user that the task is deleted, and also displays the deleted task.","lastModifiedDate":"2024-02-20"},{"lineNumber":205,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":206,"author":{"gitId":"tamagochuuu"},"content":"     * @param scan the scanner used to scan the index of the task to delete","lastModifiedDate":"2024-02-20"},{"lineNumber":207,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":208,"author":{"gitId":"tamagochuuu"},"content":"    public static void delete(Scanner scan) {","lastModifiedDate":"2024-02-20"},{"lineNumber":209,"author":{"gitId":"tamagochuuu"},"content":"        int index2 \u003d scan.nextInt();","lastModifiedDate":"2024-02-20"},{"lineNumber":210,"author":{"gitId":"tamagochuuu"},"content":"        Task goneTask \u003d list.get(index2 - 1);","lastModifiedDate":"2024-02-20"},{"lineNumber":211,"author":{"gitId":"tamagochuuu"},"content":"        list.remove(goneTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":212,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":213,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Alright, I have removed the following task from your list:\\n\" + goneTask);","lastModifiedDate":"2024-02-20"},{"lineNumber":214,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Now you have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":215,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":216,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":217,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":218,"author":{"gitId":"tamagochuuu"},"content":"     * Finds related items and their index on the user\u0027s current list.","lastModifiedDate":"2024-02-20"},{"lineNumber":219,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":220,"author":{"gitId":"tamagochuuu"},"content":"     * @param scan the scanner used to scan the keyWord.","lastModifiedDate":"2024-02-20"},{"lineNumber":221,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":222,"author":{"gitId":"tamagochuuu"},"content":"    public static void find(Scanner scan) {","lastModifiedDate":"2024-02-20"},{"lineNumber":223,"author":{"gitId":"tamagochuuu"},"content":"        String keyWord \u003d scan.nextLine();","lastModifiedDate":"2024-02-20"},{"lineNumber":224,"author":{"gitId":"tamagochuuu"},"content":"        ui.printFound(keyWord, list);","lastModifiedDate":"2024-02-20"},{"lineNumber":225,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":226,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tamagochuuu":226}},{"path":"src/main/java/Mitsuki/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * Contains information for the creation of Todo objects.","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for a Todo object.","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"     * @param description The description of the todo object to be created.","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"     *                    Handled by the super constructor in the Task class.","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     * Converts the Todo object into a human-readable String to be displayed to the user.","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     * @return String object that represents the Todo object.","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":27}},{"path":"src/main/java/Mitsuki/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"public class Ui {","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"    public Ui() {}","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"     * Prints the greeting message when user opens chatbot.","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"    public void greet() {","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Hello! My name is Mitsuki, nice to meet you!\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"                + \"What can I do for you today?\\n\");","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"     * Prints the user\u0027s previously saved list, if available.","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"    public void loadList() {","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"I have loaded your previously saved list for you. :)\");","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"     * Prints message to tell user that there is no previously saved list, so a new","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"     * list will be used.","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"tamagochuuu"},"content":"    public void loadError() {","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"No saved list found. A new list will be used!\");","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"tamagochuuu"},"content":"     * Prints message to inform user their command is invalid.","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"tamagochuuu"},"content":"    public void invalidCommandMessage() {","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Sorry, I am unable to do that at the current moment.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Please type \u0027help\u0027 for a list of commands you can give me! :)\");","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"tamagochuuu"},"content":"     * Prints error message when an exception is thrown.","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"tamagochuuu"},"content":"     * @param ex the exception thrown.","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"tamagochuuu"},"content":"    public void printErrorMessage(Exception ex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Something went wrong: \" + ex.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"tamagochuuu"},"content":"     * Prints a list of commands that the user can give Mitsuki.","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"tamagochuuu"},"content":"     * @param commands the list of commands","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"tamagochuuu"},"content":"    public void printHelpList(ArrayList\u003cString\u003e commands) {","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"tamagochuuu"},"content":"         //Lists all the commands the user can give Mitsuki.","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"tamagochuuu"},"content":"            System.out.println(\"Here is a list of commands you can give me:\");","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"tamagochuuu"},"content":"            for (int i \u003d 0; i \u003c commands.size(); i++) {","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"tamagochuuu"},"content":"                int j \u003d i + 1;","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"tamagochuuu"},"content":"                System.out.println(j + \". \" + commands.get(i));","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"tamagochuuu"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"tamagochuuu"},"content":"     * Prints the list of tasks related to keyWord in the user\u0027s current taskList.","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"tamagochuuu"},"content":"     * @param keyWord the keyWord that the tasks to be displayed must contain.","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"tamagochuuu"},"content":"     * @param taskList the user\u0027s current todo list.","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"tamagochuuu"},"content":"    public void printFound(String keyWord, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Here are the tasks related to: \" + keyWord);","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"tamagochuuu"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"tamagochuuu"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"tamagochuuu"},"content":"            String task \u003d taskList.get(i).toString();","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"tamagochuuu"},"content":"            if (task.contains(keyWord)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"tamagochuuu"},"content":"                System.out.println(j + \". \" + task);","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"tamagochuuu"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"tamagochuuu"},"content":"     * Says goodbye to Mitsuki and exits the Chat bot.","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"tamagochuuu"},"content":"    public void printByeMessage(Scanner scan) {","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"tamagochuuu"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\\n\");","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"tamagochuuu"},"content":"        scan.close();","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"tamagochuuu"},"content":"        System.exit(0);","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tamagochuuu":94}},{"path":"src/main/java/Mitsuki/WasNotDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":" * Contains information on the WasNotDoneException class.","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":" *","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":" * @author Tee Chu Jie","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"public class WasNotDoneException extends MitsukiException {","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"     * The constructor for a WasNotDoneException object.","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"     * @param message Handled by the super constructor.","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"    public WasNotDoneException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"    /**","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"     * Checks if the task was done. If task was not done yet, throws exception.","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"     *","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"     * @param task the task to be checked","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"     * @throws WasNotDoneException the exception that will be thrown if task was not done yet.","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"     */","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"    public static void validate(Task task) throws WasNotDoneException {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"        if (!task.isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"            throw new WasNotDoneException(\"Task Was Not Done\");","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":29}},{"path":"src/test/java/Mitsuki/EmptyTaskExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"package Mitsuki;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tamagochuuu"},"content":"public class EmptyTaskExceptionTest {","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tamagochuuu"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tamagochuuu"},"content":"    public void createTodo_EmptyTaskExceptionThrown() {","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tamagochuuu"},"content":"        String description \u003d \" \";","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tamagochuuu"},"content":"        String errorMessage \u003d \"Empty Task Given\";","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tamagochuuu"},"content":"            EmptyTaskException.validate(description);","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tamagochuuu"},"content":"            fail(); // Test should never reach this line","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tamagochuuu"},"content":"        } catch (EmptyTaskException ex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tamagochuuu"},"content":"            assertEquals(errorMessage, ex.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tamagochuuu"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tamagochuuu"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tamagochuuu"},"content":"    public void createDeadline_EmptyTaskExceptionThrown() {","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tamagochuuu"},"content":"        String description \u003d \" \";","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tamagochuuu"},"content":"        String[] tokens \u003d {description};","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tamagochuuu"},"content":"        String errorMessage \u003d \"Empty Task Given\";","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tamagochuuu"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tamagochuuu"},"content":"            EmptyTaskException.timedValidate(tokens);","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tamagochuuu"},"content":"            fail(); // Test should never reach this line","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tamagochuuu"},"content":"        } catch (EmptyTaskException ex) {","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tamagochuuu"},"content":"            assertEquals(errorMessage, ex.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tamagochuuu"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tamagochuuu"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tamagochuuu"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tamagochuuu":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tamagochuuu"},"content":"todo taijutsu practice","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"tamagochuuu"},"content":"deadline submit mission report /By Friday 12pm","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"tamagochuuu"},"content":"event gemaki match /From Thursday 10am /to 12pm","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tamagochuuu"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"tamagochuuu"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tamagochuuu":5}}]
