[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"checkstyle {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"    mainClass.set(\"luke.Launcher\")","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"    archiveBaseName \u003d \"luke\"","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"run {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"-":40,"logical-1985516":25}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"1.[T][X] eat","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"2.[D][ ] homework (by: 02 Feb 2024 23:59)","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"3.[E][ ] study (from: 02 Feb 2024 08:00 to: 02 Feb 2024 12:00)","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"logical-1985516":3}},{"path":"data/luke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"1.[T][X] eat","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"2.[D][ ] homework (by: 02 Feb 2024 23:59)","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"3.[E][ ] study (from: 02 Feb 2024 08:00 to: 02 Feb 2024 12:00)","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"4.[T][ ] eat","lastModifiedDate":"2024-02-25"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"5.[D][ ] sleep (by: 02 Feb 2024 20:00)","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"logical-1985516":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"# Luke User Guide","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"![Ui](./Ui.png)","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"Luke is a simple task list manager. You (the person on the right) can interact with Luke (the person on the left) through commands to manage your tasks. If this is your first time using this app, sample data has already been loaded for you. Feel free to experiment with them and delete them if not in use. Your tasks are automatically saved to the save file, which will be automatically loaded upon starting Luke.","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"Warning: do not edit the save file directly, or the save file may be corrupted! In this case, double clicking would not start the jar file, and trying to run it in terminal will throw an exception (you should see `Save file could not be read. If you have edited the save file, please undo the edits so that it could be read. Otherwise, it could be due to corruption.`). Worst of all, you might possibly lose all your saved tasks!","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"Below is the list of features/commands that are available:","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"## Basic functionality","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"To interact with Luke, you will type your input into the textbox provided, and hit \"Enter\" or the \"Send\" button. ","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"Inputs have to be valid for the feature to execute.","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"The first word in your input is called a `command`. If it does not match with one of these words (not case-sensitive): \"todo\", \"deadline\", \"event\", \"list\", \"mark\", \"unmark\", \"find\", \"delete\", \"help\", \"bye\", this error message would be displayed:","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"Sorry, please type a valid command. The valid commands are:","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"bye","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"list","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"mark","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"unmark","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"todo","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"deadline","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"event","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"delete","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"find","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"help","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"In general, error messages will be thrown if the input is invalid or the save file is corrupted, telling the user about the cause of error and what to do to rectify it.","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"## Adding todos","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"Adds a todo of the specified description, without a start or end date, to the task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"Format: `todo [task description]`","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"Example: `todo exercise` adds a todo with description \"exercise\".","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"If successful, you should see this output message (the number of tasks in the task list may differ):","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"[T][ ] exercise","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"Adds a deadline of the specified description, with only an end date, to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"Format: `deadline [task description] /by [end date]`. [end date] must be in format `YYYY-MM-dd HH:mm`.","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"Example: `deadline homework /by 2024-02-02 23:59` adds a deadline with description \"homework\" that is due by 2 Feb 2024 23:59.","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"If successful, you should see this output message:","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"[D][ ] homework (by: 02 Feb 2024 23:59)","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"## Adding events","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"Adds an event of the specified description, with a start date and end date, to the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"Format: `event [task description] /from [start date] /to [end date]`. [start date] and [end date] must be in format `YYYY-MM-dd HH:mm`.","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"Example: `event study /from 2024-02-02 09:00 /to 2024-02-02 12:00` adds an event with description \"study\" from 2 Feb 2024 09:00 to 2 Feb 2024 12:00.","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"If successful, you should see this output message:","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"[E][ ] study (from: 02 Feb 2024 09:00 to: 02 Feb 2024 12:00)","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"## Listing tasks","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"Lists all the tasks in the task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"Format: `list`","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"If successful, you should see this output message (the tasks in the task list may differ):","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"1.[T][ ] exercise","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"2.[D][ ] homework (by: 02 Feb 2024 23:59)","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"3.[E][ ] study (from: 02 Feb 2024 09:00 to: 02 Feb 2024 12:00)","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"## Marking tasks","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"Marks a task (presumably as completed) with an \"X\".","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"Format: `mark INDEX`, where the (INDEX)th task in the list would be marked.","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"Example: `mark 2` would mark the 2nd task in the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"If successful, you should see this output message (the tasks in the task list may differ):","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"[D][X] homework (by: 02 Feb 2024 23:59)","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"logical-1985516"},"content":"and the task should be marked when displaying it in the task list:","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"logical-1985516"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-21"},{"lineNumber":117,"author":{"gitId":"logical-1985516"},"content":"1.[T][ ] exercise","lastModifiedDate":"2024-02-21"},{"lineNumber":118,"author":{"gitId":"logical-1985516"},"content":"2.[D][X] homework (by: 02 Feb 2024 23:59)","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"3.[E][ ] study (from: 02 Feb 2024 09:00 to: 02 Feb 2024 12:00)","lastModifiedDate":"2024-02-21"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":122,"author":{"gitId":"logical-1985516"},"content":"## Unmarking tasks","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":124,"author":{"gitId":"logical-1985516"},"content":"Marks a task (presumably as completed) with the \"X\" removed.","lastModifiedDate":"2024-02-21"},{"lineNumber":125,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":126,"author":{"gitId":"logical-1985516"},"content":"Format: `unmark INDEX`, where the (INDEX)th task in the list would be unmarked.","lastModifiedDate":"2024-02-21"},{"lineNumber":127,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":128,"author":{"gitId":"logical-1985516"},"content":"Example: `unmark 2` would unmark the 2nd task in the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":130,"author":{"gitId":"logical-1985516"},"content":"If successful, you should see this output message (the tasks in the task list may differ):","lastModifiedDate":"2024-02-21"},{"lineNumber":131,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":132,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":133,"author":{"gitId":"logical-1985516"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-21"},{"lineNumber":134,"author":{"gitId":"logical-1985516"},"content":"[D][ ] homework (by: 02 Feb 2024 23:59)","lastModifiedDate":"2024-02-21"},{"lineNumber":135,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":136,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":137,"author":{"gitId":"logical-1985516"},"content":"and the task should be unmarked when displaying it in the task list:","lastModifiedDate":"2024-02-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":140,"author":{"gitId":"logical-1985516"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-21"},{"lineNumber":141,"author":{"gitId":"logical-1985516"},"content":"1.[T][ ] exercise","lastModifiedDate":"2024-02-21"},{"lineNumber":142,"author":{"gitId":"logical-1985516"},"content":"2.[D][ ] homework (by: 02 Feb 2024 23:59)","lastModifiedDate":"2024-02-21"},{"lineNumber":143,"author":{"gitId":"logical-1985516"},"content":"3.[E][ ] study (from: 02 Feb 2024 09:00 to: 02 Feb 2024 12:00)","lastModifiedDate":"2024-02-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":146,"author":{"gitId":"logical-1985516"},"content":"## Finding tasks","lastModifiedDate":"2024-02-21"},{"lineNumber":147,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":148,"author":{"gitId":"logical-1985516"},"content":"Searches tasks whose description contains the keywords entered (contiguously).","lastModifiedDate":"2024-02-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":150,"author":{"gitId":"logical-1985516"},"content":"Format: `find [keywords]`, where [keywords] are the words that the system should search for.","lastModifiedDate":"2024-02-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":152,"author":{"gitId":"logical-1985516"},"content":"Example: `find work` would search for tasks that contain the keyword(s).","lastModifiedDate":"2024-02-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":154,"author":{"gitId":"logical-1985516"},"content":"If successful, you should see this output message (the tasks in the task list may differ):","lastModifiedDate":"2024-02-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":156,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":157,"author":{"gitId":"logical-1985516"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-21"},{"lineNumber":158,"author":{"gitId":"logical-1985516"},"content":"1.[D][ ] homework (by: 02 Feb 2024 23:59)","lastModifiedDate":"2024-02-21"},{"lineNumber":159,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":160,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":161,"author":{"gitId":"logical-1985516"},"content":"## Deleting tasks","lastModifiedDate":"2024-02-21"},{"lineNumber":162,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":163,"author":{"gitId":"logical-1985516"},"content":"Deletes a task from the task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":164,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":165,"author":{"gitId":"logical-1985516"},"content":"Format: `delete INDEX`, where the (INDEX)th task in the list would be deleted.","lastModifiedDate":"2024-02-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"logical-1985516"},"content":"Example: `delete 2` would delete the 2nd task in the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":169,"author":{"gitId":"logical-1985516"},"content":"If successful, you should see this output message (the tasks in the task list may differ):","lastModifiedDate":"2024-02-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":171,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":172,"author":{"gitId":"logical-1985516"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-21"},{"lineNumber":173,"author":{"gitId":"logical-1985516"},"content":"[D][ ] homework (by: 02 Feb 2024 23:59)","lastModifiedDate":"2024-02-21"},{"lineNumber":174,"author":{"gitId":"logical-1985516"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-21"},{"lineNumber":175,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":176,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":177,"author":{"gitId":"logical-1985516"},"content":"and the task should be marked when displaying it in the task list:","lastModifiedDate":"2024-02-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":180,"author":{"gitId":"logical-1985516"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-21"},{"lineNumber":181,"author":{"gitId":"logical-1985516"},"content":"1.[T][ ] exercise","lastModifiedDate":"2024-02-21"},{"lineNumber":182,"author":{"gitId":"logical-1985516"},"content":"2.[E][ ] study (from: 02 Feb 2024 09:00 to: 02 Feb 2024 12:00)","lastModifiedDate":"2024-02-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":185,"author":{"gitId":"logical-1985516"},"content":"## Searching help","lastModifiedDate":"2024-02-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":187,"author":{"gitId":"logical-1985516"},"content":"Displays a guide to help the user use the app.","lastModifiedDate":"2024-02-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":189,"author":{"gitId":"logical-1985516"},"content":"Format: `help`","lastModifiedDate":"2024-02-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":191,"author":{"gitId":"logical-1985516"},"content":"If successful, you should see this output message:","lastModifiedDate":"2024-02-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":193,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"},{"lineNumber":194,"author":{"gitId":"logical-1985516"},"content":"How to use:","lastModifiedDate":"2024-02-21"},{"lineNumber":195,"author":{"gitId":"logical-1985516"},"content":"Luke is a simple task list manager. You (the person on the right) can interact with Luke (the person on the left) through commands to manage your tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":196,"author":{"gitId":"logical-1985516"},"content":"...","lastModifiedDate":"2024-02-21"},{"lineNumber":197,"author":{"gitId":"logical-1985516"},"content":"```","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"logical-1985516":169,"-":28}},{"path":"src/main/java/luke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"    private void flip() {","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        db.flip();","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"        return db;","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"logical-1985516":61}},{"path":"src/main/java/luke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"public class Launcher {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"logical-1985516":12}},{"path":"src/main/java/luke/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import luke.task.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":" * Contains the tasks and manages them with its methods.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"public class List {","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"     * Constructs an instance of List.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"     * @param tasks The ArrayList containing the tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"    public List(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"     * Adds a task to the taskList, saves the changes to the savefile and displays it to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"     * @param task The task to be added to taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"     * @param storage The storage that saves the changed tasks to save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that confirms to the user about the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"     * @return String to display in the ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As the storage read/writes the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"    public String addTask(Task task, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"        assert task !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        storage.saveTasks(this);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"        return ui.displayTaskAdded(task, tasks.size());","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"     * Deletes a task from the taskList, saves the changes to the savefile and displays it to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"     * @param taskNum The number such that the task with that index is deleted from taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"     * @param storage The storage that saves the changed tasks to save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that confirms to the user about the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"     * @return String to display in the ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As the storage read/writes the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"    public String deleteTask(int taskNum, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        assert isValidTaskNum(taskNum);","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"        Task task \u003d tasks.get(taskNum);","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"        tasks.remove(taskNum);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"        storage.saveTasks(this);","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"        return ui.displayTaskDeleted(task, tasks.size());","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"     * Returns whether the task number is valid.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"     * @param taskNum The number in the user input (for mark/unmark).","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"     * @return Whether is task is valid.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"    public boolean isValidTaskNum(int taskNum) {","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"        return taskNum \u003e\u003d 0 \u0026\u0026 taskNum \u003c tasks.size();","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"     * Marks a task in the taskList, saves the changes to the savefile and displays it to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"     * @param taskNum The number such that the task with that index is marked in the taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"     * @param storage The storage that saves the changed tasks to save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"     * @param ui      The ui that confirms to the user about the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"     * @return String to display in the ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As the storage read/writes the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"    public String markTask(int taskNum, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"        assert isValidTaskNum(taskNum);","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"        String result \u003d tasks.get(taskNum).mark(ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"        storage.saveTasks(this);","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"        return result;","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"     * Unmarks a task in the taskList, saves the changes to the savefile and displays it to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"     * @param taskNum The number such that the task with that index is unmarked in the taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"     * @param storage The storage that saves the changed tasks to save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that confirms to the user about the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"     * @return String to display in the ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As the storage read/writes the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"    public String unmarkTask(int taskNum, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"        assert isValidTaskNum(taskNum);","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"        String result \u003d tasks.get(taskNum).unmark(ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"        storage.saveTasks(this);","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"        return result;","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"     * Finds tasks that contain the keyword(s).","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"     * @param keywords The words that the tasks in the resulting list should contain.","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that displays the resulting list.","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"     * @return String to display in the ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"    public String findTasks(String keywords, Ui ui) {","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"        assert keywords !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"        List results \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"logical-1985516"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"logical-1985516"},"content":"            if (task.hasKeywords(keywords)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"logical-1985516"},"content":"                results.tasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"logical-1985516"},"content":"        return ui.displayResults(results);","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"    public int getListSize() {","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"logical-1985516"},"content":"     * Returns a String displaying the tasks in the taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"logical-1985516"},"content":"     * Format is as shown in Level-8.","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"logical-1985516"},"content":"     * @return String representation of taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"logical-1985516"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"logical-1985516"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"logical-1985516"},"content":"            result.append(i + 1).append(\".\").append(tasks.get(i).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"logical-1985516"},"content":"            if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"logical-1985516"},"content":"                result.append(\"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"logical-1985516"},"content":"        return String.valueOf(result);","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"logical-1985516":140}},{"path":"src/main/java/luke/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import luke.exception.SaveFileCorruptedException;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":" * The entry point of the app.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"public class Luke /* extends Application */ {","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"    private String fileName \u003d \"./data/luke.txt\";","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"    private Storage storage \u003d new Storage(fileName);","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"    private List taskList \u003d new List(storage.loadTasks());","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"    public Luke() throws IOException, SaveFileCorruptedException {","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"     * Responds to the user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"     * @return String to be displayed to the user.","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As it writes to a save file in Storage class.","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    String getResponse(String input) throws IOException {","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"        assert input !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"        return parser.parse(input, taskList, ui, storage);","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"logical-1985516":29,"-":2}},{"path":"src/main/java/luke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import luke.exception.SaveFileCorruptedException;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"    private Luke duke \u003d new Luke();","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"    public Main() throws IOException, SaveFileCorruptedException {","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"            stage.setTitle(\"Luke\");","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"            stage.show();","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"logical-1985516":36}},{"path":"src/main/java/luke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    private Luke duke;","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"     * Adds a welcome message upon load.","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m Luke!\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeMessage, dukeImage));","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"    public void setDuke(Luke d) {","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        );","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"logical-1985516":64}},{"path":"src/main/java/luke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import luke.exception.InvalidDateTimeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import luke.exception.InvalidSyntaxException;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import luke.exception.TaskNotFoundException;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import luke.exception.UnknownCommandException;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import luke.task.Deadline;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"import luke.task.Event;","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import luke.task.ToDo;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":" * Parses user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"     * Converts a String to LocalDateTime, if it is in \"yyyy-MM-dd HH:mm\" format.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"     * @param date The Date (in String type) that the user inputted.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"     * @return Date in LocalDateTime type.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    public LocalDateTime toLocalDateTime(String date) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"        assert date !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"        return LocalDateTime.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"     * Parses the user input - if it is valid, executes it; otherwise, throws an exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"     * @param input    User input.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"     * @param taskList The list that contains the user\u0027s tasks. User can manipulate the tasks it contains.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"     * @param ui       The ui that confirms the user\u0027s action.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"     * @param storage  The storage that saves any change to the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"     * @return String to output in UI.","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As storage reads/writes save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"    public String parse(String input, List taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"        String command \u003d input.split(\" \")[0].toLowerCase();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"        switch (command) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"            return parseGlobalCommands(input, \"bye\", taskList, ui);","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"        case \"list\":","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"            return parseGlobalCommands(input, \"list\", taskList, ui);","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"            return parseTaskCommands(input, \"mark\", taskList, storage, ui);","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"            return parseTaskCommands(input, \"unmark\", taskList, storage, ui);","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"            return parseUnaryCommands(input, \"todo\", taskList, storage, ui);","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"            return parseDeadlineCommand(input, taskList, storage, ui);","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"        case \"event\":","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"            return parseEventCommand(input, taskList, storage, ui);","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"            return parseTaskCommands(input, \"delete\", taskList, storage, ui);","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"        case \"find\":","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"            return parseUnaryCommands(input, \"find\", taskList, storage, ui);","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"        case \"help\":","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"            return parseGlobalCommands(input, \"help\", taskList, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"        default:","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"            assert !input.equals(\"bye\") \u0026\u0026 !input.equals(\"list\") \u0026\u0026 !input.equals(\"mark\") \u0026\u0026 !input.equals(\"unmark\")","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"                    \u0026\u0026 !input.equals(\"todo\") \u0026\u0026 !input.equals(\"deadline\") \u0026\u0026 !input.equals(\"event\")","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"                    \u0026\u0026 !input.equals(\"delete\") \u0026\u0026 !input.equals(\"find\");","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"            return new UnknownCommandException().toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"     * Parses commands that only has the command itself (i.e. global as it has no additional parameters).","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"     * At present, it does not require the storage.","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"     * @param command The input command by the user.","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that displays the success/failure of the command.","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"     * @return The success/failure message of the command.","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"    private String parseGlobalCommands(String input, String command, List taskList, Ui ui) {","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"        if (!input.equalsIgnoreCase(command)) {","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"            return new InvalidSyntaxException(command).toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"        switch (command) {","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"            // does not use taskList, but still abstracted in this method due to how similar the syntax of these","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"            // commands are","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"            assert input.equals(\"bye\") || input.equals(\"Bye\") || input.equals(\"bYe\") || input.equals(\"byE\")","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"                    || input.equals(\"BYe\") || input.equals(\"ByE\") || input.equals(\"bYE\") || input.equals(\"BYE\");","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"            return ui.displayGoodBye();","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"        case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"            assert input.equals(\"list\") || input.equals(\"List\") || input.equals(\"lIst\") || input.equals(\"liSt\")","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"                    || input.equals(\"lisT\") || input.equals(\"LIst\") || input.equals(\"LiSt\") || input.equals(\"LisT\")","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"                    || input.equals(\"lISt\") || input.equals(\"lIsT\") || input.equals(\"liST\") || input.equals(\"LISt\")","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"                    || input.equals(\"LIsT\") || input.equals(\"LiST\") || input.equals(\"lIST\") || input.equals(\"LIST\");","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"            return ui.displayTasks(taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"        case \"help\":","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"            // does not use taskList, but still abstracted in this method due to how similar the syntax of these","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"            // commands are","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"            assert input.equals(\"help\") || input.equals(\"Help\") || input.equals(\"hElp\") || input.equals(\"heLp\")","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"                    || input.equals(\"helP\") || input.equals(\"HElp\") || input.equals(\"HeLp\") || input.equals(\"HelP\")","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"                    || input.equals(\"hELp\") || input.equals(\"hElP\") || input.equals(\"heLP\") || input.equals(\"HELp\")","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"                    || input.equals(\"HElP\") || input.equals(\"HeLP\") || input.equals(\"hELP\") || input.equals(\"HELP\");","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"            return ui.displayHelp();","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"        default:","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"            return new UnknownCommandException().toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"     * Parses commands that manipulate a single task.","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"logical-1985516"},"content":"     * @param command The input command by the user.","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"logical-1985516"},"content":"     * @param taskList The task list that contains the task.","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"logical-1985516"},"content":"     * @param storage The storage that stores the task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that displays the success/failure of the command.","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"logical-1985516"},"content":"     * @return The success/failure message of the command.","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As it writes to the save file under storage.","lastModifiedDate":"2024-02-18"},{"lineNumber":118,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"    private String parseTaskCommands(String input, String command, List taskList, Storage storage, Ui ui)","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"            throws IOException {","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"        if (input.split(\" \").length !\u003d 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"logical-1985516"},"content":"            return new InvalidSyntaxException(command).toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"logical-1985516"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"logical-1985516"},"content":"            Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"logical-1985516"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"logical-1985516"},"content":"            return new InvalidSyntaxException(command).toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"logical-1985516"},"content":"        int taskNum \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"logical-1985516"},"content":"        if (!taskList.isValidTaskNum(taskNum - 1)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":131,"author":{"gitId":"logical-1985516"},"content":"            return new TaskNotFoundException(taskList).toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":132,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"logical-1985516"},"content":"        switch (command) {","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"logical-1985516"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":135,"author":{"gitId":"logical-1985516"},"content":"            return taskList.markTask(taskNum - 1, storage, ui);","lastModifiedDate":"2024-02-18"},{"lineNumber":136,"author":{"gitId":"logical-1985516"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":137,"author":{"gitId":"logical-1985516"},"content":"            return taskList.unmarkTask(taskNum - 1, storage, ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"logical-1985516"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-18"},{"lineNumber":139,"author":{"gitId":"logical-1985516"},"content":"            return taskList.deleteTask(taskNum - 1, storage, ui);","lastModifiedDate":"2024-02-18"},{"lineNumber":140,"author":{"gitId":"logical-1985516"},"content":"        default:","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"logical-1985516"},"content":"            return new UnknownCommandException().toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":144,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":146,"author":{"gitId":"logical-1985516"},"content":"     * Parses commands in the form [command] [parameter], i.e. with only 1 parameter","lastModifiedDate":"2024-02-18"},{"lineNumber":147,"author":{"gitId":"logical-1985516"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":148,"author":{"gitId":"logical-1985516"},"content":"     * @param command The input command by the user.","lastModifiedDate":"2024-02-18"},{"lineNumber":149,"author":{"gitId":"logical-1985516"},"content":"     * @param taskList The task list that contains the task.","lastModifiedDate":"2024-02-18"},{"lineNumber":150,"author":{"gitId":"logical-1985516"},"content":"     * @param storage The storage that stores the task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":151,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that displays the success/failure of the command.","lastModifiedDate":"2024-02-18"},{"lineNumber":152,"author":{"gitId":"logical-1985516"},"content":"     * @return The success/failure message of the command.","lastModifiedDate":"2024-02-18"},{"lineNumber":153,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As it writes to the save file under storage.","lastModifiedDate":"2024-02-18"},{"lineNumber":154,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":155,"author":{"gitId":"logical-1985516"},"content":"    private String parseUnaryCommands(String input, String command, List taskList, Storage storage, Ui ui)","lastModifiedDate":"2024-02-18"},{"lineNumber":156,"author":{"gitId":"logical-1985516"},"content":"            throws IOException {","lastModifiedDate":"2024-02-18"},{"lineNumber":157,"author":{"gitId":"logical-1985516"},"content":"        if (input.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"logical-1985516"},"content":"            return new InvalidSyntaxException(command).toString();","lastModifiedDate":"2024-02-25"},{"lineNumber":159,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"logical-1985516"},"content":"        switch (command) {","lastModifiedDate":"2024-02-18"},{"lineNumber":161,"author":{"gitId":"logical-1985516"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-18"},{"lineNumber":162,"author":{"gitId":"logical-1985516"},"content":"            return taskList.addTask(new ToDo(input.substring(5)), storage, ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"logical-1985516"},"content":"        case \"find\":","lastModifiedDate":"2024-02-18"},{"lineNumber":164,"author":{"gitId":"logical-1985516"},"content":"            // does not use storage, but still abstracted in this method due to how similar the syntax of these","lastModifiedDate":"2024-02-18"},{"lineNumber":165,"author":{"gitId":"logical-1985516"},"content":"            // 2 commands are","lastModifiedDate":"2024-02-18"},{"lineNumber":166,"author":{"gitId":"logical-1985516"},"content":"            return taskList.findTasks(input.substring(5), ui);","lastModifiedDate":"2024-02-18"},{"lineNumber":167,"author":{"gitId":"logical-1985516"},"content":"        default:","lastModifiedDate":"2024-02-18"},{"lineNumber":168,"author":{"gitId":"logical-1985516"},"content":"            return new UnknownCommandException().toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":169,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":170,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":171,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":172,"author":{"gitId":"logical-1985516"},"content":"    private String parseDeadlineCommand(String input, List taskList, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2024-02-18"},{"lineNumber":173,"author":{"gitId":"logical-1985516"},"content":"        if (!Pattern.matches(\"deadline .+ /by .+\", input)","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"logical-1985516"},"content":"                || input.split(\"/by\").length !\u003d 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"logical-1985516"},"content":"            return new InvalidSyntaxException(\"deadline\").toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":176,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"logical-1985516"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"logical-1985516"},"content":"            toLocalDateTime(input.split(\"/by \")[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"logical-1985516"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"logical-1985516"},"content":"            return new InvalidDateTimeException().toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":181,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"logical-1985516"},"content":"        String description \u003d input.substring(9).split(\" /by\")[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"logical-1985516"},"content":"        String dueDate \u003d input.split(\"/by \")[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"logical-1985516"},"content":"        return taskList.addTask(new Deadline(description, toLocalDateTime(dueDate)), storage, ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":185,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":186,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":187,"author":{"gitId":"logical-1985516"},"content":"    private String parseEventCommand(String input, List taskList, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2024-02-18"},{"lineNumber":188,"author":{"gitId":"logical-1985516"},"content":"        if (!Pattern.matches(\"event .+ /from .+ /to .+\", input)","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"logical-1985516"},"content":"                || input.split(\"/from\").length !\u003d 2","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"logical-1985516"},"content":"                || input.split(\"/to\").length !\u003d 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"logical-1985516"},"content":"            return new InvalidSyntaxException(\"event\").toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":192,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":193,"author":{"gitId":"logical-1985516"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":194,"author":{"gitId":"logical-1985516"},"content":"            toLocalDateTime(input.split(\"/from \")[1].split(\" /to\")[0]);","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"logical-1985516"},"content":"            toLocalDateTime(input.split(\"/to \")[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":196,"author":{"gitId":"logical-1985516"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"logical-1985516"},"content":"            return new InvalidDateTimeException().toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":198,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"logical-1985516"},"content":"        String description \u003d input.substring(6).split(\" /from\")[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"logical-1985516"},"content":"        String startDate \u003d input.split(\"/from \")[1].split(\" /to\")[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"logical-1985516"},"content":"        String endDate \u003d input.split(\"/to \")[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":202,"author":{"gitId":"logical-1985516"},"content":"        return taskList.addTask(new Event(description, toLocalDateTime(startDate), toLocalDateTime(endDate)),","lastModifiedDate":"2024-02-12"},{"lineNumber":203,"author":{"gitId":"logical-1985516"},"content":"                storage, ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":204,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":205,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"logical-1985516":205}},{"path":"src/main/java/luke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"import luke.exception.SaveFileCorruptedException;","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import luke.task.Deadline;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"import luke.task.Event;","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"import luke.task.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"import luke.task.ToDo;","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":" * Saves and loads tasks based on a save file specified by a path.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    private String fileName;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"     * Creates a directory for the save file if it does not exist, and creates a save file if it does not exist.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"     * @param fileName The path to the save file (in String type).","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As it may create a new file.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"    public Storage(String fileName) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"        assert fileName !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"        File f \u003d new File(fileName);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"            if (!f.getParentFile().exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"            f.createNewFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(fileName));","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"            String sampleData \u003d \"1.[T][X] eat\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"                    + \"2.[D][ ] homework (by: 02 Feb 2024 23:59)\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"                    + \"3.[E][ ] study (from: 02 Feb 2024 08:00 to: 02 Feb 2024 12:00)\";","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"            writer.write(sampleData);","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"            writer.close();","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        assert f.exists();","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"     * Saves/Writes the taskList String representation to the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"     * @param taskList The taskList that is saved to the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As it writes to file.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"    public void saveTasks(List taskList) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"        int startingLength \u003d taskList.getListSize();","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        String newFileContent \u003d taskList.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        assert new File(fileName).exists();","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(fileName));","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"        writer.write(newFileContent);","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"        writer.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"        int changeInLength \u003d taskList.getListSize() - startingLength;","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"        assert changeInLength \u003d\u003d 1 || changeInLength \u003d\u003d -1; // disable this before running ListTest or StorageTest","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"     * Loads the save file content as a Task ArrayList.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"     * This is done by reading and parsing line-by-line from the save file, then adding tasks to the resultant taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"     * Technically, it does not use the task index at the start of each line, but this is to match the tasks displayed","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"     * by the UI for consistency.","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"     * @return Task ArrayList that is to be loaded to a taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As it reads a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException, SaveFileCorruptedException {","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"        assert new File(fileName).exists();","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(fileName));","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"        String currLine;","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"        while ((currLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"            String taskType \u003d getTaskType(currLine);","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"            boolean isDone \u003d getIsDone(currLine);","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"            case \"T\":","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"                addToDo(currLine, tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"            case \"D\":","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"                addDeadline(currLine, tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"            case \"E\":","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"                addEvent(currLine, tasks);","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"                break;","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"            default:","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"                throw new SaveFileCorruptedException();","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"                tasks.get(tasks.size() - 1).setToDone();","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"        return tasks;","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"    private boolean getIsDone(String currLine) throws SaveFileCorruptedException {","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"        boolean isDone;","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"            isDone \u003d currLine.split(\"\\\\[\")[2].split(\"]\")[0].equals(\"X\");","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"            throw new SaveFileCorruptedException();","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"        return isDone;","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"logical-1985516"},"content":"    private String getTaskType(String currLine) throws SaveFileCorruptedException {","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"logical-1985516"},"content":"        String taskType;","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"logical-1985516"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":115,"author":{"gitId":"logical-1985516"},"content":"            taskType \u003d currLine.split(\"]\")[0].split(\"\\\\[\")[1];","lastModifiedDate":"2024-02-16"},{"lineNumber":116,"author":{"gitId":"logical-1985516"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":117,"author":{"gitId":"logical-1985516"},"content":"            throw new SaveFileCorruptedException();","lastModifiedDate":"2024-02-16"},{"lineNumber":118,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"        return taskType;","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":122,"author":{"gitId":"logical-1985516"},"content":"    private void addToDo(String currLine, ArrayList\u003cTask\u003e tasks) throws SaveFileCorruptedException {","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"logical-1985516"},"content":"        String description;","lastModifiedDate":"2024-02-16"},{"lineNumber":124,"author":{"gitId":"logical-1985516"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":125,"author":{"gitId":"logical-1985516"},"content":"            description \u003d currLine.split(\"] \")[1];","lastModifiedDate":"2024-02-16"},{"lineNumber":126,"author":{"gitId":"logical-1985516"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":127,"author":{"gitId":"logical-1985516"},"content":"            throw new SaveFileCorruptedException();","lastModifiedDate":"2024-02-16"},{"lineNumber":128,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":129,"author":{"gitId":"logical-1985516"},"content":"        tasks.add(new ToDo(description));","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":131,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":132,"author":{"gitId":"logical-1985516"},"content":"    private void addDeadline(String currLine, ArrayList\u003cTask\u003e tasks) throws SaveFileCorruptedException {","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"logical-1985516"},"content":"        String description;","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"logical-1985516"},"content":"        String dueDate;","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"logical-1985516"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":136,"author":{"gitId":"logical-1985516"},"content":"            description \u003d currLine.split(\" \\\\(by:\")[0].split(\"] \")[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"logical-1985516"},"content":"            dueDate \u003d currLine.split(\"\\\\(by: \")[1].split(\"\\\\)\")[0];","lastModifiedDate":"2024-02-16"},{"lineNumber":138,"author":{"gitId":"logical-1985516"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":139,"author":{"gitId":"logical-1985516"},"content":"            throw new SaveFileCorruptedException();","lastModifiedDate":"2024-02-16"},{"lineNumber":140,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":141,"author":{"gitId":"logical-1985516"},"content":"        tasks.add(new Deadline(description, LocalDateTime.parse(dueDate,","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"logical-1985516"},"content":"                DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"))));","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":144,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"logical-1985516"},"content":"    private void addEvent(String currLine, ArrayList\u003cTask\u003e tasks) throws SaveFileCorruptedException {","lastModifiedDate":"2024-02-18"},{"lineNumber":146,"author":{"gitId":"logical-1985516"},"content":"        String description;","lastModifiedDate":"2024-02-18"},{"lineNumber":147,"author":{"gitId":"logical-1985516"},"content":"        String startDate;","lastModifiedDate":"2024-02-16"},{"lineNumber":148,"author":{"gitId":"logical-1985516"},"content":"        String endDate;","lastModifiedDate":"2024-02-16"},{"lineNumber":149,"author":{"gitId":"logical-1985516"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":150,"author":{"gitId":"logical-1985516"},"content":"            description \u003d currLine.split(\" \\\\(from:\")[0].split(\"] \")[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"logical-1985516"},"content":"            startDate \u003d currLine.split(\"\\\\(from: \")[1].split(\" to:\")[0];","lastModifiedDate":"2024-02-16"},{"lineNumber":152,"author":{"gitId":"logical-1985516"},"content":"            endDate \u003d currLine.split(\"to: \")[1].split(\"\\\\)\")[0];","lastModifiedDate":"2024-02-16"},{"lineNumber":153,"author":{"gitId":"logical-1985516"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":154,"author":{"gitId":"logical-1985516"},"content":"            throw new SaveFileCorruptedException();","lastModifiedDate":"2024-02-16"},{"lineNumber":155,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":156,"author":{"gitId":"logical-1985516"},"content":"        tasks.add(new Event(description, LocalDateTime.parse(startDate,","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"logical-1985516"},"content":"                DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")),","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"logical-1985516"},"content":"                LocalDateTime.parse(endDate, DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"))));","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"logical-1985516"},"content":"     * Clears the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"logical-1985516"},"content":"     * This is only used for testing so that each test can start with a clean save file, instead of creating a new path","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"logical-1985516"},"content":"     * for a new save file for each test.","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As it writes to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"logical-1985516"},"content":"    public void clearData() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"logical-1985516"},"content":"        assert false; // disable this before running ListTest or StorageTest","lastModifiedDate":"2024-02-21"},{"lineNumber":169,"author":{"gitId":"logical-1985516"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(fileName));","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"logical-1985516"},"content":"        writer.write(\"\");","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"logical-1985516"},"content":"        writer.close();","lastModifiedDate":"2024-02-21"},{"lineNumber":172,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"logical-1985516":173}},{"path":"src/main/java/luke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import luke.task.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":" * In charge of printing statements, to confirm to the user that the action is completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"     * Returns the goodbye message.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"     * @return The goodbye message.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"    public String displayGoodBye() {","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"     * Confirms to the user that the specified task is added.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"     * Displays the number of tasks remaining and distinguishes between singular and plural form.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"     * @param task The task that is being added.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"     * @param taskListSize Number of tasks in taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"     * @return String to display in the ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    public String displayTaskAdded(Task task, int taskListSize) {","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"        assert task !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"        String taskOrTasks \u003d taskListSize \u003d\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"                + task.toString()","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"                + \"\\nNow you have \" + taskListSize + taskOrTasks + \"in the list.\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"     * Returns the task list, concatenated with the ui message.","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"     * @param taskList The task list to be displayed.","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"     * @return The task list, concatenated with the ui message.","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"    public String displayTasks(List taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        return \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"                + taskList.toString() + \"\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"     * Returns the marked task, concatenated with the ui message.","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"     * @param task The marked task.","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"     * @return The marked task, concatenated with the ui message.","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"    public String displayTaskMarked(Task task) {","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        assert task !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"                + task.toString() + \"\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"     * Returns the unmarked task, concatenated with the ui message.","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"     * @param task The unmarked task.","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"     * @return The unmarked task, concatenated with the ui message.","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"    public String displayTaskUnmarked(Task task) {","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"        assert task !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"                + task.toString() + \"\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"     * Confirms to the user that the specified task is deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"     * Displays the number of tasks remaining and distinguishes between singular and plural form.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"     * @param task The task that is being deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"     * @param taskListSize Number of tasks in taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"     * @return String to display in the ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"    public String displayTaskDeleted(Task task, int taskListSize) {","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"        assert task !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"        String taskOrTasks \u003d taskListSize \u003d\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"                + task.toString()","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"                + \"\\nNow you have \" + taskListSize + taskOrTasks + \"in the list.\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"     * Returns the matching tasks, concatenated with the ui message.","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"     * @param results The list of matching tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"     * @return The matching tasks, concatenated with the ui message.","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"    public String displayResults(List results) {","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"        assert results !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"        return \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"                + results.toString() + \"\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"     * Returns the help message.","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"     * @return The help message.","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"    public String displayHelp() {","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"        return \"How to use:\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"                + \"Luke is a simple task list manager. You (the person on the right) can interact with Luke (the\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"                + \"person on the left) through commands to manage your tasks.\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"                + \"If this is your first time using this app, sample data has already been loaded for you. Feel free\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"                + \"to experiment with them and delete them if not in use.\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"                + \"Your tasks are automatically saved to the save file. Warning: do not edit the save file directly,\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"                + \"or the save file may be corrupted! In this case, you may possibly lose all your saved tasks!\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"                + \"Here is the list of commands you may use:\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"                + \"help, todo, deadline, event, list, mark, unmark, delete, find, bye\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"                + \"Here is how to use each of the commands:\"","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"                + \"todo [task description] - adds a todo of the specified description, without a start or end date,\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"                + \"to the task list.\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"                + \"deadline [task description] /by [end date] - adds a deadline of the specified description, with\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"                + \"the specified end date, to the task list.\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"                + \"event [task description] /from [start date] /to [end date] - adds an event of the specified\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"logical-1985516"},"content":"                + \"description, with the specified start and end date, to the task list.\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"logical-1985516"},"content":"                + \"list - lists all the tasks in the task list.\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"logical-1985516"},"content":"                + \"mark INDEX - marks the task with that particular index as completed. For example, mark 2 would\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"logical-1985516"},"content":"                + \"task 2, i.e. the 2nd task in the list, as completed. Completed tasks are denoted with \u0027X\u0027.\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"logical-1985516"},"content":"                + \"unmark INDEX - unmarks the task with that particular index as not completed. For example, unmark 2\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"logical-1985516"},"content":"                + \"would unmark task 2, i.e. the 2nd task in the list, as not completed.\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"logical-1985516"},"content":"                + \"delete INDEX - deletes the task with that particular index. For example, delete 2 would delete\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"                + \"task 2, i.e. the 2nd task in the list.\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"                + \"Note: deleting a task would shift any tasks below it upwards. For example, task 3 would become\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"                + \"task 2 (the second task in the list) after deleting task 1 (the first task in the list). Thus\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"logical-1985516"},"content":"                + \"deleting tasks may cause the indexes of other tasks to change - please double check the indexes\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"logical-1985516"},"content":"                + \"of the tasks before editing them.\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"logical-1985516"},"content":"                + \"find [keyword(s)] - finds all tasks whose description contains keyword(s) (as a substring).\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"logical-1985516"},"content":"                + \"bye - exits the program\\n\";","lastModifiedDate":"2024-02-24"},{"lineNumber":126,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"logical-1985516":127}},{"path":"src/main/java/luke/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke.exception;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":" * Thrown when the date given by the user is not in \"yyyy-MM-dd HH:mm\" format.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"public class InvalidDateTimeException extends Throwable {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"        return \"The date provided is invalid.\\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"                + \"Please type the date in this format: yyyy-MM-dd HH:mm\";","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"logical-1985516":12}},{"path":"src/main/java/luke/exception/InvalidSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke.exception;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":" * Thrown when the first word in the user input is valid, but the input is not in the correct format","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":" * (based on the first word).","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"public class InvalidSyntaxException extends Throwable {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"    private String command;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    private String syntax;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"     * Gives a certain syntax based on the command given.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"     * @param command The first word in the user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"    public InvalidSyntaxException(String command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"        assert command.equals(\"bye\") || command.equals(\"list\") || command.equals(\"mark\") || command.equals(\"unmark\")","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"                || command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"                || command.equals(\"delete\") || command.equals(\"find\") || command.equals(\"help\");","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"        switch (command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"bye (just \u0027bye\u0027, really)\";","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"        case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"list (just \u0027list\u0027, really)\";","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"mark [task number]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"unmark [task number]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"todo [task description]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"deadline [task description] /by [deadline]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"event [task description] /from [start date] /to [end date]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"delete [task number]\";","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"        case \"find\":","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"find [keyword(s)]\";","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"        case \"help\":","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"help (just \u0027help\u0027, really)\";","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"        default: // unreachable","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        return \"Sorry, the format for the command is invalid. The syntax for \"","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"                + command + \" is: \\n\" + syntax;","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"logical-1985516":60}},{"path":"src/main/java/luke/exception/SaveFileCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke.exception;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":" * Thrown when the tasks in save file are in the incorrect format, due to possibly corruption or user editing.","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"public class SaveFileCorruptedException extends Throwable {","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"        return \"Save file could not be read. If you have edited the save file, please undo the edits \\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"                + \"so that it could be read. Otherwise, it could be due to corruption.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"logical-1985516":12}},{"path":"src/main/java/luke/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke.exception;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import luke.List;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":" * Thrown when the task specified cannot be found in the taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"public class TaskNotFoundException extends Throwable {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    private List taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"     * Constructs an instance of TaskNotFoundException","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"     * @param taskList The task list in which the task is not found.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"    public TaskNotFoundException(List taskList) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"        if (taskList.getListSize() \u003d\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"            return \"Task not found: list is empty. Please add a task first.\";","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"        return \"Task not found: Task number should be between 1 and \" + taskList.getListSize() + \".\";","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"logical-1985516":27}},{"path":"src/main/java/luke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke.exception;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":" * Thrown when the first word in the user input is not one of the recognised commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"public class UnknownCommandException extends Throwable {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"        return \"Sorry, please type a valid command. The valid commands are:\\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"                + \"bye\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"                + \"list\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"                + \"mark\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"                + \"unmark\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"                + \"todo\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"                + \"deadline\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"                + \"event\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"                + \"delete\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"                + \"find\\n\"","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"                + \"help\";","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"logical-1985516":21}},{"path":"src/main/java/luke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke.task;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":" * A task that should be completed before its dueDate.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"     * Constructor of Deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"     * Uses the constructor of Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"     * @param dueDate The date that the task should be completed before.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"        assert dueDate !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"        String month \u003d String.valueOf(dueDate.getMonth());","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"        String monthInShortForm \u003d month.charAt(0) + month.substring(1, 3).toLowerCase();","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"        String day \u003d dueDate.getDayOfMonth() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + dueDate.getDayOfMonth()","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(dueDate.getDayOfMonth());","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"        String minute \u003d dueDate.getMinute() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + dueDate.getMinute()","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(dueDate.getMinute());","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"        String hour \u003d dueDate.getHour() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + dueDate.getHour()","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(dueDate.getHour());","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + day + \" \" + monthInShortForm","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"                + \" \" + dueDate.getYear() + \" \" + hour + \":\" + minute + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"logical-1985516":39}},{"path":"src/main/java/luke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke.task;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":" * A task that takes place over a time period, from startDate to endDate.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"     * Constructor of Event.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"     * Uses the constructor of Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"     * @param startDate The date that the task starts.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"     * @param endDate The date that the task ends.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"    public Event(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"        assert startDate !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"        assert endDate !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"        String month \u003d String.valueOf(startDate.getMonth());","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"        String monthInShortForm \u003d month.charAt(0) + month.substring(1, 3).toLowerCase();","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"        String day \u003d startDate.getDayOfMonth() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + startDate.getDayOfMonth()","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(startDate.getDayOfMonth());","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"        String minute \u003d startDate.getMinute() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + startDate.getMinute()","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(startDate.getMinute());","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        String hour \u003d startDate.getHour() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + startDate.getHour()","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(startDate.getHour());","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        String eMonth \u003d String.valueOf(endDate.getMonth());","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"        String eMonthInShortForm \u003d eMonth.charAt(0) + eMonth.substring(1, 3).toLowerCase();","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"        String eDay \u003d endDate.getDayOfMonth() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + endDate.getDayOfMonth()","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(endDate.getDayOfMonth());","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"        String eMinute \u003d endDate.getMinute() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + endDate.getMinute()","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(endDate.getMinute());","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"        String eHour \u003d endDate.getHour() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + endDate.getHour()","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(endDate.getHour());","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + day + \" \" + monthInShortForm","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"                + \" \" + startDate.getYear() + \" \" + hour + \":\" + minute + \" to: \"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"                + eDay + \" \" + eMonthInShortForm + \" \" + endDate.getYear() + \" \" + eHour + \":\"","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"                + eMinute + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"logical-1985516":55}},{"path":"src/main/java/luke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke.task;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import luke.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":" * A class that extracts the common attributes of all Tasks, such as ToDo, Deadline and Event.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-25"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    private String description;","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"     * Creates a Task with a description. By default, it is not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"     * @param description The description of the task itself.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"        assert description !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"    public void setToDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"     * Marks itself.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that confirms to the user about the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"    public String mark(Ui ui) {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"        return ui.displayTaskMarked(this);","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"     * Unmarks itself.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that confirms to the user about the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"    public String unmark(Ui ui) {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"        return ui.displayTaskUnmarked(this);","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"    public boolean hasKeywords(String keywords) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"        return description.contains(keywords);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"logical-1985516":58}},{"path":"src/main/java/luke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package luke.task;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":" * A generic task that should be done, with no specific time period.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"logical-1985516":15}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"\u003cfx:root stylesheets\u003d\"@../style/styles.css\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"logical-1985516":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"\u003cAnchorPane stylesheets\u003d\"@../style/styles.css\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"luke.MainWindow\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"logical-1985516":19}},{"path":"src/test/java/KitchenSinkTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"public class KitchenSinkTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"    public void kitchenSinkTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"logical-1985516":8}},{"path":"src/test/java/ListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import luke.List;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import luke.Parser;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import luke.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import luke.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import luke.task.Deadline;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"import luke.task.Event;","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import luke.task.ToDo;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":" * Turn off assertions to test.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"public class ListTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    private Storage storage \u003d new Storage(\"./testData/test.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    public ListTest() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"    public void testAddToDo() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(\"1.[T][ ] eat\", taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"    public void testAddDeadline() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Deadline(\"homework\", parser.toLocalDateTime(\"2024-02-02 23:59\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(\"1.[D][ ] homework (by: 02 Feb 2024 23:59)\", taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"    public void testAddEvent() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Event(\"study\", parser.toLocalDateTime(\"2024-02-02 08:00\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"                parser.toLocalDateTime(\"2024-02-02 12:00\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(\"1.[E][ ] study (from: 02 Feb 2024 08:00 to: 02 Feb 2024 12:00)\", taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"    public void testMarkTask() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"        taskList.markTask(0, storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"        taskList.markTask(2, storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"        String expected \u003d \"1.[T][X] eat\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"                + \"2.[T][ ] eat\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"                + \"3.[T][X] eat\";","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"    public void testUnmarkTask() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"        taskList.markTask(0, storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"        taskList.unmarkTask(0, storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"        taskList.markTask(2, storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"        taskList.unmarkTask(2, storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"        String expected \u003d \"1.[T][ ] eat\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"                + \"2.[T][ ] eat\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"                + \"3.[T][ ] eat\";","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"    public void testDeleteTask() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"sleep\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"study\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"        taskList.deleteTask(1, storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"        String expected \u003d \"1.[T][ ] eat\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"                + \"2.[T][ ] study\";","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"    public void testDeleteTask2() throws IOException {","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"sleep\"), storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"study\"), storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"        taskList.deleteTask(2, storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"        String expected \u003d \"1.[T][ ] eat\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"                + \"2.[T][ ] sleep\";","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"    public void testDeleteTask3() throws IOException {","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"sleep\"), storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"study\"), storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":117,"author":{"gitId":"logical-1985516"},"content":"        taskList.deleteTask(0, storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":118,"author":{"gitId":"logical-1985516"},"content":"        String expected \u003d \"1.[T][ ] sleep\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"                + \"2.[T][ ] study\";","lastModifiedDate":"2024-02-21"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2024-02-21"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":122,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"logical-1985516"},"content":"    public void testToString() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Deadline(\"homework\", parser.toLocalDateTime(\"2024-02-02 23:59\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"logical-1985516"},"content":"        taskList.markTask(0, storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Event(\"study\", parser.toLocalDateTime(\"2024-02-02 08:00\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"logical-1985516"},"content":"                parser.toLocalDateTime(\"2024-02-02 12:00\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"logical-1985516"},"content":"        String expected \u003d \"1.[T][X] eat\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"logical-1985516"},"content":"                + \"2.[D][ ] homework (by: 02 Feb 2024 23:59)\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"logical-1985516"},"content":"                + \"3.[E][ ] study (from: 02 Feb 2024 08:00 to: 02 Feb 2024 12:00)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"logical-1985516":137}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import luke.List;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import luke.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import luke.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import luke.exception.InvalidSyntaxException;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"import luke.exception.SaveFileCorruptedException;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import luke.exception.UnknownCommandException;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import luke.task.Deadline;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import luke.task.Event;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import luke.task.ToDo;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import luke.Parser;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    private String fileName \u003d \"./testStorage/data.txt\";","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    private Storage storage \u003d new Storage(fileName);","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    public ParserTest() throws IOException, SaveFileCorruptedException {","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"    public void testBye() throws IOException {","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(\"Bye. Hope to see you again soon!\\n\",","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"                parser.parse(\"bye\", taskList, ui, storage)","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        );","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"    public void testBye2() throws IOException {","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(new InvalidSyntaxException(\"bye\").toString(), parser.parse(\"bye \", taskList, ui, storage));","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"    public void testBye3() throws IOException {","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(new UnknownCommandException().toString(), parser.parse(\" bye\", taskList, ui, storage));","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"    public void testList() throws IOException {","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Deadline(\"homework\", parser.toLocalDateTime(\"2024-02-02 23:59\")), storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Event(\"study\", parser.toLocalDateTime(\"2024-02-02 08:00\"),","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"                parser.toLocalDateTime(\"2024-02-02 12:00\")), storage, ui);","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(\"Here are the tasks in your list:\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"                + taskList.toString() + \"\\n\",","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"                parser.parse(\"list\", taskList, ui, storage)","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"        );","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"    public void testList2() throws IOException {","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(new InvalidSyntaxException(\"list\").toString(), parser.parse(\"list \", taskList, ui, storage));","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"logical-1985516":71}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import luke.exception.SaveFileCorruptedException;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import luke.List;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"import luke.Parser;","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"import luke.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"import luke.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"import luke.task.Deadline;","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"import luke.task.Event;","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"import luke.task.ToDo;","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":" * Turn off assertions to test.","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"    private String path \u003d \"./testStorage/data.txt\";","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"    public void testCreateFile() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"            file.delete();","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        Storage storage \u003d new Storage(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(file.exists(), true);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"    public void testCreateDirectory() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"        File directory \u003d new File(\"./testStorage\");","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"            file.delete();","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"        if (directory.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"            directory.delete();","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"        Storage storage \u003d new Storage(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(directory.exists(), true);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"    public void testCreateDirectoryAndFile() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        File directory \u003d new File(\"./testStorage\");","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"            file.delete();","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"        if (directory.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"            directory.delete();","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"        Storage storage \u003d new Storage(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(file.exists(), true);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"    public void testSaveTasks() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"        Storage storage \u003d new Storage(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Deadline(\"homework\", parser.toLocalDateTime(\"2024-02-02 23:59\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"        taskList.markTask(0, storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Event(\"study\", parser.toLocalDateTime(\"2024-02-02 08:00\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"                parser.toLocalDateTime(\"2024-02-02 12:00\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"        String expected \u003d \"1.[T][X] eat\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"                + \"2.[D][ ] homework (by: 02 Feb 2024 23:59)\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"                + \"3.[E][ ] study (from: 02 Feb 2024 08:00 to: 02 Feb 2024 12:00)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"        StringBuilder newFileContent \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(path));","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"            newFileContent.append(reader.readLine()).append(\"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"        newFileContent.append(reader.readLine());","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(expected, String.valueOf(newFileContent));","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"    public void testLoadTasks() throws IOException, SaveFileCorruptedException {","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"        Storage storage \u003d new Storage(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Deadline(\"homework\", parser.toLocalDateTime(\"2024-02-02 23:59\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"        taskList.markTask(0, storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Event(\"study\", parser.toLocalDateTime(\"2024-02-02 08:00\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"                parser.toLocalDateTime(\"2024-02-02 12:00\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"        String newFileContent \u003d \"1.[T][X] eat\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"                + \"2.[D][ ] homework (by: 02 Feb 2024 23:59)\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"                + \"3.[E][ ] study (from: 02 Feb 2024 08:00 to: 02 Feb 2024 12:00)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(path));","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"        writer.write(newFileContent);","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"        writer.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"        storage.loadTasks();","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(newFileContent, taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"logical-1985516":110}},{"path":"testData/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"1.[T][ ] eat","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"2.[T][ ] eat","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"3.[T][ ] eat","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"logical-1985516":3}},{"path":"testStorage/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"1.[T][ ] eat","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"logical-1985516":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"logical-1985516":9}}]
