[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"# remi.Remi project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"3. After that, locate the `src/main/java/remi.Remi.java` file, right-click it, and choose `Run remi.Remi.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"ivan24004":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"    mainClass.set(\"remi.Remi\")","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"    archiveBaseName \u003d \"remi\"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ivan24004"},"content":"checkstyle {","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"ivan24004"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"-":40,"ivan24004":23}},{"path":"src/main/java/remi/Remi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import remi.utils.GuiLauncher;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":" * Main class and entrypoint for the Remi chatbot.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"public class Remi {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"        Application.launch(GuiLauncher.class, args);","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":15}},{"path":"src/main/java/remi/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.gui;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"    private void flip() {","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"ivan24004"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"ivan24004"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"ivan24004"},"content":"    public static DialogBox getRemiDialog(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"ivan24004"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"ivan24004"},"content":"        db.flip();","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"ivan24004"},"content":"        return db;","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"ivan24004":62}},{"path":"src/main/java/remi/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.gui;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"import remi.io.Message;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"import remi.model.Ui;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"    private Image uiImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaRemi.jpg\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"    public void setUi(Ui ui) {","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Ui\u0027s reply and then appends them to","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"        Message response \u003d ui.doOnce(new Message(input));","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"                DialogBox.getRemiDialog(response.getMessage(), uiImage)","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"ivan24004"},"content":"        );","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"ivan24004"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"ivan24004":55}},{"path":"src/main/java/remi/io/Inputter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.io;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":" * This takes messages from standard input","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"public class Inputter {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"     * This gets the last line of input from the user.","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"     * @return a message containing the last input of the user","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"    public static Message inputMessage() {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"        return new Message(sc.nextLine());","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":19}},{"path":"src/main/java/remi/io/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.io;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":" * Basic class to carry","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"public class Message {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"    private final String data;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"     * Basic constructor that takes in a String and constructs a Message object.","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"     * @param data string containing the message data","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"    public Message(String data) {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"        this.data \u003d data;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"     * Simple getter for the message.","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"     * @return the message stored in the object","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"        return this.data;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":24}},{"path":"src/main/java/remi/io/Outputter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.io;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":" * Class that takes in messages and outputs them in the proper format.","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"public class Outputter {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"    private static final int BORDER_LENGTH \u003d 50;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"     * Display message in a certain format.","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"     * @param msg message to be outputted, you do not need to end it with a newline.","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"    public static void outputMessage(Message msg) {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"        System.out.println(\"-\".repeat(BORDER_LENGTH));","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"        System.out.println(msg.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"        System.out.println(\"-\".repeat(BORDER_LENGTH));","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":19}},{"path":"src/main/java/remi/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":" * Represents a deadline task that ends by a certain time. Subclass of Task.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"    private String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"     * Simple constructor for the deadline. Formats the dates according to the formatDate() method.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"     * Works with dates only, not time.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"     * @param label name of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"     * @param by ending time","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"    public Deadline(String label, String by) {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"        super(label);","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"        this.by \u003d formatDate(by);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"     * Returns a parsable string of the deadline task. Meant to be used for remi.storage purposes.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"     * @return a parsable string representation of the task and all its details","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"    public String getParsableString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"        return \"D|\" + super.getParsableString() + \"|\" + by;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":34}},{"path":"src/main/java/remi/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":" * Represents an event class that starts and ends at a certain date. Subclass of Task.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"    private String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"    private String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"     * Simple constructor for the event. Formats the dates according to the formatDate() method.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"     * Works with dates only, not time.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"     * @param label name of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"     * @param from starting date","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"     * @param to ending date","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"    public Event(String label, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"        super(label);","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"        this.from \u003d formatDate(from);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"        this.to \u003d formatDate(to);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), from, to);","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"     * Returns a parsable string of the event task. Meant to be used for remi.storage purposes.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"     * @return a parsable string representation of the task and all its details","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"    public String getParsableString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"        return String.format(\"E|%s|%s|%s\", super.getParsableString(), from, to);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":38}},{"path":"src/main/java/remi/model/StoredTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import remi.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import remi.utils.RemiError;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":" * A TaskList variant that writes to Storage any time an update is made.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"public class StoredTaskList extends TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"    public StoredTaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"        super();","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"    public void addTask(Task t){","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"        super.addTask(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"        Storage.store(this);","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"    public void markTask(int idx) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"        super.markTask(idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"        Storage.store(this);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"    public void unmarkTask(int idx) {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"        super.unmarkTask(idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"        Storage.store(this);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"    public void removeTask(int idx) throws RemiError {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"        super.removeTask(idx);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"        Storage.store(this);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ivan24004":38}},{"path":"src/main/java/remi/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":" * General task class. Has a label and a flag denoting whether the task is done or not.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"    private String label;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"     * Tries to parse a string as a date, if impossible returns the original string.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"     * Parses from \"yyyy-MM-dd\" and returns \"dd MMM yyyy\".","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"     * @param input input string that may or may not be a date","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"     * @return the date as a string in \"dd MMM yyyy\" format","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"    protected String formatDate(String input) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"            LocalDate date \u003d LocalDate.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"            return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"            return input;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"    public String getLabel() {","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"        return label;","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"    public Task(String label) {","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"        this.label \u003d label;","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"    public void mark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"     * Checks if the queryString is located in the label parameter of this object.","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"     * @param queryString the string we are querying","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"ivan24004"},"content":"    public boolean checkQuery(String queryString) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ivan24004"},"content":"        return this.label.contains(queryString);","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"ivan24004"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"ivan24004"},"content":"     * @return a string representation of the task and all its details","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"ivan24004"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"ivan24004"},"content":"        String res \u003d \"\";","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"ivan24004"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"ivan24004"},"content":"            res +\u003d \"[X]\";","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"ivan24004"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"ivan24004"},"content":"            res +\u003d \"[ ]\";","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"ivan24004"},"content":"        return res + \" \" + label;","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"ivan24004"},"content":"     * Returns a parsable string of the task. Meant to be used for remi.storage purposes.","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"ivan24004"},"content":"     * @return a parsable string representation of the task and all its details","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"ivan24004"},"content":"    public String getParsableString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"ivan24004"},"content":"        String res \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"ivan24004"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"ivan24004"},"content":"            res +\u003d \"X\";","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"ivan24004"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"ivan24004"},"content":"            res +\u003d \"V\";","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"ivan24004"},"content":"        return res + \"|\" + label;","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":88}},{"path":"src/main/java/remi/model/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"import remi.utils.RemiError;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":" * Stores the list of Tasks, allows you to add, remove, and find tasks by index.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"public class TaskList {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"     * Simply add a task to the TaskList object.","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"     * @param t task to be added","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"        taskList.add(t);","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"     * Mark a task, does nothing if task is already marked.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"     * @param idx the 1-indexed value of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"    public void markTask(int idx) {","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"        getTask(idx).mark();","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"     * Unmark a task, does nothing if task isn\u0027t marked yet.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"     * @param idx the 1-indexed value of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"    public void unmarkTask(int idx) {","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"        getTask(idx).unmark();","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"     * Gets the task based on its idx in the TaskList","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"     * @param idx the 1-indexed value of the task to be removed","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"     * @return the task object","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"ivan24004"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"ivan24004"},"content":"        return taskList.get(idx - 1);","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ivan24004"},"content":"     * Gets a list of tasks that contain the queryString in their label.","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"ivan24004"},"content":"     * @param queryString the string to be queried in all the task labels","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ivan24004"},"content":"     * @return the list of tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ivan24004"},"content":"    public List\u003cTask\u003e getTask(String queryString) {","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ivan24004"},"content":"        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ivan24004"},"content":"        for (Task t: taskList) {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ivan24004"},"content":"            if (t.checkQuery(queryString)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ivan24004"},"content":"                res.add(t);","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"ivan24004"},"content":"        return res;","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"ivan24004"},"content":"     * Creates a copy of this taskList that is sorted alphabetically based on label.","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"ivan24004"},"content":"     * @return a copy of the TaskList object that is sorted","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"ivan24004"},"content":"    public TaskList getSortedTasks() {","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"ivan24004"},"content":"        ArrayList\u003cTask\u003e sorted \u003d new ArrayList\u003cTask\u003e(taskList);","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"ivan24004"},"content":"        sorted.sort(Comparator.comparing(Task::getLabel));","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"ivan24004"},"content":"        return new TaskList(sorted);","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"ivan24004"},"content":"     * Removes a task from the taskList based on idx.","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"ivan24004"},"content":"     * @param idx the 1-indexed value of the task to be removed","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"ivan24004"},"content":"     * @throws RemiError when invalid idx is given","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"ivan24004"},"content":"    public void removeTask(int idx) throws RemiError{","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"ivan24004"},"content":"        if (idx \u003c 0 || taskList.size() \u003c\u003d idx) {","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"ivan24004"},"content":"            throw new RemiError(\"Task is out of bounds and couldn\u0027t be removed.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"ivan24004"},"content":"        taskList.remove(idx - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"ivan24004"},"content":"    public int size() {","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"ivan24004"},"content":"        return taskList.size();","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"ivan24004"},"content":"     * Returns the numbered list of tasks.","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"ivan24004"},"content":"     * @return list of tasks as a string","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"ivan24004"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"ivan24004"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"ivan24004"},"content":"        // NOTE: May be slow","lastModifiedDate":"2024-01-23"},{"lineNumber":110,"author":{"gitId":"ivan24004"},"content":"        for (int i \u003d 1; taskList.size() \u003e\u003d i; i++) {","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"ivan24004"},"content":"            res.append(String.format(\"%d. %s\", i, getTask(i)));","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"ivan24004"},"content":"            if (i !\u003d taskList.size()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"ivan24004"},"content":"                res.append(\"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"ivan24004"},"content":"        return res.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"ivan24004"},"content":"     * Returns a parsable string of the deadline task. Meant to be used for remi.storage purposes.","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"ivan24004"},"content":"     * @return a parsable string representation of the task and all its details","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"ivan24004"},"content":"    public String getParsableString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"ivan24004"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"ivan24004"},"content":"        // NOTE: May be slow","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"ivan24004"},"content":"        for (int i \u003d 1; taskList.size() \u003e\u003d i; i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"ivan24004"},"content":"            res.append(getTask(i).getParsableString());","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"ivan24004"},"content":"            if (i !\u003d taskList.size()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"ivan24004"},"content":"                res.append(\"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"ivan24004"},"content":"        return res.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":135}},{"path":"src/main/java/remi/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":" * Represents a Todo task, subclass of Task object.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"     * Simple constructor for a Todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"     * @param label the name of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"    public ToDo(String label) {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"        super(label);","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"     * Returns a parsable string of the Todo task. Meant to be used for remi.storage purposes.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"     * @return a parsable string representation of the task and all its details","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"    public String getParsableString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"        return String.format(\"T|%s\", super.getParsableString());","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":31}},{"path":"src/main/java/remi/model/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import remi.io.Inputter;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import remi.io.Message;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"import remi.io.Outputter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"import remi.model.commands.CommandList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"import remi.parsing.Parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"import remi.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"import remi.utils.RemiError;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":" * Handles the input output loop, receiving commands and sending output to the console. Supposed to be the \"main\" class","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":" * of the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"    private boolean isFinished;","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"    private StoredTaskList taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"    private CommandList commandList;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"    public Ui() {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"        isFinished \u003d false;","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"        taskList \u003d Storage.get();","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"        commandList \u003d new CommandList(taskList, this);","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"        parser \u003d new Parser(commandList);","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"     * Initializes the io loop of the chatbot. This includes loading the storage and running the message event loop.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"    public void doIoLoop() {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"        initialize();","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"        while (!isFinished) {","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"            doOnce();","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"            if (isFinished) {","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"                break;","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"     * Does the first step in initializing the IO loop.","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"        Outputter.outputMessage(new Message(\"Hello! I\u0027m Remi\\n\" + \"What can I do for you?\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"ivan24004"},"content":"     * Does one iteration of the io loop. Gets input from stdin.","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"ivan24004"},"content":"    public void doOnce() {","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"ivan24004"},"content":"        Message input \u003d Inputter.inputMessage();","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"ivan24004"},"content":"        Message output \u003d doOnce(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"ivan24004"},"content":"        Outputter.outputMessage(output);","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"ivan24004"},"content":"     * Does one iteration of the io loop. Receives input as a parameter.","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"ivan24004"},"content":"     * @param input the input in the Message format.","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"ivan24004"},"content":"     * @return the message to be outputted.","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"ivan24004"},"content":"    public Message doOnce(Message input) {","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"ivan24004"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"ivan24004"},"content":"            return parser.parseAndRun(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"ivan24004"},"content":"        } catch (RemiError err) {","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"ivan24004"},"content":"            return new Message(err.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"ivan24004"},"content":"     * Utility function to exit the io loop.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"ivan24004"},"content":"     * If called at least once, termination will occur after all pending commands are finished.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"ivan24004"},"content":"    public void exitIoLoop() {","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"ivan24004"},"content":"        isFinished \u003d true;","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"ivan24004"},"content":"    public boolean getIsFinished() {","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"ivan24004"},"content":"        return isFinished;","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":85}},{"path":"src/main/java/remi/model/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"import remi.io.Message;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import remi.utils.RemiError;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":" * Interface for creating Commands, must override the run method.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"@FunctionalInterface","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"public interface Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"     * The function in this lambda method.","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"     * @param args the arguments of the message (this excludes the first word of the command)","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"     * @return the message to be outputted","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"    Message run(String args) throws RemiError;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":17}},{"path":"src/main/java/remi/model/commands/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import java.util.List;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"import remi.io.Message;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"import remi.model.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"import remi.model.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"import remi.model.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"import remi.model.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"import remi.model.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"import remi.model.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"import remi.utils.RemiError;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":" * A list of all the commands. This class\u0027s responsibility is to parse commands as strings and run them.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"public class CommandList {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"    private HashMap\u003cString, Command\u003e commandLookup;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"    private Ui chatbot;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"     * Constructor that requires a TaskList object and Ui object.","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"     * Both of these are expected to be given by the Ui class.","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"     * @param taskList the TaskList object","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"     * @param chatbot the Ui object, mostly used for exiting","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"    public CommandList(TaskList taskList, Ui chatbot) {","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"        commandLookup \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"        this.chatbot \u003d chatbot;","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"        loadCommands();","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"     * Finds the option of the form \".../option...\".","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"     * Example: \"going home /by: friday\", should return the string \"friday\"","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"     * @param option the option to be found, include the \"/\" at the start","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"     * @param input the input line to be scanned","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"     * @return the string value of the specific option","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"    private String findOption(String option, String input) throws RemiError {","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"        assert !option.isEmpty();","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"        int idx \u003d input.indexOf(option);","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"ivan24004"},"content":"        if (idx \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"ivan24004"},"content":"            throw new RemiError(\"I couldn\u0027t find a \" + option + \", please specify it by adding a \" + option);","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"ivan24004"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"ivan24004"},"content":"            int endIdx \u003d input.indexOf(\"/\", idx + 1);","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"ivan24004"},"content":"            if (endIdx \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"ivan24004"},"content":"                endIdx \u003d input.length();","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"ivan24004"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"ivan24004"},"content":"                // decrement to get the space before the /","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"ivan24004"},"content":"                endIdx \u003d endIdx - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"ivan24004"},"content":"            return input.substring(idx + option.length() + 1, endIdx);","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"ivan24004"},"content":"    private String getLabel(String input) throws RemiError {","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"ivan24004"},"content":"        int idx \u003d input.indexOf(\"/\");","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"ivan24004"},"content":"        if (idx \u003d\u003d -1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"ivan24004"},"content":"            idx \u003d input.length();","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"ivan24004"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"ivan24004"},"content":"            idx--;","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"ivan24004"},"content":"        if (idx \u003c\u003d 0) {","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"ivan24004"},"content":"            throw new RemiError(\"You didn\u0027t put a description for the task.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"ivan24004"},"content":"        return input.substring(0, idx);","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"ivan24004"},"content":"    private void loadCommands() {","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"exit\", (args) -\u003e {","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"ivan24004"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"ivan24004"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"ivan24004"},"content":"            return new Message(\"Bye. Please finish some of your tasks.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"list\", (args) -\u003e {","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"ivan24004"},"content":"            return new Message(taskList.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"listsort\", (args) -\u003e {","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"ivan24004"},"content":"            return new Message(taskList.getSortedTasks().toString());","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"mark\", (args) -\u003e {","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"ivan24004"},"content":"            int idx \u003d Integer.parseInt(args);","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"ivan24004"},"content":"            taskList.markTask(idx);","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"ivan24004"},"content":"            return new Message(\"Wow you took your time with that one:\\n\" + taskList.getTask(idx));","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"unmark\", (args) -\u003e {","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"ivan24004"},"content":"            int idx \u003d Integer.parseInt(args);","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"ivan24004"},"content":"            taskList.unmarkTask(idx);","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"ivan24004"},"content":"            return new Message(\"Why did you say it was finished then?\\n\" + taskList.getTask(idx));","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"todo\", (args) -\u003e {","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"ivan24004"},"content":"            String label \u003d getLabel(args);","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"ivan24004"},"content":"            ToDo todo \u003d new ToDo(label);","lastModifiedDate":"2024-01-24"},{"lineNumber":107,"author":{"gitId":"ivan24004"},"content":"            taskList.addTask(todo);","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"ivan24004"},"content":"            return new Message(String.format(","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"ivan24004"},"content":"                    \"I\u0027ve added the task.\\n%s\\nYou still have %d tasks in the list.\",","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"ivan24004"},"content":"                    todo, taskList.size())","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"ivan24004"},"content":"            );","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"deadline\", (args) -\u003e {","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"ivan24004"},"content":"            String label \u003d getLabel(args);","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"ivan24004"},"content":"            String by \u003d findOption(\"/by\", args);","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"ivan24004"},"content":"            Deadline deadline \u003d new Deadline(label, by);","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"ivan24004"},"content":"            taskList.addTask(deadline);","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"ivan24004"},"content":"            return new Message(String.format(","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"ivan24004"},"content":"                    \"I\u0027ve added the task.\\n%s\\nYou still have %d tasks in the list.\",","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"ivan24004"},"content":"                    deadline, taskList.size())","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"ivan24004"},"content":"            );","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"event\", (args) -\u003e {","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"ivan24004"},"content":"            String label \u003d getLabel(args);","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"ivan24004"},"content":"            String from \u003d findOption(\"/from\", args);","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"ivan24004"},"content":"            String to \u003d findOption(\"/to\", args);","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"ivan24004"},"content":"            Event event \u003d new Event(label, from, to);","lastModifiedDate":"2024-01-23"},{"lineNumber":130,"author":{"gitId":"ivan24004"},"content":"            taskList.addTask(event);","lastModifiedDate":"2024-01-23"},{"lineNumber":131,"author":{"gitId":"ivan24004"},"content":"            return new Message(String.format(\"I\u0027ve added the task.\\n%s\\nYou still have %d tasks in the list.\",","lastModifiedDate":"2024-02-15"},{"lineNumber":132,"author":{"gitId":"ivan24004"},"content":"                    event, taskList.size())","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"ivan24004"},"content":"            );","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"delete\", (args) -\u003e {","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"ivan24004"},"content":"            int idx \u003d Integer.parseInt(args);","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"ivan24004"},"content":"            Task task \u003d taskList.getTask(idx);","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"ivan24004"},"content":"            taskList.removeTask(idx);","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"ivan24004"},"content":"            return new Message(String.format(\"I\u0027ve removed the task.\\n%s\\nYou still have %d tasks in the list.\",","lastModifiedDate":"2024-02-15"},{"lineNumber":141,"author":{"gitId":"ivan24004"},"content":"                    task, taskList.size())","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"ivan24004"},"content":"            );","lastModifiedDate":"2024-02-15"},{"lineNumber":143,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"ivan24004"},"content":"        commandLookup.put(\"find\", (args) -\u003e {","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"ivan24004"},"content":"            List\u003cTask\u003e tasks \u003d taskList.getTask(args);","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"ivan24004"},"content":"            StringBuilder res \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"ivan24004"},"content":"            for (int i \u003d 0; tasks.size() \u003e i; i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":149,"author":{"gitId":"ivan24004"},"content":"                res.append(String.format(\"\\n%d. %s\", i + 1, tasks.get(i)));","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"ivan24004"},"content":"            return new Message(res.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"ivan24004"},"content":"        });","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":154,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":155,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":156,"author":{"gitId":"ivan24004"},"content":"     * This runs a keyword with the given args.","lastModifiedDate":"2024-02-15"},{"lineNumber":157,"author":{"gitId":"ivan24004"},"content":"     * Updates all required state and returns the output message.","lastModifiedDate":"2024-02-15"},{"lineNumber":158,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":159,"author":{"gitId":"ivan24004"},"content":"     * @param keyword the keyword, first word in the inputted string","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"ivan24004"},"content":"     * @param args the rest of the args, expected to be space seperated","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"ivan24004"},"content":"     * @return the String response of the keyword and args","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"ivan24004"},"content":"     * @throws RemiError when the keyword isn\u0027t recognized","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":164,"author":{"gitId":"ivan24004"},"content":"    public Message runKeyword(String keyword, String args) throws RemiError {","lastModifiedDate":"2024-01-24"},{"lineNumber":165,"author":{"gitId":"ivan24004"},"content":"        if (this.commandLookup.containsKey(keyword)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":166,"author":{"gitId":"ivan24004"},"content":"            return commandLookup.get(keyword).run(args);","lastModifiedDate":"2024-01-23"},{"lineNumber":167,"author":{"gitId":"ivan24004"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":168,"author":{"gitId":"ivan24004"},"content":"            throw new RemiError(keyword + \" is not a real command.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":169,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":170,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":171,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":171}},{"path":"src/main/java/remi/parsing/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.parsing;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import remi.io.Message;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import remi.model.commands.CommandList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"import remi.utils.RemiError;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":" * Parses strings and feeds them to the command line. Also allows you to directly run the parsed string.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"public class Parser {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"    CommandList commandList;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"    private String[] getKeywordArgsSplit(Message input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"        int idx \u003d input.getMessage().indexOf(\u0027 \u0027);","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"        String[] res \u003d new String[2];","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"        // this indicates a single word command","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"        if (idx \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"            res[0] \u003d input.getMessage();","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"            res[1] \u003d \"\";","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"            res[0] \u003d input.getMessage().substring(0, idx);","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"            res[1] \u003d input.getMessage().substring(idx + 1);","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"        return res;","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"     * Initializes the parser and loads all the commands.","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"     * @param commandList CommandList object provided by the Chatbot","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"    public Parser(CommandList commandList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"        this.commandList \u003d commandList;","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"     * Runs the necessary logic given a message and returns the output.","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"     * @param input message received from the console","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"     * @return message to be outputted","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"    public Message parseAndRun(Message input) throws RemiError {","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"        String[] splitMsg \u003d getKeywordArgsSplit(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"        String keyword \u003d splitMsg[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"        String args \u003d splitMsg[1];","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"        return commandList.runKeyword(keyword, args);","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ivan24004":51}},{"path":"src/main/java/remi/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import java.io.File;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"import remi.model.Deadline;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"import remi.model.Event;","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"import remi.model.StoredTaskList;","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"import remi.model.Task;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"import remi.model.ToDo;","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":" * Class for handling storing and getting saved data. This saved data is in the form of a StoredTaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"    private static final String FILE_PATH \u003d \"tasks.txt\";","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"    private static Task parseLine(ArrayList\u003cString\u003e line) {","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"        if (line.size() \u003c 3) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"            // early exit","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"            return null;","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"        Task res \u003d null;","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"        String type \u003d line.get(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"        boolean isDone \u003d line.get(1).equals(\"X\");","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"        String description \u003d line.get(2);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"        List\u003cString\u003e params \u003d line.subList(3, line.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"        switch(type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"        case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"            res \u003d new ToDo(description);","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"        case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"            if (params.size() \u003c 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"                return null;","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"            String from \u003d params.get(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"            String to \u003d params.get(1);","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"            res \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"        case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"            if (params.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ivan24004"},"content":"                return null;","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ivan24004"},"content":"            String by \u003d params.get(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ivan24004"},"content":"            res \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"ivan24004"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ivan24004"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ivan24004"},"content":"            return null;","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ivan24004"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ivan24004"},"content":"            res.mark();","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"ivan24004"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"ivan24004"},"content":"            res.unmark();","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"ivan24004"},"content":"        return res;","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"ivan24004"},"content":"    private static StoredTaskList parseData(ArrayList\u003cArrayList\u003cString\u003e\u003e data) {","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"ivan24004"},"content":"        StoredTaskList res \u003d new StoredTaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"ivan24004"},"content":"        for (ArrayList\u003cString\u003e line: data) {","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"ivan24004"},"content":"            Task lineTask \u003d parseLine(line);","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"ivan24004"},"content":"            if (lineTask \u003d\u003d null) {","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"ivan24004"},"content":"                break;","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"ivan24004"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"ivan24004"},"content":"            res.addTask(lineTask);","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"ivan24004"},"content":"        return res;","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"ivan24004"},"content":"     * Stores the string representation of the taskList in a designated file.","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"ivan24004"},"content":"    public static void store(StoredTaskList taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"ivan24004"},"content":"        try (FileWriter out \u003d new FileWriter(FILE_PATH)){","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"ivan24004"},"content":"            out.write(taskList.getParsableString());","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"ivan24004"},"content":"            out.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"ivan24004"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"ivan24004"},"content":"            // do nothing","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"ivan24004"},"content":"            System.out.println(err.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"ivan24004"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"ivan24004"},"content":"     * Retrieves a previously stored data file and returns its representation as a TaskList object.","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"ivan24004"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"ivan24004"},"content":"     * @return the stored TaskList object","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"ivan24004"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"ivan24004"},"content":"    public static StoredTaskList get() {","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"ivan24004"},"content":"        StoredTaskList output \u003d new StoredTaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"ivan24004"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"ivan24004"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"ivan24004"},"content":"            // only creates file if it doesn\u0027t exist yet","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"ivan24004"},"content":"            f.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"ivan24004"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"ivan24004"},"content":"            System.out.println(err.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"ivan24004"},"content":"        boolean corruptedFile \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"ivan24004"},"content":"        try (BufferedReader in \u003d new BufferedReader(new FileReader(f))) {","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"ivan24004"},"content":"            Stream\u003cString\u003e allLines \u003d in.lines();","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"ivan24004"},"content":"            Stream\u003cArrayList\u003cString\u003e\u003e splitParams \u003d allLines.map((line) -\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"ivan24004"},"content":"                    new ArrayList\u003c\u003e(Arrays.asList(line.split(\"\\\\|\"))));","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"ivan24004"},"content":"            ArrayList\u003cArrayList\u003cString\u003e\u003e data \u003d splitParams.collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"ivan24004"},"content":"            return parseData(data);","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"ivan24004"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"ivan24004"},"content":"            System.out.println(err.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"ivan24004"},"content":"        return output;","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ivan24004":125}},{"path":"src/main/java/remi/utils/GuiLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.utils;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"import remi.gui.MainWindow;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"import remi.model.Ui;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"public class GuiLauncher extends Application {","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(GuiLauncher.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setUi(ui);","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"            stage.show();","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"ivan24004":34}},{"path":"src/main/java/remi/utils/RemiError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.utils;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"public class RemiError extends Exception{","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"    public RemiError(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ivan24004":7}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"ivan24004":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"remi.gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"ivan24004":19}},{"path":"src/test/java/remi/model/commands/CommandListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import remi.model.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"import remi.model.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"import remi.utils.RemiError;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"public class CommandListTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"    public void addTodo_NoError() {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"        Ui dummyChatBot \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"        TaskList dummyTaskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"        CommandList commandList \u003d new CommandList(dummyTaskList, dummyChatBot);","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"        assertDoesNotThrow(() -\u003e commandList.runKeyword(\"todo\", \"stuff\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"    public void nonsenseCommand_ShouldThrowError() {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"        Ui dummyChatBot \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"        TaskList dummyTaskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"        CommandList commandList \u003d new CommandList(dummyTaskList, dummyChatBot);","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"        assertThrows(RemiError.class, () -\u003e commandList.runKeyword(\"nonsense\", \"\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ivan24004":29}},{"path":"src/test/java/remi/model/commands/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"package remi.model.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"import remi.model.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"public class ToDoTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"    public void parsableString_dummyTask_returnString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"        ToDo todo \u003d new ToDo(\"dummy\");","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"        assertEquals(todo.getParsableString(), \"T|V|dummy\");","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ivan24004":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ivan24004"},"content":"Hello! I\u0027m remi.Remi","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ivan24004"},"content":"What can I do for you?","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ivan24004"},"content":"I\u0027ve added the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ivan24004"},"content":"[T][ ] borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ivan24004"},"content":"You still have 1 tasks in the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ivan24004"},"content":"1. [T][ ] borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ivan24004"},"content":"I\u0027ve added the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ivan24004"},"content":"[D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"You still have 2 tasks in the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ivan24004"},"content":"I\u0027ve added the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ivan24004"},"content":"[E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ivan24004"},"content":"You still have 3 tasks in the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ivan24004"},"content":"I\u0027ve added the task.","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ivan24004"},"content":"[D][ ] do homework (by: no idea :-p)","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ivan24004"},"content":"You still have 4 tasks in the list.","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"ivan24004"},"content":"Wow you took your time with that one:","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"ivan24004"},"content":"[T][X] borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"ivan24004"},"content":"1. [T][X] borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"ivan24004"},"content":"2. [D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"ivan24004"},"content":"3. [E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"ivan24004"},"content":"4. [D][ ] do homework (by: no idea :-p)","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"ivan24004"},"content":"Wow you took your time with that one:","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"ivan24004"},"content":"[E][X] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ivan24004"},"content":"Why did you say it was finished then?","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ivan24004"},"content":"[T][ ] borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"ivan24004"},"content":"1. [T][ ] borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"ivan24004"},"content":"2. [D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"ivan24004"},"content":"3. [E][X] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"ivan24004"},"content":"4. [D][ ] do homework (by: no idea :-p)","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"ivan24004"},"content":"Bye. Please finish some of your tasks.","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"ivan24004"},"content":"--------------------------------------------------","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ivan24004":54}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ivan24004"},"content":"javac  -cp ..\\src\\main\\java\\remi -Xlint:none -d ..\\bin ..\\src\\main\\java\\remi\\Remi.java","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ivan24004"},"content":"java -classpath ..\\bin remi.Remi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"ivan24004":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ivan24004"},"content":"if ! javac -cp ../src/main/java/remi -Xlint:none -d ../bin ../src/main/java/remi/*.java","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ivan24004"},"content":"java -classpath ../bin remi.Remi \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"ivan24004":2}}]
