[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"# Jimmy project template","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"yuechen2001"},"content":"3. After that, locate the `src/main/java/Jimmy.java` file, right-click it, and choose `Run Jimmy.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yuechen2001":2,"-":22}},{"path":"src/main/java/Jimmy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"public class Jimmy {","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"    private Task[] list \u003d new Task[100];","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"    private int counter \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"    public void greetUser() {","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Hello! I\u0027m Jimmy \\nWhat can I do for you?\");","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"    public void storeUserTask(String input) {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"        list[counter] \u003d new Task(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"added: \" + input);","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"        counter++;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yuechen2001"},"content":"    public void displayTasks() {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yuechen2001"},"content":"        for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yuechen2001"},"content":"            System.out.println((i + 1) + \": \" + list[i].toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yuechen2001"},"content":"    public void markTaskComplete(int taskIndex) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yuechen2001"},"content":"        Task curr \u003d list[taskIndex];","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yuechen2001"},"content":"        curr.markAsComplete();","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yuechen2001"},"content":"    public void markTaskIncomplete(int taskIndex) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yuechen2001"},"content":"        Task curr \u003d list[taskIndex];","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yuechen2001"},"content":"        curr.markAsIncomplete();","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yuechen2001"},"content":"    public void exit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":30}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"public class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"    private String desc;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"    private boolean isCompleted;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"    Task(String input) {","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"        this.desc \u003d input;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"    public void markAsComplete() {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"  \" + this.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yuechen2001"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yuechen2001"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yuechen2001"},"content":"        System.out.println(\"  \" + this.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yuechen2001"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yuechen2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yuechen2001"},"content":"        if (isCompleted) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yuechen2001"},"content":"            return \"[X] \" + this.desc;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yuechen2001"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yuechen2001"},"content":"            return \"[] \" + this.desc;","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":29}},{"path":"src/main/java/Test.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuechen2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yuechen2001"},"content":"public class Test {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yuechen2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yuechen2001"},"content":"        Jimmy bot \u003d new Jimmy();","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yuechen2001"},"content":"        bot.greetUser();","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yuechen2001"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yuechen2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yuechen2001"},"content":"        while (true) {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yuechen2001"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yuechen2001"},"content":"            String[] inputArray \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yuechen2001"},"content":"            String instruction \u003d inputArray[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yuechen2001"},"content":"            switch (instruction) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yuechen2001"},"content":"                case \"bye\":","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yuechen2001"},"content":"                    bot.exit();","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yuechen2001"},"content":"                    return;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yuechen2001"},"content":"                case \"list\":","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yuechen2001"},"content":"                    bot.displayTasks();","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yuechen2001"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yuechen2001"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yuechen2001"},"content":"                    int completeTask \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yuechen2001"},"content":"                    bot.markTaskComplete(completeTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yuechen2001"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yuechen2001"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yuechen2001"},"content":"                    int incompleteTask \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yuechen2001"},"content":"                    bot.markTaskIncomplete(incompleteTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yuechen2001"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yuechen2001"},"content":"                default:","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yuechen2001"},"content":"                    bot.storeUserTask(userInput);","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yuechen2001"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yuechen2001"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yuechen2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yuechen2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yuechen2001":33}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yuechen2001"},"content":"java -classpath ..\\bin Jimmy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yuechen2001":1,"-":20}}]
