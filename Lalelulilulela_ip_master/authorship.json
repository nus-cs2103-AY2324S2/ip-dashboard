[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"# Lelu chatbot user guide","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"\u003e \"Hi, I am your favaourite friend Lelu! What can I do for you?\" - Lelu","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"Lelu is here to help you with __managing you tasks__!","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"\u003e ![Ui](https://github.com/Lalelulilulela/ip/assets/122797951/c690a9ea-a919-4c7c-931c-f2a01f3767bb)","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"Dowload [Lelu](https://github.com/Lalelulilulela/ip/releases/tag/A-Release) now!","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"## Features","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"### Add a task","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"\u003e Lelu keeps track of the tasks added.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"__Add `todo` task__","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"- Format: `todo \u003cdescription\u003e` \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"- Example: `todo talk to Lelu`","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"__Add `deadline` task__","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"- Format: `deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HH:mm\u003e` \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"- Example: `deadline finish project /by 2024-02-27 23:59`","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"__Add `event` task__","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"- Format: `event \u003cdescription\u003e /from \u003cdate and time\u003e /to \u003cdate and time\u003e` \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"- Example: `event attend wedding /from 2pm /to 3pm`","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"  ","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"### View recorded tasks","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"\u003e To view a numbered list of tasks recorded by Lelu.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"- Format: `list` ","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"### Keep track of task status","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"__Mark task as done__","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"- Format: `mark \u003ctask number in list\u003e` \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"- Example: `mark 2`","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"  ","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"__Mark task as not done__","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"- Format: `unmark \u003ctask number in list\u003e` \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"- Example: `unmark 2`","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"### Search for tasks containing a keyword","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"\u003e Returns a numbered list of tasks containing the keyword.","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"- Format: `find \u003ckeyword\u003e` \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"- Example: `find clean`","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"### Delete a task","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"- Format: `delete \u003ctask number in list\u003e` \u003cbr\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"- Example: `delete 1`","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"### Display instructions","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"- Format: `help`","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"Lalelulilulela"},"content":"### Exit program","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"Lalelulilulela"},"content":"- Format: `bye`","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"Lalelulilulela":44,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"checkstyle {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"Lalelulilulela"},"content":"    mainClass.set(\"lelu.Launcher\")","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"Lalelulilulela"},"content":"    archiveBaseName \u003d \"lelu\"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"Lalelulilulela"},"content":"    archiveFileName \u003d \u0027lelu.jar\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"Lalelulilulela"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Lalelulilulela":24,"-":40}},{"path":"data/lelu.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"T | 0 | clean up my room  ","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"D | 1 | finish ip | 2024-02-27 23:59","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"E | 0 | attend wedding | 5pm | 10pm","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"Lalelulilulela":3}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"include \u0027src:test\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"findProject(\u0027:src:test\u0027)?.name \u003d \u0027test\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Lalelulilulela":3}},{"path":"src/main/java/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.LeluException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":" * This class represents a command for adding a deadline task to the task list","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":" * managed by the chatbot. When executed, this command parses user input to extract","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":" * the deadline task details and adds it to the task list, along with the specified","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":" * due date and time.","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":" public class AddDeadlineCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"     private static final String BY \u003d \"/by \";","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"     private static final String COMMAND \u003d \"deadline \";","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"     * Executes the command to add a deadline to the list of recorded tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"     * @param tasks Recorded list of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"     * @param ui Format of output shown.","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"     * @param storage To save and load tasks recorded.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"     * @param message Input of user.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws LeluException If the input is invalid or with the wrong format.","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws LeluException {","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"        checkEmptyDescription(message, COMMAND, LeluException.ErrorType.DEADLINE);","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"        Deadline t \u003d checkFormat(message);","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"        assert message.length() \u003e\u003d (COMMAND + BY + Deadline.DATE_FORMAT).length() : \"Input not handled properly\";","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"        return tasks.addTask(t);","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"    private Deadline checkFormat(String message) throws LeluException {","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"        String[] s \u003d message.replaceFirst(COMMAND, \"\").split(BY);","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"        String details \u003d s[0].trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"        if (s.length \u003c 2 || details.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"            InvalidFormatException.callInvalidFormatException(LeluException.ErrorType.DEADLINE);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"        return new Deadline(details, s[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Lalelulilulela":45}},{"path":"src/main/java/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.LeluException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":" * This class represents a command for adding an event task to the task list","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":" * managed by the chatbot. When executed, this command parses user input to extract","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":" * the event task details and adds it to the task list, along with the specified","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":" * start and end timings of the event.","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"    private static final String FROM \u003d \"/from \";","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"    private static final String TO \u003d \"/to \";","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"    private static final String COMMAND \u003d \"event \";","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"     * Executes the command to add an event to the list of recorded tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"     * @param tasks Recorded list of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"     * @param ui Format of output shown.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"     * @param storage To save and load tasks recorded.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"     * @param message Input of user.","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws LeluException If the input is invalid or with the wrong format.","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws LeluException {","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"        checkEmptyDescription(message, COMMAND, LeluException.ErrorType.EVENT);","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"        Event t \u003d checkFormat(message);","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"        assert message.length() \u003e\u003d (COMMAND + FROM + TO).length() : \"Input not handled properly\";","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"        return tasks.addTask(t);","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"    private Event checkFormat(String message) throws LeluException {","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"        String[] t \u003d message.replaceFirst(COMMAND, \"\").split(FROM);","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"        String details \u003d t[0].trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"        if (t.length \u003c 2 || details.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"            InvalidFormatException.callInvalidFormatException(LeluException.ErrorType.EVENT);","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"        String[] frTo \u003d t[1].split(TO);","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"        String from \u003d frTo[0].trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"        String to \u003d frTo[1].trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"Lalelulilulela"},"content":"        if (frTo.length \u003c 2 || from.length() \u003d\u003d 0 || to.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"Lalelulilulela"},"content":"            InvalidFormatException.callInvalidFormatException(LeluException.ErrorType.EVENT);","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"Lalelulilulela"},"content":"        return new Event(details, from, to);","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Lalelulilulela":52}},{"path":"src/main/java/commands/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.LeluException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":" * This class represents a command for adding a todo task to the task list","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":" * managed by the chatbot. When executed, this command parses user input to extract","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":" * the todo task details and adds it to the task list.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"    private static final String COMMAND \u003d \"todo \";","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"     * Executes the command to add a task to the list of recorded tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"     * @param tasks Recorded list of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"     * @param ui Format of output shown.","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"     * @param storage To save and load tasks recorded.","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"     * @param message Input of user.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws LeluException If the input is invalid or with the wrong format.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws LeluException {","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"        checkEmptyDescription(message, COMMAND, LeluException.ErrorType.TODO);","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"        String s \u003d message.replaceFirst(COMMAND, \"\");","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"        assert message.length() \u003e COMMAND.length() : \"Input not handled properly\";","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"        return tasks.addTask(new ToDo(s));","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Lalelulilulela":35}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.LeluException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import ui.MainWindow;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":" * This class represents a command for ending the conversation with the chatbot.","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":" * When executed, this command terminates the chat session and closes the chatbot","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":" * interface, allowing the user to exit gracefully.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":" public class ByeCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"     * Executes the command to exit the application.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"     * @param tasks Recorded list of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"     * @param ui Format of output shown.","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"     * @param storage To save and load tasks recorded.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"     * @param message Input of user.","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws LeluException If the input is invalid or with the wrong format.","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws LeluException {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"        MainWindow.canExit \u003d true;","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"        return ui.exit();","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Lalelulilulela":32}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.LeluException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":" * Abstract class which serves as the base for implementing various commands","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":" * that the chatbot can understand and execute.","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"     * Executes command based on the user input.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"     * @param tasks Recorded list of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"     * @param ui Format of output shown.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"     * @param storage To save and load tasks recorded.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"     * @param message Input of user.","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws LeluException If the input is invalid or with the wrong format.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage, String message) throws LeluException;","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"     * Checks whether the string is a valid number and returns the number as an int if the string is valid.","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"     * @param number Input String which represents TaskList number","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"     * @return TaskList number as an int","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws InvalidFormatException if the number is not valid","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"    public int getTaskListNumber(String number, LeluException.ErrorType err) throws InvalidFormatException {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"            i \u003d Integer.parseInt(number) - 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"            InvalidFormatException.callInvalidFormatException(err);","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"        return i;","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"     * Checks if description of a command input is empty.","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"     * @param message User input","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"Lalelulilulela"},"content":"     * @param command Command type","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"Lalelulilulela"},"content":"     * @param error if description is empty","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws InvalidFormatException","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"Lalelulilulela"},"content":"    public void checkEmptyDescription(String message, String command, LeluException.ErrorType error) throws InvalidFormatException {","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"Lalelulilulela"},"content":"        if (message.trim().equals(command.trim())) {","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"Lalelulilulela"},"content":"            InvalidFormatException.callInvalidFormatException(error);","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Lalelulilulela":56}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.LeluException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":" * This class represents a command for deleting a task from the task list managed","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":" * by the chatbot. When executed, this command removes the specified task from the","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":" * task list based on its index.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"    private static final String COMMAND \u003d \" delete \";","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"     * Executes the command to remove a task from the list of recorded tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"     * @param tasks Recorded list of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"     * @param ui Format of output shown.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"     * @param storage To save and load tasks recorded.","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"     * @param message Input of user.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws LeluException If the input is invalid or with the wrong format.","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws LeluException {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"        checkEmptyDescription(message, COMMAND, LeluException.ErrorType.DELETE);","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"        int i \u003d getTaskListNumber(message.split(\" \")[1], LeluException.ErrorType.DELETE);","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"        assert message.length() \u003e\u003d (COMMAND + \"#\").length() : \"Input not handled properly\";","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"        return tasks.removeTask(i);","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Lalelulilulela":32}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.LeluException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":" * This class represents a command for finding tasks, using a keyword, from the task list managed","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":" * by the chatbot. When executed, this command lists out tasks containing keyword.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"    private static final String COMMAND \u003d \" find \";","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"     * Executes the command to search for tasks containing the keyword entered by the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"     * @param tasks   Recorded list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"     * @param ui      Format of output shown.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"     * @param storage To save and load tasks recorded.","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"     * @param message Input of user.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws LeluException If the input is in the wrong format.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws LeluException {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"        checkEmptyDescription(message, COMMAND, LeluException.ErrorType.FIND);","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"        if (message.replaceFirst(COMMAND, \"\").split(\" \").length \u003e 2) {","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"            throw new InvalidFormatException(\"   Enter only ONE keyword to search for your task:\\n\" +","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"                    \"   find \u003ckeyword\u003e\\n\");","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"        TaskList res \u003d tasks.filter(message.replaceFirst(\"find \", \"\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"        assert message.length() \u003e\u003d \"find #\".length() : \"Input not handled properly\";","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"        return \"   These are matching tasks in your list:\\n\" + res.toString();","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Lalelulilulela":38}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package commands;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.LeluException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"     * Returns instructions of valid user inputs.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"     * @param tasks Recorded list of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"     * @param ui Format of output shown.","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"     * @param storage To save and load tasks recorded.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"     * @param message Input of user.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"     * @return","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws LeluException","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws LeluException {","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"        return ui.showInstructions();","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"Lalelulilulela":23}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.LeluException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":" * This class represents a command for listing all tasks in the task list managed","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":" * by the chatbot. When executed, this command retrieves and displays all tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":" * currently stored in the task list, along with their details.","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"     * Executes the command to list out the tasks in the list of recorded tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"     * @param tasks Recorded list of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"     * @param ui Format of output shown.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"     * @param storage To save and load tasks recorded.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"     * @param message Input of user.","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws LeluException If the input is invalid or with the wrong format.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws LeluException {","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"        return tasks.toString();","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Lalelulilulela":28}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import com.sun.scenario.effect.impl.prism.PrRenderInfo;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.LeluException;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":" * This class represents a command for marking a task as completed in the task list","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":" * managed by the chatbot. When executed, this command updates the status of the","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":" * specified task to indicate that it has been completed.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"    private static final String COMMAND \u003d \"mark \";","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"     * Executes the command to mark a task in the list of recorded tasks as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"     * @param tasks Recorded list of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"     * @param ui Format of output shown.","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"     * @param storage To save and load tasks recorded.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"     * @param message Input of user.","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws LeluException If the input is invalid or with the wrong format.","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws LeluException {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"        checkEmptyDescription(message, COMMAND, LeluException.ErrorType.MARK);","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"        int i \u003d getTaskListNumber(message.split(\" \")[1], LeluException.ErrorType.MARK);","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"        assert message.length() \u003e\u003d \"mark #\".length() : \"Input not handled properly\";","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"        return tasks.markTask(i);","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Lalelulilulela":34}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.LeluException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":" * This class represents a command for marking a task as not completed in the task list","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":" * managed by the chatbot. When executed, this command updates the status of the","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":" * specified task to indicate that it has not been completed.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"    private static final String COMMAND \u003d \"unmark \";","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"     * Executes the command to mark a task in the list of recorded tasks as not done.","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"     * @param tasks Recorded list of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"     * @param ui Format of output shown.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"     * @param storage To save and load tasks recorded.","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"     * @param message Input of user.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws LeluException If the input is invalid or with the wrong format.","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws LeluException {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"        checkEmptyDescription(message, COMMAND, LeluException.ErrorType.UNMARK);","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"        int i \u003d getTaskListNumber(message.split(\" \")[1],LeluException.ErrorType.UNMARK);","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"        assert message.length() \u003e\u003d (COMMAND + \"#\").length() : \"Input not handled properly\";","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"        return tasks.unmarkTask(i);","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Lalelulilulela":32}},{"path":"src/main/java/commands/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package commands;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.LeluException;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.*;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"    private static final String COMMAND \u003d \"update \";","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"    private int index;","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws LeluException {","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"        checkEmptyDescription(message, COMMAND, LeluException.ErrorType.UPDATE);","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"        Task t \u003d parse(message);","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"        return tasks.updateTask(this.index, t);","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"    private Task parse(String message) throws InvalidFormatException {","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"        String[] details \u003d message.split(\"/\");","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"        String number \u003d details[0].split(\" \")[1];","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"        this.index \u003d getTaskListNumber(number, LeluException.ErrorType.UPDATE);","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"        switch (details.length) {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"        case 3:","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"            if (details[1].equals(\"todo\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"                return new ToDo(details[2]);","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"            break;","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"        case 5:","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"            if (details[1].equals(\"deadline\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"                return new Deadline(details[2].trim(), details[4].trim());","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"        case 7:","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"            if (details[1].equals(\"event\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"                return new Event(details[2], details[4], details[6]);","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"            break;","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"        default:","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"            InvalidFormatException.callInvalidFormatException(LeluException.ErrorType.UPDATE);","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"        InvalidFormatException.callInvalidFormatException(LeluException.ErrorType.UPDATE);","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"        return null;","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"Lalelulilulela":43}},{"path":"src/main/java/exceptions/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package exceptions;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":" * The InvalidFormatException class represents an exception that is thrown when a data format is","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":" * incompatible with the expected format.","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"public class InvalidFormatException extends InvalidInputException {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"     * Throws InvalidFormatException with different error messages based on the task type.","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"     * @param task type of task with the wrong format.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws InvalidFormatException Thrown with different error messages depending on the task type.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"    public static void callInvalidFormatException(ErrorType task) throws InvalidFormatException {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"        switch (task) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"        case TODO:","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"            throw new InvalidFormatException(\"   To record your task, enter:\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"                    + \"   todo \u003ctask\u003e\");","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"            throw new InvalidFormatException(\"   To set a deadline, enter:\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"                    + \"   deadline \u003ctask\u003e /by \u003cyyyy-MM-dd HH:mm\u003e\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"        case EVENT:","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"            throw new InvalidFormatException(\"   To record an event, enter:\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"                    + \"   event \u003cevent\u003e /from \u003cdate and time\u003e /to \u003cdate and time\u003e\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"        case FIND:","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"            throw new InvalidFormatException(\"   To search for your task, enter\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"                    + \"   find \u003ckeyword\u003e\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"        case DELETE:","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"            throw new InvalidFormatException(\"   To delete a task, enter\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"                    + \"   delete \u003ctask number in list\u003e\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"        case MARK:","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"            throw new InvalidFormatException(\"   To mark a task as done, enter\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"                    + \"   mark \u003ctask number in list\u003e\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"            throw new InvalidFormatException(\"   To un-mark a task as done, enter\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"                    + \"   unmark \u003ctask number in list\u003e\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"        case UPDATE:","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"            throw new InvalidFormatException(\"   To edit a task, enter\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"                    + \"   update \u003ctask number in list\u003e /[task] \u003ctask\u003e [details]\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"                    + \"   e.g. - update 1 /deadline/ sleep /by/ 2024-02-03 23:00\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"                    + \"        - update 1 /todo/ sleep\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"                    + \"        - update 3 /event/ sleep /from/ 3pm /to/ 11pm\\n\");","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Lalelulilulela":49}},{"path":"src/main/java/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package exceptions;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":" * The InvalidInputException class represents an exception that is thrown when a data format is","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":" * incompatible with the expected format.","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"public class InvalidInputException extends LeluException{","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Lalelulilulela":12}},{"path":"src/main/java/exceptions/LeluException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package exceptions;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":" * The LeluExceptions class serves as the parent class for custom exceptions specific to the Lelu application.","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"public class LeluException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"     * Represents types of error from different tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"    public enum ErrorType {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"        TODO,","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"        EVENT,","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"        DEADLINE,","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"        MARK,","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"        UNMARK,","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"        DELETE,","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"        FIND,","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"        UPDATE","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"    public LeluException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Lalelulilulela":23}},{"path":"src/main/java/lelu/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package lelu;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import lelu.Lelu;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"public class Launcher {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"        Application.launch(lelu.Main.class, args);","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Lalelulilulela":13}},{"path":"src/main/java/lelu/Lelu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package lelu;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import java.util.LinkedList;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.LeluException;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"import commands.ByeCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"import commands.Command;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"public class Lelu {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"    private static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"    private Storage store \u003d new Storage(\"./data/lelu.txt\");;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"    public Lelu() {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"        store.load(Lelu.tasks);","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"     * Returns a response to the user\u0027s input","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"     * @return Response based on user\u0027s input","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"            Command command \u003d Parser.parse(input, this.ui);","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"            return command.execute(tasks, ui, store, input);","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"            return ui.dateFormatInstructions();","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"        } catch (LeluException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Lalelulilulela":47}},{"path":"src/main/java/lelu/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package lelu;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import java.util.Timer;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import java.util.TimerTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":" * A GUI for Lelu using FXML.","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"    private Lelu lelu \u003d new Lelu();","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"    private static final int exitDelay \u003d 3000;","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"    public static void exitApplication() {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"        Timer timer \u003d new Timer();","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"        timer.schedule(new TimerTask() {","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"            @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"            public void run() {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"                System.exit(1);","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"        }, exitDelay);","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"            stage.setTitle(\"Lelu\");","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"            fxmlLoader.\u003cui.MainWindow\u003egetController().setLelu(lelu);","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"            stage.show();","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Lalelulilulela":48}},{"path":"src/main/java/lelu/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package lelu;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import commands.*;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.InvalidInputException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.LeluException;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":" *  Represents a Parser which handles user input.","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"     * Returns a Command object based on the type of command entered by the user","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"     * @param message User input","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"     * @param ui UI used","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"     * @return A Command object","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws LeluException if user input is invalid","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"    public static Command parse(String message, Ui ui) throws LeluException {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"        if (message.equals(\"bye\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"        } else if (message.equals(\"list\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"        switch (message.split(\" \")[0]) {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"        case \"help\":","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"            return new MarkCommand();","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"            return new UnmarkCommand();","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"            return new DeleteCommand();","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"            return new AddToDoCommand();","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"            return new AddDeadlineCommand();","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"        case \"event\":","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"            return new AddEventCommand();","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"        case \"find\":","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"            return new FindCommand();","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"        case \"update\":","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"            return new UpdateCommand();","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"        default:","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"Lalelulilulela"},"content":"            throw new InvalidInputException(ui.showInstructions());","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"Lalelulilulela":51}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.*;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"    private File file;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"            tasks.writeToFile(this.file);","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"            System.out.println(ioException.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"    public void load(TaskList tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"            while(sc.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"                String s \u003d sc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"                String[] task \u003d s.split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"                Task t;","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"                switch(task[0]) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"                case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"                    t \u003d new ToDo(task[2]);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"                case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"                    t \u003d new Deadline(task[2], task[3]);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"                default:","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Lalelulilulela"},"content":"                    t \u003d new Event(task[2], task[3], task[4]);","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Lalelulilulela"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Lalelulilulela"},"content":"                if (task[1].equals(\"1\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Lalelulilulela"},"content":"                    t.markTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Lalelulilulela"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Lalelulilulela"},"content":"                tasks.loadTask(t);","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Lalelulilulela"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Lalelulilulela"},"content":"            FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Lalelulilulela"},"content":"            fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Lalelulilulela"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Lalelulilulela"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Lalelulilulela":65}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":" * This class represents a deadline task by encapsulating information about a specific deadline,","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":" * including the description, due date and time.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"    public static final String DATE_FORMAT \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"     * Returns a Deadline object as the public constructor for this class.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"     * @param taskName Description of task.","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"     * @param deadline Deadline of the task.","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"    public Deadline(String taskName, String deadline) throws DateTimeParseException {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"        super(taskName);","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"     * Formats the details of the Deadline object as a String to be written to a text file.","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"     * @return A String containing the description and due date and time of a Deadline object.","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"        int check \u003d this.isCompleted ? 1 : 0;","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"        assert check \u003d\u003d 1 || check \u003d\u003d 0 : \"check should return 1 or 0\";","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"D | %d | %s | %s\\n\", check, this.taskName,","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"                this.deadline.format(formatter));","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"                this.deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mma\")));","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Lalelulilulela":46}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":" * This class represents an Event task by encapsulating information about a specific event,","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":" * including the description, start and end timings.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"    protected String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"    protected String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"     * Returns an Event object as the public constructor for this class.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"     * @param taskName Description of event.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"     * @param from Start date or time of the event.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"     * @param to end date or time of the event.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"    public Event(String taskName, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"        super(taskName);","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"     * Formats the details of the Event object as a String to be written to a text file.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"     * @return A String containing the description and start and end timings of an Event object.","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"        int check \u003d this.isCompleted ? 1 : 0;","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"        assert check \u003d\u003d 1 || check \u003d\u003d 0 : \"check should return 1 or 0\";","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"E | %d | %s | %s | %s\\n\", check, this.taskName, this.from, this.to);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"[E]%s (From: %s To: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Lalelulilulela":40}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":" * This is an abstract class representing a task by encapsulating information, such as the description","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":" * of the task, and performing basic functions involving the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"    public final String taskName;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"    public Task(String task) {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"        this.taskName \u003d task;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"    public void markTask() {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"    public void unmarkTask() {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"    public abstract String saveFormat();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"        String check \u003d isCompleted ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"        return check + \" \" + this.taskName;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Lalelulilulela":28}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package tasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"     * Returns a String after a Task has been added successfully into the TaskList.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"     * @param t Task","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"     * @return String response","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"    public String addTask(Task t) {","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"        this.tasks.add(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"    Ok! I have added your task:\\n      %s\\n    You have %d task(s) in the \"","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"                + \"list now.\\n\\n\", t.toString(), this.tasks.size());","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"     * Adds a Task into the TaskList","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"     * @param t Task","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"    public void loadTask(Task t) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"        this.tasks.add(t);","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"     * Returns a String after a Task in the TaskList has been updated successfully.","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"     * @param i index of Task in TaskList","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"     * @param t Task","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"     * @return String response","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"    public String updateTask(int i, Task t) {","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"        String oldTask \u003d tasks.get(i).toString();","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"        tasks.set(i, t);","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"    %s\\n    replaced by\\n    %s\", oldTask, t.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"     * Returns a String after a Task in the TaskList has been removed successfully.","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"Lalelulilulela"},"content":"     * @param i index of Task in TaskList","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"Lalelulilulela"},"content":"     * @return String response","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"Lalelulilulela"},"content":"    public String removeTask(int i) {","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"Lalelulilulela"},"content":"        Task t \u003d this.tasks.get(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Lalelulilulela"},"content":"        this.tasks.remove(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"    Ok, I have removed your task:\\n    %s\\n    You have %d task(s) in the \"","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"Lalelulilulela"},"content":"                + \"list now.\\n\\n\", t.toString(), this.tasks.size());","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"Lalelulilulela"},"content":"     * Returns a String after a Task in the TaskList has been marked as done successfully.","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"Lalelulilulela"},"content":"     * @param i index of Task in TaskList","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"Lalelulilulela"},"content":"     * @return String response","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"Lalelulilulela"},"content":"    public String markTask(int i) {","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"Lalelulilulela"},"content":"        this.tasks.get(i).markTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"Lalelulilulela"},"content":"                \"    Great job completing your task!\\n      %s\\n\\n\", this.tasks.get(i).toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"Lalelulilulela"},"content":"     * Returns a String after a Task in the TaskList has been marked as not done successfully.","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"Lalelulilulela"},"content":"     * @param i index of Task in TaskList","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"Lalelulilulela"},"content":"     * @return String response","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"Lalelulilulela"},"content":"    public String unmarkTask(int i) {","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"Lalelulilulela"},"content":"        this.tasks.get(i).unmarkTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"Lalelulilulela"},"content":"                \"    Don\u0027t forget to complete your task soon...\\n      %s\\n\\n\", this.tasks.get(i).toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"Lalelulilulela"},"content":"     * Saves the tasks in the TaskList to a file.","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"Lalelulilulela"},"content":"     * @param file File to save tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"Lalelulilulela"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"Lalelulilulela"},"content":"    public void writeToFile(File file) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Lalelulilulela"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Lalelulilulela"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Lalelulilulela"},"content":"            fw.write(task.saveFormat());","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"Lalelulilulela"},"content":"        fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"Lalelulilulela"},"content":"     * Returns a new TaskList which contain only Tasks with a keyword.","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"Lalelulilulela"},"content":"     * @param keyword","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"Lalelulilulela"},"content":"     * @return TaskList","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"Lalelulilulela"},"content":"    public TaskList filter(String keyword) {","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"Lalelulilulela"},"content":"        TaskList res \u003d new TaskList();","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"Lalelulilulela"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"Lalelulilulela"},"content":"            if (task.taskName.toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"Lalelulilulela"},"content":"                res.loadTask(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"Lalelulilulela"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"Lalelulilulela"},"content":"        return res;","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"Lalelulilulela"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"Lalelulilulela"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"Lalelulilulela"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"Lalelulilulela"},"content":"            sb.append(String.format(\"    %d.%s\\n\", i + 1, this.tasks.get(i).toString()));","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"Lalelulilulela"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Lalelulilulela":118}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":" * This class represents a ToDo task by encapsulating information about a specific task,","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":" * including the description of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"     * Returns a Task object as the public constructor for this class.","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"     * @param taskName Description of task.","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"        super(taskName);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"     * Formats the details of the ToDo object as a String to be written to a text file.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"     * @return A String containing the description of the ToDo object.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"        int check \u003d this.isCompleted ? 1 : 0;","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"        assert check \u003d\u003d 1 || check \u003d\u003d 0 : \"check should return 1 or 0\";","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"T | %d | %s \\n\", check, this.taskName);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Lalelulilulela":33}},{"path":"src/main/java/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"    private void flip() {","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"Lalelulilulela"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"Lalelulilulela"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"Lalelulilulela"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"Lalelulilulela"},"content":"     * Creates a DialogBox which displays the user input.","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"Lalelulilulela"},"content":"     * @param text User input","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"Lalelulilulela"},"content":"     * @param img User character image","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"Lalelulilulela"},"content":"     * @return DialogBox containing image and input","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"Lalelulilulela"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"Lalelulilulela"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"Lalelulilulela"},"content":"     * Creates a DialogBox which displays the response to the user input.","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"Lalelulilulela"},"content":"     * @param text User input","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"Lalelulilulela"},"content":"     * @param img Chatbot character image","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"Lalelulilulela"},"content":"     * @return DialogBox containing image and input","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"Lalelulilulela"},"content":"    public static DialogBox getLeluDialog(String text, Image img) {","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"Lalelulilulela"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"Lalelulilulela"},"content":"        db.flip();","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"Lalelulilulela"},"content":"        return db;","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Lalelulilulela":76}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"import lelu.Lelu;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"import lelu.Main;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"import java.util.List;","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"    public static boolean canExit \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"    private Lelu lelu;","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"    private Image leluImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaLelu.png\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"        greet();","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"    public void setLelu(Lelu l) {","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"        lelu \u003d l;","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"Lalelulilulela"},"content":"    private void greet() {","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"Lalelulilulela"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"Lalelulilulela"},"content":"        String response \u003d ui.greet();","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"Lalelulilulela"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"Lalelulilulela"},"content":"                DialogBox.getLeluDialog(response, leluImage)","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"Lalelulilulela"},"content":"        );","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"Lalelulilulela"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"Lalelulilulela"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"Lalelulilulela"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"Lalelulilulela"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"Lalelulilulela"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"Lalelulilulela"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"Lalelulilulela"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"Lalelulilulela"},"content":"        String response \u003d lelu.getResponse(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"Lalelulilulela"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"Lalelulilulela"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"Lalelulilulela"},"content":"                DialogBox.getLeluDialog(response, leluImage)","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"Lalelulilulela"},"content":"        );","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"Lalelulilulela"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"Lalelulilulela"},"content":"        if (canExit) {","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"Lalelulilulela"},"content":"            Main.exitApplication();","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Lalelulilulela":76}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"    public String showInstructions() {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"        return \"Please type in:\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"                + \"------------------------\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"                + \"[for command information]\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"                + \"- help\\n\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"                + \"[to record your task(s)/ events]\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"                + \"- todo \u003ctask\u003e\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"                + \"- deadline \u003ctask\u003e /by \" + Deadline.DATE_FORMAT + \"\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"                + \"- event \u003cevent\u003e /from \u003cdate and time\u003e /to \u003cdate and time\u003e\\n\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"                + \"[to view your task(s)]\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"                + \"- list\\n\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"                + \"[to search for tasks containing a keyword]\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"                + \"- find \u003ckeyword\u003e\\n\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"                + \"[to mark or unmark your task as done]\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"                + \"- mark \u003ctask number in list\u003e\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"                + \"- unmark \u003ctask number in list\u003e\\n\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"                + \"[to delete a task]\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"                + \"- delete \u003ctask number in list\u003e\\n\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"                + \"[to update a task]\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"                + \"- update \u003ctask number in list\u003e /[task] \u003ctask\u003e [details]\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"                + \"   e.g. - update 1 /deadline/ sleep /by/ 2024-02-03 23:00\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"                + \"        - update 1 /todo/ sleep\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"                + \"        - update 3 /event/ sleep /from/ 3pm /to/ 11pm\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"                + \"-------------------------------------\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"    public String greet() {","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"        return \"    Hi! I am your favourite friend, Lelu :)\\n    What can I do for you?\\n\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"                + \"    For more information, enter:\\n    help\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"    public String exit() {","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"        return \"    Ok bye, you shall be missed :(\";","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"    public String dateFormatInstructions() {","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"    Your date should be in this format:\\n    \"","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"                + \"\u003c\" + Deadline.DATE_FORMAT + \"\u003e\" + \" e.g. 2024-02-03 15:25\\n\\n\");","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Lalelulilulela":49}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"         spacing\u003d\"2.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Lalelulilulela":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"8.0\" layoutY\u003d\"563.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"32.0\" prefWidth\u003d\"306.0\" AnchorPane.bottomAnchor\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"319.0\" layoutY\u003d\"563.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"32.0\" prefWidth\u003d\"73.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Lalelulilulela":19}},{"path":"src/test/java/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import exceptions.InvalidInputException;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"    public void test_deadline_DateTimeParseException_thrown() {","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"            new Deadline(\"go home\", \"2023/09/02 1000\");","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"            fail(\"Expected DateTimeParseException to be thrown\");","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"            //Passed test as DateTimeParseException is thrown","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"    public void testSaveFormat() {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"        Deadline d1 \u003d new Deadline(\"go to school\", \"2021-12-14 08:00\");","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"        d1.markTask();","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"        assertEquals(\"D | 1 | go to school | 2021-12-14 08:00\\n\", d1.saveFormat());","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"        d1.unmarkTask();","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"        assertEquals(\"D | 0 | go to school | 2021-12-14 08:00\\n\", d1.saveFormat());","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"    public void testToString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"        Deadline d \u003d new Deadline(\"sleep\", \"2023-10-02 23:00\");","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"        assertEquals(\"[D][ ] sleep (by: 2 Oct 2023 11:00pm)\", d.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"        Deadline d1 \u003d new Deadline(\"wake up\", \"2024-09-08 14:38\");","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"        assertEquals(\"[D][ ] wake up (by: 8 Sep 2024 02:38pm)\", d1.toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Lalelulilulela":42}},{"path":"src/test/java/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package tasks;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"    public void testAddTask() {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"        assertEquals(\"\", t.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"        Deadline d \u003d new Deadline(\"sleep\", \"2024-10-10 21:00\");","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"        assertEquals(String.format(\"    Ok! I have added your task:\\n      %s\\n    You have %d task(s) in the \"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"                + \"list now.\\n\\n\", d.toString(), 1), t.addTask(d));","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"        assertEquals(String.format(\"    1.%s\\n\", d.toString()), t.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"        Deadline d \u003d new Deadline(\"Finish assignment\", \"2023-11-30 22:59\");","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"        t.addTask(d);","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"        assertEquals(String.format(\"    Ok, I have removed your task:\\n    %s\\n    You have %d task(s) in the \"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"                + \"list now.\\n\\n\", d.toString(), 0), t.removeTask(0));","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"        assertEquals(\"\", t.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Lalelulilulela":31}},{"path":"src/test/java/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"public class UiTest {","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"    public void testGreet() {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"        assertEquals(\"    Hi! I am your favourite friend, Lelu :)\\n    What can I do for you?\\n\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"                + \"    For more information, enter:\\n    help\\n\", ui.greet());","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"    public void testExit() {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"        assertEquals(\"    Ok bye, you shall be missed :(\", ui.exit());","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"    @Test","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"    public void testDateFormatInstructions() {","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"        assertEquals(\"    Your date should be in this format:\\n    \u003cyyyy-MM-dd HH:mm\u003e e.g. 2024-02-03 15:25\\n\\n\",","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"                ui.dateFormatInstructions());","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Lalelulilulela":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"event play /from 10am /to 10pm","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"deadline sleep /by 2023-09-08 11:59","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"delete 1","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"list","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"deadline homework /by tmr","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Lalelulilulela":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"java -classpath ..\\bin lelu.lelu \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Lalelulilulela":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"#if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/lelu/*.java","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"if ! find ../src/main/java -name \u0027*.java\u0027 -exec javac -cp ../src/main/java -Xlint:none -d ../bin {} +","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"java -classpath ../bin Lelu \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Lalelulilulela":3,"-":36}}]
