[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gauravuj":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"checkstyle {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"    String javaFxVersion \u003d \u002721\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"gauravuj"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"gauravuj":21,"-":41}},{"path":"data/users/DYLAN/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"[T] | 0 | borrow books","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":1}},{"path":"data/users/UJ/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"[D] | 0 | return books | 2018-02-03 18:00","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"[D] | 1 | bring book | 2018-04-29 18:23","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"[T] | 1 | go to gym","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"[T] | 0 | go for dance class","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"[E] | 0 | project meetup | 2018-02-13 16:00 | 2018-04-06 18:00","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"gauravuj":5}},{"path":"data/users/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"[T] | 0 | create music","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"gauravuj":1}},{"path":"data/users/tester/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"[T] | 0 | add something","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"[T] | 0 | add music","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"gauravuj":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"import duke.command.CommandParser;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":" * The Duke class represents the main application that interacts with the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":" * It initializes the User Interface (UI), runs the conversation loop, and handles user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"public class Duke  {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"    CommandParser parser;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"     * Constructs a Duke instance and initializes the UI.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"    public Duke() {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"        parser \u003d new CommandParser(\"tester\");","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"        return parser.parseInput(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":29}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"public class Launcher {","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"gauravuj":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"/*","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"This is the main class","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"            stage.setTitle(\"Sophia\");","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"            stage.setResizable(false);","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"            stage.show();","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"gauravuj":38}},{"path":"src/main/java/duke/command/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"import duke.conversation.Conversation;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"import duke.task.TaskDisplay;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"import duke.task.TaskType;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":" * The Parser class is responsible for parsing user commands and interacting with the TaskManager.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":" * It interprets the input commands and executes corresponding actions.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"public class CommandParser {","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"    TaskManager taskManager;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"    Conversation conversation;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"    private final String username;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"    TaskDisplay taskDisplay \u003d new TaskDisplay();","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"    private static final String DELETE_ALL_COMMAND \u003d \"delete all\";","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"     * Constructs a Parser with the specified username. Initializes the TaskManager and Conversation.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"     * @param username The username for which the Parser is created.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"    public CommandParser(String username) {","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"        taskManager \u003d new TaskManager(username);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"        conversation \u003d new Conversation(username);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"        this.username \u003d username;","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"     * Parses the user input and executes the corresponding action.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"     * @param input The user input to be parsed and executed.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"gauravuj"},"content":"    public String parseInput(String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"gauravuj"},"content":"        String[] userMessage \u003d input.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"        if (input.equalsIgnoreCase(DELETE_ALL_COMMAND)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"            taskManager.deleteAllTasks();","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"            return \"okay, noted. I\u0027ve removed all tasks from the list.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"gauravuj"},"content":"        switch (userMessage[0].toLowerCase()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"gauravuj"},"content":"            case \"find\":","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"gauravuj"},"content":"                return handleFindCommand(userMessage, taskManager);","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"gauravuj"},"content":"            case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"gauravuj"},"content":"                return taskManager.displayTask(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"gauravuj"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"gauravuj"},"content":"                return handleMarkCommand(userMessage, taskManager, input);","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"gauravuj"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"gauravuj"},"content":"                return handleUnmarkCommand(userMessage, taskManager, input);","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"gauravuj"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"gauravuj"},"content":"                taskManager.addTask(input, TaskType.Todo);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"gauravuj"},"content":"                return taskManager.displayTask(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"gauravuj"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"gauravuj"},"content":"                taskManager.addTask(input, TaskType.Deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"gauravuj"},"content":"                return taskManager.displayTask(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"gauravuj"},"content":"            case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"gauravuj"},"content":"                taskManager.addTask(input, TaskType.Event);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"gauravuj"},"content":"                return taskManager.displayTask(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"gauravuj"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"gauravuj"},"content":"                return handleDeleteCommand(userMessage, taskManager, input);","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"gauravuj"},"content":"            default:","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"gauravuj"},"content":"                return conversation.printDialogue(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"gauravuj"},"content":"    private String handleMarkCommand(String[] userMessage, TaskManager taskManager, String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"gauravuj"},"content":"        if (userMessage.length \u003d\u003d 1 || !isNumeric(userMessage[1])) {","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"gauravuj"},"content":"            return printError(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"gauravuj"},"content":"        taskManager.markAsComplete(Integer.parseInt(userMessage[1]) - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"gauravuj"},"content":"       return taskManager.displayTask(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"gauravuj"},"content":"    private String handleUnmarkCommand(String[] userMessage, TaskManager taskManager, String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"gauravuj"},"content":"        if (userMessage.length \u003d\u003d 1 || !isNumeric(userMessage[1])) {","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"gauravuj"},"content":"            return printError(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"gauravuj"},"content":"        taskManager.markAsIncomplete(Integer.parseInt(userMessage[1]) - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"gauravuj"},"content":"        return taskManager.displayTask(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"gauravuj"},"content":"    private String handleDeleteCommand(String[] userMessage, TaskManager taskManager, String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"gauravuj"},"content":"        String deletedTask \u003d \"\";","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"gauravuj"},"content":"        if (userMessage.length \u003d\u003d 1 || !isNumeric(userMessage[1])) {","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"gauravuj"},"content":"            return printError(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"gauravuj"},"content":"        } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"gauravuj"},"content":"            deletedTask \u003d taskManager.displayTask(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"gauravuj"},"content":"            taskManager.deleteTask(Integer.parseInt(userMessage[1]) - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"gauravuj"},"content":"        return deletedTask;","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"gauravuj"},"content":"    private String handleFindCommand(String[] userMessage, TaskManager taskManager) {","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"gauravuj"},"content":"        if (userMessage.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"gauravuj"},"content":"            return \"Can you specify a keyword after the find command\" +","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"gauravuj"},"content":"                    \"so that I can help you better?\";","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"gauravuj"},"content":"        String keyword \u003d userMessage[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"gauravuj"},"content":"        List\u003cTask\u003e matchingTasks \u003d taskManager.findTask(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"gauravuj"},"content":"        String findTask \u003d \"\";","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"gauravuj"},"content":"        if (!matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":112,"author":{"gitId":"gauravuj"},"content":"           findTask \u003d taskDisplay.printFindTaskList(matchingTasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"gauravuj"},"content":"        return findTask;","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"gauravuj"},"content":"    public void saveAllTasks() {","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"gauravuj"},"content":"        taskManager.autoSaveTask();","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"gauravuj"},"content":"     * Checks if a given string is numeric.","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"gauravuj"},"content":"     * @param str The string to check.","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"gauravuj"},"content":"     * @return True if the string is numeric, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"gauravuj"},"content":"    private boolean isNumeric(String str) {","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"gauravuj"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"gauravuj"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"gauravuj"},"content":"            return true;","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"gauravuj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"gauravuj"},"content":"            return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"gauravuj"},"content":"     * Prints an error message indicating that the TASK NUMBER is missing after the specified command.","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"gauravuj"},"content":"     * @param input The input command causing the error.","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"gauravuj"},"content":"    private String printError(String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":142,"author":{"gitId":"gauravuj"},"content":"        return \"Sorry \" + username.toUpperCase() + \", the TASK NUMBER\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":143,"author":{"gitId":"gauravuj"},"content":"                \"is missing after \" + input.toLowerCase() + \".\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"gauravuj"},"content":"                \"\\nCan you please specify a valid task number\\n from the list?\";","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":147}},{"path":"src/main/java/duke/conversation/Conversation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.conversation;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"import java.util.Hashtable;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":" * The Conversation class manages dialogues and responses for interacting with the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":" * It provides predefined dialogues and handles the display of responses.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"public class Conversation {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"    protected Hashtable\u003cString, List\u003cString\u003e\u003e dialogues;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"     * Constructs a Conversation instance with an optional username for personalized dialogues.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"     * @param username The optional username for personalized dialogues.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"    public Conversation(String username) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"        dialogues \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"        initializeDialogues(username);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"     * Adds a dialogue and response pair to the conversation.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"     * @param key      The key associated with the dialogue.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"     * @param response The response corresponding to the key.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"    public void addDialogue(String key, String response) {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"        key \u003d key.toLowerCase();","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"        dialogues.computeIfAbsent(key, k -\u003e new ArrayList\u003c\u003e()).add(response);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"     * Initializes predefined dialogues based on the provided or default username.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"     * @param username The optional username for personalized dialogues.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"    public void initializeDialogues(String username) {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"gauravuj"},"content":"        addDialogue(\"starter\", \"Hello, \" + username +","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"                \". Nice to meet you!\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"                \"So, what can I do for you today?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"        addDialogue(\"bye\", \"Bye bye! See you later!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"        addDialogue(\"hello\", \"Hi there! How can I help you?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"gauravuj"},"content":"        addDialogue(\"hello\", \"Greetings! What brings you here?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"gauravuj"},"content":"        addDialogue(\"hey\", \"Hi! How are you?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"gauravuj"},"content":"        addDialogue(\"how are you\", \"I\u0027m just a computer program, \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"gauravuj"},"content":"                \"but thanks for asking!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"gauravuj"},"content":"        addDialogue(\"what\u0027s your name\", \"I\u0027m Sophia. And I bet you \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"gauravuj"},"content":"                \"have a pretty name. Tell me yours?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"gauravuj"},"content":"        addDialogue(\"what\u0027s your name\", \"I\u0027m Sophia. And you?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"gauravuj"},"content":"     * Retrieves the list of responses associated with a given key.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"gauravuj"},"content":"     * @param key The key associated with the desired dialogues.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"gauravuj"},"content":"     * @return The list of responses for the given key.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"gauravuj"},"content":"    public List\u003cString\u003e getCommands(String key) {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"gauravuj"},"content":"        key \u003d key.toLowerCase();","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"gauravuj"},"content":"        return dialogues.get(key);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"gauravuj"},"content":"     * Prints the dialogues or an error message based on the user\u0027s input.","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"gauravuj"},"content":"     * @param message The user\u0027s input used to retrieve corresponding dialogues.","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"gauravuj"},"content":"    public String printDialogue(String message) {","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"gauravuj"},"content":"        StringBuilder dialogueMessage \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"gauravuj"},"content":"        List\u003cString\u003e dialoguesList \u003d getCommands(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"gauravuj"},"content":"        if (dialoguesList !\u003d null \u0026\u0026 !dialoguesList.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"gauravuj"},"content":"            for (String dialogue : dialoguesList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"gauravuj"},"content":"                dialogueMessage.append(dialogue).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"gauravuj"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"gauravuj"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"gauravuj"},"content":"            dialogueMessage.append(\"Sorry, I don\u0027t understand what you mean by \").append(message).append(\"\\n\")","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"gauravuj"},"content":"                    .append(\"Maybe try checking the spelling or ask me anything else!\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"gauravuj"},"content":"        return dialogueMessage.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":85}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":" * The Deadline class represents a task with a specified deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":" * It extends the Task class and provides additional functionality","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":" * for managing deadlines.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"     * Constructs a Deadline instance with the specified task description, completion status, and deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"     * @param taskDescription The description of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"     * @param isCompleted     The completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"     * @param by              The deadline for the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"    public Deadline(String taskDescription, boolean isCompleted, LocalDateTime by) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"        super(taskDescription, isCompleted);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"     * Gets the trimmed description of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"     * @return The trimmed description of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"    public String getDeadlineDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"        return trimDescription(taskDescription);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"     * Gets the deadline date and time for the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"gauravuj"},"content":"     * @return The deadline date and time for the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"gauravuj"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"        return this.by;","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"gauravuj"},"content":"     * Gets the task icon associated with deadlines.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"gauravuj"},"content":"     * @return The task icon for deadlines.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"gauravuj"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"gauravuj"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"gauravuj"},"content":"        return \"[D]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"gauravuj"},"content":"     * Gets the status icon based on the completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"gauravuj"},"content":"     * @return The status icon for the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"gauravuj"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"gauravuj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"gauravuj"},"content":"        return isCompleted ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"gauravuj"},"content":"     * Gets the formatted task description, including the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"gauravuj"},"content":"     * @return The formatted task description with the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"gauravuj"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"gauravuj"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"gauravuj"},"content":"        return trimDescription(taskDescription) + \" (by: \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"gauravuj"},"content":"                by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"gauravuj"},"content":"     * Trims the task description and extracts the deadline information.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"gauravuj"},"content":"     * @param taskDescription The original task description.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"gauravuj"},"content":"     * @return The trimmed task description after extracting the deadline information.","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"gauravuj"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"gauravuj"},"content":"    protected String trimDescription(String taskDescription) {","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"gauravuj"},"content":"        String regex \u003d \"(?i)deadline\\\\s*(.*?)\\\\s*/by\\\\s*(.*?)$\";","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"gauravuj"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"gauravuj"},"content":"        Matcher matcher \u003d pattern.matcher(taskDescription);","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"gauravuj"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"gauravuj"},"content":"            taskDescription \u003d matcher.group(1).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"gauravuj"},"content":"            by \u003d LocalDateTime.parse(matcher.group(2),","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"gauravuj"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"gauravuj"},"content":"        return taskDescription;","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":97}},{"path":"src/main/java/duke/task/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gauravuj":9}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":" * The Event class represents a task with a specified start and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":" * It extends the Task class and provides additional functionality","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":" * for managing events.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"     * Constructs an Event instance with the specified task description, completion status, start time, and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"     * @param taskDescription The description of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"     * @param isCompleted     The completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"     * @param from            The start time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"     * @param to              The end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"    public Event(String taskDescription, boolean isCompleted, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"        super(taskDescription, isCompleted);","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"     * Gets the trimmed description of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"     * @return The trimmed description of the event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"    public String getEventDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"        return trimDescription(taskDescription);","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"     * Gets the task icon associated with events.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"     * @return The task icon for events.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"gauravuj"},"content":"        return \"[E]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"gauravuj"},"content":"     * Gets the status icon based on the completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"gauravuj"},"content":"     * @return The status icon for the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"gauravuj"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"gauravuj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"gauravuj"},"content":"        return isCompleted ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"gauravuj"},"content":"     * Gets the formatted task description, including the start and end times of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"gauravuj"},"content":"     * @return The formatted task description with the start and end times.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"gauravuj"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"gauravuj"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"gauravuj"},"content":"        return trimDescription(taskDescription) + \" (from: \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"gauravuj"},"content":"                from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) +","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"gauravuj"},"content":"                \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"gauravuj"},"content":"     * Trims the task description and extracts the start and end times of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"gauravuj"},"content":"     * @param taskDescription The original task description.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"gauravuj"},"content":"     * @return The trimmed task description after extracting the start and end times.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"gauravuj"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"gauravuj"},"content":"    protected String trimDescription(String taskDescription) {","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"gauravuj"},"content":"        String regex \u003d \"(?i)event\\\\s*(.*?)\\\\s*/from\\\\s*(.*?)\\\\s*/to\\\\s*(.*?)$\";","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"gauravuj"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"gauravuj"},"content":"        Matcher matcher \u003d pattern.matcher(taskDescription);","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"gauravuj"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"gauravuj"},"content":"            taskDescription \u003d matcher.group(1).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"gauravuj"},"content":"            String fromString \u003d matcher.group(2).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"gauravuj"},"content":"            String toString \u003d matcher.group(3).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"gauravuj"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"gauravuj"},"content":"            from \u003d LocalDateTime.parse(fromString, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"gauravuj"},"content":"            to \u003d LocalDateTime.parse(toString, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"gauravuj"},"content":"        return taskDescription;","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"gauravuj"},"content":"     * Gets the start time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"gauravuj"},"content":"     * @return The start time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"gauravuj"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"gauravuj"},"content":"        return this.from;","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"gauravuj"},"content":"     * Gets the end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"gauravuj"},"content":"     * @return The end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"gauravuj"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"gauravuj"},"content":"        return this.to;","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":114}},{"path":"src/main/java/duke/task/FileLoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"public class FileLoadException extends Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"    public FileLoadException(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"        super(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"    public static class InitializationError extends FileLoadException {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"        public InitializationError() {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"            super(\"I believe there\u0027s some issues regarding your file. \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"                    \"(Error: you haven\u0027t initialized the file properly)\");","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"            System.err.println(\"Maybe try adding something to the file, \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"                    \"so that I can retrieve it next time!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":19}},{"path":"src/main/java/duke/task/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"import java.io.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":" * The FileManager class handles the reading and writing of tasks to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":" * It manages the loading and saving of tasks to a user-specific file.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"public class FileManager {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"    private final String filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"    private static final String BASE_PATH \u003d \"./data/users/\";","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"     * Constructs a FileManager instance with the specified username.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"     * Creates a user-specific directory to store the tasks file.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"     * @param username The username associated with the file manager.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"    public FileManager(String username) {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"        File userDirectory \u003d new File(BASE_PATH + username);","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"        if (!userDirectory.exists() \u0026\u0026 !userDirectory.mkdirs()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"            System.out.println(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"        this.filePath \u003d BASE_PATH + username + \"/duke.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"     * Loads tasks from the file into the provided task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"     * @param tasks The list of tasks to load from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"     * @return The list of tasks after loading from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"    public List\u003cTask\u003e loadTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"gauravuj"},"content":"            String line;","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"gauravuj"},"content":"                Task task \u003d parseTaskLine(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"gauravuj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"gauravuj"},"content":"            //","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"gauravuj"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"gauravuj"},"content":"     * Saves the provided tasks to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"gauravuj"},"content":"     * @param tasks The list of tasks to save to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"gauravuj"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"gauravuj"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath, false))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"gauravuj"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"gauravuj"},"content":"                String status \u003d task.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"gauravuj"},"content":"                String taskIcon \u003d getTaskIcon(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"gauravuj"},"content":"                String taskDetails \u003d getTaskDetails(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"gauravuj"},"content":"                writer.write(taskIcon + \" | \" + status + \" | \" + taskDetails + \"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"gauravuj"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"gauravuj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"gauravuj"},"content":"            //","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"gauravuj"},"content":"     * Gets the task details in a formatted string based on the task type.","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"gauravuj"},"content":"     * @param task The task for which to get the details.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"gauravuj"},"content":"     * @return The formatted task details string.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"gauravuj"},"content":"    private String getTaskDetails(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"gauravuj"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"gauravuj"},"content":"            return ((Todo) task).getTaskDescription();","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"gauravuj"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"gauravuj"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"gauravuj"},"content":"            return event.getEventDescription() + \" | \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"gauravuj"},"content":"                    formatDateTime(event.getFrom()) + \" | \" + formatDateTime(event.getTo());","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"gauravuj"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"gauravuj"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"gauravuj"},"content":"            return deadline.getDeadlineDescription() + \" | \" + formatDateTime(deadline.getBy());","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"gauravuj"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"gauravuj"},"content":"            return \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"gauravuj"},"content":"     * Formats the given date and time in a specified pattern.","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"gauravuj"},"content":"     * @param dateTime The date and time to format.","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"gauravuj"},"content":"     * @return The formatted date and time string.","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"gauravuj"},"content":"    private String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"gauravuj"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"gauravuj"},"content":"     * Parses a task line from the file and returns the corresponding Task instance.","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"gauravuj"},"content":"     * @param line The task line from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"gauravuj"},"content":"     * @return The Task instance created from the task line.","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"gauravuj"},"content":"    private Task parseTaskLine(String line) {","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"gauravuj"},"content":"        String regex \u003d \"\\\\[(T|D|E)\\\\] \\\\| (0|1) \\\\| (.+?)(?: \\\\| (.+?)(?: \\\\| (.+))?)?\";","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"gauravuj"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"gauravuj"},"content":"        Matcher matcher \u003d pattern.matcher(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"gauravuj"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"gauravuj"},"content":"            String taskType \u003d matcher.group(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"gauravuj"},"content":"            boolean isMarked \u003d \"1\".equals(matcher.group(2));","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"gauravuj"},"content":"            String taskDescription \u003d matcher.group(3);","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"gauravuj"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"gauravuj"},"content":"                case \"T\":","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"gauravuj"},"content":"                    return new Todo(taskDescription, isMarked);","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"gauravuj"},"content":"                case \"D\":","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"gauravuj"},"content":"                    String deadlineDate \u003d matcher.group(4);","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"gauravuj"},"content":"                    LocalDateTime by \u003d LocalDateTime.parse(deadlineDate,","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"gauravuj"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"gauravuj"},"content":"                    return new Deadline(taskDescription, isMarked, by);","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"gauravuj"},"content":"                case \"E\":","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"gauravuj"},"content":"                    String from \u003d matcher.group(4);","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"gauravuj"},"content":"                    String to \u003d matcher.group(5);","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"gauravuj"},"content":"                    LocalDateTime fromDate \u003d LocalDateTime.parse(from,","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"gauravuj"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"gauravuj"},"content":"                    LocalDateTime toDate \u003d LocalDateTime.parse(to,","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"gauravuj"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"gauravuj"},"content":"                    return new Event(taskDescription, isMarked, fromDate, toDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"gauravuj"},"content":"                default:","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"gauravuj"},"content":"                    System.err.println(\"Sorry, there\u0027s no such task in my system. \" +","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"gauravuj"},"content":"                            \"Try these: todo, deadline, event\");","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"gauravuj"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"gauravuj"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"gauravuj"},"content":"        return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"gauravuj"},"content":"     * Parses the date and time from the specified string.","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"gauravuj"},"content":"     * @param dateTimeString The string representing the date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"gauravuj"},"content":"     * @return The LocalDateTime instance parsed from the string.","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"gauravuj"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"gauravuj"},"content":"        return LocalDateTime.parse(dateTimeString,","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"gauravuj"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"gauravuj"},"content":"     * Gets the task icon based on the task type.","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"gauravuj"},"content":"     * @param task The task for which to get the icon.","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"gauravuj"},"content":"     * @return The task icon associated with the task type.","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"gauravuj"},"content":"    private String getTaskIcon(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"gauravuj"},"content":"        return task.getTaskIcon();","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":168}},{"path":"src/main/java/duke/task/FileSaveException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"public class FileSaveException extends Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"    public FileSaveException(String message, Throwable cause) {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"        super(message, cause);","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"    public static class SaveError extends FileSaveException {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"        public SaveError(Throwable cause) {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"            super(\"Error saving tasks to your file\", cause);","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":14}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":" * The Task class represents a general task with a description and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":" * It is an abstract class that serves as the base class for specific task types such as Todo, Deadline, and Event.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"    protected String taskDescription;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"     * Constructs a Task instance with the specified description and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"     * @param isCompleted     The completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"    public Task(String taskDescription, boolean isCompleted) {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"    public abstract String getTaskDescription();","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"    public abstract String getStatusIcon();","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"    public abstract String getTaskIcon();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"     * Trims the task description by removing leading and trailing whitespaces.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"     * @param taskDescription The original task description.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"     * @return The trimmed task description.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"    protected String trimDescription(String taskDescription) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"        return taskDescription.trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"     * Marks the task as complete.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"    public void markAsComplete() {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"gauravuj"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"gauravuj"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"gauravuj"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"gauravuj"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"gauravuj"},"content":"     * @return A string containing the task icon, status icon, and task description.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"gauravuj"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"gauravuj"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"gauravuj"},"content":"        return getTaskIcon() + \" | \"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"gauravuj"},"content":"                + getStatusIcon() + \" | \" + getTaskDescription();","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":62}},{"path":"src/main/java/duke/task/TaskDisplay.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":" * The Task class represents a general task with a description and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":" * It is an abstract class that serves as the base class for specific task types such as Todo, Deadline, and Event.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"public class TaskDisplay {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"     * Displays tasks based on the user command and task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"     * @param taskList The list of tasks to display.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"     * @param input    The user input command.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"     * @return A string containing the messages.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"    public String displayTasks(List\u003cTask\u003e taskList, String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"        String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"        String command \u003d tokens[0].toLowerCase();","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"        if (!command.equalsIgnoreCase(\"list\") \u0026\u0026 tokens.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"            message.append(printErrorMessage(input));","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"            return message.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"        int index;","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"        switch (command) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"            case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"                message.append(printTaskList(taskList));","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"                index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"                message.append(printMarkTask(taskList, index));","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"                index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"                message.append(printUnmarkTask(taskList, index));","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"gauravuj"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"gauravuj"},"content":"                index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"                message.append(printDeletedTask(taskList, index));","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"            default:","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"                index \u003d taskList.size() - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"gauravuj"},"content":"                message.append(printAddedTask(taskList, index));","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"gauravuj"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"gauravuj"},"content":"        return message.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"gauravuj"},"content":"     * Prints the list of tasks with their icons, status, and descriptions.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"gauravuj"},"content":"     * @param taskList The list of tasks to print.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"gauravuj"},"content":"     * @return A string containing the messages.","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"gauravuj"},"content":"    private String printTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"gauravuj"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"gauravuj"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"gauravuj"},"content":"            message.append(\"Your task list is empty. :(\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"gauravuj"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"gauravuj"},"content":"            message.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"gauravuj"},"content":"            int count \u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"gauravuj"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"gauravuj"},"content":"                message.append(\"   \").append(count).append(\". \")","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"gauravuj"},"content":"                        .append(task.getTaskIcon()).append(task.getStatusIcon()).append(\" \")","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"gauravuj"},"content":"                        .append(task.getTaskDescription()).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"gauravuj"},"content":"                count++;","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"gauravuj"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"gauravuj"},"content":"        return message.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"gauravuj"},"content":"    public String printFindTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"gauravuj"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"gauravuj"},"content":"        message.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"gauravuj"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"gauravuj"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"gauravuj"},"content":"            message.append(\"   \").append(count).append(\". \")","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"gauravuj"},"content":"                    .append(task.getTaskIcon()).append(task.getStatusIcon()).append(\" \")","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"gauravuj"},"content":"                    .append(task.getTaskDescription()).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"gauravuj"},"content":"            count++;","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"gauravuj"},"content":"        return message.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"gauravuj"},"content":"     * Prints a message indicating that a task has been marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"gauravuj"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"gauravuj"},"content":"     * @param index    The index of the task in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"gauravuj"},"content":"     * @return A string containing the message.","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"gauravuj"},"content":"    private String printMarkTask(List\u003cTask\u003e taskList, int index) {","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"gauravuj"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"gauravuj"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"gauravuj"},"content":"            return message.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"gauravuj"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"gauravuj"},"content":"        message.append(\"Nice! I\u0027ve marked this task as done:\\n\")","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"gauravuj"},"content":"                .append(\"   \").append(task.getTaskIcon())","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"gauravuj"},"content":"                .append(task.getStatusIcon()).append(task.getTaskDescription()).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"gauravuj"},"content":"        return message.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"gauravuj"},"content":"     * Prints a message indicating that a task has been marked as not done yet.","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"gauravuj"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"gauravuj"},"content":"     * @param index    The index of the task in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"gauravuj"},"content":"     * @return A string containing the message.","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"gauravuj"},"content":"    private String printUnmarkTask(List\u003cTask\u003e taskList, int index) {","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"gauravuj"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"gauravuj"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"gauravuj"},"content":"            return message.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"gauravuj"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"gauravuj"},"content":"        message.append(\"OK, I\u0027ve marked this task as not done yet:\\n\")","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"gauravuj"},"content":"                .append(\"   \").append(task.getTaskIcon())","lastModifiedDate":"2024-02-11"},{"lineNumber":124,"author":{"gitId":"gauravuj"},"content":"                .append(task.getStatusIcon()).append(task.getTaskDescription()).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":125,"author":{"gitId":"gauravuj"},"content":"        return message.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":126,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"gauravuj"},"content":"     * Prints a message indicating that a task has been deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"gauravuj"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"gauravuj"},"content":"     * @param index    The index of the task in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"gauravuj"},"content":"     * @return A string containing the message.","lastModifiedDate":"2024-02-11"},{"lineNumber":135,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"gauravuj"},"content":"    private String printDeletedTask(List\u003cTask\u003e taskList, int index) {","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"gauravuj"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":138,"author":{"gitId":"gauravuj"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"gauravuj"},"content":"            message.append(\"  Sorry, I believe the TASK NUMBER\")","lastModifiedDate":"2024-02-11"},{"lineNumber":140,"author":{"gitId":"gauravuj"},"content":"                    .append(\" you specified doesn\u0027t exist.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":141,"author":{"gitId":"gauravuj"},"content":"            return message.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":142,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"gauravuj"},"content":"        Task deletedTask \u003d taskList.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"gauravuj"},"content":"        message.append(\"  Noted. I\u0027ve removed this task:\\n\")","lastModifiedDate":"2024-02-11"},{"lineNumber":145,"author":{"gitId":"gauravuj"},"content":"                .append(\"     \").append(deletedTask.getTaskIcon())","lastModifiedDate":"2024-02-11"},{"lineNumber":146,"author":{"gitId":"gauravuj"},"content":"                .append(deletedTask.getStatusIcon()).append(deletedTask.getTaskDescription()).append(\"\\n\")","lastModifiedDate":"2024-02-11"},{"lineNumber":147,"author":{"gitId":"gauravuj"},"content":"                .append(\"  Now you have \").append(taskList.size() - 1)","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"gauravuj"},"content":"                .append(\" tasks left in this list.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"gauravuj"},"content":"        return message.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":150,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"gauravuj"},"content":"     * Prints a message indicating that a task has been added.","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"gauravuj"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"gauravuj"},"content":"     * @param index    The index of the task in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"gauravuj"},"content":"     * @return A string containing the message.","lastModifiedDate":"2024-02-11"},{"lineNumber":158,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"gauravuj"},"content":"    private String printAddedTask(List\u003cTask\u003e taskList, int index) {","lastModifiedDate":"2024-02-11"},{"lineNumber":160,"author":{"gitId":"gauravuj"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":161,"author":{"gitId":"gauravuj"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"gauravuj"},"content":"            return message.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":163,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"gauravuj"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"gauravuj"},"content":"        message.append(\"Got it. I\u0027ve added this task: \")","lastModifiedDate":"2024-02-11"},{"lineNumber":166,"author":{"gitId":"gauravuj"},"content":"                .append(task.getTaskDescription()).append(\"\\n\")","lastModifiedDate":"2024-02-11"},{"lineNumber":167,"author":{"gitId":"gauravuj"},"content":"                .append(\"   \").append(task.getTaskIcon())","lastModifiedDate":"2024-02-11"},{"lineNumber":168,"author":{"gitId":"gauravuj"},"content":"                .append(task.getStatusIcon()).append(task.getTaskDescription()).append(\"\\n\")","lastModifiedDate":"2024-02-11"},{"lineNumber":169,"author":{"gitId":"gauravuj"},"content":"                .append(\"Now you have \").append(taskList.size())","lastModifiedDate":"2024-02-11"},{"lineNumber":170,"author":{"gitId":"gauravuj"},"content":"                .append(\" tasks in the list.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":171,"author":{"gitId":"gauravuj"},"content":"        return message.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":172,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"gauravuj"},"content":"     * Prints an error message for an invalid user command.","lastModifiedDate":"2024-02-03"},{"lineNumber":176,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":177,"author":{"gitId":"gauravuj"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"gauravuj"},"content":"     * @return A string containing the message.","lastModifiedDate":"2024-02-11"},{"lineNumber":179,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"gauravuj"},"content":"    public String printErrorMessage(String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":181,"author":{"gitId":"gauravuj"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":182,"author":{"gitId":"gauravuj"},"content":"        message.append(\"Sorry, the description of \")","lastModifiedDate":"2024-02-11"},{"lineNumber":183,"author":{"gitId":"gauravuj"},"content":"                .append(input.toUpperCase()).append(\" cannot be empty. Please add details, so that I can\\n\")","lastModifiedDate":"2024-02-11"},{"lineNumber":184,"author":{"gitId":"gauravuj"},"content":"                .append(\"assist you better!\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":185,"author":{"gitId":"gauravuj"},"content":"        return message.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":186,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":187,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":187}},{"path":"src/main/java/duke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":" * The TaskManager class handles the management of tasks, including adding, deleting,","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":" * marking as complete or incomplete, and displaying tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"public class TaskManager {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"    private TaskDisplay taskDisplay \u003d new TaskDisplay();","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"    private FileManager fileManager;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"     * Constructs a TaskManager with the specified username, initializing the FileManager","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"     * and loading saved tasks from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"     * @param username The username associated with the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"    public TaskManager(String username) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"        this.fileManager \u003d new FileManager(username);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"        loadSavedTasks();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"     * Adds a new task to the task list based on the provided task description and type.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"     * Automatically saves the updated task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"     * @param type            The type of the task (Todo, Event, Deadline).","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"    public void addTask(String taskDescription, TaskType type) {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"            if (taskDescription.trim().equalsIgnoreCase(type.toString())) {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"                return;","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"gauravuj"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"gauravuj"},"content":"            Task task;","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"            switch (type) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"                case Todo:","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"                    task \u003d new Todo(taskDescription, false);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"gauravuj"},"content":"                case Event:","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"gauravuj"},"content":"                    task \u003d new Event(taskDescription, false,","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"gauravuj"},"content":"                            LocalDateTime.now(), LocalDateTime.now().plusDays(1));","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"gauravuj"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"gauravuj"},"content":"                case Deadline:","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"gauravuj"},"content":"                    LocalDateTime defaultDeadline \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"gauravuj"},"content":"                    task \u003d new Deadline(taskDescription, false, defaultDeadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"gauravuj"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"gauravuj"},"content":"                default:","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"gauravuj"},"content":"                    throw new DukeException(\"Hey, I\u0027m not quite sure what\"","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"gauravuj"},"content":"                            + \" that means. Mind giving me another shot at understanding?\");","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"gauravuj"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"gauravuj"},"content":"            taskList.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"gauravuj"},"content":"            autoSaveTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"gauravuj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"gauravuj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"gauravuj"},"content":"     * Finds tasks containing the specified keyword in their descriptions.","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"gauravuj"},"content":"     * @param keyword The keyword to search for within task descriptions.","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"gauravuj"},"content":"     * @return A list of tasks containing the specified keyword in their descriptions.","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"gauravuj"},"content":"    public List\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"gauravuj"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"gauravuj"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"gauravuj"},"content":"            if (task.getTaskDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"gauravuj"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"gauravuj"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"gauravuj"},"content":"        return matchingTasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"gauravuj"},"content":"     * Deletes the task at the specified index from the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"gauravuj"},"content":"     * Automatically saves the updated task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"gauravuj"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"gauravuj"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"gauravuj"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"gauravuj"},"content":"            if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"gauravuj"},"content":"                return;","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"gauravuj"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"gauravuj"},"content":"            taskList.remove(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"gauravuj"},"content":"            autoSaveTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"gauravuj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"gauravuj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"gauravuj"},"content":"     * Deletes all tasks from the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"gauravuj"},"content":"     * Automatically saves the updated task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"gauravuj"},"content":"    public void deleteAllTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"gauravuj"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"gauravuj"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"gauravuj"},"content":"                return;","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"gauravuj"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"gauravuj"},"content":"            taskList.clear();","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"gauravuj"},"content":"            autoSaveTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"gauravuj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"gauravuj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"gauravuj"},"content":"     * Marks the task at the specified index as complete.","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"gauravuj"},"content":"     * @param index The index of the task to mark as complete.","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"gauravuj"},"content":"    public void markAsComplete(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"gauravuj"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"gauravuj"},"content":"            Task task \u003d taskList.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"gauravuj"},"content":"            task.markAsComplete();","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"gauravuj"},"content":"     * Marks the task at the specified index as incomplete.","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"gauravuj"},"content":"     * @param index The index of the task to mark as incomplete.","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"gauravuj"},"content":"    public void markAsIncomplete(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"gauravuj"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c taskList.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"gauravuj"},"content":"            Task task \u003d taskList.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"gauravuj"},"content":"            task.markAsIncomplete();","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"gauravuj"},"content":"    private void loadSavedTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"gauravuj"},"content":"        taskList \u003d fileManager.loadTasks(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"gauravuj"},"content":"    public void autoSaveTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"gauravuj"},"content":"        fileManager.saveTasks(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"gauravuj"},"content":"     * Displays tasks based on the user input command using the TaskDisplay instance.","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"gauravuj"},"content":"     * @param input The user input command.","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"gauravuj"},"content":"    public String displayTask(String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":158,"author":{"gitId":"gauravuj"},"content":"        return taskDisplay.displayTasks(taskList, input);","lastModifiedDate":"2024-02-11"},{"lineNumber":159,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":160}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"public enum TaskType {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"    Event, Todo, Deadline","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":5}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":" * The Todo class represents a task without any specific deadline or time frame.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":" * It extends the Task class and provides specific implementations for task-related methods.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"     * Constructs a Todo task with the given task description and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"     * @param taskDescription The description of the todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"     * @param isCompleted     The completion status of the todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"    public Todo(String taskDescription, boolean isCompleted) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"        super(taskDescription, isCompleted);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"     * Gets the task icon associated with a todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"     * @return The task icon, which is \"[T]\" for todo tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"        return \"[T]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"     * Gets the status icon associated with a todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"     * @return The status icon, which is \"[X]\" if the task is completed, \"[ ]\" otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"        return isCompleted ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"     * Gets the formatted description of the todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"     * @return The trimmed task description without the \"todo\" keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"        return trimDescription(taskDescription);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"gauravuj"},"content":"     * Trims the task description by removing the \"todo\" keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"gauravuj"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"gauravuj"},"content":"     * @param taskDescription The original task description.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"gauravuj"},"content":"     * @return The trimmed task description without the \"todo\" keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"gauravuj"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"gauravuj"},"content":"    protected String trimDescription(String taskDescription) {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"gauravuj"},"content":"        return taskDescription.replaceAll(\"(?i)todo\", \"\").trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":58}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"        dialog.setMinWidth(Region.USE_PREF_SIZE);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"gauravuj"},"content":"        dialog.setMaxHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"gauravuj"},"content":"    private void flip() {","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"gauravuj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"gauravuj"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"gauravuj"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"gauravuj"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"gauravuj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"gauravuj"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"gauravuj"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"gauravuj"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"gauravuj"},"content":"        db.flip();","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"gauravuj"},"content":"        return db;","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"gauravuj":63}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/user1.png\")));","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/sophia.png\")));","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"        // Bind scrollPane to dialogContainer height","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"        // Print default message","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"        printDefaultMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"gauravuj"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"    // Method to print default message","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"gauravuj"},"content":"    private void printDefaultMessage() {","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"gauravuj"},"content":"        String defaultMessage \u003d \"Hi there! I\u0027m Sophia :)\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"gauravuj"},"content":"                \"I\u0027m your AI Assistant and I\u0027m here\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"gauravuj"},"content":"                \"to help you with anything.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"gauravuj"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(defaultMessage, dukeImage));","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"gauravuj"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"gauravuj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"gauravuj"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"gauravuj"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"gauravuj"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"gauravuj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"gauravuj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"gauravuj"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"gauravuj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"gauravuj"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"gauravuj"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"gauravuj"},"content":"        );","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"gauravuj"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"gauravuj":70}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxWidth\u003d\"-Infinity\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"250.0\" style\u003d\"-fx-background-color: FF9843; -fx-background-radius: 9px;\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"            \u003cfont\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"                \u003cFont name\u003d\"Verdana\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"            \u003c/font\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"4.0\" right\u003d\"4.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"                \u003cInsets bottom\u003d\"4.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"4.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"65.0\" fitWidth\u003d\"65.0\" mouseTransparent\u003d\"true\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"gauravuj":30}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"\u003cAnchorPane maxHeight\u003d\"659.0\" maxWidth\u003d\"484.0\" minHeight\u003d\"659.0\" minWidth\u003d\"484.0\" scaleShape\u003d\"false\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"14.0\" layoutY\u003d\"604.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"357.0\" promptText\u003d\"Enter a text...\" style\u003d\"-fx-background-radius: 15px; -fx-border-radius: 15px;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"            \u003cFont name\u003d\"Gurmukhi Sangam MN\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"         \u003c/font\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"            \u003cCursor fx:constant\u003d\"TEXT\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"         \u003c/cursor\u003e\u003c/TextField\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"        \u003cButton fx:id\u003d\"sendButton\" defaultButton\u003d\"true\" layoutX\u003d\"383.0\" layoutY\u003d\"607.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #86A7FC; -fx-background-radius: 25px;\" text\u003d\"Send\" textFill\u003d\"#fffefe\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"            \u003cFont name\u003d\"Avenir Next Demi Bold\" size\u003d\"17.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"         \u003c/font\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"            \u003cCursor fx:constant\u003d\"HAND\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"         \u003c/cursor\u003e\u003c/Button\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"593.0\" prefWidth\u003d\"484.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"595.0\" prefWidth\u003d\"468.0\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"               \u003ccursor\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"                  \u003cCursor fx:constant\u003d\"DEFAULT\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"               \u003c/cursor\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"               \u003copaqueInsets\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"               \u003c/opaqueInsets\u003e\u003c/VBox\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"            \u003cCursor fx:constant\u003d\"DEFAULT\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"gauravuj"},"content":"         \u003c/cursor\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"gauravuj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"gauravuj":46}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"    public void getTaskIcon_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", false, LocalDateTime.now());","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"        assertEquals(\"[D]\", deadline.getTaskIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"    public void getStatusIcon_notCompleted() {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", false, LocalDateTime.now());","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"        assertEquals(\"[ ]\", deadline.getStatusIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"    public void getStatusIcon_completed() {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", true, LocalDateTime.now());","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"        assertEquals(\"[X]\", deadline.getStatusIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"    public void getTaskDescription_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"        LocalDateTime by \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", false, by);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"        String expectedDescription \u003d \"Submit report (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"        assertEquals(expectedDescription, deadline.getTaskDescription());","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"    public void trimDescription_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"        Deadline deadline \u003d new Deadline(\"deadline Submit report /by 2023/12/31 23:59\", false, LocalDateTime.now());","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"        assertEquals(\"Submit report\", deadline.trimDescription(\"deadline Submit report /by 2023/12/31 23:59\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"gauravuj"},"content":"    public void getBy_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"        LocalDateTime by \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", false, by);","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"        assertEquals(by, deadline.getBy());","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":49}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"public class EventTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"    public void getTaskIcon_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"        Event event \u003d new Event(\"Project Meeting\", false, LocalDateTime.now(), LocalDateTime.now().plusHours(2));","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"        assertEquals(\"[E]\", event.getTaskIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"    public void getStatusIcon_notCompleted() {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"        Event event \u003d new Event(\"Project Meeting\", false, LocalDateTime.now(), LocalDateTime.now().plusHours(2));","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"        assertEquals(\"[ ]\", event.getStatusIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"    public void getStatusIcon_completed() {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"        Event event \u003d new Event(\"Project Meeting\", true, LocalDateTime.now(), LocalDateTime.now().plusHours(2));","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"        assertEquals(\"[X]\", event.getStatusIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"gauravuj"},"content":"    public void getTaskDescription_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"gauravuj"},"content":"        LocalDateTime from \u003d LocalDateTime.now();","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"gauravuj"},"content":"        LocalDateTime to \u003d LocalDateTime.now().plusHours(2);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"gauravuj"},"content":"        Event event \u003d new Event(\"Project Meeting\", false, from, to);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"gauravuj"},"content":"        String expectedDescription \u003d \"Project Meeting (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) +","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"gauravuj"},"content":"                \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"gauravuj"},"content":"        assertEquals(expectedDescription, event.getTaskDescription());","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"gauravuj"},"content":"    public void trimDescription_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"gauravuj"},"content":"        Event event \u003d new Event(\"event Project Meeting /from 2023/03/21 14:00 /to 2023/03/21 16:00\", false, LocalDateTime.now(), LocalDateTime.now().plusHours(2));","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"gauravuj"},"content":"        assertEquals(\"Project Meeting\", event.trimDescription(\"event Project Meeting /from 2023/03/21 14:00 /to 2023/03/21 16:00\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"gauravuj"},"content":"    public void getFrom_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"gauravuj"},"content":"        LocalDateTime from \u003d LocalDateTime.now();","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"gauravuj"},"content":"        LocalDateTime to \u003d LocalDateTime.now().plusHours(2);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"gauravuj"},"content":"        Event event \u003d new Event(\"Project Meeting\", false, from, to);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"gauravuj"},"content":"        assertEquals(from, event.getFrom());","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"gauravuj"},"content":"    public void getTo_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"gauravuj"},"content":"        LocalDateTime from \u003d LocalDateTime.now();","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"gauravuj"},"content":"        LocalDateTime to \u003d LocalDateTime.now().plusHours(2);","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"gauravuj"},"content":"        Event event \u003d new Event(\"Project Meeting\", false, from, to);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"gauravuj"},"content":"        assertEquals(to, event.getTo());","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":59}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"    public void getStatusIcon_success(){","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"        // status will be empty when isCompleted is false","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"        assertEquals(\"[ ]\", new Todo(\"todo borrow books\", false).getStatusIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"        // status will be X when isCompleted is true","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"gauravuj"},"content":"        assertEquals(\"[X]\", new Todo(\"todo borrow books\", true).getStatusIcon());","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"gauravuj"},"content":"    public void trimDescription_success(){","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"gauravuj"},"content":"        // normally the command todo is removed from the string","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"gauravuj"},"content":"        assertEquals(\"complete work\", new Todo(\"todo complete work\", false).trimDescription(\"todo complete work\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"gauravuj"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"gauravuj"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"gauravuj"},"content":"    public void getTaskDescription_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"gauravuj"},"content":"        // will give a string description that doesn\u0027t have todo word","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"gauravuj"},"content":"        assertEquals(\"go for run\", new Todo(\"todo go for run\", true).getTaskDescription());","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"gauravuj"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"gauravuj"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"gauravuj":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gauravuj"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"gauravuj"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"gauravuj"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gauravuj"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gauravuj"},"content":"event startup meet /from Tue 3pm /to 8pm","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gauravuj"},"content":"todo go to dance studio","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gauravuj"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gauravuj"},"content":"mark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gauravuj"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gauravuj"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gauravuj"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gauravuj"},"content":"unmark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"gauravuj"},"content":"list","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gauravuj":13}}]
