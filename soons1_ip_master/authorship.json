[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"        return \"[D]\" + super.getStatus() + \" \" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"soons1"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"        return \"D | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + super.description + \" | \" + this.by;","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"soons1":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"import java.io.*;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"    private static final String lineBreak \u003d \"_______________________________________________________________________________\";","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"    private static final ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"    private static final File f \u003d new File(\"data/list.txt\");","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"        greet();","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"        loadExistingList(f);","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"        String command;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"        while (!(command \u003d br.readLine()).equals(\"bye\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"soons1"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"                Duke.checkCmd(command);","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"            } catch (InvalidCommandException | IncompleteCommandException ice){","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"                System.out.println(ice.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"        exit();","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"soons1"},"content":"    public static void checkCmd(String cmd) throws InvalidCommandException, IncompleteCommandException {","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"soons1"},"content":"        String[] commandArr \u003d cmd.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"soons1"},"content":"        switch (commandArr[0]) {","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"soons1"},"content":"            case \"list\":","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"soons1"},"content":"                printLst();","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"soons1"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"soons1"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"soons1"},"content":"                if (commandArr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"soons1"},"content":"                    throw new IncompleteCommandException(String.format(\"%s\\n Sorry, please input the list index for me to mark\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"soons1"},"content":"                if (!commandArr[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"soons1"},"content":"                    throw new InvalidCommandException(String.format(\"%s\\n Sorry, please input a valid list index for me to mark\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"soons1"},"content":"                int toMark \u003d Integer.parseInt(commandArr[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"soons1"},"content":"                if (toMark \u003e lst.size()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"soons1"},"content":"                    throw new InvalidCommandException(String.format(\"%s\\n Sorry, please input a valid list index for me to mark\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"soons1"},"content":"                markTask(toMark);","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"soons1"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"soons1"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"soons1"},"content":"                if (commandArr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"soons1"},"content":"                    throw new IncompleteCommandException(String.format(\"%s\\n Sorry, please input the list index for me to unmark\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"soons1"},"content":"                if (!commandArr[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"soons1"},"content":"                    throw new InvalidCommandException(String.format(\"%s\\n Sorry, please input a valid list index for me to unmark\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"soons1"},"content":"                int toUnmark \u003d Integer.parseInt(commandArr[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"soons1"},"content":"                if (toUnmark \u003e lst.size()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"soons1"},"content":"                    throw new InvalidCommandException(String.format(\"%s\\n Sorry, please input a valid list index for me to unmark\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"soons1"},"content":"                unmarkTask(toUnmark);","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"soons1"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"soons1"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"soons1"},"content":"                if (commandArr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"soons1"},"content":"                    throw new IncompleteCommandException(String.format(\"%s\\n Sorry, the description of a todo cannot be empty :(\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"soons1"},"content":"                String todo \u003d cmd.substring(5);","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"soons1"},"content":"                Task newTodo \u003d new Todo(todo);","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"soons1"},"content":"                addLst(newTodo);","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"soons1"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"soons1"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"soons1"},"content":"                if (commandArr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"soons1"},"content":"                    throw new IncompleteCommandException(String.format(\"%s\\n Sorry, the description and date of a deadline cannot be empty :(\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"soons1"},"content":"                String[] deadlineArr \u003d cmd.substring(9).split(\" /by \");","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"soons1"},"content":"                if (deadlineArr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"soons1"},"content":"                    throw new IncompleteCommandException(String.format(\"%s\\n Sorry, the date of a deadline cannot be empty :(\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"soons1"},"content":"                LocalDate by;","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"soons1"},"content":"                try {","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"soons1"},"content":"                    by \u003d LocalDate.parse(deadlineArr[1]);","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"soons1"},"content":"                } catch (DateTimeParseException dateTimeParseE) {","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"soons1"},"content":"                    throw new InvalidCommandException(String.format(\"%s\\n Sorry, please input the date of a deadline in the format YYYY-MM-DD\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"soons1"},"content":"                Task newDeadline \u003d new Deadline(deadlineArr[0], by);","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"soons1"},"content":"                addLst(newDeadline);","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"soons1"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"soons1"},"content":"            case \"event\":","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"soons1"},"content":"                if (commandArr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"soons1"},"content":"                    throw new IncompleteCommandException(String.format(\"%s\\n Sorry, the description and start and end dates of an event cannot be empty :(\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"soons1"},"content":"                String[] eventFromArr \u003d cmd.substring(6).split(\" /from \");","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"soons1"},"content":"                if (eventFromArr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"soons1"},"content":"                    throw new IncompleteCommandException(String.format(\"%s\\n Sorry, the start and end dates of an event cannot be empty :(\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"soons1"},"content":"                String[] eventToArr \u003d eventFromArr[1].split(\" /to \");","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"soons1"},"content":"                if (eventToArr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"soons1"},"content":"                    throw new IncompleteCommandException(String.format(\"%s\\n Sorry, the end date of an event cannot be empty :(\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"soons1"},"content":"                LocalDate from;","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"soons1"},"content":"                LocalDate to;","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"soons1"},"content":"                try {","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"soons1"},"content":"                    from \u003d LocalDate.parse(eventToArr[0]);","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"soons1"},"content":"                    to \u003d LocalDate.parse(eventToArr[1]);","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"soons1"},"content":"                } catch (DateTimeParseException dateTimeParseE) {","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"soons1"},"content":"                    throw new InvalidCommandException(String.format(\"%s\\n Sorry, please input the dates of an event in the format YYYY-MM-DD\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"soons1"},"content":"                if (from.isAfter(to)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"soons1"},"content":"                    throw new InvalidCommandException(String.format(\"%s\\n Sorry, please input the start date of an event before/on the end date\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"soons1"},"content":"                Task newEvent \u003d new Event(eventFromArr[0], from, to);","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"soons1"},"content":"                addLst(newEvent);","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"soons1"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"soons1"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"soons1"},"content":"                if (commandArr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"soons1"},"content":"                    throw new IncompleteCommandException(String.format(\"%s\\n Sorry, please input the list index for me to delete\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"soons1"},"content":"                if (!commandArr[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"soons1"},"content":"                    throw new InvalidCommandException(String.format(\"%s\\n Sorry, please input a valid list index for me to delete\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"soons1"},"content":"                int toDelete \u003d Integer.parseInt(commandArr[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"soons1"},"content":"                if (toDelete \u003e lst.size()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":121,"author":{"gitId":"soons1"},"content":"                    throw new InvalidCommandException(String.format(\"%s\\n Sorry, please input a valid list index for me to delete\\n%s\", lineBreak, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"soons1"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"soons1"},"content":"                deleteTask(toDelete);","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"soons1"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"soons1"},"content":"            default:","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"soons1"},"content":"                throw new InvalidCommandException(String.format(\"%s\\n Sorry, %s is not a valid command :(\\n%s\", lineBreak, cmd, lineBreak));","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":130,"author":{"gitId":"soons1"},"content":"    public static void greet() {","lastModifiedDate":"2024-01-23"},{"lineNumber":131,"author":{"gitId":"soons1"},"content":"        String snowBoyAscii \u003d","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"soons1"},"content":"                \"      *      \\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"soons1"},"content":"                        \"     ***     \\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"soons1"},"content":"                        \"   *******   \\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"soons1"},"content":"                        \"  *  o o  *  \\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"soons1"},"content":"                        \" *    \u003e    * \\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"soons1"},"content":"                        \" *  \\\\___/  * \\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"soons1"},"content":"                        \"  *       *  \\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":139,"author":{"gitId":"soons1"},"content":"                        \"   *******   \\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":140,"author":{"gitId":"soons1"},"content":"                        \"     ***     \\n\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":141,"author":{"gitId":"soons1"},"content":"                        \"      *      \";","lastModifiedDate":"2024-01-27"},{"lineNumber":142,"author":{"gitId":"soons1"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2024-01-23"},{"lineNumber":143,"author":{"gitId":"soons1"},"content":"        System.out.println(snowBoyAscii);","lastModifiedDate":"2024-01-27"},{"lineNumber":144,"author":{"gitId":"soons1"},"content":"        System.out.println(\" Hello! I\u0027m SnowBoy\\n\" + \" What can I do for you?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"soons1"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2024-01-23"},{"lineNumber":146,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":148,"author":{"gitId":"soons1"},"content":"    public static void loadExistingList(File f) throws IOException{","lastModifiedDate":"2024-01-27"},{"lineNumber":149,"author":{"gitId":"soons1"},"content":"        File parentD \u003d f.getParentFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":150,"author":{"gitId":"soons1"},"content":"        if (parentD !\u003d null \u0026\u0026 !parentD.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":151,"author":{"gitId":"soons1"},"content":"            parentD.mkdirs();","lastModifiedDate":"2024-01-27"},{"lineNumber":152,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":153,"author":{"gitId":"soons1"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":154,"author":{"gitId":"soons1"},"content":"            f.createNewFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":155,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":156,"author":{"gitId":"soons1"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-01-27"},{"lineNumber":157,"author":{"gitId":"soons1"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"soons1"},"content":"            String[] taskArr \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"soons1"},"content":"            switch (taskArr[0]) {","lastModifiedDate":"2024-01-27"},{"lineNumber":160,"author":{"gitId":"soons1"},"content":"                case \"T\":","lastModifiedDate":"2024-01-27"},{"lineNumber":161,"author":{"gitId":"soons1"},"content":"                    Task newTodo \u003d new Todo(taskArr[2]);","lastModifiedDate":"2024-01-27"},{"lineNumber":162,"author":{"gitId":"soons1"},"content":"                    if (taskArr[1].equals(\"1\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":163,"author":{"gitId":"soons1"},"content":"                        newTodo.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":164,"author":{"gitId":"soons1"},"content":"                    }","lastModifiedDate":"2024-01-27"},{"lineNumber":165,"author":{"gitId":"soons1"},"content":"                    lst.add(newTodo);","lastModifiedDate":"2024-01-27"},{"lineNumber":166,"author":{"gitId":"soons1"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":167,"author":{"gitId":"soons1"},"content":"                case \"D\":","lastModifiedDate":"2024-01-27"},{"lineNumber":168,"author":{"gitId":"soons1"},"content":"                    Task newDeadline \u003d new Deadline(taskArr[2], LocalDate.parse(taskArr[3]));","lastModifiedDate":"2024-01-27"},{"lineNumber":169,"author":{"gitId":"soons1"},"content":"                    if (taskArr[1].equals(\"1\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":170,"author":{"gitId":"soons1"},"content":"                        newDeadline.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":171,"author":{"gitId":"soons1"},"content":"                    }","lastModifiedDate":"2024-01-27"},{"lineNumber":172,"author":{"gitId":"soons1"},"content":"                    lst.add(newDeadline);","lastModifiedDate":"2024-01-27"},{"lineNumber":173,"author":{"gitId":"soons1"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":174,"author":{"gitId":"soons1"},"content":"                case \"E\":","lastModifiedDate":"2024-01-27"},{"lineNumber":175,"author":{"gitId":"soons1"},"content":"                    Task newEvent \u003d new Event(taskArr[2], LocalDate.parse(taskArr[3]), LocalDate.parse(taskArr[4]));","lastModifiedDate":"2024-01-27"},{"lineNumber":176,"author":{"gitId":"soons1"},"content":"                    if (taskArr[1].equals(\"1\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":177,"author":{"gitId":"soons1"},"content":"                        newEvent.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":178,"author":{"gitId":"soons1"},"content":"                    }","lastModifiedDate":"2024-01-27"},{"lineNumber":179,"author":{"gitId":"soons1"},"content":"                    lst.add(newEvent);","lastModifiedDate":"2024-01-27"},{"lineNumber":180,"author":{"gitId":"soons1"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":181,"author":{"gitId":"soons1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":182,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":183,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":184,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":185,"author":{"gitId":"soons1"},"content":"    public static void addLst(Task newTask) {","lastModifiedDate":"2024-01-23"},{"lineNumber":186,"author":{"gitId":"soons1"},"content":"        lst.add(newTask);","lastModifiedDate":"2024-01-23"},{"lineNumber":187,"author":{"gitId":"soons1"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2024-01-23"},{"lineNumber":188,"author":{"gitId":"soons1"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":189,"author":{"gitId":"soons1"},"content":"        System.out.println(\"   \" + newTask.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":190,"author":{"gitId":"soons1"},"content":"        System.out.println(\" Now you have \" + lst.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":191,"author":{"gitId":"soons1"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2024-01-23"},{"lineNumber":192,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":193,"author":{"gitId":"soons1"},"content":"    public static void printLst() {","lastModifiedDate":"2024-01-23"},{"lineNumber":194,"author":{"gitId":"soons1"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2024-01-23"},{"lineNumber":195,"author":{"gitId":"soons1"},"content":"        if (lst.isEmpty()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":196,"author":{"gitId":"soons1"},"content":"            System.out.println(\" Whoops! Your list is empty :(\");","lastModifiedDate":"2024-01-23"},{"lineNumber":197,"author":{"gitId":"soons1"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":198,"author":{"gitId":"soons1"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":199,"author":{"gitId":"soons1"},"content":"            for (int i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2024-01-23"},{"lineNumber":200,"author":{"gitId":"soons1"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + lst.get(i).toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":201,"author":{"gitId":"soons1"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":202,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":203,"author":{"gitId":"soons1"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2024-01-23"},{"lineNumber":204,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":205,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":206,"author":{"gitId":"soons1"},"content":"    public static void markTask(int num) {","lastModifiedDate":"2024-01-23"},{"lineNumber":207,"author":{"gitId":"soons1"},"content":"        lst.get(num - 1).markAsDone();","lastModifiedDate":"2024-01-23"},{"lineNumber":208,"author":{"gitId":"soons1"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2024-01-23"},{"lineNumber":209,"author":{"gitId":"soons1"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":210,"author":{"gitId":"soons1"},"content":"        System.out.println(\"   \" + lst.get(num - 1).toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":211,"author":{"gitId":"soons1"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2024-01-23"},{"lineNumber":212,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":213,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":214,"author":{"gitId":"soons1"},"content":"    public static void unmarkTask(int num) {","lastModifiedDate":"2024-01-23"},{"lineNumber":215,"author":{"gitId":"soons1"},"content":"        lst.get(num - 1).markAsUndone();","lastModifiedDate":"2024-01-23"},{"lineNumber":216,"author":{"gitId":"soons1"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2024-01-23"},{"lineNumber":217,"author":{"gitId":"soons1"},"content":"        System.out.println(\" OK! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":218,"author":{"gitId":"soons1"},"content":"        System.out.println(\"   \" + lst.get(num - 1).toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":219,"author":{"gitId":"soons1"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2024-01-23"},{"lineNumber":220,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":221,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":222,"author":{"gitId":"soons1"},"content":"    public static void deleteTask(int num) {","lastModifiedDate":"2024-01-24"},{"lineNumber":223,"author":{"gitId":"soons1"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2024-01-24"},{"lineNumber":224,"author":{"gitId":"soons1"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":225,"author":{"gitId":"soons1"},"content":"        System.out.println(\"   \" + lst.get(num - 1).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":226,"author":{"gitId":"soons1"},"content":"        lst.remove(num - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":227,"author":{"gitId":"soons1"},"content":"        System.out.println(\" Now you have \" + lst.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":228,"author":{"gitId":"soons1"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2024-01-24"},{"lineNumber":229,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":230,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":231,"author":{"gitId":"soons1"},"content":"    public static void exit() {","lastModifiedDate":"2024-01-23"},{"lineNumber":232,"author":{"gitId":"soons1"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":233,"author":{"gitId":"soons1"},"content":"            FileWriter cfw \u003d new FileWriter(f);","lastModifiedDate":"2024-01-27"},{"lineNumber":234,"author":{"gitId":"soons1"},"content":"            for (Task t : lst) {","lastModifiedDate":"2024-01-27"},{"lineNumber":235,"author":{"gitId":"soons1"},"content":"                cfw.write(t.toSaveFormat() + \"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":236,"author":{"gitId":"soons1"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":237,"author":{"gitId":"soons1"},"content":"            cfw.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":238,"author":{"gitId":"soons1"},"content":"        } catch (IOException ie) {","lastModifiedDate":"2024-01-27"},{"lineNumber":239,"author":{"gitId":"soons1"},"content":"            System.out.println(\"Unable to save task(s) to local file\");","lastModifiedDate":"2024-01-27"},{"lineNumber":240,"author":{"gitId":"soons1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":241,"author":{"gitId":"soons1"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2024-01-23"},{"lineNumber":242,"author":{"gitId":"soons1"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":243,"author":{"gitId":"soons1"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2024-01-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"soons1":242,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"soons1"},"content":"        return \"[E]\" + super.getStatus() + \" \" + super.toString() + \" (from: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"        return \"E | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + super.description + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"soons1":24}},{"path":"src/main/java/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"public class IncompleteCommandException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"    public IncompleteCommandException(String errorMsg) {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"        super(errorMsg);","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"soons1":6}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"    public InvalidCommandException(String errorMsg) {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"        super(errorMsg);","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"soons1":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"        return description;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"soons1"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"soons1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"soons1"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"soons1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"soons1"},"content":"    abstract String toSaveFormat();","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"soons1":27}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"        return \"[T]\" + super.getStatus() + \" \" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"soons1"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"soons1"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"soons1"},"content":"        return \"T | \" + (super.isDone ? \"1\" : \"0\") + \" | \" + super.description;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"soons1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"soons1"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"soons1":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"soons1"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"soons1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"soons1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"soons1"},"content":"event online discussion /from Aug 6th 5pm /to Aug 6th 7pm","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"soons1"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"soons1"},"content":"mark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"soons1"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"soons1"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"soons1"},"content":"unmark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"soons1"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"soons1"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"soons1":11}}]
