[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nichee":5,"-":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.1\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"javafx {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"    version \u003d \"17.0.8\"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"    String javaFxVersion \u003d \u002717.0.8\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"// commented out because jUnit may be used again","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"//test {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"//    useJUnitPlatform()","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"//","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"//    testLogging {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"//        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"nichee"},"content":"//","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"nichee"},"content":"//        showExceptions true","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"nichee"},"content":"//        exceptionFormat \"full\"","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"nichee"},"content":"//        showCauses true","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"nichee"},"content":"//        showStackTraces true","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"nichee"},"content":"//        showStandardStreams \u003d false","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"nichee"},"content":"//    }","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"nichee"},"content":"//}","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"nichee"},"content":"    mainClass.set(\u0027Duke.Launcher\u0027)","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"nichee"},"content":"    archiveBaseName \u003d \"Launcher\"","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"nichee"},"content":"    mainClassName \u003d \u0027Duke.Launcher\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"nichee"},"content":"    archiveFileName \u003d \u0027Launcher.jar\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nichee":39,"-":25}},{"path":"docs/legal/jquery.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"## jQuery v3.6.0","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"### jQuery License","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"```","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"jQuery v 3.6.0","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"Copyright OpenJS Foundation and other contributors, https://openjsf.org/","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"Permission is hereby granted, free of charge, to any person obtaining","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"a copy of this software and associated documentation files (the","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"\"Software\"), to deal in the Software without restriction, including","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"without limitation the rights to use, copy, modify, merge, publish,","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"distribute, sublicense, and/or sell copies of the Software, and to","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"permit persons to whom the Software is furnished to do so, subject to","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"the following conditions:","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"The above copyright notice and this permission notice shall be","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"included in all copies or substantial portions of the Software.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"******************************************","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"The jQuery JavaScript Library v3.6.0 also includes Sizzle.js","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"Sizzle.js includes the following license:","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"Copyright JS Foundation and other contributors, https://js.foundation/","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"This software consists of voluntary contributions made by many","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"individuals. For exact contribution history, see the revision history","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"available at https://github.com/jquery/sizzle","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"The following license applies to all parts of this software except as","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"nichee"},"content":"documented below:","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"nichee"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"nichee"},"content":"Permission is hereby granted, free of charge, to any person obtaining","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"nichee"},"content":"a copy of this software and associated documentation files (the","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"nichee"},"content":"\"Software\"), to deal in the Software without restriction, including","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"nichee"},"content":"without limitation the rights to use, copy, modify, merge, publish,","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"nichee"},"content":"distribute, sublicense, and/or sell copies of the Software, and to","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"nichee"},"content":"permit persons to whom the Software is furnished to do so, subject to","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"nichee"},"content":"the following conditions:","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"nichee"},"content":"The above copyright notice and this permission notice shall be","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"nichee"},"content":"included in all copies or substantial portions of the Software.","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"nichee"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"nichee"},"content":"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"nichee"},"content":"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"nichee"},"content":"NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"nichee"},"content":"LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"nichee"},"content":"OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"nichee"},"content":"WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"nichee"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"nichee"},"content":"All files located in the node_modules and external directories are","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"nichee"},"content":"externally maintained libraries used by this software which have their","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"nichee"},"content":"own licenses; we recommend you read them, as their terms may differ from","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"nichee"},"content":"the terms above.","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"nichee"},"content":"*********************","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"nichee"},"content":"```","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"nichee":72}},{"path":"docs/legal/jqueryUI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"## jQuery UI v1.13.1","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"### jQuery UI License","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"```","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"Copyright jQuery Foundation and other contributors, https://jquery.org/","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"This software consists of voluntary contributions made by many","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"individuals. For exact contribution history, see the revision history","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"available at https://github.com/jquery/jquery-ui","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"The following license applies to all parts of this software except as","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"documented below:","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"Permission is hereby granted, free of charge, to any person obtaining","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"a copy of this software and associated documentation files (the","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"\"Software\"), to deal in the Software without restriction, including","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"without limitation the rights to use, copy, modify, merge, publish,","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"distribute, sublicense, and/or sell copies of the Software, and to","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"permit persons to whom the Software is furnished to do so, subject to","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"the following conditions:","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"The above copyright notice and this permission notice shall be","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"included in all copies or substantial portions of the Software.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"Copyright and related rights for sample code are waived via CC0. Sample","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"code is defined as all source code contained within the demos directory.","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"nichee"},"content":"CC0: http://creativecommons.org/publicdomain/zero/1.0/","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"nichee"},"content":"\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"nichee"},"content":"All files located in the node_modules and external directories are","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"nichee"},"content":"externally maintained libraries used by this software which have their","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"nichee"},"content":"own licenses; we recommend you read them, as their terms may differ from","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"nichee"},"content":"the terms above.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"nichee"},"content":"```","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"nichee":49}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"T | 1 | dasdasads","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"E | 1 | project meeting | Oct 15 2019 18:00 | Oct 15 2019 22:00","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"E | 0 | project meeting | Oct 15 2019 18:00 | Oct 15 2019 22:00","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"T | 0 | adsasdgrttewgg","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"T | 0 | dasdsdas","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"nichee":5}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package Duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":" * Each Deadline object includes a description and a deadline time.","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"     * Initializes a new Deadline object with a description and deadline time.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"     * The deadline time is parsed from a string into a LocalDateTime object.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"     * If parsing fails, the deadline time is set to null.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"     * @param by The deadline time as a string in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"            this.by \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"     * The format includes the type of task (\u0027[D]\u0027), the description, and the deadline time.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"     * @return String representing the Deadline task with its status, description, and deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"nichee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"nichee"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getBy() + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"nichee"},"content":"     * Returns the deadline time formatted as a string.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"nichee"},"content":"     * The format of the returned string is \"MMM dd yyyy HH:mm\".","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"nichee"},"content":"     * @return Formatted string of the \u0027by\u0027 LocalDateTime field, or null if \u0027by\u0027 is null.","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"nichee"},"content":"    public String getBy() {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"nichee"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"nichee":56}},{"path":"src/main/java/Duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package Duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"    final int imageWidth \u003d 100;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"    final int imageHeight \u003d 100;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"        l.setWrapText(true);","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"        iv.setFitWidth(imageWidth);","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"        iv.setFitHeight(imageHeight);","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"        this.getChildren().addAll(l, iv);","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"nichee"},"content":"    public static DialogBox getShirminDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"nichee"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"nichee"},"content":"        db.flip();","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"nichee"},"content":"        return db;","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nichee":46}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package Duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":" * Represents an event, represented by a description string and two LocalDateTime objects - from and to","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"     * Creates an Event object with a description, start time, and end time.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"     * The start and end times are parsed from strings into LocalDateTime objects.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"     * If parsing fails, both \u0027from\u0027 and \u0027to\u0027 are set to null.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"     * @param description Description of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"     * @param from String representing the start time of the event, expected in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"     * @param to String representing the end time of the event, expected in \"yyyy-MM-dd HHmm\" format.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"            this.from \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"            this.to \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"            // System.err.println(\"Error parsing event dates: \" + from + \" and \" + to + \". Please use the format \u0027yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"            this.from \u003d null; // Set to null in case of parsing error","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"            this.to \u003d null;   // Set to null in case of parsing error","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"     * Returns a string representation of the start time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"nichee"},"content":"     * The format of the returned string is \"MMM dd yyyy HH:mm\".","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"nichee"},"content":"     * @return Formatted string of the \u0027from\u0027 LocalDateTime field, or null if \u0027from\u0027 is null.","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"nichee"},"content":"    public String getFrom() {","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"nichee"},"content":"        return this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"nichee"},"content":"     * Returns a string representation of the end time of the event.","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"nichee"},"content":"     * The format of the returned string is \"MMM dd yyyy HH:mm\".","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"nichee"},"content":"     * @return Formatted string of the \u0027to\u0027 LocalDateTime field, or null if \u0027to\u0027 is null.","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"nichee"},"content":"    public String getTo() {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"nichee"},"content":"        return this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"nichee"},"content":"     * Checks if both start date and end date are set for an event.","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"nichee"},"content":"     * This method returns a Boolean value indicating whether both \u0027from\u0027 and \u0027to\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"nichee"},"content":"     * LocalDateTime fields in the current object instance are instantiated (not null).","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"nichee"},"content":"     * It helps in determining if the event has a valid date range.","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"nichee"},"content":"     * @return true if both \u0027from\u0027 and \u0027to\u0027 date-time fields are non-null, false otherwise","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"nichee"},"content":"    public Boolean hasValidDates() {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"nichee"},"content":"        return this.from !\u003d null \u0026\u0026 this.to !\u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"nichee"},"content":"     * Returns a string representation of the Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"nichee"},"content":"     * The format includes the type of task (\u0027[E]\u0027), the description, and the formatted \u0027from\u0027 and \u0027to\u0027 times.","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"nichee"},"content":"     * Example: \"[E][✓] Meeting (from: Oct 12 2021 10:00 to: Oct 12 2021 11:00)\"","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"nichee"},"content":"     * @return String representing the Event with its status, description, and time range.","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"nichee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"nichee"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.getFrom() + \" to: \" + this.getTo() + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"nichee":84}},{"path":"src/main/java/Duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package Duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"public class Launcher {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"nichee":11}},{"path":"src/main/java/Duke/MainApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package Duke;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"import javafx.scene.control.*;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"public class MainApp extends Application{","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"    private Shirmin shirmin;","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"    final int imageSize \u003d 50; // square image so only one field","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"    final int closeWaitTime \u003d 1000;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"    final int stageMinHeight \u003d 600;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"    final int stageMinWidth \u003d 400;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"    final int panePrefWidth \u003d 385;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"    final int panePrefHeight \u003d 535;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"    final int userInputWidth \u003d 325;","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"    final int sendButtonWidth \u003d 55;","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"    public void init() throws Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"        shirmin \u003d new Shirmin();","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"        Scene scene \u003d new Scene(helloWorld);","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"nichee"},"content":"        stage.show();","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"nichee"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"nichee"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"nichee"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"nichee"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"nichee"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"nichee"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"nichee"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"nichee"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"nichee"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"nichee"},"content":"        stage.show();","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"nichee"},"content":"        stage.setTitle(\"Shirmin\");","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"nichee"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"nichee"},"content":"        stage.setMinHeight(stageMinHeight);","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"nichee"},"content":"        stage.setMinWidth(stageMinWidth);","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"nichee"},"content":"        mainLayout.setPrefSize(stageMinWidth, stageMinHeight);","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"nichee"},"content":"        scrollPane.setPrefSize(panePrefWidth, panePrefHeight);","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"nichee"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"nichee"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"nichee"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"nichee"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"nichee"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"nichee"},"content":"        userInput.setPrefWidth(userInputWidth);","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"nichee"},"content":"        sendButton.setPrefWidth(sendButtonWidth);","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"nichee"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"nichee"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"nichee"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"nichee"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"nichee"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"nichee"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"nichee"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"nichee"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"nichee"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"nichee"},"content":"    private final Image user \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/lulu.jpg\")));","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"nichee"},"content":"    private final Image min \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/Shirmin.jpg\")));","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"nichee"},"content":"    /** Functions Status","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"nichee"},"content":"     * 9/9 complete  hell yea        - retest whenever big changes are made","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"nichee"},"content":"     * LIST           WORKING","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"nichee"},"content":"     * MARK           WORKING","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"nichee"},"content":"     * UNMARK         WORKING","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"nichee"},"content":"     * TODO           WORKING","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"nichee"},"content":"     * DEADLINE       WORKING","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"nichee"},"content":"     * EVENT          WORKING","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"nichee"},"content":"     * DELETE         WORKING","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"nichee"},"content":"     * FIND           WORKING","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"nichee"},"content":"     * BYE            WORKING","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"nichee"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"nichee"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"nichee"},"content":"        if (input.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"nichee"},"content":"            sayGoodbye();","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"nichee"},"content":"            return;","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"nichee"},"content":"        handleOtherInputs(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"nichee"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"nichee"},"content":"    private void sayGoodbye() {","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"nichee"},"content":"        Label goodbyeText \u003d new Label(\"Goodbye! See you again!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"nichee"},"content":"        ImageView dukeImageView \u003d new ImageView(min);","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"nichee"},"content":"        dukeImageView.setFitHeight(imageSize);","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"nichee"},"content":"        dukeImageView.setFitWidth(imageSize);","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"nichee"},"content":"        DialogBox goodbyeBox \u003d new DialogBox(goodbyeText, dukeImageView);","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"nichee"},"content":"        dialogContainer.getChildren().add(goodbyeBox);","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"nichee"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"nichee"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"nichee"},"content":"                Thread.sleep(closeWaitTime);","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"nichee"},"content":"            } catch (InterruptedException ie) {","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"nichee"},"content":"                Thread.currentThread().interrupt();","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"nichee"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"nichee"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"nichee"},"content":"        });","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"nichee"},"content":"     * Handles non-bye inputs, encapsulating the previous logic for handling user inputs.","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"nichee"},"content":"     * @param input The user input to handle.","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"nichee"},"content":"    private void handleOtherInputs(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"nichee"},"content":"        Label userText \u003d new Label(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"nichee"},"content":"        ImageView userImageView \u003d new ImageView(user);","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"nichee"},"content":"        userImageView.setFitHeight(imageSize);","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"nichee"},"content":"        userImageView.setFitWidth(imageSize);","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"nichee"},"content":"        DialogBox userInputBox \u003d DialogBox.getUserDialog(userText, userImageView);","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"nichee"},"content":"        String response \u003d shirmin.runCommand(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"nichee"},"content":"        Label shirminText \u003d new Label(response);","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"nichee"},"content":"        ImageView shirminImageView \u003d new ImageView(min);","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"nichee"},"content":"        shirminImageView.setFitHeight(imageSize);","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"nichee"},"content":"        shirminImageView.setFitWidth(imageSize);","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"nichee"},"content":"        DialogBox shirminResponseBox \u003d DialogBox.getShirminDialog(shirminText, shirminImageView);","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":150,"author":{"gitId":"nichee"},"content":"        dialogContainer.getChildren().addAll(userInputBox, shirminResponseBox);","lastModifiedDate":"2024-02-12"},{"lineNumber":151,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":153,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":154,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":155,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":156,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nichee":156}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package Duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":" * Represents a parser for interpreting user input and file data into Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":" * This class is responsible for parsing strings into corresponding Task objects","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":" * like Todo, Deadline, and Event, and handles parsing of date strings as well.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"     * Initializes a new Parser instance.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"    public Parser() {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"     * Parses a string into a Task object.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"     * The method interprets a string representation of a task (e.g., from a saved file)","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"     * and converts it into a corresponding Task object. The task could be of types Todo,","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"     * Deadline, or Event. It also handles marking tasks as done if indicated in the input.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"     * @param line The string representation of the task to be parsed.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"     * @return The parsed Task object, or null if the parsing fails or the task type is unknown.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"    public Task parseTask(String line) {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"            String type \u003d parts[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"nichee"},"content":"            boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"nichee"},"content":"            String description \u003d parts[2].trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"nichee"},"content":"            switch (type) {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"nichee"},"content":"            case \"T\":","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"nichee"},"content":"                Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"nichee"},"content":"                if (isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"nichee"},"content":"                    todo.markDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"nichee"},"content":"                return todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"nichee"},"content":"            case \"D\":","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"nichee"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"nichee"},"content":"                    return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"nichee"},"content":"                String by \u003d parts[3].trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"nichee"},"content":"                Deadline deadline \u003d new Deadline(description, parseDateString(by));","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"nichee"},"content":"                if (isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"nichee"},"content":"                    deadline.markDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"nichee"},"content":"                return deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"nichee"},"content":"            case \"E\":","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"nichee"},"content":"                if (parts.length \u003c 5) { // missing from/to or both","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"nichee"},"content":"                    return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"nichee"},"content":"                String from \u003d parts[3].trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"nichee"},"content":"                String to \u003d parts[4].trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"nichee"},"content":"                Event event \u003d new Event(description, parseDateString(from), parseDateString(to));","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"nichee"},"content":"                if (isDone) event.markDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"nichee"},"content":"                return event;","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"nichee"},"content":"            default:","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"nichee"},"content":"                return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"nichee"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"nichee"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"nichee"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"nichee"},"content":"     * Parses a date string into a formatted date string.","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"nichee"},"content":"     * Attempts to parse a given date string according to a predefined format (\"MMM dd yyyy HH:mm\")","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"nichee"},"content":"     * and converts it into a different format (\"yyyy-MM-dd HHmm\"). If parsing fails, an error","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"nichee"},"content":"     * message is displayed through the UI component.","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"nichee"},"content":"     * @param dateString The date string to be parsed.","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"nichee"},"content":"     * @return The formatted date string, or null if parsing fails.","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"nichee"},"content":"     * @throws DateTimeParseException if the date string does not match the expected format.","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"nichee"},"content":"    public String parseDateString(String dateString) throws DateTimeParseException {","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"nichee"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"nichee"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(dateString, DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"nichee"},"content":"            return date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"nichee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"nichee"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"nichee"},"content":"     * Formats a Task object into a string representation suitable for file storage.","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"nichee"},"content":"     * The format includes the task type, its completion status, and its description.","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"nichee"},"content":"     * For Deadline and Event tasks, their respective dates are also included.","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"nichee"},"content":"     * @param task The Task object to be formatted.","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"nichee"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"nichee"},"content":"    public String formatTaskForFile(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"nichee"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"nichee"},"content":"        String type \u003d","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"nichee"},"content":"                task instanceof Todo ? \"T\" :","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"nichee"},"content":"                        task instanceof Deadline ? \"D\" :","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"nichee"},"content":"                                task instanceof Event ? \"E\" : \"\";","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"nichee"},"content":"        int status \u003d task.isDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"nichee"},"content":"        String details \u003d task.getDescription();","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"nichee"},"content":"        returnString +\u003d type + \" | \" + status + \" | \" + details;","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"nichee"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"nichee"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"nichee"},"content":"            returnString +\u003d \" | \" + deadline.getBy();","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"nichee"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"nichee"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"nichee"},"content":"            returnString +\u003d \" | \" + event.getFrom() + \" | \" + event.getTo();","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"nichee"},"content":"        return returnString;","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"nichee":123}},{"path":"src/main/java/Duke/Shirmin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package Duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":" * Represents the main class of the Duke application.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":" * This class is responsible for initializing and running the Duke application.","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":" * It integrates various classes in an OOP structure - Storage, TaskList, Parser, and Ui.","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"public class Shirmin {","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"     * Initializes a new Duke application.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"     * This constructor initializes the Ui, Parser, Storage, and TaskList components of the Duke application.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"    public Shirmin() {","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"        Storage storage \u003d new Storage(parser);","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"        this.taskList \u003d new TaskList(parser, storage);","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"     * The entry point of the Duke application.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"     * This main method initializes a new Duke instance and starts its execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"    public String runCommand(String command) {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"        // run a single command in TaskList","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"        return taskList.runCommand(command);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"nichee":38,"-":1}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package Duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":" * Handles storage operations for Duke application tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":" * Responsible for saving tasks to a file and reading tasks from a file.","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":" * It interacts with the Ui component for error reporting and the Parser component for parsing tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"    final Parser parser;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"     * Initializes a new Storage object.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"     * @param parser The Parser component used for parsing tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"    public Storage (Parser parser) {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"     * Saves a single Task object to the storage file.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"     * The task is appended to the end of the file. If an IOException occurs, an error message is displayed.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"     * @param task The Task object to be saved.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"    public void saveTaskToFile(Task task) {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"./data/duke.txt\", true);","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"            String taskLine \u003d parser.formatTaskForFile(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"nichee"},"content":"            fileWriter.write(taskLine + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"nichee"},"content":"            fileWriter.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"nichee"},"content":"        } catch (IOException ignored) {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"nichee"},"content":"     * Saves a list of Task objects to the storage file.","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"nichee"},"content":"     * This method overwrites the existing file with the entire list of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"nichee"},"content":"     * If an IOException occurs, an error message is displayed.","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"nichee"},"content":"     * @param taskList The list of Task objects to be saved.","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"nichee"},"content":"    public void saveAllTasksToFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"nichee"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"nichee"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"./data/duke.txt\", false);","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"nichee"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"nichee"},"content":"                String taskLine \u003d parser.formatTaskForFile(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"nichee"},"content":"                fileWriter.write(taskLine + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"nichee"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"nichee"},"content":"            fileWriter.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"nichee"},"content":"        } catch (IOException ignored) {","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"nichee":70}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package Duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"public class Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"    protected final String description;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"        return description;","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"    //...","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"    public Integer isDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"        return this.isDone","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"                ? 1","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"                : 0;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"nichee":36}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package Duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"@SuppressWarnings(\"ResultOfMethodCallIgnored\")","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"    private final Parser parser;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"    private int currIndex \u003d 0;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"    public TaskList(Parser parser, Storage storage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"        assert parser !\u003d null : \"Parser should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"        loadTasksFromFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"    enum CommandType {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, INVALID, FIND, BYE;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"        static CommandType getCommandType(String command) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"                return valueOf(command.toUpperCase());","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"                return INVALID;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"    public void loadTasksFromFile() {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"        File directory \u003d new File(\"./data\");","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"        assert directory.exists() || directory.mkdirs() : \"Failed to create directory\";","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"        File file \u003d new File(directory, \"duke.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"nichee"},"content":"            assert file.createNewFile() : \"Failed to create duke.txt file\";","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"nichee"},"content":"            file.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"nichee"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"nichee"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"nichee"},"content":"                String taskLine \u003d fileScanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"nichee"},"content":"                Task task \u003d parser.parseTask(taskLine); // Implement this method based on your task format","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"nichee"},"content":"                assert task !\u003d null : \"Failed to parse task\";","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"nichee"},"content":"                this.taskList.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"nichee"},"content":"                this.currIndex++;","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"nichee"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"nichee"},"content":"        } catch(IOException ignored){ // exception should not occur at all","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"nichee"},"content":"    public String runCommand(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"nichee"},"content":"        String[] commandParts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"nichee"},"content":"        CommandType commandType \u003d CommandType.getCommandType(commandParts[0]);","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"nichee"},"content":"        String response;","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"nichee"},"content":"        assert commandType !\u003d null : \"Invalid commandType\";","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"nichee"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"nichee"},"content":"            switch (commandType) {","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"nichee"},"content":"            case LIST:","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"nichee"},"content":"                StringBuilder listBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"nichee"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"nichee"},"content":"                    listBuilder.append(i + 1).append(\". \").append(taskList.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"nichee"},"content":"                response \u003d listBuilder.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"nichee"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"nichee"},"content":"            case MARK:","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"nichee"},"content":"                int markIndex \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"nichee"},"content":"                Task taskToMark \u003d taskList.get(markIndex);","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"nichee"},"content":"                taskToMark.markDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"nichee"},"content":"                storage.saveAllTasksToFile(this.taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"nichee"},"content":"                response \u003d \"Marked as done: \" + taskToMark;","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"nichee"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"nichee"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"nichee"},"content":"                int unmarkIndex \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"nichee"},"content":"                Task taskToUnmark \u003d taskList.get(unmarkIndex);","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"nichee"},"content":"                taskToUnmark.markUndone();","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"nichee"},"content":"                storage.saveAllTasksToFile(this.taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"nichee"},"content":"                response \u003d \"Marked as not done: \" + taskToUnmark;","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"nichee"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"nichee"},"content":"            case TODO:","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"nichee"},"content":"                if (commandParts.length \u003c 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"nichee"},"content":"                    return \"Error: Missing TODO description.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"nichee"},"content":"                return handleAddTask(commandParts[1], TaskType.TODO);","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"nichee"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"nichee"},"content":"                if (commandParts.length \u003c 2 || !commandParts[1].contains(\"/by\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"nichee"},"content":"                    return \"Error: Missing DEADLINE description or /by part.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"nichee"},"content":"                return handleAddTask(commandParts[1], TaskType.DEADLINE);","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"nichee"},"content":"            case EVENT:","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"nichee"},"content":"                if (commandParts.length \u003c 2 || !commandParts[1].contains(\"/to\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"nichee"},"content":"                    return \"Error: Missing EVENT description or /at part.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"nichee"},"content":"                return handleAddTask(commandParts[1], TaskType.EVENT);","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"nichee"},"content":"            case DELETE:","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"nichee"},"content":"                int deleteIndex \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"nichee"},"content":"                Task taskToDelete \u003d taskList.remove(deleteIndex);","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"nichee"},"content":"                storage.saveAllTasksToFile(this.taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"nichee"},"content":"                response \u003d \"Deleted task: \" + taskToDelete.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"nichee"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"nichee"},"content":"            case FIND:","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"nichee"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"nichee"},"content":"                    if (commandParts.length \u003c 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"nichee"},"content":"                        return \"Error: Missing search keyword for FIND command.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"nichee"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"nichee"},"content":"                    String keyword \u003d commandParts[1];","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"nichee"},"content":"                    response \u003d findTasksByKeyword(keyword);","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"nichee"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"nichee"},"content":"                    response \u003d \"Error processing command: \" + e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"nichee"},"content":"                return response;","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"nichee"},"content":"            case BYE:","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"nichee"},"content":"                return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"nichee"},"content":"            default:","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"nichee"},"content":"                response \u003d \"OH NO I\u0027m not sure what that command is. You may use the commands, \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"nichee"},"content":"                        \"todo, deadline, list, event, delete, mark, unmark and bye\";","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"nichee"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"nichee"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"nichee"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"nichee"},"content":"            response \u003d \"Error processing command: \" + e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"nichee"},"content":"        return response;","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"nichee"},"content":"    private String handleAddTask(String details, TaskType type) {","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"nichee"},"content":"        assert details !\u003d null : \"Task details should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"nichee"},"content":"        assert type !\u003d null : \"TaskType should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"nichee"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"nichee"},"content":"        switch (type) {","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"nichee"},"content":"        case TODO:","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"nichee"},"content":"            newTask \u003d new Todo(details);","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"nichee"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"nichee"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"nichee"},"content":"            String[] parts \u003d details.split(\" /by \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"nichee"},"content":"            if (parts.length \u003c 2) return \"Error: Incorrect DEADLINE format.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"nichee"},"content":"            newTask \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"nichee"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"nichee"},"content":"        case EVENT:","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"nichee"},"content":"            String[] eventParts \u003d details.split(\" /from \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":149,"author":{"gitId":"nichee"},"content":"            if (eventParts.length \u003c 2 || !eventParts[1].contains(\" /to \")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":150,"author":{"gitId":"nichee"},"content":"                return \"Error: Incorrect EVENT format. Use \u0027/from [start date/time] /to [end date/time]\u0027.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":151,"author":{"gitId":"nichee"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"nichee"},"content":"            String[] fromToParts \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":153,"author":{"gitId":"nichee"},"content":"            if (fromToParts.length \u003c 2) return \"Error: Missing EVENT end date/time.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":154,"author":{"gitId":"nichee"},"content":"            newTask \u003d new Event(eventParts[0], fromToParts[0], fromToParts[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":155,"author":{"gitId":"nichee"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":156,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":157,"author":{"gitId":"nichee"},"content":"        if (newTask \u003d\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":158,"author":{"gitId":"nichee"},"content":"            return \"Error creating task.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":159,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":160,"author":{"gitId":"nichee"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"nichee"},"content":"        storage.saveTaskToFile(newTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":162,"author":{"gitId":"nichee"},"content":"        return \"Added: \" + newTask;","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"nichee"},"content":"    enum TaskType {","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"nichee"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2024-02-07"},{"lineNumber":167,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":168,"author":{"gitId":"nichee"},"content":"    private String findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"nichee"},"content":"        assert keyword !\u003d null : \"Keyword should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":170,"author":{"gitId":"nichee"},"content":"        StringBuilder foundTasksBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":171,"author":{"gitId":"nichee"},"content":"        boolean found \u003d false;","lastModifiedDate":"2024-02-07"},{"lineNumber":172,"author":{"gitId":"nichee"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":173,"author":{"gitId":"nichee"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2024-02-07"},{"lineNumber":174,"author":{"gitId":"nichee"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-07"},{"lineNumber":175,"author":{"gitId":"nichee"},"content":"                foundTasksBuilder.append(i + 1).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":176,"author":{"gitId":"nichee"},"content":"                found \u003d true;","lastModifiedDate":"2024-02-07"},{"lineNumber":177,"author":{"gitId":"nichee"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":178,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":179,"author":{"gitId":"nichee"},"content":"        if (found) {","lastModifiedDate":"2024-02-07"},{"lineNumber":180,"author":{"gitId":"nichee"},"content":"            return \"Here are the matching tasks in your list:\\n\" + foundTasksBuilder;","lastModifiedDate":"2024-02-12"},{"lineNumber":181,"author":{"gitId":"nichee"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":182,"author":{"gitId":"nichee"},"content":"            return \"No tasks found matching: \" + keyword;","lastModifiedDate":"2024-02-07"},{"lineNumber":183,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":184,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":185,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"nichee":185}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package Duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":" * Represents a basic task without any additional date/time.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":" * Each Todo object consists only of a description.","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"     * Initializes a new Todo object with a description.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"     * The format includes the type of task (\u0027[T]\u0027) and the description.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"     * @return String representing the Todo task with its status and description.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"nichee":30}},{"path":"src/test/java/Duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package Duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"    public void stringRepresentationTest(){","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"        Deadline testDeadline \u003d new Deadline(\"test\", \"2019-10-15 2300\" );","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"        assertEquals(\"[D][ ] test (by: Oct 15 2019 23:00)\", testDeadline.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"nichee":13}},{"path":"src/test/java/Duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package Duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"public class EventTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"    public void validDateTest(){","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"        Event testEvent \u003d new Event(\"test\", \"2019-10-15 1800\",\"2019-10-15 2300\" );","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"        assertEquals(true, testEvent.hasValidDates());","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"    public void stringRepresentationTest(){","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"        Event testDeadline \u003d new Event(\"test\", \"2019-10-15 1800\", \"2019-10-15 2300\" );","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"        assertEquals(\"[E][ ] test (from: Oct 15 2019 18:00 to: Oct 15 2019 23:00)\", testDeadline.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"nichee":19}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"D | 0 | return book | Oct 15 2019 18:00","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"D | 0 | return book | Oct 15 2019 18:00","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"D | 0 | return book | Oct 15 2019 18:00","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"D | 0 | return book | Oct 15 2019 18:00","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"nichee":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"//testcases for GUI","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"todo todoTest","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"deadline return book /by 2019-10-15 1800","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"event work /from 2019-10-15 1800 /to 2019-10-15 2300","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"list","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"find book","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"nichee":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"javac -cp \"..\\src\\main\\java\\Duke\\Duke.java\" -Xlint:none -d ..\\bin \"..\\src\\main\\java\\Duke\\*.java\"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"java -classpath ..\\bin Duke\u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"nichee":6,"-":19}}]
