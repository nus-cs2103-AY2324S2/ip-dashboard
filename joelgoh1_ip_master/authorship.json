[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"joelgoh1"},"content":"    mainClass.set(\"Blawg\")","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"joelgoh1"},"content":"    archiveFileName \u003d \"blawg.jar\"","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"joelgoh1"},"content":"checkstyle {","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"joelgoh1"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"joelgoh1":7,"-":41}},{"path":"src/main/java/Blawg.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"import commands.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"import exceptions.BlawgException;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":" *  Represents a chatBox Ai. A \u003ccode\u003eBlawg\u003c/code\u003e object allows a User to","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":" *  * relay instructions and have the instructions be executed. The commands","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":" *  * that Blawg supports are list, deadline, event, todo, delete, bye, mark, unmark.","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"public class Blawg {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"     * initialises a Blawg class","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"     * @param filepath where the data storage file is read and written to","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"    public Blawg(String filepath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"joelgoh1"},"content":"            tasks \u003d new TaskList(storage.read());","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"joelgoh1"},"content":"        } catch (BlawgException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"joelgoh1"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"joelgoh1"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"joelgoh1"},"content":"     * This method runs the chatbot Blawg, allowing it to start receiving input","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"joelgoh1"},"content":"     * and outputting results to users.","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"joelgoh1"},"content":"    public void run() {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"joelgoh1"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"joelgoh1"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"joelgoh1"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"joelgoh1"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"joelgoh1"},"content":"                String fullCommand \u003d ui.getUserInput();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"joelgoh1"},"content":"                ui.showLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"joelgoh1"},"content":"                Command c \u003d new Parser().parse(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"joelgoh1"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"joelgoh1"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"joelgoh1"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"joelgoh1"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"joelgoh1"},"content":"            } finally {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"joelgoh1"},"content":"                ui.showLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"joelgoh1"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"joelgoh1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"joelgoh1"},"content":"        new Blawg(\"src/main/java/data/tasks.txt\").run();","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"joelgoh1":58}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import exceptions.FileError;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":" *  Represents a generic command that adds a task to a user\u0027s tasklist","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":" *  and updates the user on their added task.","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"    private final Task task;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws FileError {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"        tasks.getTaskList().add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"        String result \u003d \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"                + String.format(\"Now you have %d tasks in the list\\n\", tasks.getTaskList().size());","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"        ui.showResult(result);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":"        storage.write(tasks.getTaskList());","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":28}},{"path":"src/main/java/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":" *  Extends {@link AddCommand} and specifies the adding of deadline task","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"    public AddDeadlineCommand(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"        super(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":12}},{"path":"src/main/java/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":" *  Extends {@link AddCommand} and specifies the adding of event task","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"    public AddEventCommand(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"        super(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":13}},{"path":"src/main/java/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":" *  Extends {@link AddCommand} and specifies the adding of todo task","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"    public AddTodoCommand(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"        super(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":12}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import exceptions.FileError;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":" *  Command that signifies the closing of Blawg application","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":" *  Writes all data from the user\u0027s tasklist to a storage txt file","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":" *  and displays a goodbye message.","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws FileError {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"        storage.write(tasks.getTaskList());","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"        ui.showBye();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"    public Boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"        return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":26}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import exceptions.FileError;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":" *  Generic Command class that executes instructions based on user input","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    public Boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws FileError;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"            return true;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"        return obj !\u003d null \u0026\u0026 this.getClass() \u003d\u003d obj.getClass();","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":25}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import exceptions.FileError;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":" *  Handles the deletion of tasks from the user\u0027s task list.","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"    private final int index;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws FileError {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"        Task removedTask \u003d tasks.getTaskList().get(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"        tasks.getTaskList().remove(index - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"        String result \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"                + removedTask","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"                + String.format(\"Now you have %d tasks in the list\\n\", tasks.getTaskList().size());","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":"        ui.showResult(result);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"joelgoh1"},"content":"        storage.write(tasks.getTaskList());","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":29}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package commands;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import exceptions.FileError;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":" *  Handles the finding of tasks from the user\u0027s task list containing a word","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"    private final String wordToSearch;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"    public FindCommand(String wordToSearch) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"        this.wordToSearch \u003d wordToSearch;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws FileError {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"        output.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"        int counter \u003d 1;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"        for (Task task : tasks.getTaskList()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"            if (task.descriptionContainsWord(wordToSearch)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":"                output.append(counter).append(\".\");","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"joelgoh1"},"content":"                output.append(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"joelgoh1"},"content":"                counter++;","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"joelgoh1"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"joelgoh1"},"content":"        ui.showResult(String.valueOf(output));","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"joelgoh1":33}},{"path":"src/main/java/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":" *  Handles any InvalidCommand that a user inputs. Error message","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":" *  will be displayed to the user on execute","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    public final String result;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"    public InvalidCommand(String result) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"        this.result \u003d result;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"        ui.showResult(result);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":22}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":" *  Handles the displaying of the user\u0027s task list to the user in a readable manner","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskList().size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"            output.append(i + 1).append(\".\");","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"            output.append(tasks.getTaskList().get(i));","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"        ui.showResult(String.valueOf(output));","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":20}},{"path":"src/main/java/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import exceptions.FileError;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":" *  Handles the Marking of Task as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    private final int index;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"    public MarkTaskCommand(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws FileError {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"        tasks.getTaskList().get(index - 1).markAsDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"        String result \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"                + tasks.getTaskList().get(index - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"        ui.showResult(result);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"        storage.write(tasks.getTaskList());","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":26}},{"path":"src/main/java/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import exceptions.FileError;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":" *  Handles the unmarking of task as done","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    private final int index;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"    public UnmarkTaskCommand(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws FileError {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"        tasks.getTaskList().get(index - 1).unmarkAsDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"        String result \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"                + tasks.getTaskList().get(index - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"        ui.showResult(result);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"        storage.write(tasks.getTaskList());","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":26}},{"path":"src/main/java/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"T | 0 | sleep","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"T | 0 | sleep somemore","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"joelgoh1":2}},{"path":"src/main/java/exceptions/BlawgException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":" *  Serves as a base class for all custom exceptions in Blawg.","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"public class BlawgException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"    public BlawgException() {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"        super();","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"    public BlawgException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"joelgoh1":13}},{"path":"src/main/java/exceptions/FileAccessError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":" *  Represents exception relating to error accessing files","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"public class FileAccessError extends BlawgException {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"    public FileAccessError() {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"        super();","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"    public FileAccessError(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":13}},{"path":"src/main/java/exceptions/FileError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":" *  Represents exception relating to reading or writing to files","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"public class FileError extends BlawgException {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"    public FileError() {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"        super();","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"    public FileError(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":13}},{"path":"src/main/java/exceptions/IncorrectDateError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package exceptions;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":" *  Represents exception relating to user inputting an incorrect date format","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":" *  Correct date formats are of forms d/M/yyyy HHmm, yyyy-MM-dd HH:mm or dd MMM yyyy h:mm a only","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"public class IncorrectDateError extends Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"    public IncorrectDateError() {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"        super();","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    public IncorrectDateError(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"        super(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"joelgoh1":15}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package exceptions;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":" *  Represents exception relating to invalid commands.","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"        super();","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"        super(message);","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"joelgoh1":13}},{"path":"src/main/java/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":" *  Represents exception relating to user submitting incorrect command inputs with","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":" *  wrong parameters.","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"public class InvalidInputException extends BlawgException {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"    public InvalidInputException() {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"        super();","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"joelgoh1":15}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"import commands.AddDeadlineCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"import commands.AddEventCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"import commands.AddTodoCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"import commands.ByeCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"import commands.Command;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"import commands.FindCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"import commands.InvalidCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"import commands.ListCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"import commands.MarkTaskCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"import commands.UnmarkTaskCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"import exceptions.IncorrectDateError;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"import exceptions.InvalidInputException;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"joelgoh1"},"content":" *  Handles the understanding of user input","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"joelgoh1"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"joelgoh1"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"joelgoh1"},"content":"     * Parses the user input into a specific command to be executed.","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"joelgoh1"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"joelgoh1"},"content":"     * This method takes a string of user input, interprets the intended command,","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"joelgoh1"},"content":"     * and returns the corresponding Command object. Supported commands include","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"joelgoh1"},"content":"     * \u0027bye\u0027, \u0027list\u0027, \u0027mark\u0027, \u0027unmark\u0027, \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, and \u0027delete\u0027.","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"joelgoh1"},"content":"     * Commands not matching these are considered invalid.","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"joelgoh1"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"joelgoh1"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"joelgoh1"},"content":"     * @param userInput The user input string to be parsed.","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"joelgoh1"},"content":"     * @return The specific Command object representing the intended action.","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"joelgoh1"},"content":"     * @throws InvalidCommandException If the command is not recognised.","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"joelgoh1"},"content":"     * @throws IncorrectDateError If the date for deadline or event commands is in an incorrect format.","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"joelgoh1"},"content":"     * @throws InvalidInputException If the input for the commands is invalid or incomplete.","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"joelgoh1"},"content":"    public Command parse(String userInput) {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"joelgoh1"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"joelgoh1"},"content":"            String[] splitInput \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"joelgoh1"},"content":"            String firstWord \u003d splitInput[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"joelgoh1"},"content":"            if (firstWord.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"joelgoh1"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"joelgoh1"},"content":"            } else if (firstWord.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"joelgoh1"},"content":"                return new ListCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"joelgoh1"},"content":"            } else if (firstWord.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"joelgoh1"},"content":"                try {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"joelgoh1"},"content":"                    int number \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"joelgoh1"},"content":"                    return new MarkTaskCommand(number);","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"joelgoh1"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"joelgoh1"},"content":"                    return new InvalidCommand(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"joelgoh1"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"joelgoh1"},"content":"            } else if (firstWord.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"joelgoh1"},"content":"                try {","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"joelgoh1"},"content":"                    int number \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"joelgoh1"},"content":"                    return new UnmarkTaskCommand(number);","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"joelgoh1"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"joelgoh1"},"content":"                    return new InvalidCommand(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"joelgoh1"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"joelgoh1"},"content":"            } else if (firstWord.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"joelgoh1"},"content":"                String description \u003d String.join(\" \", java.util.Arrays.copyOfRange(","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"joelgoh1"},"content":"                        splitInput, 1, splitInput.length));","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"joelgoh1"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"joelgoh1"},"content":"                    throw new InvalidInputException(\"Invalid input! Proper usage is \\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"joelgoh1"},"content":"                            + \"todo {task description}\\n\");","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"joelgoh1"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"joelgoh1"},"content":"                ToDo task \u003d new ToDo(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"joelgoh1"},"content":"                return new AddTodoCommand(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"joelgoh1"},"content":"            } else if (firstWord.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"joelgoh1"},"content":"                String deadlineText \u003d String.join(\" \", java.util.Arrays.copyOfRange(","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"joelgoh1"},"content":"                        splitInput, 1, splitInput.length));","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"joelgoh1"},"content":"                Deadline task \u003d getDeadlines(deadlineText);","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"joelgoh1"},"content":"                return new AddDeadlineCommand(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"joelgoh1"},"content":"            } else if (firstWord.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"joelgoh1"},"content":"                String eventText \u003d String.join(\" \", java.util.Arrays.copyOfRange(","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"joelgoh1"},"content":"                        splitInput, 1, splitInput.length));","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"joelgoh1"},"content":"                Event task \u003d getEvents(eventText);","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"joelgoh1"},"content":"                return new AddEventCommand(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"joelgoh1"},"content":"            } else if (firstWord.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"joelgoh1"},"content":"                try {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"joelgoh1"},"content":"                    int number \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"joelgoh1"},"content":"                    return new DeleteCommand(number);","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"joelgoh1"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"joelgoh1"},"content":"                    return new InvalidCommand(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"joelgoh1"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"joelgoh1"},"content":"            } else if (firstWord.equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"joelgoh1"},"content":"                String wordToSearch \u003d String.join(\" \", java.util.Arrays.copyOfRange(","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"joelgoh1"},"content":"                        splitInput, 1, splitInput.length));","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"joelgoh1"},"content":"                return new FindCommand(wordToSearch);","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"joelgoh1"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"joelgoh1"},"content":"                throw new InvalidCommandException(\"I don\u0027t know what that means :( Valid commands are: \\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"joelgoh1"},"content":"                        + \"list, todo, deadline, event, mark, unmark, bye\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"joelgoh1"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"joelgoh1"},"content":"        } catch (InvalidCommandException | IncorrectDateError | InvalidInputException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"joelgoh1"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"joelgoh1"},"content":"     * helper function that splits userInput into the parameters needed to create a Deadline task","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"joelgoh1"},"content":"    private static Deadline getDeadlines(String deadlineText) throws InvalidInputException, IncorrectDateError {","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"joelgoh1"},"content":"        String deadlineTextLowerCase \u003d deadlineText.toLowerCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"joelgoh1"},"content":"        int byIndex \u003d deadlineTextLowerCase.indexOf(\" /by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"joelgoh1"},"content":"        int byAltIndex \u003d deadlineTextLowerCase.indexOf(\" by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"joelgoh1"},"content":"        int indexToUse \u003d (byIndex !\u003d -1) ? byIndex : byAltIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"joelgoh1"},"content":"        int lengthToSkip \u003d (byIndex !\u003d -1) ? 5 : 4;","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"joelgoh1"},"content":"        String description \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"joelgoh1"},"content":"        String date \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"joelgoh1"},"content":"        if (indexToUse \u003d\u003d -1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"joelgoh1"},"content":"            throw new InvalidInputException(\"Invalid input! Proper usage is \\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"joelgoh1"},"content":"                    + \"deadline {task description} by {date}\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"joelgoh1"},"content":"        description \u003d deadlineText.substring(0, indexToUse).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"joelgoh1"},"content":"        date \u003d deadlineText.substring(indexToUse + lengthToSkip).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"joelgoh1"},"content":"        String dateTime \u003d checkValidDate(date);","lastModifiedDate":"2024-02-06"},{"lineNumber":129,"author":{"gitId":"joelgoh1"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"joelgoh1"},"content":"            throw new IncorrectDateError(\"Valid dates are of forms d/M/yyyy HHmm, yyyy-MM-dd HH:mm \"","lastModifiedDate":"2024-02-06"},{"lineNumber":131,"author":{"gitId":"joelgoh1"},"content":"                    + \"or dd MMM yyyy h:mm a\\n\");","lastModifiedDate":"2024-02-06"},{"lineNumber":132,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"joelgoh1"},"content":"        return new Deadline(description, dateTime);","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"joelgoh1"},"content":"     * helper function that splits userInput into the parameters needed to create an Event task","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"joelgoh1"},"content":"    private static Event getEvents(String eventText) throws InvalidInputException, IncorrectDateError {","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"joelgoh1"},"content":"        String eventTextLowerCase \u003d eventText.toLowerCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"joelgoh1"},"content":"        int fromIndex \u003d eventTextLowerCase.indexOf(\" /from \");","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"joelgoh1"},"content":"        int fromAltIndex \u003d eventTextLowerCase.indexOf(\" from \");","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"joelgoh1"},"content":"        int fromIndexToUse \u003d (fromIndex !\u003d -1) ? fromIndex : fromAltIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"joelgoh1"},"content":"        int fromLengthToSkip \u003d (fromIndex !\u003d -1) ? 7 : 6;","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"joelgoh1"},"content":"        int toIndex \u003d eventTextLowerCase.indexOf(\" /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"joelgoh1"},"content":"        int toAltIndex \u003d eventTextLowerCase.indexOf(\" to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"joelgoh1"},"content":"        int toIndexToUse \u003d (toIndex !\u003d -1) ? toIndex : toAltIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"joelgoh1"},"content":"        int toLengthToSkip \u003d (toIndex !\u003d -1) ? 5 : 4;","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"joelgoh1"},"content":"        String description \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"joelgoh1"},"content":"        String startDate \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"joelgoh1"},"content":"        String endDate \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"joelgoh1"},"content":"        if (fromIndexToUse \u003d\u003d -1 || toIndexToUse \u003d\u003d -1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"joelgoh1"},"content":"            throw new InvalidInputException(\"Invalid input! Proper usage is \\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":156,"author":{"gitId":"joelgoh1"},"content":"                    + \"event {task description} from {start date} to {end date}\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":157,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"joelgoh1"},"content":"        description \u003d eventText.substring(0, fromIndexToUse).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"joelgoh1"},"content":"        startDate \u003d eventText.substring(fromIndexToUse + fromLengthToSkip, toIndexToUse);","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"joelgoh1"},"content":"        endDate \u003d eventText.substring(toIndexToUse + toLengthToSkip).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"joelgoh1"},"content":"        String startDateTime \u003d checkValidDate(startDate);","lastModifiedDate":"2024-02-06"},{"lineNumber":162,"author":{"gitId":"joelgoh1"},"content":"        String endDateTime \u003d checkValidDate(endDate);","lastModifiedDate":"2024-02-06"},{"lineNumber":163,"author":{"gitId":"joelgoh1"},"content":"        if (startDateTime \u003d\u003d null || endDateTime \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"joelgoh1"},"content":"            throw new IncorrectDateError(\"Valid dates are of forms d/M/yyyy HHmm, yyyy-MM-dd HH:mm \"","lastModifiedDate":"2024-02-06"},{"lineNumber":165,"author":{"gitId":"joelgoh1"},"content":"                    + \"or dd MMM yyyy h:mm a\");","lastModifiedDate":"2024-02-06"},{"lineNumber":166,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"joelgoh1"},"content":"        return new Event(description, startDateTime, endDateTime);","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":171,"author":{"gitId":"joelgoh1"},"content":"     * helper function that checks if the data entered by user is of the correct format","lastModifiedDate":"2024-02-06"},{"lineNumber":172,"author":{"gitId":"joelgoh1"},"content":"     * @param date String of date to check validiity for","lastModifiedDate":"2024-02-06"},{"lineNumber":173,"author":{"gitId":"joelgoh1"},"content":"     * @throws IncorrectDateError if Date is invalid","lastModifiedDate":"2024-02-06"},{"lineNumber":174,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":175,"author":{"gitId":"joelgoh1"},"content":"    private static String checkValidDate(String date) throws IncorrectDateError {","lastModifiedDate":"2024-02-06"},{"lineNumber":176,"author":{"gitId":"joelgoh1"},"content":"        DateTimeFormatter[] formatters \u003d new DateTimeFormatter[] {","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"joelgoh1"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"joelgoh1"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"joelgoh1"},"content":"                DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\")","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"joelgoh1"},"content":"        };","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"joelgoh1"},"content":"        for (DateTimeFormatter formatter: formatters) {","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"joelgoh1"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"joelgoh1"},"content":"                return LocalDateTime.parse(date, formatter).format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"joelgoh1"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"joelgoh1"},"content":"                throw new IncorrectDateError(\"Valid dates are of forms d/M/yyyy HHmm, yyyy-MM-dd HH:mm \"","lastModifiedDate":"2024-02-06"},{"lineNumber":186,"author":{"gitId":"joelgoh1"},"content":"                        + \"or dd MMM yyyy h:mm a\");","lastModifiedDate":"2024-02-06"},{"lineNumber":187,"author":{"gitId":"joelgoh1"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"joelgoh1"},"content":"        return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":191,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":191}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import java.io.File;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"import exceptions.FileAccessError;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"import exceptions.FileError;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":" *  Handles the storage of data, allowing users to access and store data from previous sessions.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":" *  Writes to and reads from a txt file.","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":" *  \u003c/p\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"    private final String fileName;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"joelgoh1"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"joelgoh1"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"joelgoh1"},"content":"     * The method handles the writing of data to the txt file","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"joelgoh1"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"joelgoh1"},"content":"     *  This method writes to the file at the location specified by fileName, and","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"joelgoh1"},"content":"     *  converts the Task objects which are collected in an ArrayList into a string","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"joelgoh1"},"content":"     *  to be written to the txt file.","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"joelgoh1"},"content":"     *  \u003c/p\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"joelgoh1"},"content":"     * @param data takes in an ArrayList of Tasks and converts it to a","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"joelgoh1"},"content":"     *             string that will be written to txt file","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"joelgoh1"},"content":"     * @throws FileError if there is an IO error in writing to the txt file","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"joelgoh1"},"content":"    public void write(ArrayList\u003cTask\u003e data) throws FileError {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"joelgoh1"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"joelgoh1"},"content":"            FileWriter writer \u003d new FileWriter(fileName, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"joelgoh1"},"content":"            writer.write(convertArrayToStr(data) + \"\\n\");","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"joelgoh1"},"content":"            writer.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"joelgoh1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"joelgoh1"},"content":"            throw new FileError(\"Problem writing to file!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"joelgoh1"},"content":"     * The method handles the reading of data from the txt file and converts it","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"joelgoh1"},"content":"     * to an ArrayList of tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"joelgoh1"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"joelgoh1"},"content":"     *  This method opens the file specified by fileName, reads each line, and","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"joelgoh1"},"content":"     *  converts it into Task objects which are collected in an ArrayList. The","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"joelgoh1"},"content":"     *  ArrayList represents the user\u0027s task list and is used to recreate the state","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"joelgoh1"},"content":"     *  of the application from a previous session.","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"joelgoh1"},"content":"     *  \u003c/p\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"joelgoh1"},"content":"     * @return an ArrayList of Tasks to be the TaskList of the user","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"joelgoh1"},"content":"     * @throws FileError if there is an IO error in writing to the txt file","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"joelgoh1"},"content":"     * @throws FileAccessError if file is not at the expected location","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"joelgoh1"},"content":"    public ArrayList\u003cTask\u003e read() throws FileError, FileAccessError {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"joelgoh1"},"content":"        ArrayList\u003cString\u003e contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"joelgoh1"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"joelgoh1"},"content":"            File file \u003d new File(fileName);","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"joelgoh1"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"joelgoh1"},"content":"            String line;","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"joelgoh1"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"joelgoh1"},"content":"                contents.add(line);","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"joelgoh1"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"joelgoh1"},"content":"            reader.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"joelgoh1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"joelgoh1"},"content":"            throw new FileError(\"Problem reading from file!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"joelgoh1"},"content":"        String[] data \u003d contents.toArray(new String[0]);","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"joelgoh1"},"content":"        return convertStrToArray(data);","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"joelgoh1"},"content":"     * The method is a helper function that helps with reading from txt file","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"joelgoh1"},"content":"     * converts data from a String[] to an ArrayList","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"joelgoh1"},"content":"     * @param data of the form String[]","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"joelgoh1"},"content":"     * @return ArrayList","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"joelgoh1"},"content":"    private ArrayList\u003cTask\u003e convertStrToArray(String[] data) throws FileAccessError {","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"joelgoh1"},"content":"        ArrayList\u003cTask\u003e taskListArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"joelgoh1"},"content":"        for (String datum : data) {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"joelgoh1"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"joelgoh1"},"content":"                String[] splitData \u003d datum.split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"joelgoh1"},"content":"                String type \u003d splitData[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"joelgoh1"},"content":"                Boolean isMarked \u003d Objects.equals(splitData[1], \"1\");","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"joelgoh1"},"content":"                String description \u003d splitData[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"joelgoh1"},"content":"                Task toAdd;","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"joelgoh1"},"content":"                switch (type) {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"joelgoh1"},"content":"                case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"joelgoh1"},"content":"                    toAdd \u003d new ToDo(description, isMarked);","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"joelgoh1"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"joelgoh1"},"content":"                case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"joelgoh1"},"content":"                    toAdd \u003d new Deadline(description, isMarked, splitData[3]);","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"joelgoh1"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"joelgoh1"},"content":"                case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"joelgoh1"},"content":"                    toAdd \u003d new Event(description, isMarked, splitData[3], splitData[4]);","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"joelgoh1"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"joelgoh1"},"content":"                default:","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"joelgoh1"},"content":"                    throw new FileAccessError(\"Error reading from data.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"joelgoh1"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"joelgoh1"},"content":"                taskListArray.add(toAdd);","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"joelgoh1"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"joelgoh1"},"content":"                throw new FileAccessError(\"Error reading from data.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"joelgoh1"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"joelgoh1"},"content":"        return taskListArray;","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"joelgoh1"},"content":"     * The method is a helper function that helps with writing to txt file","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"joelgoh1"},"content":"     * converts data from an ArrayList to a String","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"joelgoh1"},"content":"     * @param tasks of the form ArrayList","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"joelgoh1"},"content":"     * @return String","lastModifiedDate":"2024-02-06"},{"lineNumber":123,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":124,"author":{"gitId":"joelgoh1"},"content":"    private String convertArrayToStr(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":125,"author":{"gitId":"joelgoh1"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"joelgoh1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"joelgoh1"},"content":"            stringBuilder.append(tasks.get(i).prepareForStorage());","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"joelgoh1"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"joelgoh1"},"content":"                stringBuilder.append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"joelgoh1"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"joelgoh1"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":134}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package tasklist;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":" *  represents a collection of tasks that the user wants saved.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":" *  \u003c/p\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"     * initialises an empty Tasklist","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"     * initialises a Tasklist filled with task from an array","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"     * @param tasks an arrayList of task to be stored in TaskList","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"joelgoh1"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"joelgoh1"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"joelgoh1"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"joelgoh1"},"content":"        return tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":36}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":" *  represents a Deadline Task that a user would want to save, it has","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":" *  a description and a dueDate.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":" *  \u003c/p\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"    private final String date;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"     * initializes a Deadline clas","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"     * @param description describes a Deadline","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"     * @param date due date of the Deadline","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"        super(description, \u0027D\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"     * initializes a Deadline clas","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"     * @param description describes a Deadline","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"     * @param isDone indicates if a Deadline has been marked as done","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"     * @param date due date of the Deadline","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"joelgoh1"},"content":"    public Deadline(String description, Boolean isDone, String date) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"joelgoh1"},"content":"        super(description, isDone, \u0027D\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"joelgoh1"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"joelgoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"joelgoh1"},"content":"        return super.toString() + String.format(\" (by: %s)\\n\", this.date);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"joelgoh1"},"content":"    public String prepareForStorage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"joelgoh1"},"content":"        return super.prepareForStorage() + String.format(\" | %s\", this.date);","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":40}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":" *  represents a Event Task that a user would want to save, it has","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":" *  a description, a startDate and an EndDate.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":" *  \u003c/p\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"    private final String startDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"    private final String endDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"     * initializes an Event clas","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"     * @param description describes an event","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"     * @param startDate start datetime of an event","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"     * @param endDate end datetiomme of an event","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"        super(description, \u0027E\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"     * initializes an Event clas","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":"     * @param description describes an event","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"joelgoh1"},"content":"     * @param isDone indicates if an event has been marked as done","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"joelgoh1"},"content":"     * @param startDate start datetime of an event","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"joelgoh1"},"content":"     * @param endDate end datetiomme of an event","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"joelgoh1"},"content":"    public Event(String description, Boolean isDone, String startDate, String endDate) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"joelgoh1"},"content":"        super(description, isDone, \u0027E\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"joelgoh1"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"joelgoh1"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"joelgoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"joelgoh1"},"content":"        return super.toString() + String.format(\" (from: %s to: %s)\\n\", this.startDate, this.endDate);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"joelgoh1"},"content":"    public String prepareForStorage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"joelgoh1"},"content":"        return super.prepareForStorage() + String.format(\" | %s | %s\", this.startDate, this.endDate);","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":46}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":" *  represents a generic Task that a user would want to save","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":" *  \u003c/p\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"    private final String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"    private final char shortForm;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"     * initialises a Task class","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"     * @param description describes a Task","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"        this.shortForm \u003d \u0027T\u0027;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"     * initialises a Task class","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"     * @param description describes a Task","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":"     * @param shortForm character that represents the type of class","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"joelgoh1"},"content":"    public Task(String description, char shortForm) {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"joelgoh1"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"joelgoh1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"joelgoh1"},"content":"        this.shortForm \u003d shortForm;","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"joelgoh1"},"content":"     * initialises a Task class","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"joelgoh1"},"content":"     * @param description describes a Task","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"joelgoh1"},"content":"     * @param isDone indicates if a Task has been marked as done","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"joelgoh1"},"content":"     * @param shortForm character that represents the type of class","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"joelgoh1"},"content":"    public Task(String description, boolean isDone, char shortForm) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"joelgoh1"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"joelgoh1"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"joelgoh1"},"content":"        this.shortForm \u003d shortForm;","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"joelgoh1"},"content":"     * Converts the boolean isDone to a String for printing","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"joelgoh1"},"content":"     * @return string \"X\" if done else \" \"","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"joelgoh1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"joelgoh1"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"joelgoh1"},"content":"     * Converts the boolean isDone to a String for Storage","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"joelgoh1"},"content":"     * @return string \"1\" if done else \"0\"","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"joelgoh1"},"content":"    public String getStatusIconAsNum() {","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"joelgoh1"},"content":"        return (this.isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"joelgoh1"},"content":"     * Changes the boolean isDone to True","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"joelgoh1"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"joelgoh1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"joelgoh1"},"content":"     * Changes the boolean isDone to False","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"joelgoh1"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"joelgoh1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"joelgoh1"},"content":"    public boolean descriptionContainsWord(String word) {","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"joelgoh1"},"content":"        return this.description.contains(word);","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"joelgoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"joelgoh1"},"content":"        return String.format(\"[%c][%s] %s\", this.shortForm, getStatusIcon(), this.description);","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"joelgoh1"},"content":"    public String prepareForStorage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"joelgoh1"},"content":"        return String.format(\"%c | %s | %s\", this.shortForm, getStatusIconAsNum(), this.description);","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"joelgoh1":90}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":" *  represents a Todo Task that a user would want to save, it has","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":" *  only a description.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":" *  \u003c/p\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"        super(description, \u0027T\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"    public ToDo(String description, Boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"        super(description, isDone, \u0027T\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"        return super.toString() + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":21}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":" *  Handles what the user interacts with. Contains the logic to scan User input as well as","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":" *  print output","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"    private static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"    private final Scanner sc;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"    private final PrintStream printer;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"     * Initialises a UI class, setting up a Scanner and printer","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"    public Ui() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"        this.printer \u003d new PrintStream(System.out);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"     * This method prints the welcome message on start up of chatBot","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"joelgoh1"},"content":"        printer.print(LINE + \"Paws what you\u0027re doing! I\u0027m Blawg\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"joelgoh1"},"content":"                + \"What can I do for you?\\n\" + LINE);","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"joelgoh1"},"content":"     * This method prints the goodbye message on termination of chatBot","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"joelgoh1"},"content":"    public void showBye() {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"joelgoh1"},"content":"        printer.print(\" Alright, this kitty\u0027s got to go chase some shadows. See you later!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"joelgoh1"},"content":"     * This method prints the dividing line","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"joelgoh1"},"content":"    public void showLine() {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"joelgoh1"},"content":"        printer.print(LINE);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"joelgoh1"},"content":"     * This method gets User Input from CLI","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"joelgoh1"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"joelgoh1"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"joelgoh1"},"content":"     * This method outputs the result after ChatBot Processing","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"joelgoh1"},"content":"     * @Param result This wil be what is printed based on the Processing of data","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"joelgoh1"},"content":"    public void showResult(String result) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"joelgoh1"},"content":"        printer.print(result);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"joelgoh1"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"joelgoh1"},"content":"     * This method outputs any error that occurred in the programs","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"joelgoh1"},"content":"     * @Param result This will be the error printed","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"joelgoh1"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"joelgoh1"},"content":"    public void showError(String error) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"joelgoh1"},"content":"        printer.print(error);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"joelgoh1":67}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import commands.Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import commands.ListCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"    public void testParseList() {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"        Command c \u003d new Parser().parse(\"list\");","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"        assertEquals(c, new ListCommand());","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"joelgoh1":17}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"package storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"import exceptions.FileError;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"joelgoh1"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"joelgoh1"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"joelgoh1"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"joelgoh1"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"joelgoh1"},"content":"import java.io.File;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"joelgoh1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"joelgoh1"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"joelgoh1"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"joelgoh1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"joelgoh1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"joelgoh1"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"joelgoh1"},"content":"    private final String testFile \u003d \"src/main/java/data/testTasks.txt\";","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"joelgoh1"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"joelgoh1"},"content":"    public void setUpTestFile() {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"joelgoh1"},"content":"        storage \u003d new Storage(testFile);","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"joelgoh1"},"content":"    @AfterEach","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"joelgoh1"},"content":"    public void deleteTestFile() {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"joelgoh1"},"content":"        File file \u003d new File(testFile);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"joelgoh1"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"joelgoh1"},"content":"            boolean isDeleted \u003d file.delete();","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"joelgoh1"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"joelgoh1"},"content":"    public void testWriteValidData() throws FileError, FileNotFoundException {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"joelgoh1"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"joelgoh1"},"content":"        tasks.add(new ToDo(\"Test Todo\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"joelgoh1"},"content":"        tasks.add(new Deadline(\"Test Deadline\", \"2024-02-05\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"joelgoh1"},"content":"        tasks.add(new Event(\"Test Event\", \"2024-02-05\" , \"2024-02-06\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"joelgoh1"},"content":"        storage.write(tasks);","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"joelgoh1"},"content":"        StringBuilder fileContent \u003d new StringBuilder();","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"joelgoh1"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(testFile))) {","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"joelgoh1"},"content":"            String line;","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"joelgoh1"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"joelgoh1"},"content":"                fileContent.append(line).append(\"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"joelgoh1"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"joelgoh1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"joelgoh1"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"joelgoh1"},"content":"        // Prepare the expected string representation of tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"joelgoh1"},"content":"        StringBuilder expectedContent \u003d new StringBuilder();","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"joelgoh1"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"joelgoh1"},"content":"            expectedContent.append(task.prepareForStorage()).append(\"\\n\");","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"joelgoh1"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"joelgoh1"},"content":"        // Assert that the file content matches the expected string","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"joelgoh1"},"content":"        assertEquals(expectedContent.toString().trim(), fileContent.toString().trim());","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"joelgoh1"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"joelgoh1"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"joelgoh1"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"joelgoh1":70}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"joelgoh1"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"joelgoh1"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"joelgoh1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"joelgoh1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"joelgoh1"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"joelgoh1"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"joelgoh1"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"joelgoh1"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"joelgoh1":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"joelgoh1"},"content":"java -classpath ../bin Blawg \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"joelgoh1":1,"-":37}}]
