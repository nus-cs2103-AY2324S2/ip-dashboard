[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"checkstyle {","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"faaheem13":5,"-":43}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":" T | 1 | read book","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":" D | 0 | return book /by 2024-08-24 18:00","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":" E | 0 | ph /from 2024-08-22 18:00 /to 2024-08-23 18:00","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"faaheem13":3}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":" T | 1 | read book","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":" D | 0 | return book /by 2024-08-13 18:00","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":" T | 0 | meet friends","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":" T | 0 | make sandwiches","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"faaheem13":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":" * Represents the main class for the Duke application.","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":" * This class initializes the application, loads existing tasks from storage, and processes user commands.","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"     * Constructs a new Duke application instance. Initializes the UI, storage, and task list components.","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"     * Tries to loadFromFile any existing tasks from storage; if unsuccessful, starts with an empty task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"    public Duke() {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"            tasks \u003d new TaskList(storage.loadFromFile());","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"     * Starts the Duke application. Enters a loop to read and execute commands until the user issues the \u0027bye\u0027 command.","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"    public void run() {","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"        ui.showHello();","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"            try {","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"                String[] fullCommand \u003d Parser.parse(ui.readCommand());","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"                String command \u003d fullCommand[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"                    ui.showBye();","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"                    isExit \u003d true;","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"                    break;","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"                    ui.showList(tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"                } else if (command.equals(\"mark\") || command.equals(\"unmark\") || command.equals(\"todo\")","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"                        || command.equals(\"deadline\") || command.equals(\"event\") || command.equals(\"delete\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"                    if (fullCommand.length \u003e 1) {","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"                        if (command.equals(\"mark\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"                            int indexToMark \u003d Integer.parseInt(fullCommand[1]) - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"                            Task task \u003d tasks.getTasks().get(indexToMark);","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"                            task.markComplete();","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"faaheem13"},"content":"                            ui.showTask(\" Nice! I\u0027ve marked this task as done:\", task);","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"faaheem13"},"content":"                            storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"faaheem13"},"content":"                        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"faaheem13"},"content":"                            int indexToUnmark \u003d Integer.parseInt(fullCommand[1]) - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"faaheem13"},"content":"                            Task task \u003d tasks.getTasks().get(indexToUnmark);","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"faaheem13"},"content":"                            task.markIncomplete();","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"faaheem13"},"content":"                            ui.showTask(\" OK, I\u0027ve marked this task as not done yet:\", task);","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"faaheem13"},"content":"                            storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"faaheem13"},"content":"                        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"faaheem13"},"content":"                            Task task \u003d new ToDo(fullCommand[1]);","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"faaheem13"},"content":"                            tasks.addTask(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"faaheem13"},"content":"                            ui.showTaskWithNum(\" Got it. I\u0027ve added this task:\\n  \", task, tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"faaheem13"},"content":"                            storage.saveToFile(tasks.getTasks()); // Save after adding new task","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"faaheem13"},"content":"                        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"faaheem13"},"content":"                            Task task \u003d new Deadline(fullCommand[1]);","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"faaheem13"},"content":"                            tasks.addTask(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"faaheem13"},"content":"                            ui.showTaskWithNum(\"Got it. I\u0027ve added this task:\\n\", task, tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"faaheem13"},"content":"                            storage.saveToFile(tasks.getTasks()); // Save after adding new task","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"faaheem13"},"content":"                        } else if (command.equals(\"event\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"faaheem13"},"content":"                            Task task \u003d new Event(fullCommand[1]);","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"faaheem13"},"content":"                            tasks.addTask(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"faaheem13"},"content":"                            ui.showTaskWithNum(\"Got it. I\u0027ve added this task:\\n\", task, tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"faaheem13"},"content":"                            storage.saveToFile(tasks.getTasks()); // Save after adding new task","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"faaheem13"},"content":"                        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"faaheem13"},"content":"                            int deleteIndex \u003d Integer.parseInt(fullCommand[1]) - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"faaheem13"},"content":"                            Task deletedTask \u003d tasks.deleteTask(deleteIndex);","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"faaheem13"},"content":"                            ui.showTaskWithNum(\" Noted. I\u0027ve removed this task:\\n\", deletedTask, tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"faaheem13"},"content":"                            storage.saveToFile(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"faaheem13"},"content":"                        }","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"faaheem13"},"content":"                    } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"faaheem13"},"content":"                        throw new DukeException(\"____________________________________________________________\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"faaheem13"},"content":"                                + \" OOPS! Your Only Friend cannot take in an empty \"","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"faaheem13"},"content":"                                + command + \"\\n Make sure \" + command + \"has a description!\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"faaheem13"},"content":"                                + \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"faaheem13"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"faaheem13"},"content":"                } else if (command.equals(\"find\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"faaheem13"},"content":"                    if (fullCommand.length \u003c 2) {","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"faaheem13"},"content":"                        throw new DukeException(\"OOPS! Please make sure you enter a keyword\");","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"faaheem13"},"content":"                    }","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"faaheem13"},"content":"                    String keyword \u003d fullCommand[1];","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"faaheem13"},"content":"                    TaskList foundTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"faaheem13"},"content":"                    ui.showMatchingList(foundTasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"faaheem13"},"content":"                } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"faaheem13"},"content":"                    throw new DukeException(\" OOPS! Turns out Your Only Friend does not know what that is :(\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"faaheem13"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"faaheem13"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"faaheem13"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":117,"author":{"gitId":"faaheem13"},"content":"     * The entry point of the application.","lastModifiedDate":"2024-02-16"},{"lineNumber":118,"author":{"gitId":"faaheem13"},"content":"     * @param args Command line arguments (unused).","lastModifiedDate":"2024-02-16"},{"lineNumber":119,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":120,"author":{"gitId":"faaheem13"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"faaheem13"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"faaheem13":121,"-":2}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.exception;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":" * Represents exceptions specific to Duke application. This exception is thrown when the","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":" * application encounters an issue specific to its logic, such as invalid user input.","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"        super(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"faaheem13":12}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.parser;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":" * Provides utility methods for parsing user input into commands and arguments for the Duke application.","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"public class Parser {","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"    public static String[] parse(String userInput) {","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"        return userInput.trim().split(\" \", 2);","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"faaheem13":12}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import java.io.File;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":" * Manages the loading and saving of tasks to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":" * This class provides functionality to loadFromFile tasks from a specified file","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":" * upon startup and save tasks into the same file.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"public class Storage {","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"    private String filePath;","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"     * Constructs a new Storage object to handle data persistence.","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"     * The file path for loading and saving tasks is set upon construction.","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"    public Storage() {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"        this.filePath \u003d \"./data/tasks.txt\";","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"     * Loads tasks from the file specified by the filePath.","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"     * Parses the task data from the file and creates a corresponding list of Task objects.","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"     * @throws DukeException if the file cannot be found or the data format is incorrect.","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"    public ArrayList\u003cTask\u003e loadFromFile() throws DukeException {","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"            File directory \u003d new File(\"./data/\");","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"                directory.mkdirs();","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"            Scanner whatToDo \u003d new Scanner(file);","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"            while (whatToDo.hasNext()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"                String readText \u003d whatToDo.nextLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"                char taskType \u003d readText.charAt(1);","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"                char doneOrNot \u003d readText.charAt(5);","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"                String description \u003d readText.substring(9);","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"                Task task \u003d null;","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"                if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"                    task \u003d new ToDo(description);","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"                    listOfTasks.add(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"                } else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"faaheem13"},"content":"                    try {","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"faaheem13"},"content":"                        task \u003d new Deadline(description);","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"faaheem13"},"content":"                        listOfTasks.add(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"faaheem13"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"faaheem13"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"faaheem13"},"content":"                    }","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"faaheem13"},"content":"                } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"faaheem13"},"content":"                    try {","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"faaheem13"},"content":"                        task \u003d new Event(description);","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"faaheem13"},"content":"                        listOfTasks.add(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"faaheem13"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"faaheem13"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"faaheem13"},"content":"                    }","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"faaheem13"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"faaheem13"},"content":"                if (doneOrNot \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"faaheem13"},"content":"                    task.markComplete();","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"faaheem13"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"faaheem13"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"faaheem13"},"content":"            throw new DukeException(\" No Saved Tasks Found. Let\u0027s start with an empty list!\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"faaheem13"},"content":"        return listOfTasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"faaheem13"},"content":"     * Saves the current list of tasks to the file specified by the filePath.","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"faaheem13"},"content":"     * Converts the list of Task objects into a string representation that can be saved to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"faaheem13"},"content":"     * @param listOfTasks The list of Task objects to be saved.","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"faaheem13"},"content":"     * @throws DukeException if there is an error saving the data to the file.","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"faaheem13"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e listOfTasks) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"faaheem13"},"content":"        String toSave \u003d \"\";","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"faaheem13"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"faaheem13"},"content":"            toSave +\u003d listOfTasks.get(i).toSave() + \"\\n\";","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"faaheem13"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"faaheem13"},"content":"            FileWriter file \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"faaheem13"},"content":"            file.write(toSave);","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"faaheem13"},"content":"            file.close();","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"faaheem13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"faaheem13"},"content":"            throw new DukeException(\" Error while saving, please try again!\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"faaheem13":112}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.task;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":" * Represents a deadline task in the Duke application. A deadline task has a specific due date and time.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":" * This class extends the Task abstract class, providing implementations for the deadline specific functionalities.","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"    private String deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"    private LocalDateTime deadlineDateFormat;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"     * Constructs a Deadline task with the specified description, which includes the due date and time.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"     * The due date and time should follow the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"     * @param description The task description including the deadline in \"description /by yyyy-MM-dd HH:mm\" format.","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"     * @throws DukeException If the deadline date and time are not in the correct format or are missing.","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"        this.fullTaskDescription \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"            String[] command \u003d description.split(\" /by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"            if (command.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"                throw new DukeException(\" OOPS! Your Only Friend cannot take in a deadline entry with no time :(\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"            this.deadlineDateFormat \u003d LocalDateTime.parse(command[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"            this.description \u003d command[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"            throw new DukeException(\" OOPS! Please enter deadline in a valid format (yyyy-mm-dd HH:mm). :(\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the Deadline task, including its status, description, and deadline.","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"     * @return A formatted string representing the Deadline task.","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"        return \" [D]\" + super.toString() + this.description + \" (by: \"","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"                + deadlineDateFormat.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the Deadline task for saving to a file, including its type, status,","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"     * description, and deadline.","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"     * @return A formatted string suitable for saving the Deadline task to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"    public String toSave() {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"        return \" D\" + (super.getStatusIcon().equals(\"X\") ? \" | 1 | \" : \" | 0 | \") + this.fullTaskDescription;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"faaheem13":61}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.task;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":" * Represents an event task with a start and end datetime.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":" * This class extends the Task abstract class, providing implementations for the event specific functionalities.","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"     * Constructs a new Event instance with the specified description, including the start and end datetime.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"     * @param description The event description in the format \"event_description /from start_datetime /to end_datetime\".","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"     * @throws DukeException If the datetime format is invalid or the description format is incorrect/missing","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"    public Event(String description) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"        this.fullTaskDescription \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"            String[] command \u003d description.split(\" /from \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"            if (command.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"                throw new DukeException(\" OOPS! Your Only Friend cannot take in an event entry with no timeline :(\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"            String timeline \u003d command[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"            String[] eventDates \u003d timeline.split(\" /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"            if (eventDates.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"                throw new DukeException(\" OOPS! Your Only Friend cannot take in an event entry with no timeline :(\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"            this.from \u003d LocalDateTime.parse(eventDates[0], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"            this.to \u003d LocalDateTime.parse(eventDates[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"            this.description \u003d command[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"            throw new DukeException(\" OOPS! Please enter deadline in a valid format (yyyy-mm-dd HH:mm). :(\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the event task, including its status, description, and datetime range.","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"        return \" [E]\" + super.toString() + this.description + \" (from: \"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"))","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the event task suitable for saving to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"     * The saved format includes the task type, status, description, and datetime range.","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"faaheem13"},"content":"     * @return A string suitable for saving the event task to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"faaheem13"},"content":"    public String toSave() {","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"faaheem13"},"content":"        return \" E\" + (super.getStatusIcon().equals(\"X\") ? \" | 1 | \" : \" | 0 | \") + this.fullTaskDescription;","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"faaheem13":70}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.task;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":" * Represents an abstract task in the Duke application. This class is a base for various types of tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"    protected String fullTaskDescription; //include timeline","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"    protected String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"    //    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"    //        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"    //        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"    //    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the task\u0027s completion status.","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"     * @return A string \"X\" if the task is completed, otherwise a space.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"     * Marks this task as complete.","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"    public void markComplete() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"     * Marks this task as incomplete.","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"    public void markIncomplete() {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"     * @return A string representation of the task showing its completion status.","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"        String str;","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"        str \u003d \"[\" + this.getStatusIcon() + \"] \";","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"        return str;","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the task for saving to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"     * @return A string suitable for saving the task to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"    public abstract String toSave();","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"faaheem13":57}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.task;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":" * Represents a to-do task without any specific deadline or time frame.","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":" * This class extends the Task abstract class, providing implementations for the to-do specific functionalities.","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"     * Constructs a new ToDo instance with the specified description.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the to-do task, including its status and description.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"     * @return A string representation of the to-do task.","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"        return \" [T]\" + super.toString() + this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"     * Returns a string representation of the to-do task suitable for saving to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"     * The saved format includes the task type, status, and description.","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"     * @return A string suitable for saving the to-do task to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"    public String toSave() {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"        return \" T\" + (super.getStatusIcon().equals(\"X\") ? \" | 1 | \" : \" | 0 | \") + this.description;","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"faaheem13":38}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.tasklist;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":" * Represents the list of tasks in the Duke application. It encapsulates an ArrayList of Task","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":" * objects and provides methods to manipulate this list, such as adding or deleting tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"public class TaskList {","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"     * Initializes an empty TaskList.","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"     * Initializes a TaskList with a pre-defined list of tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"     * @param tasks An ArrayList of Task objects to be included in the TaskList.","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"     * @param task The Task object to be added.","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"     * Deletes a task from the TaskList based on the given index.","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"     * @param index The index of the task in the TaskList to be deleted.","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"     * @return The Task object that was deleted.","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"     * @throws DukeException If the index is out of bounds (i.e., if no task exists at the given index).","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"            throw new DukeException(\" OOPS! Your Only Friend could not find that index.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"        Task deletedTask \u003d tasks.get(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"        return deletedTask;","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"     * Finds and returns tasks from TaskList that contains the keyword.","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"     * @param keyword The keyword to search for","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"     * @return The list of tasks with the keyword in it.","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"faaheem13"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"faaheem13"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"faaheem13"},"content":"        return new TaskList(matchingTasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"faaheem13"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"faaheem13"},"content":"     * @return An ArrayList containing the tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"faaheem13"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"faaheem13"},"content":"        return tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"faaheem13"},"content":"     * Gets the number of tasks in the TaskList.","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"faaheem13"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"faaheem13"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"faaheem13"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"faaheem13":85}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.ui;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":" * Handles the user interface of the Duke application. It is responsible for","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":" * all the interactions with the user, including taking input and showing","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":" * messages to the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"public class Ui {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"     * Initializes a Ui instance with a new Scanner object to read user input.","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"    public Ui() {","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"    public void showHello() {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"                + \" Hello! I\u0027m Your Only Friend\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"                + \" What can I do for you?\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"                + \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"     * Displays the goodbye message to the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"    public void showBye() {","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"                + \" Bye. Hope to see you again soon!\\n - Your Only Friend\\n\"","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"                + \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"                + message","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"                + \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"     * @return The user\u0027s command as a trimmed, lowercase string.","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"        return scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"faaheem13"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"faaheem13"},"content":"     * @param tasks The TaskList containing the tasks to be displayed.","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"faaheem13"},"content":"    public void showList(TaskList tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\" Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"faaheem13"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"faaheem13"},"content":"            System.out.println(\" \" + i + \".\" + tasks.getTasks().get(i - 1).toString());","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"faaheem13"},"content":"     * Displays a specific task to the user along with a custom message.","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"faaheem13"},"content":"     * @param msg The message to be displayed above the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"faaheem13"},"content":"     * @param task The task to be displayed.","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"faaheem13"},"content":"    public void showTask(String msg, Task task) {","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"faaheem13"},"content":"        System.out.println(msg + \"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"faaheem13"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"faaheem13"},"content":"     * Displays a specific task to the user along with a custom message, and","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"faaheem13"},"content":"     * shows the total number of tasks in the list.","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"faaheem13"},"content":"     * @param msg The message to be displayed above the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"faaheem13"},"content":"     * @param task The task to be displayed.","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"faaheem13"},"content":"     * @param tasks The TaskList to count the total number of tasks from.","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"faaheem13"},"content":"    public void showTaskWithNum(String msg, Task task, TaskList tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"faaheem13"},"content":"        System.out.println(msg + \"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"faaheem13"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\" Now you have \" + tasks.getSize()","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"faaheem13"},"content":"                + (tasks.getSize() \u003c\u003d 1 ? \" task in the list.\" : \" tasks in the list.\\n\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"faaheem13"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"faaheem13"},"content":"     * Displays list of tasks which includes the keyword for \"finding tasks\".","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"faaheem13"},"content":"     * @param tasks","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"faaheem13"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"faaheem13"},"content":"    public void showMatchingList(TaskList tasks) {","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\" Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"faaheem13"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"faaheem13"},"content":"            System.out.println(\" \" + i + \".\" + tasks.getTasks().get(i - 1).toString());","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"faaheem13":114}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"public class DukeTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"    public void addTask_increaseListSize() {","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"        Task todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"faaheem13":20}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"package duke.task;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"    void deadlineConstructor_throwsExceptionOnInvalidDate() {","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"        String input \u003d \"submit report /by invalid-date\";","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e new Deadline(input));","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"        String expectedMessage \u003d \" OOPS! Please enter deadline in a valid format (yyyy-mm-dd HH:mm). :(\";","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"faaheem13":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"todo borrow book","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"deadline submit assign /by 2pm","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"mark 1","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"event PHight night /from 2pm /to 6pm","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"bye","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"faaheem13":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"faaheem13":1,"-":20}}]
