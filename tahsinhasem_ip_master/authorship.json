[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"    mainClass.set(\"dude.Dude\")","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"    archiveBaseName \u003d \"dude\"","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"    archiveFileName \u003d \"dude.jar\"","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"checkstyle {","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"tahsinhasem":8,"-":40}},{"path":"src/main/java/dude/Dude.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import dude.commands.Command;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"import dude.commands.CommandTypes;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"import dude.commands.Parser;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.DudeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"import dude.utils.Storage;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"import dude.utils.Ui;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":" * The main class of the Duke application.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":" * This class is responsible for the main logic of the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":" * The main loop of the application is responsible for reading user input,","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":" * parsing it into a command, executing the command and saving the task list to disk.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":" **/","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"public class Dude {","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the Dude class.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"     * The constructor initializes the storage and UI components of the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"     * It also loads the task list from the storage.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"     * @param filePath The file path to the storage file.","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"    public Dude(String filePath) {","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"        TaskList temp \u003d null;","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"            temp \u003d this.storage.loadTasks();","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"        } catch (Exception e) { //Thrown when file gets corrupted","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"            ui.showMessage(\"An error occurred while loading the tasks. Deleting the storage and starting with \"","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"                    + \"an empty task list.\");","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"            this.storage.deleteStorage();","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"            temp \u003d new TaskList();","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"        this.taskList \u003d temp;","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"     * This method runs the main loop of the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"tahsinhasem"},"content":"     * This method is responsible for reading user input, parsing it into a command,","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"tahsinhasem"},"content":"     * executing the command and saving the task list to disk.","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"tahsinhasem"},"content":"    public void run() {","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"tahsinhasem"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"tahsinhasem"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"tahsinhasem"},"content":"        while (this.isRunning) {","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"tahsinhasem"},"content":"            String input \u003d extractInput(sc);","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"tahsinhasem"},"content":"            Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"tahsinhasem"},"content":"            String response \u003d executeCommand(command);","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"tahsinhasem"},"content":"            ui.showMessage(response);","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"tahsinhasem"},"content":"            saveToDisk();","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"tahsinhasem"},"content":"            if (command.getCommandType() \u003d\u003d CommandTypes.BYE) {","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"tahsinhasem"},"content":"                this.isRunning \u003d false;","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"tahsinhasem"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"tahsinhasem"},"content":"    private static String extractInput(Scanner sc) {","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"tahsinhasem"},"content":"        String input \u003d \"\";","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"tahsinhasem"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"tahsinhasem"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"tahsinhasem"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"tahsinhasem"},"content":"            //this will not be handled. App will only exit at bye command.","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"tahsinhasem"},"content":"            input \u003d \"\";","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"tahsinhasem"},"content":"        return input;","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"tahsinhasem"},"content":"    private static String executeCommand(Command command) {","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"tahsinhasem"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"tahsinhasem"},"content":"            return command.execute();","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"tahsinhasem"},"content":"        } catch (DudeException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"tahsinhasem"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"tahsinhasem"},"content":"    private void saveToDisk() {","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"tahsinhasem"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"tahsinhasem"},"content":"            this.storage.saveTasks(taskList);","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"tahsinhasem"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"tahsinhasem"},"content":"            this.ui.showMessage(\"An error occurred while saving the tasks.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"tahsinhasem"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"tahsinhasem"},"content":"        new Dude(\"data/tasklist.ser\").run();","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"tahsinhasem":110}},{"path":"src/main/java/dude/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":" * The ByeCommand class represents a command to exit the program.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"    static final String COMMAND_FORMAT \u003d \"bye\";","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the ByeCommand class. Returns a command object to exit the program upon execution.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    public ByeCommand() {","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"        super(COMMAND_FORMAT, \"bye\");","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"    public String execute() {","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"    public CommandTypes getCommandType() {","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"        return CommandTypes.BYE;","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"tahsinhasem":25}},{"path":"src/main/java/dude/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.DudeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":" * The Command class represents a command that can be executed by the user.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"    private final String format;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"    private final String regex;","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the Command class.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"     * @param format The format of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"     * @param regex  The regex of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"    protected Command(String format, String regex) {","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"        this.format \u003d format;","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"        this.regex \u003d regex;","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"     * Executes the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"     * @return The string message from the execution of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"     * @throws DudeException If the command execution fails.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"    public abstract String execute() throws DudeException;","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"     * Gets the format of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"     * @return The format of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"    public String getFormat() {","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"        return this.format;","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"     * Gets the regex of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"     * @return The regex of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"    public String getRegex() {","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"        return this.regex;","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"     * Gets the type of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"     * @return The type of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"    public abstract CommandTypes getCommandType();","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"tahsinhasem":56}},{"path":"src/main/java/dude/commands/CommandTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":" * The CommandTypes enum represents the types of commands that can be used in the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"public enum CommandTypes {","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"    BYE,","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"    LIST,","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"    DELETE,","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"    TODO,","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"    DEADLINE,","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"    EVENT,","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    MARK,","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"    UNMARK,","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    FIND,","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"    HELP,","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"    INVALID","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"tahsinhasem":18}},{"path":"src/main/java/dude/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.DudeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.Deadline;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":" * The DeadlineCommand class represents a command to add a deadline task to the TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    static final String COMMAND_FORMAT \u003d \"deadline \u003cdescription\u003e /by \u003cdate\u003e\";","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"    private final String input;","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the DeadlineCommand class. Returns a command object to add a deadline task to","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"     * the TaskList object upon execution.","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"     * @param input    The input string that resulted in the creation of this command.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"     * @param tasklist The TaskList object to which the deadline task is to be added.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"    public DeadlineCommand(String input, TaskList tasklist) {","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"        super(COMMAND_FORMAT, \"deadline .* /by .*\");","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"        this.taskList \u003d tasklist;","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"     * Add a deadline task to the TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"     * @return The string message from the execution of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"     * @throws DudeException If the command execution fails.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"    public String execute() throws DudeException {","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"        boolean doesInputMatch \u003d input.matches(this.getRegex());","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"        //only catches basic format errors. date format errors are caught by Deadline.from()","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"        if (!doesInputMatch) {","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidFormatException(\"deadline\", COMMAND_FORMAT);","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"        Deadline deadline \u003d Deadline.from(input); //throws different DukeExceptions","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"        this.taskList.add_task(deadline); //throws TaskListFullException","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"                + \"\\t  \" + deadline.toString() + \"\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"                + \"\\tNow you have \" + this.taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"    public CommandTypes getCommandType() {","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"        return CommandTypes.DEADLINE;","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"tahsinhasem":56}},{"path":"src/main/java/dude/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.DudeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.Task;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":" * The DeleteCommand class represents a command to delete a task from the TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    private static final String COMMAND_FORMAT \u003d \"delete \u003cid\u003e\";","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"    private final String input;","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the DeleteCommand class. Returns a command object to delete a task from the TaskList object upon","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"     * execution.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"     * @param input    The input string that resulted in the creation of this command.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"     * @param tasklist The TaskList object from which the task is to be deleted.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"    public DeleteCommand(String input, TaskList tasklist) {","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"        super(COMMAND_FORMAT, \"delete \\\\d+\");","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"        this.input \u003d input.trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"        this.taskList \u003d tasklist;","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"     * Deletes a task from the TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"     * @return The string message from the execution of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"     * @throws DudeException If the command execution fails.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"    public String execute() throws DudeException {","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"        boolean inputMatches \u003d input.matches(this.getRegex());","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"        //throw error if input does not match the format","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"        if (!inputMatches) {","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidFormatException(\"delete\", COMMAND_FORMAT);","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"        int id \u003d Integer.parseInt(this.input.split(\" \")[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"        //re-throw exception if task does not exist","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"            Task task \u003d this.taskList.getTask(id);","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"            this.taskList.remove_task(id);","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"            String msg \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\t  \" + id + \". \" + task.toString() + \"\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\tNow you have \" + this.taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"            return msg;","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"tahsinhasem"},"content":"        } catch (DudeException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"tahsinhasem"},"content":"            throw new DudeException(e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"tahsinhasem"},"content":"    public CommandTypes getCommandType() {","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"tahsinhasem"},"content":"        return CommandTypes.DELETE;","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"tahsinhasem":67}},{"path":"src/main/java/dude/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.DudeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.Event;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":" * The EventCommand class represents a command that adds an event to the TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    public static final String COMMAND_FORMAT \u003d \"event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\";","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    private final String input;","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the EventCommand class. Returns a command object to add an event to the TaskList object upon","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"     * execution.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"     * @param input    The input string that resulted in the creation of this command.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"     * @param tasklist The TaskList object to which the event is to be added.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"    public EventCommand(String input, TaskList tasklist) {","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"        super(COMMAND_FORMAT, \"event .* /from .* /to .*\");","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"        this.taskList \u003d tasklist;","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"     * Add an event to the TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"     * @return The string message from the execution of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"     * @throws DudeException If the command execution fails.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"    public String execute() throws DudeException {","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"        boolean doesInputMatch \u003d input.matches(this.getRegex());","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"        //only catches basic format errors. date format errors are caught by Deadline.from()","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"        if (!doesInputMatch) {","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidFormatException(\"event\", COMMAND_FORMAT);","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"        Event event \u003d Event.from(input); //throws different DukeExceptions","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"        this.taskList.add_task(event); //throws TaskListFullException","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"                + \"\\t  \" + event.toString() + \"\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"                + \"\\tNow you have \" + this.taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"    public CommandTypes getCommandType() {","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"        return CommandTypes.EVENT;","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"tahsinhasem":57}},{"path":"src/main/java/dude/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.Task;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.TaskList;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"import dude.utils.Utils;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":" * The FindCommand class represents a command to find tasks in the TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"    static final String COMMAND_FORMAT \u003d \"find \u003ckeyword\u003e\";","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"    private final String input;","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the FindCommand class. Returns a command object to find tasks with the given input","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"     * in the TaskList object upon execution.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"     * @param input    The input string that resulted in the creation of this command.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"     * @param taskList The TaskList object from which the tasks are to be found.","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"    public FindCommand(String input, TaskList taskList) {","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"        super(COMMAND_FORMAT, \"find .*\");","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"     * Finds tasks in the TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"     * @return The string message of the tasks found from the execution of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"    public String execute() throws InvalidFormatException {","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"        String keyword \u003d Utils.discardFirstWord(input.trim()).trim();","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidFormatException(\"find\", COMMAND_FORMAT);","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"        ArrayList\u003cTask\u003e tasks \u003d this.taskList.find(keyword);","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"            return \"No matching tasks found! :(\";","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"        String msg \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"            msg +\u003d \"\\t\" + (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"        return msg.trim();","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"    public CommandTypes getCommandType() {","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"tahsinhasem"},"content":"        return CommandTypes.FIND;","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"tahsinhasem":60}},{"path":"src/main/java/dude/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.DudeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":" * The HelpCommand class represents a command that provides help on the commands the application supports.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"    private static final String COMMAND_FORMAT \u003d \"help \u003c?command\u003e\";","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"    private final String[] supportedCommands \u003d new String[]{","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"            \"list: Lists all the tasks in the task list.\",","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"            \"todo: Adds a todo task to the task list.\",","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"            \"deadline: Adds a deadline task to the task list.\",","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"            \"event: Adds an event task to the task list.\",","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"            \"mark: Marks a task as done.\",","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"            \"unmark: Marks a task as undone.\",","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"            \"delete: Deletes a task from the task list.\",","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"            \"find: Finds tasks with mathing keyword\",","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"            \"bye: Exits the program.\",","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"            \"help: Provides help on the commands I support.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"    };","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"    private final String input;","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the HelpCommand class. Returns a command object to provide help on the commands the application","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"     * supports upon execution.","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"     * @param input The input string that resulted in the creation of this command.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"    public HelpCommand(String input) {","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"        super(\"help \u003c?command\u003e\", \"help\");","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"        this.input \u003d input.trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"     * Provides help on the commands the application supports.","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"     * @return The string message from the execution of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"     * @throws DudeException If the command execution fails.","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"    public String execute() throws DudeException {","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"        if (input.equals(\"help\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"            return this.generateHelpMessage();","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"            return this.generateCommandHelpMessage();","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"    private String generateHelpMessage() {","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"        String helpMessage \u003d \"Here are the commands I support:\";","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"        for (String command : supportedCommands) {","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"            helpMessage +\u003d \"\\n\\t\" + command;","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"        helpMessage +\u003d \"\\nFor more information on a specific command, type \u0027help \u003ccommand\u003e\u0027\";","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"tahsinhasem"},"content":"        return helpMessage;","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"tahsinhasem"},"content":"    private String generateCommandHelpMessage() {","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"tahsinhasem"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"tahsinhasem"},"content":"        //the length must be two, as the string is not equals to \"help\".","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"tahsinhasem"},"content":"        String command \u003d parts[1];","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"tahsinhasem"},"content":"        switch (command) {","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"tahsinhasem"},"content":"        case \"list\":","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"tahsinhasem"},"content":"            return \"list: Lists all the tasks in the task list.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tFormat: list\"","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tExample: list\";","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"tahsinhasem"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"tahsinhasem"},"content":"            return \"todo: Adds a todo task to the task list.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tFormat: todo \u003cdescription\u003e\"","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tExample: todo read book\"","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tNote: The description cannot be empty.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"tahsinhasem"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"tahsinhasem"},"content":"            return \"deadline: Adds a deadline task to the task list.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tFormat: deadline \u003cdescription\u003e /by \u003cdate\u003e\"","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tExample: deadline return book /by 09/09/2021 18:00\"","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tExample (2): deadline get book /by 09/09/2021\"","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\t*Note: The description and date cannot be empty.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\t*Note: The date must be in the format d/M/yyyy H:m or d/M/yyyy\";","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"tahsinhasem"},"content":"        case \"event\":","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"tahsinhasem"},"content":"            return \"event: Adds an event task to the task list.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tFormat: event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\"","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tExample: event project meeting /from 09/09/2021 18:00 /to 09/09/2021 20:00\"","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tExample (2): event project meeting /from 09/09/2021 /to 09/09/2021\"","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\t*Note: The description and date cannot be empty.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\t*Note: The date must be in the format d/M/yyyy H:m or d/M/yyyy\";","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"tahsinhasem"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"tahsinhasem"},"content":"            return \"mark: Marks a task as done.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tFormat: mark \u003cid\u003e\"","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tExample: mark 1\"","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\t*Note: The id must be a valid integer task id.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"tahsinhasem"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"tahsinhasem"},"content":"            return \"unmark: Marks a task as undone.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tFormat: unmark \u003cid\u003e\"","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tExample: unmark 1\"","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\t*Note: The id must be a valid integer task id.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"tahsinhasem"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"tahsinhasem"},"content":"            return \"delete: Deletes a task from the task list.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tFormat: delete \u003cid\u003e\"","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tExample: delete 1\"","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\t*Note: The id must be a valid integer task id.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"tahsinhasem"},"content":"        case \"find\":","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"tahsinhasem"},"content":"            return \"find: Finds tasks whose string representation matches with the given keyword.\"","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tFormat: find \u003ckeyword\u003e\"","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tExample: find book\"","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\t*Note: The keyword cannot be empty.\";","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"tahsinhasem"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"tahsinhasem"},"content":"            return \"bye: Exits the program.\"","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tFormat: bye\"","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\n\\tExample: bye\";","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"tahsinhasem"},"content":"        default:","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"tahsinhasem"},"content":"            return \"I\u0027m sorry, I don\u0027t know what that command is. Please type \u0027help\u0027 to see the \"","lastModifiedDate":"2024-02-27"},{"lineNumber":118,"author":{"gitId":"tahsinhasem"},"content":"                    + \"list of commands I support.\";","lastModifiedDate":"2024-02-27"},{"lineNumber":119,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":122,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"tahsinhasem"},"content":"    public CommandTypes getCommandType() {","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"tahsinhasem"},"content":"        return CommandTypes.HELP;","lastModifiedDate":"2024-02-18"},{"lineNumber":125,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":126,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"tahsinhasem":126}},{"path":"src/main/java/dude/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":" * The InvalidCommand class represents a command that is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the InvalidCommand class. Returns a command object that is used to represent an invalid command.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"    public InvalidCommand() {","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"        super(\"\", \"\");","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"     * Does nothing","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"     * @return The string message for an invalid command.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"    public String execute() {","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"        return \"Sorry I don\u0027t understand that command. Please try again.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"    public CommandTypes getCommandType() {","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"        return CommandTypes.INVALID;","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"tahsinhasem":28}},{"path":"src/main/java/dude/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":" * The ListCommand class represents a command to list all the tasks in the TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"    static final String COMMAND_FORMAT \u003d \"list\";","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"    private final TaskList tasklist;","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the ListCommand class. Returns a command object to list all the tasks in the given","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"     * TaskList object upon","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"     * execution.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"     * @param tasklist The TaskList object to be listed.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"    public ListCommand(TaskList tasklist) {","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"        super(\"list\", \"list\");","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"        this.tasklist \u003d tasklist;","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"     * Returns a string representation of the list of tasks in the TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"     * @return The string message from the execution of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"    public String execute() {","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"        return tasklist.toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"    public CommandTypes getCommandType() {","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"        return CommandTypes.LIST;","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"tahsinhasem":38}},{"path":"src/main/java/dude/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.DudeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.Task;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":" * The MarkCommand class represents a command to mark a task as done in the TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    public static final String COMMAND_FORMAT \u003d \"mark \u003cid\u003e\";","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"    private final String input;","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the MarkCommand class. Returns a command object to mark a task as done in the TaskList","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"     * object upon execution.","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"     * @param input    The input string that resulted in the creation of this command.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"     * @param tasklist The TaskList object in which the task is to be marked as done.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"    public MarkCommand(String input, TaskList tasklist) {","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"        super(COMMAND_FORMAT, \"mark \\\\d+\");","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"        this.input \u003d input.trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"        this.taskList \u003d tasklist;","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"     * Marks a task as done in the TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"     * @return The string message from the execution of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"     * @throws DudeException If the command execution fails.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"    public String execute() throws DudeException {","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"        boolean inputMatches \u003d input.matches(this.getRegex());","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"        //throw error if input does not match the format","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"        if (!inputMatches) {","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidFormatException(\"mark\", COMMAND_FORMAT);","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"        int id \u003d Integer.parseInt(this.input.split(\" \")[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"            Task task \u003d this.taskList.getTask(id);","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"            this.taskList.mark_as_done(id);","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\t  \" + id + \". \" + task.toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"        } catch (DudeException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"            throw new DudeException(e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"tahsinhasem"},"content":"    public CommandTypes getCommandType() {","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"tahsinhasem"},"content":"        return CommandTypes.MARK;","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"tahsinhasem":61}},{"path":"src/main/java/dude/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":" * The Parser class is responsible for parsing the user input and returning the appropriate command.","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"public class Parser {","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"     * Parses the user input and returns the appropriate command.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"     * @param input    The user input.","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"     * @param tasklist The TaskList to be used by the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"     * @return The parsed command from the user input.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"    public static Command parse(String input, TaskList tasklist) {","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"        String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"        switch (command[0]) {","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"        case \"list\":","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"            return new ListCommand(tasklist);","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"            return new DeleteCommand(input, tasklist);","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"            return new TodoCommand(input, tasklist);","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"            return new DeadlineCommand(input, tasklist);","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"        case \"event\":","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"            return new EventCommand(input, tasklist);","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"            return new MarkCommand(input, tasklist);","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"            return new UnmarkCommand(input, tasklist);","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"        case \"find\":","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"            return new FindCommand(input, tasklist);","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"        case \"help\":","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"            return new HelpCommand(input);","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"        default:","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"            return new InvalidCommand();","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"tahsinhasem":46}},{"path":"src/main/java/dude/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.DudeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.Todo;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":" * The TodoCommand class represents a command to add a todo task to the TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    public static final String COMMAND_FORMAT \u003d \"todo \u003cdescription\u003e\";","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"    private final String input;","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the TodoCommand class. Returns a command object to add a todo task to the TaskList object","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"     * upon execution.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"     * @param input    The input string that resulted in the creation of this command.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"     * @param tasklist The TaskList object to which the todo task is to be added.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"    public TodoCommand(String input, TaskList tasklist) {","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"        super(COMMAND_FORMAT, \"todo .*\");","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"        this.taskList \u003d tasklist;","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"     * Add a todo task to the TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"     * @return The string message from the execution of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"     * @throws DudeException If the command execution fails.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"    public String execute() throws DudeException {","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"        boolean doesInputMatch \u003d input.matches(this.getRegex());","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"        if (!doesInputMatch) {","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidFormatException(\"todo\", COMMAND_FORMAT);","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"        Todo todo \u003d Todo.from(input); //throws InvalidDescriptionException","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"        this.taskList.add_task(todo); //throws TaskListFullException","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"                + \"\\t  \" + todo.toString() + \"\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"                + \"\\tNow you have \" + this.taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"    public CommandTypes getCommandType() {","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"        return CommandTypes.TODO;","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"tahsinhasem":54}},{"path":"src/main/java/dude/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.DudeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.Task;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":" * The UnmarkCommand class represents a command to mark a task as not done in the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    public static final String COMMAND_FORMAT \u003d \"unmark \u003cid\u003e\";","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"    private final String input;","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the UnmarkCommand class. Returns a command object to mark a task as not done in the task","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"     * list upon execution.","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"     * @param input    The input string that resulted in the creation of this command.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"     * @param tasklist The TaskList object in which the task is to be marked as not done.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"    public UnmarkCommand(String input, TaskList tasklist) {","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"        super(COMMAND_FORMAT, \"unmark \\\\d+\");","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"        this.input \u003d input.trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"        this.taskList \u003d tasklist;","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"     * Marks a task as not done in the task list.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"     * @return The string message from the execution of the command.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"     * @throws DudeException If the command execution fails.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"    public String execute() throws DudeException {","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"        boolean inputMatches \u003d input.matches(this.getRegex());","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"        //throw error if input does not match the format","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"        if (!inputMatches) {","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidFormatException(\"unmark\", COMMAND_FORMAT);","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"        int id \u003d Integer.parseInt(this.input.split(\" \")[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"        //re-throw exception if task does not exist","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"            Task task \u003d taskList.getTask(id);","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"            this.taskList.mark_as_undone(id);","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"            return \"Nice! I\u0027ve unmarked this task as done:\\n\"","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"                    + \"\\t  \" + id + \". \" + task.toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"        } catch (DudeException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"            throw new DudeException(e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"tahsinhasem"},"content":"    public CommandTypes getCommandType() {","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"tahsinhasem"},"content":"        return CommandTypes.UNMARK;","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"tahsinhasem":63}},{"path":"src/main/java/dude/exceptions/DudeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.exceptions;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":" * The DudeException class represents an exception that is specific to the Dude application.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"public class DudeException extends Exception {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the DudeException class.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"     * @param message The message of the exception.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    public DudeException(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"        super(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"tahsinhasem":16}},{"path":"src/main/java/dude/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.exceptions;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":" * The InvalidArgumentException class represents an exception that is thrown when an argument for a command is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"public class InvalidArgumentException extends DudeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the InvalidArgumentException class.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"     * @param message The message of the exception.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"        super(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"tahsinhasem":16}},{"path":"src/main/java/dude/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.exceptions;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":" * The InvalidCommandException class represents an exception that is thrown when the command is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"public class InvalidCommandException extends DudeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"    //Used to indicate that the command is invalid","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the InvalidCommandException class.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"     * @param message The message of the exception.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"        super(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"tahsinhasem":17}},{"path":"src/main/java/dude/exceptions/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.exceptions;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":" * The InvalidDescriptionException class represents an exception that is thrown when the description for","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":" * a task is invalid.","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"public class InvalidDescriptionException extends DudeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the InvalidDescriptionException class.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"     * @param message The message of the exception.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"    public InvalidDescriptionException(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"        super(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"tahsinhasem":17}},{"path":"src/main/java/dude/exceptions/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.exceptions;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":" * The InvalidFormatException class represents an exception that is thrown when the format is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"public class InvalidFormatException extends DudeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the InvalidFormatException class.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"     * @param message The message of the exception.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"        super(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the InvalidFormatException class.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"     * @param command The command that was used.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"     * @param format  The format that should be used.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"    public InvalidFormatException(String command, String format) {","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"        super(\"Invalid format for \" + command + \" command. \\nPlease use this format: \" + format","lastModifiedDate":"2024-02-27"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"                + \",\\n or type help for more information.\");","lastModifiedDate":"2024-02-27"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the InvalidFormatException class.","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"     * @param command The command that was used.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"     * @param format The format that should be used.","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"     * @param note The note to be added to the exception message.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"    public InvalidFormatException(String command, String format, String note) {","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"        super(\"Invalid format for \" + command + \" command. \"","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"                + \"\\nPlease use this format: \" + format + \",\"","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"                + \"\\n or type help for more information.\"","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"                + \"\\nNote: \" + note);","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"tahsinhasem":41}},{"path":"src/main/java/dude/exceptions/TaskListFullException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.exceptions;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":" * The TaskListFullException class represents an exception that is thrown when the task list is full.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"public class TaskListFullException extends DudeException {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the TaskListFullException class.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"     * @param message The message of the exception.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    public TaskListFullException(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"        super(message);","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"tahsinhasem":16}},{"path":"src/main/java/dude/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidDescriptionException;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"import dude.utils.Utils;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":" * The Deadline class represents a task with a description and a deadline.","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"    private final LocalDateTime deadlineDate;","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"     * @param by          The deadline of the deadline.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"        super(description);","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"        this.deadlineDate \u003d by;","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"     * Static method to create a Deadline object from parsing a string.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"     * Expects a string in the format \"deadline *description* /by *deadline_date*\".","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"     * @param s The string to be parsed into a Deadline object.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"     * @return The Deadline object created from the string.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"     * @throws InvalidFormatException      If the format of the string is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"     * @throws InvalidDescriptionException If the description of the deadline is empty.","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"     * @throws InvalidArgumentException    If the \u0027by\u0027 of the deadline is empty.","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"    public static Deadline from(String s) throws InvalidFormatException,","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"            InvalidDescriptionException, InvalidArgumentException {","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"        //Expects a string in the format \"deadline \u003cdescription\u003e /by \u003cdeadline_date\u003e\"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"        //get rid of the command","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"        String rest \u003d Utils.discardFirstWord(s.trim()).trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"        String[] arr \u003d rest.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"        int byOccurences \u003d Utils.countOccurrences(arr, \"/by\");","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"        if (byOccurences \u003d\u003d 0 || byOccurences \u003e 1) {","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidFormatException(\"deadline\", \"format: deadline \u003cdescription\u003e /by \u003cdeadline date\u003e. \"","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"                    + \"Provide one and only one \u0027/by\u0027.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"        //they will not be -1 as I have already checked for their occurences","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"        int byIndex \u003d Utils.findIndex(arr, \"/by\");","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"tahsinhasem"},"content":"        //description is from 0 to byIndex","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"tahsinhasem"},"content":"        String description \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"tahsinhasem"},"content":"        for (int i \u003d 0; i \u003c byIndex; i++) {","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"tahsinhasem"},"content":"            description +\u003d arr[i] + \" \";","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"tahsinhasem"},"content":"        description \u003d description.trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"tahsinhasem"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidDescriptionException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"tahsinhasem"},"content":"        String by \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"tahsinhasem"},"content":"        for (int i \u003d byIndex + 1; i \u003c arr.length; i++) {","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"tahsinhasem"},"content":"            by +\u003d arr[i] + \" \";","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"tahsinhasem"},"content":"        by \u003d by.trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"tahsinhasem"},"content":"        if (by.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidArgumentException(\"The \u0027by\u0027 of a deadline cannot be empty. \"","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"tahsinhasem"},"content":"                    + \"Follow this format: deadline \u003cdescription\u003e /by \u003cdeadline date time\u003e\");","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"tahsinhasem"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"tahsinhasem"},"content":"            LocalDateTime dt \u003d parseDate(by);","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"tahsinhasem"},"content":"            return new Deadline(description, dt);","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"tahsinhasem"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidFormatException(\"Invalid date format after \u0027/by\u0027. \"","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"tahsinhasem"},"content":"                    + \"Use d/M/yyyy or d/M/yyy H:m in 24-hour format\");","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"tahsinhasem"},"content":"     * Returns the deadline of the Deadline object.","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"tahsinhasem"},"content":"     * @return The deadline date-time of the Deadline object.","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"tahsinhasem"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"tahsinhasem"},"content":"        return deadlineDate;","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"tahsinhasem"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"tahsinhasem"},"content":"     * @return A string representation of the Deadline object.","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"tahsinhasem"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"tahsinhasem"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDate(deadlineDate) + \")\";","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":108,"author":{"gitId":"tahsinhasem"},"content":"     * Returns whether the object is equal to this object.","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"tahsinhasem"},"content":"     * @param object The object to be compared.","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"tahsinhasem"},"content":"     * @return Whether the object is equal to this object.","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"tahsinhasem"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"tahsinhasem"},"content":"        if (object instanceof Deadline) {","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"tahsinhasem"},"content":"            Deadline t \u003d (Deadline) object;","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"tahsinhasem"},"content":"            return t.getDescription().equals(this.getDescription()) \u0026\u0026 t.getBy().equals(this.getBy());","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":119,"author":{"gitId":"tahsinhasem"},"content":"        return false;","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"tahsinhasem":121}},{"path":"src/main/java/dude/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import dude.commands.EventCommand;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidDescriptionException;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidFormatException;","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"import dude.utils.Utils;","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":" * The Event class represents a task with a description, start and end time.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"    private final LocalDateTime fromTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"    private final LocalDateTime toTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"     * @param fromTime   The start time of the event.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"     * @param toTime     The end time of the event.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"    public Event(String description, LocalDateTime fromTime, LocalDateTime toTime) {","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"        super(description);","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"     * Static method to create an Event object from parsing a string.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"     * Expects a string in the format \"event *description* /at *fromTime* to *toTime*\"","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"     * @param input The string to be parsed into an Event object.","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"     * @return The Event object created from the string.","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"     * @throws InvalidArgumentException If the \u0027from_time\u0027 or \u0027to_time\u0027 of the event is empty.","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"     * @throws InvalidFormatException If the format of the string is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"     * @throws InvalidDescriptionException If the description of the event is empty.","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"    public static Event from(String input) throws InvalidArgumentException,","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"            InvalidFormatException, InvalidDescriptionException {","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"        String rest \u003d Utils.discardFirstWord(input.trim()).trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"        String[] arr \u003d rest.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"        int fromOccurrences \u003d Utils.countOccurrences(arr, \"/from\");","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"        if (fromOccurrences \u003d\u003d 0 || fromOccurrences \u003e 1) {","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidFormatException(\"Invalid format. Follow this format :\" + EventCommand.COMMAND_FORMAT","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"                    + \". Provide one and only one \u0027/from\u0027.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"        int toOccurrences \u003d Utils.countOccurrences(arr, \"/to\");","lastModifiedDate":"2024-02-27"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"        if (toOccurrences \u003d\u003d 0 || toOccurrences \u003e 1) {","lastModifiedDate":"2024-02-27"},{"lineNumber":58,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidFormatException(\"Invalid format. Follow this format: \" + EventCommand.COMMAND_FORMAT","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"tahsinhasem"},"content":"                    + \". Provide one and only one \u0027/to\u0027.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"tahsinhasem"},"content":"        //they will not be -1 as I have already checked for their occurences","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"tahsinhasem"},"content":"        int fromIndex \u003d Utils.findIndex(arr, \"/from\");","lastModifiedDate":"2024-02-27"},{"lineNumber":64,"author":{"gitId":"tahsinhasem"},"content":"        int toIndex \u003d Utils.findIndex(arr, \"/to\");","lastModifiedDate":"2024-02-27"},{"lineNumber":65,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"tahsinhasem"},"content":"        if (fromIndex \u003e toIndex) {","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidFormatException(\"The \u0027from time\u0027 of an event cannot be after the \u0027to time\u0027.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"tahsinhasem"},"content":"        //description is from 0 to fromIndex","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"tahsinhasem"},"content":"        String description \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"tahsinhasem"},"content":"        for (int i \u003d 0; i \u003c fromIndex; i++) {","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"tahsinhasem"},"content":"            description +\u003d arr[i] + \" \";","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"tahsinhasem"},"content":"        description \u003d description.trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"tahsinhasem"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidDescriptionException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"tahsinhasem"},"content":"        String fromTime \u003d \"\";","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"tahsinhasem"},"content":"        for (int i \u003d fromIndex + 1; i \u003c toIndex; i++) {","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"tahsinhasem"},"content":"            fromTime +\u003d arr[i] + \" \";","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"tahsinhasem"},"content":"        fromTime \u003d fromTime.trim();","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"tahsinhasem"},"content":"        if (fromTime.isEmpty()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidArgumentException(\"The \u0027fromTime\u0027 of an event cannot be empty.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"tahsinhasem"},"content":"        String toTime \u003d \"\";","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"tahsinhasem"},"content":"        for (int i \u003d toIndex + 1; i \u003c arr.length; i++) {","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"tahsinhasem"},"content":"            toTime +\u003d arr[i] + \" \";","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"tahsinhasem"},"content":"        toTime \u003d toTime.trim();","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"tahsinhasem"},"content":"        if (toTime.isEmpty()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidArgumentException(\"The \u0027toTime\u0027 of an event cannot be empty.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"tahsinhasem"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"tahsinhasem"},"content":"            LocalDateTime from \u003d parseDate(fromTime);","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"tahsinhasem"},"content":"            LocalDateTime to \u003d parseDate(toTime);","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"tahsinhasem"},"content":"            return new Event(description, from, to);","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"tahsinhasem"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidFormatException(\"Invalid date format after \u0027/from\u0027 or \u0027/to\u0027.\"","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"tahsinhasem"},"content":"                    + \"Use d/M/yyyy or d/M/yyy H:m in 24-hour format\");","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":110,"author":{"gitId":"tahsinhasem"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"tahsinhasem"},"content":"     * @return A string representation of the Event object.","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"tahsinhasem"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"tahsinhasem"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatDate(fromTime) + \" to: \" + formatDate(toTime) + \")\";","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"tahsinhasem"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":122,"author":{"gitId":"tahsinhasem"},"content":"     * @return The start date-time  of the event.","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"tahsinhasem"},"content":"    public LocalDateTime getFromTime() {","lastModifiedDate":"2024-02-17"},{"lineNumber":125,"author":{"gitId":"tahsinhasem"},"content":"        return fromTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":127,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":128,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"tahsinhasem"},"content":"     * Returns the end date-time  of the event.","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"tahsinhasem"},"content":"     * @return The end date-time of the event.","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"tahsinhasem"},"content":"    public LocalDateTime getToTime() {","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"tahsinhasem"},"content":"        return toTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":135,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":138,"author":{"gitId":"tahsinhasem"},"content":"     * Returns whether the object is equal to this object.","lastModifiedDate":"2024-02-26"},{"lineNumber":139,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"tahsinhasem"},"content":"     * @param object The object to be compared.","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"tahsinhasem"},"content":"     * @return Whether the object is equal to this object.","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"tahsinhasem"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2024-02-26"},{"lineNumber":145,"author":{"gitId":"tahsinhasem"},"content":"        if (object instanceof Event) {","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"tahsinhasem"},"content":"            Event t \u003d (Event) object;","lastModifiedDate":"2024-02-26"},{"lineNumber":147,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":148,"author":{"gitId":"tahsinhasem"},"content":"            boolean isDescriptionEqual \u003d t.getDescription().equals(this.getDescription());","lastModifiedDate":"2024-02-26"},{"lineNumber":149,"author":{"gitId":"tahsinhasem"},"content":"            boolean isFromTimeEqual \u003d t.getFromTime().equals(this.getFromTime());","lastModifiedDate":"2024-02-26"},{"lineNumber":150,"author":{"gitId":"tahsinhasem"},"content":"            boolean isToTimeEqual \u003d t.getToTime().equals(this.getToTime());","lastModifiedDate":"2024-02-26"},{"lineNumber":151,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":152,"author":{"gitId":"tahsinhasem"},"content":"            return isDescriptionEqual \u0026\u0026 isFromTimeEqual \u0026\u0026 isToTimeEqual;","lastModifiedDate":"2024-02-26"},{"lineNumber":153,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":154,"author":{"gitId":"tahsinhasem"},"content":"        return false;","lastModifiedDate":"2024-02-26"},{"lineNumber":155,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":156,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"tahsinhasem":156}},{"path":"src/main/java/dude/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":" * The Task class represents a task with a description and a status.","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    private final String description;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"     * Mark the task as done.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"     * Mark the task as undone.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"     * Get the description of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"     * @return The string description of the task.","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"        return this.description;","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"     * @return A string representation of the Task object.","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"tahsinhasem"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"tahsinhasem"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"tahsinhasem"},"content":"     * Method to get a LocalDateTime object by parsing a string.","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"tahsinhasem"},"content":"     * @param string The string representation of the date and time to be parsed into a LocalDateTime object.","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"tahsinhasem"},"content":"     *               \u003cp\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"tahsinhasem"},"content":"     *               String format should be or \"d/M/yyyy\" or \"d/M/yyyy H:m\".","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"tahsinhasem"},"content":"     * @return The LocalDateTime object parsed from the string.","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"tahsinhasem"},"content":"     * @throws DateTimeParseException If the date format is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"tahsinhasem"},"content":"    protected static LocalDateTime parseDate(String string) throws DateTimeParseException {","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"tahsinhasem"},"content":"        String dateTimePattern \u003d \"\\\\d{1,2}/\\\\d{1,2}/\\\\d{4} \\\\d{1,2}:\\\\d{2}\";","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"tahsinhasem"},"content":"        String datePattern \u003d \"\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}\";","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"tahsinhasem"},"content":"        if (string.matches(dateTimePattern)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"tahsinhasem"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy H:m\");","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"tahsinhasem"},"content":"            return LocalDateTime.parse(string, formatter);","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"tahsinhasem"},"content":"        } else if (string.matches(datePattern)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"tahsinhasem"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"tahsinhasem"},"content":"            LocalDate date \u003d LocalDate.parse(string, formatter);","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"tahsinhasem"},"content":"            return date.atStartOfDay();","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"tahsinhasem"},"content":"        } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"tahsinhasem"},"content":"            throw new DateTimeParseException(\"Invalid date format. Use d/M/yyyy or d/M/yyy H:m.\", string, 0);","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"tahsinhasem"},"content":"     * Method to format a LocalDateTime object into a string.","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"tahsinhasem"},"content":"     * @param date The LocalDateTime object to be formatted into a string.","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"tahsinhasem"},"content":"     * @return The string representation of the LocalDateTime object in \"MMM d, yyyy @ h:mma\" format.","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"tahsinhasem"},"content":"    protected static String formatDate(LocalDateTime date) {","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"tahsinhasem"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d, yyyy @ h:mma\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"tahsinhasem":98}},{"path":"src/main/java/dude/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.DudeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.TaskListFullException;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":" * The TaskList class handles keeping track of the list of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":" * It also provides various methods to interact with the list of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"public class TaskList {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"     * Static method to create a TaskList object from an ArrayList of Task objects.","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"     * @param tasks The ArrayList of Task objects to be converted into a TaskList object.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"     * @return The TaskList object created from the ArrayList of Task objects.","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"    public static TaskList from(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"        taskList.list.addAll(tasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"        return taskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"     * @param task The task to be added to the list of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"     * @throws TaskListFullException if the task list is full.","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"    public void add_task(Task task) throws TaskListFullException {","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"        if (list.size() \u003e\u003d 100) {","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"            throw new TaskListFullException(\"Sorry, the task list is full.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"        list.add(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"     * Removes a task from the list of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"     * @param taskID The id of the task to be removed from the list of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"     * @throws DudeException if the task id is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"    public void remove_task(int taskID) throws DudeException {","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"        if (taskID \u003e list.size() || taskID \u003c 1) {","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"            throw new DudeException(\"Sorry, the provided id is invalid.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"tahsinhasem"},"content":"        Task removed \u003d list.remove(taskID - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"tahsinhasem"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"tahsinhasem"},"content":"     * @param id The id of the task to be marked as done.","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"tahsinhasem"},"content":"     * @throws DudeException if the task id is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"tahsinhasem"},"content":"    public void mark_as_done(int id) throws DudeException {","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"tahsinhasem"},"content":"        if (id \u003e list.size() || id \u003c 1) {","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"tahsinhasem"},"content":"            throw new DudeException(\"Sorry, the provided id is invalid.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"tahsinhasem"},"content":"        list.get(id - 1).markAsDone();","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"tahsinhasem"},"content":"     * Marks a task as undone.","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"tahsinhasem"},"content":"     * @param id The id of the task to be marked as undone.","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"tahsinhasem"},"content":"     * @throws DudeException if the task id is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"tahsinhasem"},"content":"    public void mark_as_undone(int id) throws DudeException {","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"tahsinhasem"},"content":"        if (id \u003e list.size() || id \u003c 1) {","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"tahsinhasem"},"content":"            throw new DudeException(\"Sorry, the provided id is invalid.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"tahsinhasem"},"content":"        list.get(id - 1).markAsUndone();","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"tahsinhasem"},"content":"     * Finds tasks whose string representation matches with the given keyword.","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"tahsinhasem"},"content":"     * @param keyword The keyword to be used to find tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"tahsinhasem"},"content":"     * @return An ArrayList of Task objects that contain the keyword.","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"tahsinhasem"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"tahsinhasem"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"tahsinhasem"},"content":"        String taskString;","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"tahsinhasem"},"content":"        String keywordLowerCase \u003d keyword.toLowerCase();","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"tahsinhasem"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"tahsinhasem"},"content":"            taskString \u003d task.toString();","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"tahsinhasem"},"content":"            taskString \u003d taskString.toLowerCase();","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"tahsinhasem"},"content":"            if (taskString.contains(keywordLowerCase)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"tahsinhasem"},"content":"                result.add(task);","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"tahsinhasem"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"tahsinhasem"},"content":"        return result;","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"tahsinhasem"},"content":"     * Returns a deep copy of the list of tasks","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"tahsinhasem"},"content":"     * @return An ArrayList of Task objects","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"tahsinhasem"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"tahsinhasem"},"content":"        ArrayList\u003cTask\u003e copy \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"tahsinhasem"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"tahsinhasem"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"tahsinhasem"},"content":"                copy.add(new Deadline(task.getDescription(), ((Deadline) task).getBy()));","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"tahsinhasem"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"tahsinhasem"},"content":"                copy.add(new Event(task.getDescription(), ((Event) task).getFromTime(), ((Event) task).getToTime()));","lastModifiedDate":"2024-02-17"},{"lineNumber":120,"author":{"gitId":"tahsinhasem"},"content":"            } else if (task instanceof Todo) {","lastModifiedDate":"2024-02-17"},{"lineNumber":121,"author":{"gitId":"tahsinhasem"},"content":"                copy.add(new Todo(task.getDescription()));","lastModifiedDate":"2024-02-17"},{"lineNumber":122,"author":{"gitId":"tahsinhasem"},"content":"            } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":123,"author":{"gitId":"tahsinhasem"},"content":"                copy.add(new Task(task.getDescription()));","lastModifiedDate":"2024-02-17"},{"lineNumber":124,"author":{"gitId":"tahsinhasem"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":125,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":126,"author":{"gitId":"tahsinhasem"},"content":"        return copy;","lastModifiedDate":"2024-02-17"},{"lineNumber":127,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":128,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"tahsinhasem"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"tahsinhasem"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":134,"author":{"gitId":"tahsinhasem"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-17"},{"lineNumber":135,"author":{"gitId":"tahsinhasem"},"content":"        return list.size();","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":137,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":138,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":139,"author":{"gitId":"tahsinhasem"},"content":"     * Returns the task with the given id.","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"tahsinhasem"},"content":"     * @param taskID The id of the task to be returned.","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"tahsinhasem"},"content":"     * @return The task with the given id.","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"tahsinhasem"},"content":"     * @throws IndexOutOfBoundsException if the task id is invalid.","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":145,"author":{"gitId":"tahsinhasem"},"content":"    public Task getTask(int taskID) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-18"},{"lineNumber":146,"author":{"gitId":"tahsinhasem"},"content":"        if (taskID \u003c\u003d 0 || taskID \u003e list.size()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":147,"author":{"gitId":"tahsinhasem"},"content":"            throw new IndexOutOfBoundsException(\"Sorry, the provided id is invalid. \"","lastModifiedDate":"2024-02-27"},{"lineNumber":148,"author":{"gitId":"tahsinhasem"},"content":"                    + \"Use the list command to see the list of tasks.\");","lastModifiedDate":"2024-02-27"},{"lineNumber":149,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":150,"author":{"gitId":"tahsinhasem"},"content":"        return list.get(taskID - 1);","lastModifiedDate":"2024-02-18"},{"lineNumber":151,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":152,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":153,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":154,"author":{"gitId":"tahsinhasem"},"content":"     * Returns a string representation of the list of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":155,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":156,"author":{"gitId":"tahsinhasem"},"content":"     * @return A string representation of the list of tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":157,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":158,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":159,"author":{"gitId":"tahsinhasem"},"content":"    public String toString() {","lastModifiedDate":"2024-02-26"},{"lineNumber":160,"author":{"gitId":"tahsinhasem"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-26"},{"lineNumber":161,"author":{"gitId":"tahsinhasem"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-26"},{"lineNumber":162,"author":{"gitId":"tahsinhasem"},"content":"            //if it is the last task, do not add a new line","lastModifiedDate":"2024-02-26"},{"lineNumber":163,"author":{"gitId":"tahsinhasem"},"content":"            if (i \u003d\u003d list.size() - 1) {","lastModifiedDate":"2024-02-26"},{"lineNumber":164,"author":{"gitId":"tahsinhasem"},"content":"                result +\u003d (i + 1) + \". \" + list.get(i).toString();","lastModifiedDate":"2024-02-26"},{"lineNumber":165,"author":{"gitId":"tahsinhasem"},"content":"                break;","lastModifiedDate":"2024-02-26"},{"lineNumber":166,"author":{"gitId":"tahsinhasem"},"content":"            }","lastModifiedDate":"2024-02-26"},{"lineNumber":167,"author":{"gitId":"tahsinhasem"},"content":"            result +\u003d (i + 1) + \". \" + list.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-02-26"},{"lineNumber":168,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":169,"author":{"gitId":"tahsinhasem"},"content":"        return result;","lastModifiedDate":"2024-02-26"},{"lineNumber":170,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":171,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"tahsinhasem":171}},{"path":"src/main/java/dude/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidDescriptionException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"import dude.utils.Utils;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":" * The Todo class represents a task with a description.","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the Todo class.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"        super(description);","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"     * Static method to create a Todo object from parsing a string.","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"     * @param s The string to be parsed into a Todo object.","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"     * @return The Todo object created from the string.","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"     * @throws InvalidDescriptionException if the description of the todo is empty.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"    public static Todo from(String s) throws InvalidDescriptionException {","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"        //get rid of the command","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"        String description \u003d Utils.discardFirstWord(s.trim()).trim();","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"        if (!description.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"            return new Todo(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"            throw new InvalidDescriptionException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"     * Returns a string representation of the Todo object.","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"     * @return A string representation of the Todo object.","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"     * Returns whether the object is equal to this object.","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"     * @param object The object to be compared.","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"     * @return Whether the object is equal to this object.","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"tahsinhasem"},"content":"        if (object instanceof Todo) {","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"tahsinhasem"},"content":"            Todo t \u003d (Todo) object;","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"tahsinhasem"},"content":"            return t.getDescription().equals(this.getDescription());","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"tahsinhasem"},"content":"        return false;","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"tahsinhasem":64}},{"path":"src/main/java/dude/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.utils;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import java.io.File;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.Task;","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":" * The Storage class handles the loading and saving of task data to a storage file.","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"public class Storage {","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"    private final String filepath;","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"    private final String filename;","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"     * @param fileLocation The file path to the storage file.","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"    public Storage(String fileLocation) {","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"        this.filepath \u003d extractFilePath(fileLocation);","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"        this.filename \u003d extractFileName(fileLocation);","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"     * Creates a storage file if it does not exist.","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"     * @throws SecurityException if a security manager exists and its checkWrite method denies write access to the file.","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"    private void createStorageIfNotExists() throws IOException, SecurityException {","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"        File path \u003d new File(this.filepath);","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"        //create the directory if it does not exist","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"        if (!path.exists()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"            path.mkdirs();","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"        File file \u003d new File(this.filepath + this.filename);","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"        boolean fileExists \u003d file.exists();","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"        //save an empty task list to the file if it does not exist","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"        if (!fileExists) {","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"            saveTasks(new TaskList());","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"     * Deletes the storage file if it exists.","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"tahsinhasem"},"content":"     * @throws SecurityException if a security manager exists and its checkWrite method denies write access to the file.","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"tahsinhasem"},"content":"    public void deleteStorage() throws SecurityException {","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"tahsinhasem"},"content":"        File file \u003d new File(this.filepath + this.filename);","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"tahsinhasem"},"content":"        boolean fileExists \u003d file.exists();","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"tahsinhasem"},"content":"        if (fileExists) {","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"tahsinhasem"},"content":"            file.delete();","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"tahsinhasem"},"content":"     * Saves the task list to the storage file.","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"tahsinhasem"},"content":"     * @param taskList The task list to be saved.","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"tahsinhasem"},"content":"     * @throws IOException       if an I/O error occurs","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"tahsinhasem"},"content":"     * @throws SecurityException if a security manager exists and its checkWrite method denies write access to the file.","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"tahsinhasem"},"content":"    public void saveTasks(TaskList taskList) throws IOException, SecurityException {","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"tahsinhasem"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"tahsinhasem"},"content":"            FileOutputStream fos \u003d new FileOutputStream(this.filepath + this.filename);","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"tahsinhasem"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"tahsinhasem"},"content":"            oos.writeObject(taskList.getList());","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"tahsinhasem"},"content":"            oos.close();","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"tahsinhasem"},"content":"            fos.close();","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"tahsinhasem"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"tahsinhasem"},"content":"            throw new IOException(\"An error occurred while saving the task list.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"tahsinhasem"},"content":"     * Loads the task list from the storage file. Returns empty task list if no task data is found.","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"tahsinhasem"},"content":"     * @return TaskList","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"tahsinhasem"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-27"},{"lineNumber":95,"author":{"gitId":"tahsinhasem"},"content":"     * @throws ClassNotFoundException If the class of the object to be loaded was not found.","lastModifiedDate":"2024-02-27"},{"lineNumber":96,"author":{"gitId":"tahsinhasem"},"content":"     * @throws SecurityException If a security manager exists and its checkRead method denies read access to the file.","lastModifiedDate":"2024-02-27"},{"lineNumber":97,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"tahsinhasem"},"content":"    public TaskList loadTasks() throws IOException, ClassNotFoundException, SecurityException {","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"tahsinhasem"},"content":"        createStorageIfNotExists();","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"tahsinhasem"},"content":"        ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-02-27"},{"lineNumber":102,"author":{"gitId":"tahsinhasem"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"tahsinhasem"},"content":"            FileInputStream fis \u003d new FileInputStream(this.filepath + this.filename);","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"tahsinhasem"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"tahsinhasem"},"content":"            //noinspection unchecked","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"tahsinhasem"},"content":"            list \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"tahsinhasem"},"content":"            ois.close();","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"tahsinhasem"},"content":"            fis.close();","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"tahsinhasem"},"content":"            return TaskList.from(list);","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"tahsinhasem"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"tahsinhasem"},"content":"            throw new IOException(\"An error occurred while loading the task list.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"tahsinhasem"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"tahsinhasem"},"content":"            throw new ClassNotFoundException(\"The class of the object to be loaded was not found.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"tahsinhasem"},"content":"    private String extractFilePath(String fileLocation) {","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"tahsinhasem"},"content":"        String f \u003d fileLocation.trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"tahsinhasem"},"content":"        String[] parts \u003d f.split(\"/\");","lastModifiedDate":"2024-02-18"},{"lineNumber":122,"author":{"gitId":"tahsinhasem"},"content":"        String path \u003d \"\";","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"tahsinhasem"},"content":"        for (int i \u003d 0; i \u003c parts.length - 1; i++) {","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"tahsinhasem"},"content":"            path +\u003d parts[i] + \"/\";","lastModifiedDate":"2024-02-18"},{"lineNumber":125,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":126,"author":{"gitId":"tahsinhasem"},"content":"        return path;","lastModifiedDate":"2024-02-18"},{"lineNumber":127,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":129,"author":{"gitId":"tahsinhasem"},"content":"    private String extractFileName(String fileLocation) {","lastModifiedDate":"2024-02-18"},{"lineNumber":130,"author":{"gitId":"tahsinhasem"},"content":"        String f \u003d fileLocation.trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":131,"author":{"gitId":"tahsinhasem"},"content":"        String[] parts \u003d f.split(\"/\");","lastModifiedDate":"2024-02-18"},{"lineNumber":132,"author":{"gitId":"tahsinhasem"},"content":"        return parts[parts.length - 1];","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"tahsinhasem":134}},{"path":"src/main/java/dude/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.utils;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":" * The Ui class handles the user interface of the application.","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"public class Ui {","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"     * Displays the welcome message to system print stream.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"        String msg \u003d \"\\t-----------------------------------\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"                + \"\\t\\tHello! I\u0027m dude.Dude\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"                + \"\\t\\tWhat can I do for you?\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"                + \"\\t-----------------------------------\\n\";","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"        System.out.println(msg);","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"     * Display a message to system print stream.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"     * @param msg The message to be displayed.","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"    public void showMessage(String msg) {","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"        String temp \u003d msg;","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"        temp \u003d temp.replaceAll(\"\\n\", \"\\n\\t\\t\");","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"        temp \u003d \"\\t-----------------------------------\\n\"","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"                + \"\\t\\t\" + temp","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"                + \"\\n\\t-----------------------------------\";","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"        System.out.println(temp);","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"tahsinhasem":34}},{"path":"src/main/java/dude/utils/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.utils;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"/**","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":" * The utils class contains utility methods that are used throughout the application.","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":" */","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"public class Utils {","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"    // From chat GPT https://chat.openai.com/share/1848f5d2-1197-418e-86a9-bccdf69fc790","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"     * Discards the first word from the input string.","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"     * @param input The input string.","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"     * @return The input string with the first word discarded.","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"    public static String discardFirstWord(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"        // Split the string by whitespace","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"        // Check if there are at least two words","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"        if (words.length \u003e 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"            // Return the substring starting from the index of the second word","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"            return input.substring(input.indexOf(words[1]));","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"            // If there is only one word, return an empty string","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"            return \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"     * Counts the occurrences of a target string in an array of strings.","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"     * @param array  The array of strings.","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"     * @param target The target string.","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"     * @return The number of occurrences of the target string in the array.","lastModifiedDate":"2024-02-27"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"    public static int countOccurrences(String[] array, String target) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"        for (String str : array) {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"            if (str.equals(target)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"                count++;","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"        return count;","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"    /**","lastModifiedDate":"2024-02-27"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"     * Finds the index of the first occurrence of a target string in an array of strings.","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"     *","lastModifiedDate":"2024-02-27"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"     * @param array  The array of strings.","lastModifiedDate":"2024-02-27"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"     * @param target The target string.","lastModifiedDate":"2024-02-27"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"     * @return The index of the first occurrence of the target string in the array.","lastModifiedDate":"2024-02-27"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"     */","lastModifiedDate":"2024-02-27"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"    public static int findIndex(String[] array, String target) {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"        for (int i \u003d 0; i \u003c array.length; i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"            if (array[i].equals(target)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"                return i; // Return the index if the target string is found","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"tahsinhasem"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"tahsinhasem"},"content":"        return -1; // Return -1 if the target string is not found in the array","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"tahsinhasem":63}},{"path":"src/test/java/dude/DudeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"public class DudeTest {","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"tahsinhasem":4}},{"path":"src/test/java/dude/commands/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.commands;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.DudeException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.InvalidDescriptionException;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.TaskListFullException;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.Todo;","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    public void testParsingListCommand() {","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"        Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"        assert (command instanceof ListCommand);","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"    public void testParsingByeCommand() {","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"        String input \u003d \"bye\";","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"        Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"        assert (command instanceof ByeCommand);","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"    public void testParsingDeleteCommand() throws DudeException {","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"        //add a task to the tasklist","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"        taskList.add_task(Todo.from(\"todo test\"));","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"        Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"        assert (command instanceof DeleteCommand);","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"    public void testParsingTodoCommand() {","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"        String input \u003d \"todo test\";","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"tahsinhasem"},"content":"        Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"tahsinhasem"},"content":"        assert (command instanceof TodoCommand);","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"tahsinhasem"},"content":"    public void testParsingDeadlineCommand() {","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"tahsinhasem"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"tahsinhasem"},"content":"        String input \u003d \"deadline test /by 2020-12-12\";","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"tahsinhasem"},"content":"        Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"tahsinhasem"},"content":"        assert (command instanceof DeadlineCommand);","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"tahsinhasem"},"content":"    public void testParsingEventCommand() {","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"tahsinhasem"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"tahsinhasem"},"content":"        String input \u003d \"event test /from 2/12/2020 1800 /to 2/12/2020 1900\";","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"tahsinhasem"},"content":"        Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"tahsinhasem"},"content":"        assert (command instanceof EventCommand);","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"tahsinhasem"},"content":"    public void testParsingMarkCommand() throws InvalidDescriptionException, TaskListFullException {","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"tahsinhasem"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"tahsinhasem"},"content":"        taskList.add_task(Todo.from(\"todo test\"));","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"tahsinhasem"},"content":"        String input \u003d \"mark 1\";","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"tahsinhasem"},"content":"        Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"tahsinhasem"},"content":"        assert (command instanceof MarkCommand);","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"tahsinhasem"},"content":"    public void testParsingUnmarkCommand() throws InvalidDescriptionException, TaskListFullException {","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"tahsinhasem"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"tahsinhasem"},"content":"        taskList.add_task(Todo.from(\"todo test\"));","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"tahsinhasem"},"content":"        String input \u003d \"unmark 1\";","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"tahsinhasem"},"content":"        Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"tahsinhasem"},"content":"        assert (command instanceof UnmarkCommand);","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"tahsinhasem":89}},{"path":"src/test/java/dude/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"    public void testToString() {","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"        LocalDateTime dt \u003d LocalDateTime.parse(\"2020-12-12T18:00\");","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"        Deadline deadline \u003d new Deadline(\"test\", dt);","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"        assertEquals(\"[D][ ] test (by: Dec 12, 2020 @ 6:00PM)\", deadline.toString());","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"    public void testEqualsCorrectScenario() {","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"        LocalDateTime dt \u003d LocalDateTime.parse(\"2020-12-12T18:00\");","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"        Deadline deadline \u003d new Deadline(\"test\", dt);","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"        Deadline deadline2 \u003d new Deadline(\"test\", dt);","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"        assertEquals(deadline, deadline2);","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"    public void testEqualsWrongScenario() {","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"        LocalDateTime dt \u003d LocalDateTime.parse(\"2020-12-12T18:00\");","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"        Deadline deadline \u003d new Deadline(\"test\", dt);","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"        Deadline deadline2 \u003d new Deadline(\"test2\", dt);","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"        assertNotEquals(deadline, deadline2);","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"tahsinhasem":35}},{"path":"src/test/java/dude/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"public class EventTest {","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    public void testToString() {","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"2020-12-12T18:00\");","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"2020-12-18T20:00\");","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"        Event event \u003d new Event(\"test\", from, to);","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"        assertEquals(\"[E][ ] test (from: Dec 12, 2020 @ 6:00PM to: Dec 18, 2020 @ 8:00PM)\", event.toString());","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"    public void testEqualsCorrectScenario() {","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"2020-12-12T18:00\");","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"2020-12-18T20:00\");","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"        Event event \u003d new Event(\"test\", from, to);","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"        Event event2 \u003d new Event(\"test\", from, to);","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"        assertEquals(event, event2);","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"    public void testEqualsWrongScenario() {","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"2020-12-12T18:00\");","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"2020-12-18T20:00\");","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"        Event event \u003d new Event(\"test\", from, to);","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"        Event event2 \u003d new Event(\"test other description\", from, to);","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"        assertNotEquals(event, event2);","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"        LocalDateTime from2 \u003d LocalDateTime.parse(\"2020-12-10T18:00\");","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"        Event event3 \u003d new Event(\"test\", from2, to);","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"        assertNotEquals(event, event3);","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"        LocalDateTime to2 \u003d LocalDateTime.parse(\"2020-12-21T20:01\");","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"        Event event4 \u003d new Event(\"test\", from, to2);","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"        assertNotEquals(event, event4);","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"tahsinhasem":45}},{"path":"src/test/java/dude/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.tasks;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"    public void testToString() {","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"        assertEquals(todo.toString(), \"[T][ ] test\");","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"    public void testEqualsForSameDescription() {","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"        Todo todo \u003d new Todo(\"test description\");","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"        Todo todo2 \u003d new Todo(\"test description\");","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"        assertEquals(todo, todo2);","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"    public void testEqualsForDifferentDescription() {","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"        Todo todo \u003d new Todo(\"test description\");","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"        Todo todo2 \u003d new Todo(\"other description\");","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"        assertNotEquals(todo, todo2);","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"tahsinhasem":28}},{"path":"src/test/java/dude/utils/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"package dude.utils;","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"import dude.exceptions.TaskListFullException;","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.Task;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.TaskList;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"import dude.tasks.Todo;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"    @Test","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"    public void testSavingAndLoadingTasks() throws TaskListFullException {","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"        Storage storage \u003d new Storage(\"data/testdata.ser\");","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"        taskList.add_task(new Todo(\"test\"));","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"        taskList.add_task(new Todo(\"test2\"));","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"        taskList.add_task(new Todo(\"test3\"));","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"            assert (false);","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"tahsinhasem"},"content":"        TaskList loadedTaskList \u003d null;","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"tahsinhasem"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"tahsinhasem"},"content":"            loadedTaskList \u003d storage.loadTasks();","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"tahsinhasem"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"tahsinhasem"},"content":"            assert (false);","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"tahsinhasem"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"tahsinhasem"},"content":"        //checked if the loaded tasks from the","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"tahsinhasem"},"content":"        ArrayList\u003cTask\u003e expected \u003d taskList.getList();","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"tahsinhasem"},"content":"        ArrayList\u003cTask\u003e actual \u003d loadedTaskList.getList();","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"tahsinhasem"},"content":"        System.out.println(expected);","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"tahsinhasem"},"content":"        System.out.println(actual);","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"tahsinhasem"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"tahsinhasem"},"content":"        assertEquals(taskList.getList(), loadedTaskList.getList());","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"tahsinhasem"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"tahsinhasem"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"tahsinhasem":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tahsinhasem"},"content":"todo Do CS2103T ip work","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"tahsinhasem"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"tahsinhasem"},"content":"todo","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"tahsinhasem"},"content":"deadline CS2101 CA1 /by Monday","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"tahsinhasem"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"tahsinhasem"},"content":"deadline some other task","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"tahsinhasem"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"tahsinhasem"},"content":"deadline /by Monday","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"tahsinhasem"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"tahsinhasem"},"content":"event CS2103T tutorial /from 9am /to 11am","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"tahsinhasem"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"tahsinhasem"},"content":"event /from 9am /to 11am","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"tahsinhasem"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"tahsinhasem"},"content":"event CS2103T tutorial /to 11am","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"tahsinhasem"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"tahsinhasem"},"content":"event CS2103T tutorial /from 9am","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"tahsinhasem"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"event CS2103T tutorial","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"tahsinhasem"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"tahsinhasem"},"content":"event","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"tahsinhasem"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"tahsinhasem"},"content":"delete 1","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"tahsinhasem"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"tahsinhasem"},"content":"delete","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"tahsinhasem"},"content":"delete x","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"tahsinhasem"},"content":"list","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"tahsinhasem"},"content":"bye","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"tahsinhasem"},"content":"```","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"tahsinhasem":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tahsinhasem"},"content":"java -classpath ..\\bin dude.Dude \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tahsinhasem":1,"-":20}}]
