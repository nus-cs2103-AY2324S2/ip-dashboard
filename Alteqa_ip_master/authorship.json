[{"path":"src/main/java/hirwan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"public class hirwan {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"        String logo \u003d \"I\u0027m hirwan \\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"                + \"_________________________________\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"                + \"what can I do for you? \\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"                + \"_________________________________\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"        System.out.println(\"Hello! \" + logo);","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"        List\u003cString\u003e List \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"        List\u003cString\u003e type \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"//        List\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"        while (true) {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"            String text \u003d scanner.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"            boolean isList \u003d text.equals(\"list\");","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"            boolean mark \u003d text.startsWith(\"mark\");","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"            boolean unmark \u003d text.startsWith(\"unmark\");","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"            boolean todo \u003d text.startsWith(\"todo\");","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"            boolean deadline \u003d text.startsWith(\"deadline\");","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"            boolean event \u003d text.startsWith(\"event\");","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"            boolean delete \u003d text.startsWith(\"delete\");","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"            boolean bye \u003d text.equals(\"bye\");","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"            if (bye) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"            } else if (isList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"                for (String element : List) {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(List.indexOf(element) + 1 + element);","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"            } else if (todo) {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"                try {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task: \\n  \" + \"[T][ ] \" + text.substring(5));","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"                    List.add(\". \" + \"[T][ ] \" + text.substring(5));","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"//                    indexes.add(count);","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"                    type.add(\"[T]\");","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"                    count++;","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Error: Please enter a description for your todo command\");","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"            } else if (deadline) {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"                try {","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"                    String delimiter \u003d \" /by\";","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"                    int Index \u003d text.indexOf(delimiter);","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"                    String Day \u003d text.substring(Index + 5);","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"                    String item \u003d text.substring(9, Index);","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"                    List.add(\". \" + \"[D][ ] \" + item + \" (by: \" + Day + \")\");","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"//                    indexes.add(count);","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + \"[D][ ] \" + item + \" (by: \" + Day + \")\");","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"                    type.add(\"[D]\");","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"Alteqa"},"content":"                    count++;","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Error: Please enter a description or date for your deadline command\");","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"Alteqa"},"content":"            } else if (event) {","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"Alteqa"},"content":"                try {","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"Alteqa"},"content":"                    String delimiterstart \u003d \" /from\";","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"Alteqa"},"content":"                    String delimiterend \u003d \" /to\";","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"Alteqa"},"content":"                    int Indexstart \u003d text.indexOf(delimiterstart);","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"Alteqa"},"content":"                    int Indexend \u003d text.indexOf(delimiterend);","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"Alteqa"},"content":"                    String start \u003d text.substring(Indexstart + 7, Indexend);","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"Alteqa"},"content":"                    String end \u003d text.substring(Indexend + 5);","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"Alteqa"},"content":"                    String item \u003d text.substring(6, Indexstart);","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"Alteqa"},"content":"                    List.add(\". \" + \"[E][ ] \" + item + \" (from: \" + start + \" to: \" + end + \")\");","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"Alteqa"},"content":"//                    indexes.add(count);","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + \"[E][ ] \" + item + \" (from: \" + start + \" to: \" + end + \")\");","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"Alteqa"},"content":"                    type.add(\"[E]\");","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"Alteqa"},"content":"                    count++;","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"Alteqa"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Error: Please enter a description or date for your event to command\");","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"Alteqa"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"Alteqa"},"content":"            } else if (mark) {","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"Alteqa"},"content":"                try {","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"Alteqa"},"content":"                    String number \u003d text.substring(5);","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"Alteqa"},"content":"                    int numberint \u003d Integer.parseInt(number);","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"Alteqa"},"content":"                    String temp \u003d List.get(numberint - 1).substring(9);","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"Alteqa"},"content":"                    List.set(numberint - 1, \". \" + type.get(numberint - 1) + \"[X] \" + temp);","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + \"[X] \" + temp);","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"Alteqa"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Error: Please enter a valid index for marking!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Alteqa"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Error: Please enter a numerical index to mark!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"Alteqa"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"Alteqa"},"content":"            } else if (unmark) {","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"Alteqa"},"content":"                try {","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"Alteqa"},"content":"                    String number \u003d text.substring(7);","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"Alteqa"},"content":"                    int numberint \u003d Integer.parseInt(number);","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"Alteqa"},"content":"                    String temp \u003d List.get(numberint - 1).substring(9);","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"Alteqa"},"content":"                    List.set(numberint - 1, \". \" + type.get(numberint - 1) + \"[ ] \" + temp);","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet: \\n\" + \"[ ] \" + temp);","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"Alteqa"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Error: Please enter a valid index for unmarking!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"Alteqa"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Error: Please enter a numerical index to unmark!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"Alteqa"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"Alteqa"},"content":"            } else if (delete) {","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"Alteqa"},"content":"                try {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"Alteqa"},"content":"                    int numberint \u003d Integer.parseInt(text.substring(7)) - 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"Alteqa"},"content":"                            + \"  \" + List.get(numberint).substring(2) + \"\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"Alteqa"},"content":"                            + \"Now you have \" + (count - 2) + \" tasks in the list.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"Alteqa"},"content":"                    List.remove(numberint);","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"Alteqa"},"content":"                    type.remove(numberint);","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"Alteqa"},"content":"                    count--;","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"Alteqa"},"content":"//                    indexes.remove();","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"Alteqa"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Error: Please enter a valid index for deletion!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"Alteqa"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"Alteqa"},"content":"                    System.out.println(\"Error: Please enter a numerical index to delete!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"Alteqa"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"Alteqa"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"Alteqa"},"content":"//                System.out.println(\"added: \" + text);","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"Alteqa"},"content":"//                List.add(count + \". [ ][ ] \" + text);","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"Alteqa"},"content":"//                type.add(\"[ ]\");","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"Alteqa"},"content":"//                count++;","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"Alteqa"},"content":"                System.out.println(\"Error: I am sorry but I do not recognise this command\");","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"Alteqa"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"Alteqa"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Alteqa":130}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"deadline draw /by Sunday","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"cherry","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"apples","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"banana","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"event eat /from monday /to thursday","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"todo drive","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"mark 1","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"unmark 1","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"Alteqa":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"java -classpath ..\\bin hirwan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Alteqa":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"java -classpath ../bin hirwan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Alteqa":1,"-":37}}]
