[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"# TaskFlow.TaskFlow project template","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"3. After that, locate the `src/main/java/TaskFlow.TaskFlow.java` file, right-click it, and choose `Run TaskFlow.TaskFlow.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Wongqingyee":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"checkstyle {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"    archiveFileName \u003d \u0027TaskFlow.jar\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Wongqingyee":19,"-":40}},{"path":"data/archive.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"T |   | 2107 assignemnt 1","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"Wongqingyee":1}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"  | todo blahvblah","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"Wongqingyee":1}},{"path":"src/main/java/TaskFlow/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    private Text dialog;","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        displayPicture.setImage(img);;","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"    private void flip() {","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"     * To set the text alignment for the user dialog box.","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"     * @param pos The text alignment.","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"    private void setTextAlignment(TextAlignment pos) {","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"        dialog.setTextAlignment(pos);","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"Wongqingyee"},"content":"     * To get the user dialog box.","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"Wongqingyee"},"content":"     * @param text The user input message.","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"Wongqingyee"},"content":"     * @param img  The user image.","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"Wongqingyee"},"content":"     * @return The dialog box.","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"Wongqingyee"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"Wongqingyee"},"content":"        var userDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"Wongqingyee"},"content":"        userDialog.setTextAlignment(TextAlignment.RIGHT);","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"Wongqingyee"},"content":"        return userDialog;","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"Wongqingyee"},"content":"     * To get the chatbot dialog box.","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"Wongqingyee"},"content":"     * @param text The response to the user input.","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"Wongqingyee"},"content":"     * @param img  The chatbot image.","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"Wongqingyee"},"content":"     * @return The dialog box.","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"Wongqingyee"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"Wongqingyee"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"Wongqingyee"},"content":"        db.flip();","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"Wongqingyee"},"content":"        return db;","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Wongqingyee":88}},{"path":"src/main/java/TaskFlow/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":" * A launcher class to work around classpath issues.","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"public class Launcher {","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Wongqingyee":12}},{"path":"src/main/java/TaskFlow/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    private TaskFlow taskFlow \u003d new TaskFlow();","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * The start method is called when the application is launched. It initializes the","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * JavaFX stage, loads the main FXML file, sets up the scene, and displays the","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * main window with the associated controller.","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     * It also calls the greet method to display a welcome message.","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"     * @param stage The primary stage for the JavaFX application.","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"            Scene sc \u003d new Scene(ap);","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"            stage.setScene(sc);","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(taskFlow);","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"            stage.setTitle(\"TaskFlow\");","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"            stage.show();","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greet();","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Wongqingyee":41}},{"path":"src/main/java/TaskFlow/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"    private TaskFlow taskFlow;","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    private Image chatBotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/chatbot.jpg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"    public void setDuke(TaskFlow d) {","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"        taskFlow \u003d d;","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"        String response \u003d taskFlow.run(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        assert response !\u003d \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"                DialogBox.getDukeDialog(response, chatBotImage)","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"        );","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"     * Create a dialog box to display the welcome message.","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"    public void greet() {","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"        String response \u003d taskFlow.showGreetings();","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"                DialogBox.getDukeDialog(response, chatBotImage)","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"        );","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Wongqingyee":63}},{"path":"src/main/java/TaskFlow/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.command.*;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":" * The Parser class is responsible for parsing user input and converting it","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":" * into executable commands.","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * It recognizes different command types and returns the corresponding Command","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * objects.","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    private enum CommandType {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, ARCHIVE,","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"        UNARCHIVE, HELP","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     * @param userInput The user-entered command.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException When the command is invalid.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"        String[] inputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"            // handle case-insensitive","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"            CommandType c \u003d CommandType.valueOf(inputs[0].toUpperCase());","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"            switch (c) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"            case BYE:","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"                return new ExitCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"            case LIST:","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"                return parseListCommand(inputs);","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"            case HELP:","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"                return new HelpCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"            case DELETE:","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"                return parseDeleteCommand(inputs);","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"            case MARK:","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"                return parseMarkCommand(inputs);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"                return parseUnmarkCommand(inputs);","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"            case TODO:","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"                return parseToDoCommand(inputs);","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"                return parseDeadlineCommand(inputs);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"            case EVENT:","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"                return parseEventCommand(inputs);","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"            case FIND:","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"                return parseFindCommand(inputs);","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"            case ARCHIVE:","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"                return parseArchiveCommand(inputs);","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"            case UNARCHIVE:","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"                return parseUnarchiveCommand(inputs);","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"            default:","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"                return null;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"An error occurred: Invalid command.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 for a list of valid commands.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"Wongqingyee"},"content":"     * To check if the string array contains an empty string.","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user input.","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"Wongqingyee"},"content":"     * @return true if there is an empty string, false otherwise.","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"Wongqingyee"},"content":"    private static boolean containsEmptyString(String[] inputs) {","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"Wongqingyee"},"content":"        boolean isEmpty \u003d false;","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"Wongqingyee"},"content":"        for (String str : inputs) {","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"Wongqingyee"},"content":"            if (str.equals(\"\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"Wongqingyee"},"content":"                isEmpty \u003d true;","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"Wongqingyee"},"content":"        return isEmpty;","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"Wongqingyee"},"content":"     * Parses a todo command and returns the corresponding ToDoCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"Wongqingyee"},"content":"     * @return A ToDoCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the description of the todo is missing.","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"Wongqingyee"},"content":"    private static Command parseToDoCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1 || containsEmptyString(inputs)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"Wongqingyee"},"content":"            assert inputs.length \u003d\u003d 1 || containsEmptyString(inputs)","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"Wongqingyee"},"content":"                    : \"Description cannot be left blank\";","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"OOPS! The description of a todo cannot be left blank.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"Wongqingyee"},"content":"        String description \u003d inputs[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"Wongqingyee"},"content":"        return new ToDoCommand(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"Wongqingyee"},"content":"     * Parses a delete command and returns the corresponding DeleteCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"Wongqingyee"},"content":"     * @return A DeleteCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the index of the task to delete is missing.","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"Wongqingyee"},"content":"    private static Command parseDeleteCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1 || containsEmptyString(inputs)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"Wongqingyee"},"content":"            assert inputs.length \u003d\u003d 1 || containsEmptyString(inputs)","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"Wongqingyee"},"content":"                    : \"Index of tasks to be deleted cannot be left blank\";","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Please indicate the index of task you want to delete.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"Wongqingyee"},"content":"        int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"Wongqingyee"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"Wongqingyee"},"content":"     * Parses the user input to create a MarkCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"Wongqingyee"},"content":"     * @return A MarkCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the index is not provided.","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"Wongqingyee"},"content":"    private static Command parseMarkCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1 || containsEmptyString(inputs)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":128,"author":{"gitId":"Wongqingyee"},"content":"            assert inputs.length \u003d\u003d 1 || containsEmptyString(inputs)","lastModifiedDate":"2024-02-14"},{"lineNumber":129,"author":{"gitId":"Wongqingyee"},"content":"                    : \"Index of task to be marked cannot be left blank\";","lastModifiedDate":"2024-02-14"},{"lineNumber":130,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Please indicate the index of task you want to mark as done.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"Wongqingyee"},"content":"        int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"Wongqingyee"},"content":"        return new MarkCommand(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"Wongqingyee"},"content":"     * Parses the user input to create an UnmarkCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"Wongqingyee"},"content":"     * @return An UnmarkCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the index is not provided.","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"Wongqingyee"},"content":"    private static Command parseUnmarkCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1 || containsEmptyString(inputs)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":146,"author":{"gitId":"Wongqingyee"},"content":"            assert inputs.length \u003d\u003d 1 || containsEmptyString(inputs)","lastModifiedDate":"2024-02-14"},{"lineNumber":147,"author":{"gitId":"Wongqingyee"},"content":"                    : \"Index of tasks to be unmarked cannot be left blank\";","lastModifiedDate":"2024-02-14"},{"lineNumber":148,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Please indicate the index of task you want to mark as not done.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":149,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":150,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"Wongqingyee"},"content":"        int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"Wongqingyee"},"content":"        return new UnmarkCommand(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"Wongqingyee"},"content":"     * Parses the user input to create a DeadlineCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":159,"author":{"gitId":"Wongqingyee"},"content":"     * @return A DeadlineCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the description or date/time is missing in the input.","lastModifiedDate":"2024-02-04"},{"lineNumber":161,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":162,"author":{"gitId":"Wongqingyee"},"content":"    private static Command parseDeadlineCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":163,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1 || containsEmptyString(inputs)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":164,"author":{"gitId":"Wongqingyee"},"content":"            assert inputs.length \u003d\u003d 1 || containsEmptyString(inputs)","lastModifiedDate":"2024-02-14"},{"lineNumber":165,"author":{"gitId":"Wongqingyee"},"content":"                    : \"Description cannot be left blank\";","lastModifiedDate":"2024-02-14"},{"lineNumber":166,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"OOPS! The description of a deadline cannot be left blank.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":167,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":168,"author":{"gitId":"Wongqingyee"},"content":"        } else if (!inputs[1].contains(\"/by\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":169,"author":{"gitId":"Wongqingyee"},"content":"            assert !inputs[1].contains(\"/by\") : \"This is invalid format.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":170,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"OOPS! The date/time for the deadline cannot be left blank.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":171,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":172,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":173,"author":{"gitId":"Wongqingyee"},"content":"        String[] descriptions \u003d inputs[1].split(\"/by \");","lastModifiedDate":"2024-02-04"},{"lineNumber":174,"author":{"gitId":"Wongqingyee"},"content":"        return new DeadlineCommand(descriptions[0], descriptions[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":175,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":176,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":177,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":178,"author":{"gitId":"Wongqingyee"},"content":"     * Parses the user input to create an EventCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":179,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":180,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":181,"author":{"gitId":"Wongqingyee"},"content":"     * @return An EventCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":182,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the description or start/end time is missing in the input.","lastModifiedDate":"2024-02-04"},{"lineNumber":183,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":184,"author":{"gitId":"Wongqingyee"},"content":"    private static Command parseEventCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":185,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1 || containsEmptyString(inputs)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":186,"author":{"gitId":"Wongqingyee"},"content":"            assert inputs.length \u003d\u003d 1 || containsEmptyString(inputs)","lastModifiedDate":"2024-02-14"},{"lineNumber":187,"author":{"gitId":"Wongqingyee"},"content":"                    : \"Description cannot be left blank\";","lastModifiedDate":"2024-02-14"},{"lineNumber":188,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"OOPS! The description of an event cannot be left blank.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":189,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":190,"author":{"gitId":"Wongqingyee"},"content":"        } else if (!inputs[1].contains(\"/from\") \u0026\u0026 !inputs[1].contains(\"/to\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":191,"author":{"gitId":"Wongqingyee"},"content":"            assert !inputs[1].contains(\"/from\") \u0026\u0026 !inputs[1].contains(\"/to\")","lastModifiedDate":"2024-02-14"},{"lineNumber":192,"author":{"gitId":"Wongqingyee"},"content":"                    : \"Invalid format.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":193,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"OOPS! The start time and end time cannot be left blank.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":194,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":195,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":196,"author":{"gitId":"Wongqingyee"},"content":"        String[] descriptions \u003d inputs[1].split(\"/from|/to\");","lastModifiedDate":"2024-02-04"},{"lineNumber":197,"author":{"gitId":"Wongqingyee"},"content":"        return new EventCommand(descriptions[0], descriptions[1], descriptions[2]);","lastModifiedDate":"2024-02-04"},{"lineNumber":198,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":199,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":200,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":201,"author":{"gitId":"Wongqingyee"},"content":"     * Parses the user input to create a FindCommand for searching tasks by a keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":203,"author":{"gitId":"Wongqingyee"},"content":"     * @param inputs The string array containing the user inputs.","lastModifiedDate":"2024-02-04"},{"lineNumber":204,"author":{"gitId":"Wongqingyee"},"content":"     * @return A FindCommand for searching tasks by the specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":205,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the keyword is left blank.","lastModifiedDate":"2024-02-04"},{"lineNumber":206,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":207,"author":{"gitId":"Wongqingyee"},"content":"    public static Command parseFindCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":208,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1 || containsEmptyString(inputs)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":209,"author":{"gitId":"Wongqingyee"},"content":"            assert inputs.length \u003d\u003d 1 || containsEmptyString(inputs)","lastModifiedDate":"2024-02-14"},{"lineNumber":210,"author":{"gitId":"Wongqingyee"},"content":"                    : \"Keyword cannot be left blank\";","lastModifiedDate":"2024-02-14"},{"lineNumber":211,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"OOPS! The keyword to find cannot be left blank.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":212,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":213,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":214,"author":{"gitId":"Wongqingyee"},"content":"        return new FindCommand(inputs[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":215,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":216,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":217,"author":{"gitId":"Wongqingyee"},"content":"    public static Command parseArchiveCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":218,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1 || containsEmptyString(inputs)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":219,"author":{"gitId":"Wongqingyee"},"content":"            assert inputs.length \u003d\u003d 1 || containsEmptyString(inputs)","lastModifiedDate":"2024-02-21"},{"lineNumber":220,"author":{"gitId":"Wongqingyee"},"content":"                    : \"Index of tasks to be archived cannot be left blank\";","lastModifiedDate":"2024-02-21"},{"lineNumber":221,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Please indicate the index of task you want to archive.\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":222,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\\n\");","lastModifiedDate":"2024-02-21"},{"lineNumber":223,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":224,"author":{"gitId":"Wongqingyee"},"content":"        int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-02-21"},{"lineNumber":225,"author":{"gitId":"Wongqingyee"},"content":"        return new ArchiveCommand(index);","lastModifiedDate":"2024-02-21"},{"lineNumber":226,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":227,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":228,"author":{"gitId":"Wongqingyee"},"content":"    public static Command parseUnarchiveCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":229,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1 || containsEmptyString(inputs)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":230,"author":{"gitId":"Wongqingyee"},"content":"            assert inputs.length \u003d\u003d 1 || containsEmptyString(inputs)","lastModifiedDate":"2024-02-21"},{"lineNumber":231,"author":{"gitId":"Wongqingyee"},"content":"                    : \"Index of tasks to be archived cannot be left blank\";","lastModifiedDate":"2024-02-21"},{"lineNumber":232,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Please indicate the index of task you want to archive.\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":233,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please enter \u0027help\u0027 command to find out more.\\n\");","lastModifiedDate":"2024-02-21"},{"lineNumber":234,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":235,"author":{"gitId":"Wongqingyee"},"content":"        int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-02-21"},{"lineNumber":236,"author":{"gitId":"Wongqingyee"},"content":"        return new UnarchiveCommand(index);","lastModifiedDate":"2024-02-21"},{"lineNumber":237,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":238,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":239,"author":{"gitId":"Wongqingyee"},"content":"    public static Command parseListCommand(String[] inputs) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":240,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003d\u003d 1 || containsEmptyString(inputs)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":241,"author":{"gitId":"Wongqingyee"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-21"},{"lineNumber":242,"author":{"gitId":"Wongqingyee"},"content":"        } else if (inputs[1].equals(\"archive\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":243,"author":{"gitId":"Wongqingyee"},"content":"            return new ListArchiveCommand();","lastModifiedDate":"2024-02-21"},{"lineNumber":244,"author":{"gitId":"Wongqingyee"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":245,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Invalid command. Please try again.\\n\");","lastModifiedDate":"2024-02-21"},{"lineNumber":246,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":247,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":248,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":248}},{"path":"src/main/java/TaskFlow/TaskFlow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.command.Command;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * A Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class TaskFlow {","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    private static final String ARCHIVED_FILE_PATH \u003d \"./data/archive.txt\";","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    private Storage storageForTask;","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    private Storage storageForArchivedTask;","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    private TaskList archiveTasks;","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a Duke object with the specified file path for storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    public TaskFlow() {","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"        storageForTask \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"        storageForArchivedTask \u003d new Storage(ARCHIVED_FILE_PATH);","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"            tasks \u003d new TaskList(storageForTask.load());","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"            archiveTasks \u003d new TaskList(storageForArchivedTask.load());","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"     * Runs the Duke program, processing user commands until the \"bye\" command is entered.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"     * The user is prompted with a welcome message and can interact with the chatbot.","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"     * Recognized commands include list, mark, unmark, todo, deadline, event, and more.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"     * Further carry out the following functions based on the command entered.","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"    public String run(String userInput) {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"            response +\u003d ui.showLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"            Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"            response +\u003d c.execute(tasks, archiveTasks, ui, storageForTask,","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"                    storageForArchivedTask);","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"            response +\u003d ui.showError(e.getMessage());","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"        } finally {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"            response +\u003d ui.showLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"        return response;","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"     * A method to show the welcome message.","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"     * @return A welcome message.","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"Wongqingyee"},"content":"    public String showGreetings() {","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"Wongqingyee"},"content":"        return ui.showWelcomeMsg();","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Wongqingyee":67}},{"path":"src/main/java/TaskFlow/command/ArchiveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"public class ArchiveCommand extends Command {","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"    private int index;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"    public ArchiveCommand(int index) {","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the command based on the given parameters.","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks         The list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @param archiveTasks  The list of archived tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui            The Ui to interact with the user.","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage       The Storage to save tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     * @param archived      The storage to save the archived tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"    public String execute(TaskList tasks, TaskList archiveTasks, Ui ui,","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"                          Storage storage, Storage archived) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"        if (this.index \u003c\u003d tasks.getTaskSize() \u0026\u0026 this.index \u003e 0) {","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"            Task taskToArchive \u003d tasks.getTasks().get(index - 1);","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"            archiveTasks.add(taskToArchive);","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"            String s \u003d ui.showArchiveMsg(tasks.getTasks().get(this.index - 1),","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"                    archiveTasks.getTaskSize());","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"            tasks.delete(this.index);","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"            storage.saveTask(tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"            archived.saveTask(archiveTasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"            return s;","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Invalid index. \\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please provide a valid index within the range 1 to \"","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"                    + tasks.getTaskSize() + \".\" + \"\\n\");","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"Wongqingyee":44}},{"path":"src/main/java/TaskFlow/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to be executed by Duke.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * All specific command classes should extend this abstract class.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the command based on the given parameters.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks         The list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * @param archiveTasks  The list of archive tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui            The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage       The Storage to save tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * @param archived      The storage to save the archived tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"    public abstract String execute(TaskList tasks, TaskList archiveTasks, Ui ui,","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"                                   Storage storage, Storage archived) throws DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":26}},{"path":"src/main/java/TaskFlow/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.Deadline;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command that adds a deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    private Deadline deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a DeadlineCommand with the specified description and deadline date/time.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @param description    The description of the deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * @param by             The date/time by which the task should be completed.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"    public DeadlineCommand(String description, String by) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"        this.deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the DeadlineCommand by adding the created deadline task to the TaskList,","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * displaying a confirmation message, and saving the updated TaskList to storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * Saves the changes into the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks         The list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     * @param archiveTasks  The list of archive tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui            The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage       The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"     * @param archived      The storage to save the archived tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"    public String execute(TaskList tasks, TaskList archiveTasks, Ui ui,","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"                          Storage storage, Storage archived) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(deadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"        storage.saveTask(tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        return ui.showAddMsg(deadline, tasks.getTaskSize());","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":47}},{"path":"src/main/java/TaskFlow/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to delete a task from the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    private int index;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a DeleteCommand with the specified index of the task to be deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the DeleteCommand by removing the task at the specified index from the","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     * TaskList, displaying a deletion message, and saving the updated TaskList to storage.","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * Saves the changes into the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks         The list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * @param archiveTasks  The list of archive tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui            The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage       The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     * @param archived      The storage to save the archived tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"    public String execute(TaskList tasks, TaskList archiveTasks, Ui ui,","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"                          Storage storage, Storage archived) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"        if (this.index \u003c\u003d tasks.getTaskSize() \u0026\u0026 this.index \u003e 0) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"            String s \u003d ui.showDeleteMsg(tasks.getTasks().get(this.index - 1),","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"                    tasks.getTaskSize());","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"            tasks.delete(this.index);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"            storage.saveTask(tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"            return s;","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Invalid index. \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please provide a valid index within the range 1 to \"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"                    + tasks.getTaskSize() + \".\" + \"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":52}},{"path":"src/main/java/TaskFlow/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.Event;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to add an event task to the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    private Event event;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs an EventCommand with the specified description, start time, and end time.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"    public EventCommand(String description, String from, String to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"        this.event \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the EventCommand by adding the event task to the TaskList,","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * displaying an addition message, and saving the updated TaskList to storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * Saves the changes into the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks         The list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     * @param archiveTasks  The list of archive tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui            The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage       The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"     * @param archived      The storage to save the archived tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"    public String execute(TaskList tasks, TaskList archiveTasks, Ui ui,","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"                          Storage storage, Storage archived) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(event);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"        storage.saveTask(tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        return ui.showAddMsg(event, tasks.getTaskSize());","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":47}},{"path":"src/main/java/TaskFlow/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from the Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to exit the Duke program.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the ExitCommand by displaying a goodbye message to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks        The list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * @param archiveTasks The list of archive tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui           The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage      The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * @param archived     The storage to save the archived tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     * @return","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    public String execute(TaskList tasks, TaskList archiveTasks, Ui ui,","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"                          Storage storage, Storage archived) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"        return ui.showGoodbyeMsg();","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":30}},{"path":"src/main/java/TaskFlow/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from the Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to find tasks containing a specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    private String keyword;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the find command, searching for tasks with the specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks         The list of tasks to search.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     * @param archiveTasks  The list of archive tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui            The user interface for displaying messages.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage       The storage for saving tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     * @param archived      The storage to save the archived tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the keyword is not found in the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"    public String execute(TaskList tasks, TaskList archiveTasks, Ui ui,","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"                          Storage storage, Storage archived) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"        if (!tasks.findTasksByKeyword(keyword).isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"            return ui.showFindMsg(tasks.findTasksByKeyword(keyword));","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Keyword is not found.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":44}},{"path":"src/main/java/TaskFlow/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to display help information to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the HelpCommand by displaying the list of valid commands and the format","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"     * to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks         The list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param archiveTasks  The list of archive tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui            The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage       The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     * @param archived      The storage to save the archived tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    public String execute(TaskList tasks, TaskList archiveTasks, Ui ui,","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"                          Storage storage, Storage archived) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"        return ui.showHelpMsg();","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":30}},{"path":"src/main/java/TaskFlow/command/ListArchiveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"public class ListArchiveCommand extends Command {","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the command based on the given parameters.","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks         The list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"     * @param archiveTasks  The list of archived tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui            The Ui to interact with the user.","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage       The Storage to save tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"     * @param archived      The storage to save the archived tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"    public String execute(TaskList tasks, TaskList archiveTasks, Ui ui,","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"                          Storage storage, Storage archived) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        return ui.showList() + archiveTasks.list();","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"Wongqingyee":24}},{"path":"src/main/java/TaskFlow/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to display the list of tasks to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the ListCommand by displaying the list of tasks to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks         The list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * @param archiveTasks  The list of archived tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui            The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage       The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * @param archived      The storage to save the archived tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    public String execute(TaskList tasks, TaskList archiveTasks, Ui ui,","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"                          Storage storage, Storage archived) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"        return ui.showList() + tasks.list();","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":29}},{"path":"src/main/java/TaskFlow/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    private int index;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a MarkCommand with the specified index of the task to be marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The index of the tasks to be marked as done.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the MarkCommand by marking the specified task as done in the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     * Shows a message indicating the task has been marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * Saves the changes to the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks         The TaskList that holds the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * @param archiveTasks  The list of archived tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui            The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage       The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     * @param archived      The storage to save the archived tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"    public String execute(TaskList tasks, TaskList archiveTasks, Ui ui,","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"                          Storage storage, Storage archived) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"        if (this.index \u003c\u003d tasks.getTaskSize() \u0026\u0026 this.index \u003e 0) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"            tasks.mark(this.index);","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"            storage.saveTask(tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"            return ui.showMarkMsg(tasks.getTasks().get(this.index - 1));","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Invalid index. \"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please provide a valid index within the range 1 to \"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"                    + tasks.getTaskSize() + \".\");","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":50}},{"path":"src/main/java/TaskFlow/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.ToDo;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to add a ToDo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    private ToDo toDo;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a ToDoCommand with the specified description of the ToDo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"        this.toDo \u003d new ToDo(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the ToDoCommand by adding the specified ToDo task to the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * Shows a message indicating the task has been added.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     * Saves the changes into the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks         The TaskList that holds the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     * @param archiveTasks  The list of archived tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui            The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage       The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"     * @param archived      The storage to save the archived tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"    public String execute(TaskList tasks, TaskList archiveTasks, Ui ui,","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"                          Storage storage, Storage archived) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(toDo);","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"        storage.saveTask(tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        return ui.showAddMsg(toDo, tasks.getTaskSize());","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":45}},{"path":"src/main/java/TaskFlow/command/UnarchiveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"public class UnarchiveCommand extends Command {","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"    private int index;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"    public UnarchiveCommand(int index) {","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the command based on the given parameters.","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks         The TaskList that holds the list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * @param archiveTasks  The list of archived tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui            The Ui to interact with the user.","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage       The Storage to save tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"     * @param archived      The storage to save the archived tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"    public String execute(TaskList tasks, TaskList archiveTasks, Ui ui,","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"                          Storage storage, Storage archived) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"        if (this.index \u003c\u003d tasks.getTaskSize() \u0026\u0026 this.index \u003e 0) {","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"            Task taskToUnarchive \u003d archiveTasks.getTasks().get(index - 1);","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"            tasks.add(taskToUnarchive);","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"            String s \u003d ui.showUnarchiveMsg(archiveTasks.getTasks().get(this.index - 1),","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"                    archiveTasks.getTaskSize());","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"            archiveTasks.delete(this.index);","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"            storage.saveTask(tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"            archived.saveTask(archiveTasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"            return s;","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Invalid index. \\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please provide a valid index within the range 1 to \"","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"                    + archiveTasks.getTaskSize() + \".\" + \"\\n\");","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"Wongqingyee":45}},{"path":"src/main/java/TaskFlow/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * A class that inherits from Command class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    private int index;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs an UnmarkCommand with the specified index of the task to unmark.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The index of the task to unmark.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     * Executes the Unmark Command by setting the specified task as not done in","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     * the TaskList.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * Shows a message indicating the task has been unmarked.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     * Saves the changes into the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks         The TaskList that holds the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     * @param archiveTasks  The list of archived tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     * @param ui            The Ui to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     * @param storage       The Storage to save the tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"     * @param archived      The storage to save the archived tasks to a file.","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If there is an error while executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"    public String execute(TaskList tasks, TaskList archiveTasks, Ui ui,","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"                          Storage storage, Storage archived) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        if (this.index \u003c\u003d tasks.getTaskSize() \u0026\u0026 this.index \u003e 0) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"            tasks.unmark(this.index);","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"            storage.saveTask(tasks);","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"            return ui.showUnmarkMsg(tasks.getTasks().get(this.index - 1));","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Invalid index. \"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"                    + \"Please provide a valid index within the range 1 to \"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"                    + tasks.getTaskSize() + \".\");","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":51}},{"path":"src/main/java/TaskFlow/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.exception;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":" * Represents an exception specific to the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":" * It is thrown to indicate that there is an error or exceptional condition in the Duke application.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a DukeException with the specified detail message.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"     * @param message The error message of the exception.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Wongqingyee":17}},{"path":"src/main/java/TaskFlow/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import java.io.File;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":" * Represents the storage for tasks in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":" * Handles loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"public class Storage {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"    private static final String DIRECTORY_PATH \u003d \"./data/\";","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"    private String filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a Storage object with the specified file path for storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * @param filePath The file path for storing tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"     * Loads tasks from the specified file.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"     * @return ArrayList of tasks loaded from the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If an error occurs during the loading process.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"        // Create a new file if it doesn\u0027t exist","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"                throw new DukeException(\"Error creating a new File: \" + e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"            try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"                String line;","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"                    Task task \u003d Task.fromString(line);","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"                throw new DukeException(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"Wongqingyee"},"content":"     * Saves the tasks in the provided TaskList to the specified file.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If an error occurs during the saving process.","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"Wongqingyee"},"content":"    public void saveTask(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"Wongqingyee"},"content":"        File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"Wongqingyee"},"content":"        // Create a directory if it doesn\u0027t exist.","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"Wongqingyee"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Wongqingyee"},"content":"            directory.mkdirs();","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"Wongqingyee"},"content":"        // Write the tasks in the list into the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"Wongqingyee"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"Wongqingyee"},"content":"            ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"Wongqingyee"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"Wongqingyee"},"content":"                writer.write(task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"Wongqingyee"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"Wongqingyee"},"content":"            System.out.println(\"Tasks saved successfully.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"Wongqingyee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"Wongqingyee"},"content":"//    public void saveArchiveTask(ArrayList\u003cTask\u003e archiveTasks) throws DukeException {","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"Wongqingyee"},"content":"//        File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"Wongqingyee"},"content":"//","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"Wongqingyee"},"content":"//        // Create a directory if it doesn\u0027t exist.","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"Wongqingyee"},"content":"//        if (!directory.exists()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"Wongqingyee"},"content":"//            directory.mkdirs();","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"Wongqingyee"},"content":"//        }","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"Wongqingyee"},"content":"//","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"Wongqingyee"},"content":"//        // Write the tasks in the list into the file.","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"Wongqingyee"},"content":"//        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"Wongqingyee"},"content":"//            ArrayList\u003cTask\u003e taskList \u003d archiveTasks;","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"Wongqingyee"},"content":"//            for (Task archiveTask : taskList) {","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"Wongqingyee"},"content":"//                writer.write(archiveTask.toString());","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"Wongqingyee"},"content":"//                writer.newLine();","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"Wongqingyee"},"content":"//            }","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"Wongqingyee"},"content":"//            System.out.println(\"Archive task saved successfully.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"Wongqingyee"},"content":"//        } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"Wongqingyee"},"content":"//            throw new DukeException(\"Error saving task to file: \" + e.getMessage());","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"Wongqingyee"},"content":"//        }","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"Wongqingyee"},"content":"//    }","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":112}},{"path":"src/main/java/TaskFlow/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.task;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" * Represents a task with a deadline in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":" * It is a subclass of the Task class.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    protected String by;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a Deadline object with the specified description and deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"     * @param by           The deadline in the format \"yyyy-MM-dd hh:mma\".","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"     * @throws DukeException If the format for input date/time is incorrect.","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"            // Set up a DateTimeFormatter to parse the date/time input in the expected format.","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"            DateTimeFormatterBuilder builder \u003d new DateTimeFormatterBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"            builder.parseCaseInsensitive();","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"            builder.appendPattern(\"yyyy-MM-dd hh:mma\");","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"            DateTimeFormatter format \u003d builder.toFormatter();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"            this.dueDate \u003d LocalDateTime.parse(by, format);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"            throw new DukeException(\"Input date/time is not in expected format.\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"            + \"Please enter \u0027help\u0027 for more info.\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"     * Formats the provided due date using the pattern \"MMM dd yyyy \u0027at\u0027 hh:mma\".","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"     * @param dueDate The due date to be formatted.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"     * @return The formatted due date string.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"    public String formatter(LocalDateTime dueDate) {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"        DateTimeFormatter customFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy \u0027at\u0027 hh:mma\");","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"        return customFormat.format(dueDate);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"     * @return A string representing the Deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"        return \"D\" + \" | \" + super.toString() + \" | \" + formatter(this.dueDate);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Wongqingyee":63}},{"path":"src/main/java/TaskFlow/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.task;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":" * Represents an event task in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":" * It is a subclass of the Task class.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"    private String from;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"    private String to;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs an Event object with the specified description, start, and end times.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"     * @return A string representing the Event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"        return \"E\" + \" | \" + super.toString() + \" | \" + from + \"-\" + to;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Wongqingyee":34}},{"path":"src/main/java/TaskFlow/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.task;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * Represents a task in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * It can be a ToDo, Deadline, or Event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    public Task() {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     * @return A string representing the status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"     * Converts a string representation of a task into a Task object.","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"     * @param task A string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"     * @return A Task object parsed from the input string.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"    public static Task fromString(String task) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"        String[] inputs \u003d task.split(\" \\\\| \", 4);","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"        String type \u003d inputs[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"        String status \u003d inputs[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"        String description \u003d inputs[2];","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"        String date \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Wongqingyee"},"content":"        if (inputs.length \u003e 3) {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Wongqingyee"},"content":"            date \u003d inputs[3];","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Wongqingyee"},"content":"        switch (type) {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Wongqingyee"},"content":"        case \"T\":","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Wongqingyee"},"content":"            ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Wongqingyee"},"content":"            if (status.equals(\"X\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Wongqingyee"},"content":"                todo.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Wongqingyee"},"content":"            return todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Wongqingyee"},"content":"        case \"D\":","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Wongqingyee"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy \u0027at\u0027 hh:mma\");","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Wongqingyee"},"content":"            LocalDateTime d \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Wongqingyee"},"content":"            DateTimeFormatter customFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mma\");","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Wongqingyee"},"content":"            String formatted \u003d customFormat.format(d);","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Wongqingyee"},"content":"            Deadline dl \u003d new Deadline(description, formatted);","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Wongqingyee"},"content":"            if (status.equals(\"X\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Wongqingyee"},"content":"                dl.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Wongqingyee"},"content":"            return dl;","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Wongqingyee"},"content":"        case \"E\":","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Wongqingyee"},"content":"            String[] timeDate \u003d date.split(\"-\");","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"Wongqingyee"},"content":"            Event e \u003d new Event(description, timeDate[0], timeDate[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"Wongqingyee"},"content":"            if (status.equals(\"X\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Wongqingyee"},"content":"                e.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Wongqingyee"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"Wongqingyee"},"content":"            return e;","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Wongqingyee"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"Wongqingyee"},"content":"            return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"Wongqingyee"},"content":"     * Checks if the task\u0027s description contains the specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"Wongqingyee"},"content":"     * @param keyword The keyword to search for in the task\u0027s description.","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"Wongqingyee"},"content":"     * @return true if the description contains the keyword, false otherwise.","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"Wongqingyee"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"Wongqingyee"},"content":"        return description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"Wongqingyee"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"Wongqingyee"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"Wongqingyee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"Wongqingyee"},"content":"        return getStatusIcon() + \" | \" + description;","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Wongqingyee":117}},{"path":"src/main/java/TaskFlow/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.task;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":" * Represents a list of tasks in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"     * Deletes a task from the task list based on its index.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"    public void delete(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"    public String list() {","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"        String lists \u003d IntStream.range(0, tasks.size())","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"                .mapToObj(i -\u003e (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\")","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"        return lists;","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"     * Marks a task as done based on its index.","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"Wongqingyee"},"content":"    public void mark(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Wongqingyee"},"content":"        tasks.get(index - 1).markAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"Wongqingyee"},"content":"     * Marks a task as undone based on its index.","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The index of the task to be marked as undone.","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"Wongqingyee"},"content":"    public void unmark(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"Wongqingyee"},"content":"        tasks.get(index - 1).markAsUndone();","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"Wongqingyee"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"Wongqingyee"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"Wongqingyee"},"content":"    public int getTaskSize() {","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"Wongqingyee"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"Wongqingyee"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"Wongqingyee"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"Wongqingyee"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"Wongqingyee"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"Wongqingyee"},"content":"     * Gets the description of a task based on its index.","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The index of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"Wongqingyee"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"Wongqingyee"},"content":"    public String getTaskDescription(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"Wongqingyee"},"content":"        return this.tasks.get(index).description;","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"Wongqingyee"},"content":"     * Finds tasks in the list that contain the specified keyword in their descriptions.","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"Wongqingyee"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"Wongqingyee"},"content":"     * @return An ArrayList of tasks containing the specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"Wongqingyee"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"Wongqingyee"},"content":"        ArrayList\u003cTask\u003e matchingTask \u003d tasks.stream()","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"Wongqingyee"},"content":"                .filter(task -\u003e task.containsKeyword(keyword))","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"Wongqingyee"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"Wongqingyee"},"content":"        return matchingTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":117}},{"path":"src/main/java/TaskFlow/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.task;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":" * Represents a todo task in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a todo task with the given description.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"     * @return The string representation of the todo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"        return \"T\" + \" | \" + super.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Wongqingyee":26}},{"path":"src/main/java/TaskFlow/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":" * The UI component for the Decoder.","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":" * Handles interactions with the user, such as reading commands and displaying messages.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"     * Constructs a Ui object and initializes the Scanner for user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    public Ui() {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"     * Prints the welcome message when the chatbot starts.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"     * @return A welcome message.","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"    public String showWelcomeMsg() {","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"        return \"Welcome to TaskFlow!\\n\" + \"I am your virtual assistant, Taskie!\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"     * Prints the goodbye message when the \u0027bye\u0027 command is entered.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"     * @return A goodbye message.","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"    public String showGoodbyeMsg() {","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"        return \"Goodbye. Have a great day ahead!\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"     * Prints a message indicating that a task has been added successfully.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"     * @param task  The task that has been added.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"     * @param index The current number of tasks in the list.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"     * @return A message indicating that a task has been added successfully.","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"    public String showAddMsg(Task task, int index) {","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"        return \"Got it. I\u0027ve added this task: \\n\" + task.toString() + \"\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"                + String.format(\"Now you have %d tasks in the list.\\n\", index);","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"     * Prints a message indicating that a task has been deleted successfully.","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"     * @param deletedTask The task that has been deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"     * @param index       The current number of tasks in the list.","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Wongqingyee"},"content":"     * @return A message indicating that a task has been deleted successfully.","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Wongqingyee"},"content":"    public String showDeleteMsg(Task deletedTask, int index) {","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Wongqingyee"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + deletedTask.toString() + \"\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"Wongqingyee"},"content":"                + String.format(\"Now you have %d tasks in the list.\\n\", (index - 1));","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Wongqingyee"},"content":"     * Prints a message indicating that a task has been marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"Wongqingyee"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"Wongqingyee"},"content":"     * @return a message indicating that a task has been marked as done.","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Wongqingyee"},"content":"    public String showMarkMsg(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"Wongqingyee"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + task.toString() + \"\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"Wongqingyee"},"content":"     * Prints a message indicating that a task has been marked as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"Wongqingyee"},"content":"     * @param task The task that has been marked as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"Wongqingyee"},"content":"     * @return a message indicating that a task has been marked as not done.","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"Wongqingyee"},"content":"    public String showUnmarkMsg(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"Wongqingyee"},"content":"        return \"OK, I\u0027ve marked this task as not done yet: \\n\" + task.toString() + \"\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"Wongqingyee"},"content":"     * Prints out a list of available commands.","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"Wongqingyee"},"content":"     * @return A list of available commands.","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"Wongqingyee"},"content":"    public String showHelpMsg() {","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"Wongqingyee"},"content":"        return \"bye: Terminate the program.\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"Wongqingyee"},"content":"                + \"list: Display the list of tasks.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"Wongqingyee"},"content":"                + \"mark \u003cindex\u003e: Mark a task as done.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"Wongqingyee"},"content":"                + \"unmark \u003cindex\u003e: Mark a task as not done.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"Wongqingyee"},"content":"                + \"todo \u003cdescription\u003e: Add a todo task.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"Wongqingyee"},"content":"                + \"deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd hh:mma\u003e: Add a deadline task.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"Wongqingyee"},"content":"                + \"event \u003cdescription\u003e /from \u003cstartDate\u003e /to \u003cendDate\u003e: Add an event task.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"Wongqingyee"},"content":"                + \"find \u003ckeyword\u003e: Find a list of tasks that match with the keyword.\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"Wongqingyee"},"content":"     * Prints an error message.","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"Wongqingyee"},"content":"     * @param e The error message to be displayed.","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"Wongqingyee"},"content":"     * @return the error message.","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"Wongqingyee"},"content":"    public String showError(String e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"Wongqingyee"},"content":"        return e;","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"Wongqingyee"},"content":"     * Prints a message indicating the start of the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"Wongqingyee"},"content":"     * @return A message indicating the start of the task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"Wongqingyee"},"content":"    public String showList() {","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"Wongqingyee"},"content":"        return \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"Wongqingyee"},"content":"     * Prints a line separator.","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":124,"author":{"gitId":"Wongqingyee"},"content":"     * @return A line separator.","lastModifiedDate":"2024-02-11"},{"lineNumber":125,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"Wongqingyee"},"content":"    public String showLine() {","lastModifiedDate":"2024-02-11"},{"lineNumber":127,"author":{"gitId":"Wongqingyee"},"content":"        return \"----------------------------------------------------\"","lastModifiedDate":"2024-02-11"},{"lineNumber":128,"author":{"gitId":"Wongqingyee"},"content":"                + \"\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":129,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"Wongqingyee"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"Wongqingyee"},"content":"     * Prints a list of tasks that match the specified keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"Wongqingyee"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"Wongqingyee"},"content":"     * @param matchingTasks The list of tasks that match the keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"Wongqingyee"},"content":"     * @return a list of matching tasks.","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"Wongqingyee"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"Wongqingyee"},"content":"    public String showFindMsg(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":138,"author":{"gitId":"Wongqingyee"},"content":"        String s \u003d \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":139,"author":{"gitId":"Wongqingyee"},"content":"        s +\u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":140,"author":{"gitId":"Wongqingyee"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"Wongqingyee"},"content":"            s +\u003d (i + 1) + \".\" + matchingTasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":142,"author":{"gitId":"Wongqingyee"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"Wongqingyee"},"content":"        return s;","lastModifiedDate":"2024-02-11"},{"lineNumber":144,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":146,"author":{"gitId":"Wongqingyee"},"content":"    public String showArchiveMsg(Task task, int index) {","lastModifiedDate":"2024-02-21"},{"lineNumber":147,"author":{"gitId":"Wongqingyee"},"content":"        return \"This task has been archived successfully!\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":148,"author":{"gitId":"Wongqingyee"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":149,"author":{"gitId":"Wongqingyee"},"content":"                + String.format(\"Now you have %d tasks in the archive list.\\n\", index)","lastModifiedDate":"2024-02-21"},{"lineNumber":150,"author":{"gitId":"Wongqingyee"},"content":"                + \"\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":151,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":152,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":153,"author":{"gitId":"Wongqingyee"},"content":"    public String showUnarchiveMsg(Task task, int index) {","lastModifiedDate":"2024-02-21"},{"lineNumber":154,"author":{"gitId":"Wongqingyee"},"content":"        return \"This task has been unarchived successfully!\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":155,"author":{"gitId":"Wongqingyee"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":156,"author":{"gitId":"Wongqingyee"},"content":"                + String.format(\"Now you have %d tasks in the archive list.\\n\", (index - 1))","lastModifiedDate":"2024-02-21"},{"lineNumber":157,"author":{"gitId":"Wongqingyee"},"content":"                + \"\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":158,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":159,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":159}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #DFEFF0;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"      \u003cText fx:id\u003d\"dialog\" text\u003d\"Text\" wrappingWidth\u003d\"250.0\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"      \u003c/Text\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"            \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Wongqingyee":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"440.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"TaskFlow.MainWindow\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"363.0\" promptText\u003d\"Please enter your command!\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"            \u003cFont size\u003d\"13.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"364.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #F8F2DA;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"ALWAYS\" hvalue\u003d\"1.0\" prefHeight\u003d\"558.0\" prefWidth\u003d\"440.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" accessibleRole\u003d\"NODE\" prefHeight\u003d\"546.0\" prefWidth\u003d\"426.0\" style\u003d\"-fx-background-color: #C0C0C0;\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"Wongqingyee":23}},{"path":"src/test/java/TaskFlow/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"    public void execute_validIndex_success() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"todo smtg\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"event meeting /from Monday 6pm /to 7pm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"deadline ip /by 2024-02-05 06:00pm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"        TaskList archiveTasks \u003d new TaskList();","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"        Storage archived \u003d new Storage(\"./data/archive.txt\");","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"        // Deleting task at index 2","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"        Command deleteCommand \u003d new DeleteCommand(2);","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"        deleteCommand.execute(tasks, archiveTasks, ui, storage, archived);","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"        // After deletion, only 2 tasks should remain","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(2, tasks.getTaskSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(\"todo smtg\", tasks.getTaskDescription(0));","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(\"deadline ip /by 2024-02-05 06:00pm\", tasks.getTaskDescription(1));","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"    public void execute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"todo smtg\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"Task 2\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"deadline ip /by 2024-02-05 06:00pm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"        TaskList archiveTasks \u003d new TaskList();","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"        Storage archived \u003d new Storage(\"./data/archive.txt\");","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"        // Deleting task at invalid index 0","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"        Command deleteCommand \u003d new DeleteCommand(0);","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"        // The execution of the command should throw a DukeException","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"        assertThrows(DukeException.class,","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"                () -\u003e deleteCommand.execute(tasks, archiveTasks, ui, storage, archived));","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":58}},{"path":"src/test/java/TaskFlow/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    public void execute_validIndex_taskMarkedSuccessfully() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"        int validIndex \u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        Task taskToMark \u003d new Task(\"todo blahvblah\");","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(taskToMark);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"        TaskList task \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"        TaskList archiveTasks \u003d new TaskList();","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"        Storage archived \u003d new Storage(\"./data/archive.txt\");","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"        MarkCommand markCommand \u003d new MarkCommand(validIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"        markCommand.execute(task, archiveTasks, ui, storage, archived);","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(\"X\", taskToMark.getStatusIcon());","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(tasks, task.getTasks());","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"    public void execute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"        int invalidIndex \u003d 0;","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"todo blahvblah\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        TaskList task \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"        TaskList archiveTasks \u003d new TaskList();","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"        Storage archived \u003d new Storage(\"./data/archive.txt\");","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"        // Create MarkCommand and execute, assert DukeException is thrown","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"        MarkCommand markCommand \u003d new MarkCommand(invalidIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"        DukeException dukeException \u003d assertThrows(DukeException.class, (","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"                ) -\u003e markCommand.execute(task, archiveTasks, ui, storage, archived));","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"        // Verify that the exception message is as expected","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(\"Invalid index. Please provide a valid index within the range 1 to 1.\",","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"                dukeException.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":58}},{"path":"src/test/java/TaskFlow/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"package TaskFlow.command;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.exception.DukeException;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.storage.Storage;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.Task;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.task.TaskList;","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"Wongqingyee"},"content":"import TaskFlow.ui.Ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Wongqingyee"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Wongqingyee"},"content":"    public void execute_validIndex_taskUnmarkedSuccessfully() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Wongqingyee"},"content":"        int validIndex \u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Wongqingyee"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Wongqingyee"},"content":"        Task taskToMark \u003d new Task(\"todo blahvblah\");","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(taskToMark);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Wongqingyee"},"content":"        TaskList task \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Wongqingyee"},"content":"        TaskList archiveTasks \u003d new TaskList();","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"Wongqingyee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Wongqingyee"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Wongqingyee"},"content":"        Storage archived \u003d new Storage(\"./data/archive.txt\");","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Wongqingyee"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(validIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Wongqingyee"},"content":"        unmarkCommand.execute(task, archiveTasks, ui, storage, archived);","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(\" \", taskToMark.getStatusIcon());","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(tasks, task.getTasks());","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Wongqingyee"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Wongqingyee"},"content":"    public void execute_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Wongqingyee"},"content":"        int invalidIndex \u003d 0;","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Wongqingyee"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Wongqingyee"},"content":"        tasks.add(new Task(\"todo blahvblah\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Wongqingyee"},"content":"        TaskList task \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Wongqingyee"},"content":"        TaskList archiveTasks \u003d new TaskList();","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"Wongqingyee"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Wongqingyee"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Wongqingyee"},"content":"        Storage archived \u003d new Storage(\"./data/archive.txt\");","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Wongqingyee"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(invalidIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Wongqingyee"},"content":"        DukeException dukeException \u003d assertThrows(DukeException.class, (","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"Wongqingyee"},"content":"        ) -\u003e unmarkCommand.execute(task, archiveTasks, ui, storage, archived));","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"Wongqingyee"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Wongqingyee"},"content":"        // Verify that the exception message is as expected","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Wongqingyee"},"content":"        assertEquals(\"Invalid index. Please provide a valid index within the range 1 to 1.\",","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Wongqingyee"},"content":"                dukeException.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Wongqingyee"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Wongqingyee"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Wongqingyee":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Wongqingyee"},"content":"todo grocery shopping","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Wongqingyee"},"content":"event group meeting /from 2pm /to 3pm","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Wongqingyee"},"content":"deadline ip /by 25 Jan 23:59","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Wongqingyee"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Wongqingyee"},"content":"todo","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Wongqingyee"},"content":"deadline ip","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Wongqingyee"},"content":"event Career Fair","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Wongqingyee"},"content":"help","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Wongqingyee"},"content":"delete 1","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Wongqingyee"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Wongqingyee":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Wongqingyee"},"content":"java -classpath ..\\bin TaskFlow.TaskFlow \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Wongqingyee":1,"-":20}}]
