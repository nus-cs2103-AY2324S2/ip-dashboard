[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"checkstyle {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"    archiveBaseName \u003d \"Fredricksen.jar\"","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zack-Tay":20,"-":42}},{"path":"data/Fredricksen.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"type: T isDone: false content: todo project","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"type: T isDone: false content: todo carwash","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"type: T isDone: false content: todo car wash","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"# Fredricksen","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"Welcome to Fredricksen\u0027s (Chat Bot) User Guide! This Chat Bot allows you to manage your tasks through a To-Do list.","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"It makes use of a few key commands, a Command Line Interface, coupled with a nice Graphical User Interface to enhance user\u0027s experience.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"## Content Page","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"1. [Getting Started](#1-getting-started)","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"2. [List of Commands](#2-list-of-commands)","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"3. [Handling of Errors/Invalid input format](#3-handling-of-errorsinvalid-input-format)","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"4. [Storage](#4-storage)","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"5. [Command Summary](#5-command-summary)","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"## 1. Getting Started","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"1. Ensure that you have installed [java 11](https://www.oracle.com/java/technologies/javase/jdk11-archive-downloads.html) locally on your device.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"2. Download the latest version of Fredricksen Chat Bot [here.]()","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"3. Add this to a folder of your choice.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"4. Using the command terminal on your device, go into the directory with the JAR file that you have downloaded in step 2.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"5. Run the command ``` java -jar Fredricksen.jar ```","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"6. A window will pop up and you can use your chat bot through the input text field box!","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"## 2. List of Commands","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"### List of available commands","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"**Add tasks commands**","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"1. [ToDo](#todo)","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"2. [Deadline](#deadline)","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"3. [Event](#event)","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"**Task list commands**","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"1. [List](#list)","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"2. [Mark](#mark)","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"3. [Unmark](#unmark)","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"4. [Delete](#delete)","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"5. [Find](#find)","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"**Utility command**","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"1. [Help](#help)","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"2. [Bye](#bye)","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"## ToDo","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"Usage: todo _TASK-DESCRIPTION_","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"**What it does**","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"Adds a todo task to the current list of tasks. Description should highlight the task to be completed.","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"**Example Usage**","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"``` todo car wash ```","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"## Deadline","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"Usage: deadline _TASK-DESCRIPTION_ /by _TASK_COMPLETED_BY_","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"**What it does**","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"Adds a deadline task to the current list of tasks. Description should highlight the task to be completed.","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"**_Important_**","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"_TASK_COMPLETED_BY_ should be in Date or DateTime format.","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"Example: ","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"19/2/2024 1900 to represent Feb 19, 2024 7pm.","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"19/2/2024 to represent Feb 19, 2024.","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"**Example Usage**","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"``` deadline project /by 19/2/2024 1900 ```","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"Zack-Tay"},"content":"``` deadline project /by 19/2/2024 ```","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Zack-Tay"},"content":"## Event","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Zack-Tay"},"content":"Usage: event _TASK-DESCRIPTION_ /from _TASK_START_DATE_ /to _TASK_END_DATE_","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"Zack-Tay"},"content":"**What it does**","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"Zack-Tay"},"content":"Adds an event task to the current list of tasks. Description should highlight the task to be completed.","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"Zack-Tay"},"content":"**_Important_**","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"Zack-Tay"},"content":"_TASK_START_DATE_ \u0026 _TASK_END_DATE_ should be in Date or DateTime format.","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"Zack-Tay"},"content":"Example:","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"Zack-Tay"},"content":"19/2/2024 1900 to represent Feb 19, 2024 7pm.","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"Zack-Tay"},"content":"19/2/2024 to represent Feb 19, 2024.","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"Zack-Tay"},"content":"**Example Usage**","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"Zack-Tay"},"content":"``` event project /from 18/2/2024 1900 /to 19/2/2024 ```","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"Zack-Tay"},"content":"``` event project /from 18/2/2024 /to 19/2/2024 2000 ```","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"Zack-Tay"},"content":"``` event project /from 18/2/2024 1900 /to 19/2/2024 2000 ```","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"Zack-Tay"},"content":"## List","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"Zack-Tay"},"content":"Usage: list","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"Zack-Tay"},"content":"**What it does**","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"Zack-Tay"},"content":"List out all the current tasks in the list of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"Zack-Tay"},"content":"**Example Usage**","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"Zack-Tay"},"content":"``` list ```","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"Zack-Tay"},"content":"## Mark","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"Zack-Tay"},"content":"Usage: ","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"Zack-Tay"},"content":"1. mark _INDEX_IN_LIST_","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"Zack-Tay"},"content":"2. mark all","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"Zack-Tay"},"content":"**What it does**","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"Zack-Tay"},"content":"Usage 1 marks the task at that index in the list as done.","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"Zack-Tay"},"content":"Usage 2 marks all the current tasks in the list as done.","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"Zack-Tay"},"content":"**Example Usage**","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"Zack-Tay"},"content":"``` mark 3 ```","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"Zack-Tay"},"content":"``` mark all ```","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"Zack-Tay"},"content":"## Unmark","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"Zack-Tay"},"content":"Usage:","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"Zack-Tay"},"content":"1. unmark _INDEX_IN_LIST_","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"Zack-Tay"},"content":"2. unmark all","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"Zack-Tay"},"content":"**What it does**","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"Zack-Tay"},"content":"Usage 1 unmarks the task at that index in the list as undone.","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"Zack-Tay"},"content":"Usage 2 unmarks all the current tasks in the list as undone.","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"Zack-Tay"},"content":"**Example Usage**","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"Zack-Tay"},"content":"``` unmark 3 ```","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"Zack-Tay"},"content":"``` unmark all ```","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"Zack-Tay"},"content":"## Delete","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"Zack-Tay"},"content":"Usage:","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"Zack-Tay"},"content":"1. delete _INDEX_IN_LIST_","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"Zack-Tay"},"content":"2. delete all","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"Zack-Tay"},"content":"**What it does**","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"Zack-Tay"},"content":"Usage 1 deletes the task at that index in the list from the list.","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"Zack-Tay"},"content":"Usage 2 deletes all the current tasks in the list from the list.","lastModifiedDate":"2024-02-19"},{"lineNumber":155,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":156,"author":{"gitId":"Zack-Tay"},"content":"**Example Usage**","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"Zack-Tay"},"content":"``` delete 3 ```","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"Zack-Tay"},"content":"``` delete all ```","lastModifiedDate":"2024-02-19"},{"lineNumber":161,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":162,"author":{"gitId":"Zack-Tay"},"content":"## Find","lastModifiedDate":"2024-02-19"},{"lineNumber":163,"author":{"gitId":"Zack-Tay"},"content":"Usage: find _KEYWORD_","lastModifiedDate":"2024-02-19"},{"lineNumber":164,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":165,"author":{"gitId":"Zack-Tay"},"content":"**What it does**","lastModifiedDate":"2024-02-19"},{"lineNumber":166,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":167,"author":{"gitId":"Zack-Tay"},"content":"It displays a list of all the tasks from the current list of tasks that matches the keyword provided.","lastModifiedDate":"2024-02-19"},{"lineNumber":168,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":169,"author":{"gitId":"Zack-Tay"},"content":"**Example Usage**","lastModifiedDate":"2024-02-19"},{"lineNumber":170,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":171,"author":{"gitId":"Zack-Tay"},"content":"``` find project ```","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":173,"author":{"gitId":"Zack-Tay"},"content":"## Help","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"Zack-Tay"},"content":"Usage: help","lastModifiedDate":"2024-02-19"},{"lineNumber":175,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":176,"author":{"gitId":"Zack-Tay"},"content":"**What it does**","lastModifiedDate":"2024-02-19"},{"lineNumber":177,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":178,"author":{"gitId":"Zack-Tay"},"content":"It displays all the available chat bot commands and the usage of it.","lastModifiedDate":"2024-02-19"},{"lineNumber":179,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":180,"author":{"gitId":"Zack-Tay"},"content":"**Example Usage**","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":182,"author":{"gitId":"Zack-Tay"},"content":"``` help ```","lastModifiedDate":"2024-02-19"},{"lineNumber":183,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"Zack-Tay"},"content":"## Bye","lastModifiedDate":"2024-02-19"},{"lineNumber":185,"author":{"gitId":"Zack-Tay"},"content":"Usage: bye","lastModifiedDate":"2024-02-19"},{"lineNumber":186,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":187,"author":{"gitId":"Zack-Tay"},"content":"**What it does**","lastModifiedDate":"2024-02-19"},{"lineNumber":188,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":189,"author":{"gitId":"Zack-Tay"},"content":"It displays a bye message and waits 1.3 secs before closing the window application","lastModifiedDate":"2024-02-19"},{"lineNumber":190,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"Zack-Tay"},"content":"**Example Usage**","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":193,"author":{"gitId":"Zack-Tay"},"content":"``` bye ```","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":195,"author":{"gitId":"Zack-Tay"},"content":"## 3. Handling of Errors/Invalid input format","lastModifiedDate":"2024-02-19"},{"lineNumber":196,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":197,"author":{"gitId":"Zack-Tay"},"content":"For error handling, note that the chat bot will display a message telling you what went wrong and tell you what needs to be correctly formatted.","lastModifiedDate":"2024-02-19"},{"lineNumber":198,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":199,"author":{"gitId":"Zack-Tay"},"content":"## 4. Storage","lastModifiedDate":"2024-02-19"},{"lineNumber":200,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":201,"author":{"gitId":"Zack-Tay"},"content":"The task List will save all tasks that are successfully added. It will also remember the previous tasks added (if any) when closing and starting up the application again.","lastModifiedDate":"2024-02-19"},{"lineNumber":202,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":203,"author":{"gitId":"Zack-Tay"},"content":"**Important**","lastModifiedDate":"2024-02-19"},{"lineNumber":204,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":205,"author":{"gitId":"Zack-Tay"},"content":"Please note that only bye commands are allowed to be used when closing the application window. Please do not violate this rule.","lastModifiedDate":"2024-02-19"},{"lineNumber":206,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":207,"author":{"gitId":"Zack-Tay"},"content":"# 5. Command Summary","lastModifiedDate":"2024-02-19"},{"lineNumber":208,"author":{"gitId":"Zack-Tay"},"content":"| Commands | Usage                                                                | Example                                                                                                                 |","lastModifiedDate":"2024-02-19"},{"lineNumber":209,"author":{"gitId":"Zack-Tay"},"content":"|----------|----------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-02-19"},{"lineNumber":210,"author":{"gitId":"Zack-Tay"},"content":"| todo     | todo _TASK-DESCRIPTION_                                              | ``` todo car wash ```                                                                                                   |","lastModifiedDate":"2024-02-19"},{"lineNumber":211,"author":{"gitId":"Zack-Tay"},"content":"| deadline | deadline _TASK-DESCRIPTION_ /by _TASK_COMPLETED_BY_                  | ``` deadline project /by 19/2/2024 1900 ``` \u003cbr/\u003e ``` deadline project /by 19/2/2024 ```                                |   ","lastModifiedDate":"2024-02-19"},{"lineNumber":212,"author":{"gitId":"Zack-Tay"},"content":"| event    | event _TASK-DESCRIPTION_ /from _TASK_START_DATE_ /to _TASK_END_DATE_ | ``` event project /from 18/2/2024 1900 /to 19/2/2024 ``` \u003cbr/\u003e ``` event project /from 18/2/2024 /to 19/2/2024 2000 ``` |","lastModifiedDate":"2024-02-19"},{"lineNumber":213,"author":{"gitId":"Zack-Tay"},"content":"| list     | list                                                                 | ``` todo car wash ```                                                                                                   |","lastModifiedDate":"2024-02-19"},{"lineNumber":214,"author":{"gitId":"Zack-Tay"},"content":"| mark     | mark _INDEX_IN_LIST_\u003cbr/\u003e mark all                                   | ``` mark 2 ``` \u003cbr/\u003e ``` mark all ```                                                                                   |   ","lastModifiedDate":"2024-02-19"},{"lineNumber":215,"author":{"gitId":"Zack-Tay"},"content":"| unmark   | unmark _INDEX_IN_LIST_\u003cbr/\u003e unmark all                               | ``` unmark 2 ``` \u003cbr/\u003e ``` unmark all ```                                                                               |","lastModifiedDate":"2024-02-19"},{"lineNumber":216,"author":{"gitId":"Zack-Tay"},"content":"| delete   | delete _INDEX_IN_LIST_\u003cbr/\u003e delete all                               | ``` delete 2 ``` \u003cbr/\u003e ``` delete all ```                                                                               |","lastModifiedDate":"2024-02-19"},{"lineNumber":217,"author":{"gitId":"Zack-Tay"},"content":"| find     | find _KEYWORD_                                                       | ``` find car ```                                                                                                        |   ","lastModifiedDate":"2024-02-19"},{"lineNumber":218,"author":{"gitId":"Zack-Tay"},"content":"| help     | help                                                                 | ``` help ```                                                                                                            |","lastModifiedDate":"2024-02-19"},{"lineNumber":219,"author":{"gitId":"Zack-Tay"},"content":"| bye      | bye                                                                  | ``` bye ```                                                                                                             |","lastModifiedDate":"2024-02-19"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"Zack-Tay":206,"-":14}},{"path":"src/main/java/fredricksen/Fredricksen.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.ByeCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.Command;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.formatter.ParseInput;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.storages.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":" * The fredricksen.Fredricksen class represents a chatbot that manages tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":" * It is the main class that contains the methods to run the chatbot.","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":" * It also serves as one of the entry points of the chatbot program.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"public class Fredricksen {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"    private Storage store;","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"    private TaskList lists;","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"     * Creates a fredricksen.Fredricksen instance that represents the chatbot without any parameters.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"    public Fredricksen() {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"        this.store \u003d new Storage(\"data/Fredricksen.txt\");","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"        this.store.createFileInData();","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"            this.lists \u003d new TaskList(this.store.loadFile());","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"        } catch (IOException error) {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"            this.ui.showError(error);","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"            this.lists \u003d new TaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"     * Runs the fredricksen.Fredricksen chatbot. It reads and executes commands","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"     * based on the user until the user types the bye command or force close the program.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"    public void run() {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"        System.out.println(\"\");","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"        System.out.println(ui.showWelcome());","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"        while (true) {","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"            String task \u003d \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"            try {","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"                task \u003d ui.readCommand();","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"                assert task.equals(\"\") : \"Valid command to process\";","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"                break;","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"            ParseInput parseInput \u003d new ParseInput();","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"            Command executableCommand \u003d parseInput.getCommand(task, this.lists);","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"            String response \u003d executableCommand.execute();","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"            System.out.println(response);","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"            if (executableCommand instanceof ByeCommand) {","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"                break;","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"        store.updateFile(lists);","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"        ui.closeScanner();","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"Zack-Tay"},"content":"        ParseInput parseInput \u003d new ParseInput();","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"Zack-Tay"},"content":"        Command executableCommand \u003d parseInput.getCommand(input, this.lists);","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Zack-Tay"},"content":"        store.updateFile(lists);","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Zack-Tay"},"content":"        return executableCommand.execute();","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"Zack-Tay"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Zack-Tay"},"content":"        Fredricksen fred \u003d new Fredricksen();","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"Zack-Tay"},"content":"        fred.run();","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Zack-Tay":81}},{"path":"src/main/java/fredricksen/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":" * Represents a \"Bye\" Command, which extends the Command class.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":" * A \"Bye\" Command is a command that overrides the execute method","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":" * to perform an exit program operation when called.","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"    public ByeCommand() {};","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"    public String execute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"        return \"Bye! Sad to see you leave! Please come again!\";","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":15}},{"path":"src/main/java/fredricksen/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" * Represents a Command class with an Array of all the words in the command","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":" * and a TaskList of all the current tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":" * The Command class serves as a base class for various commands such as","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":" * ToDoCommand, DeadlineCommand, HelpCommand and more.","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"public class Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"    private String[] fullCommandWords;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs a Command object with an array of words from the user input command","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"     * and the TaskList to store the current tasks in.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"     * @param fullCommandWords an Array consisting of all the individual words from the user input command.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"     * @param tasks The TaskList to store the current tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"    public Command(String[] fullCommandWords, TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"        this.fullCommandWords \u003d fullCommandWords;","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"    public Command() {}","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"    public String execute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"        return \"hello I am command\u0027s main class\";","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"     * Display the task that have been added into the tasks list","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"     * @param task The Task to display.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"     * @param tasks The TaskList to add the task into.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"     * @return A formatted String which shows the task added and number of tasks currently.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"    public String displayTask(Task task, TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"        String singular \u003d tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"        assert tasks.size() \u003d\u003d 1 : \"task\";","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"        int num \u003d tasks.size();","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"        return \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"                + \"    \" + task","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"                + \"\\nNow you have \" + num + \" \" + singular + \" in the list.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"     * A getter method to get the array of words in the user input command","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"     * @return an Array of Strings based on the user input command.","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"    public String[] getFullCommand() {","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"        return this.fullCommandWords;","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"     * A getter method to get the TaskList of tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"     * @return A TaskList of Task Type tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":70}},{"path":"src/main/java/fredricksen/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" * Represents a \"Deadline\" Command, which extends the Command class.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":" * A \"Deadline\" Command is a command that creates a DeadlineCommand object with","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":" * the user input command and the TaskList tasks to store the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"    private String fullCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs a DeadlineCommand instance with the specified user input command","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"     * and the TaskList to store the Deadline task in.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"     * @param fullCommand The user input command to be executed.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"     * @param tasks the TaskList to store the various tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"    public DeadlineCommand(String fullCommand, TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"     * Check whether the formatted Date for the task is valid.","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"     * @param task the Deadline task formatted time to check.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"     * @return A boolean based on whether the user input date portion of the command","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"     *          is valid or invalid.","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"    public boolean isDateInvalid(Deadline task) {","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"        return task.toString().contains(\"Invalid Date\");","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"     * Format a String that displays when the date time is not formatted correctly.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String that is formatted to display the Invalid date message.","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"    public String formatInvalidDateString() {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"        return \"Please enter date in the correct format!\";","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"    public boolean isDescInvalid(Deadline task) {","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"        return task.toString().contains(\"Invalid description\");","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"    public String formatInvalidDescString() {","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"        return \"Please enter description in the correct format!\";","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"     * Executes the Deadline command.","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"     * It creates a new Deadline instance.","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"     * It triggers the displayTask method in the base class to display the add task message","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"     * and then adds the Deadline instance into the TaskList containing all current Task type object.","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String that is the message to be displayed after successfully adding a Deadline task.","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"    public String execute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"        Deadline newDlTask \u003d new Deadline(this.fullCommand, \"D\", false);","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"        if (isDateInvalid(newDlTask)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"            return formatInvalidDateString();","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"        } else if (isDescInvalid(newDlTask)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"            return formatInvalidDescString();","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"        this.tasks.addTask(newDlTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Zack-Tay"},"content":"        return displayTask(newDlTask, this.tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":73}},{"path":"src/main/java/fredricksen/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" * Represents a \"Delete\" Command, which extends the Command class.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":" * A \"Delete\" Command is a command that creates a DeleteCommand object with","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":" * an Array of each word from the user input command and the TaskList tasks to store the Task type object.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs a DeleteCommand instance with the specified user input command","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"     * and the TaskList to store the Task type task in.","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"     * @param fullCommandWords The user input command to be executed.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"     * @param tasks the TaskList to store the various tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"    public DeleteCommand(String[] fullCommandWords, TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"        super(fullCommandWords, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"     * A function to format the number of Task remaining in the TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"     * @param numTask Number of task in the TaskList","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"     * @param single singular or plural form of String based on how many tasks there are.","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"     * @return A formatted String to tell the user how many tasks there are in the TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"    public String formatTaskString(int numTask, String single) {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"        return \"You only have \"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"                + numTask + \" \" + single","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"                + \" currently. Type \\\"list\\\" to view all your current \"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"                + single;","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"     * A function to format the String after removing a Task from TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"     * @param currTask the Task that have been removed by the user input command.","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"     * @param numTask Number of task in the TaskList","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"     * @param single singular or plural form of String based on how many tasks there are.","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"     * @return A formatted String to tell the user about the Task that have been removed.","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"    public String formatRemoveTaskString(Task currTask, int numTask, String single) {","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"                + \"    \" + currTask + \"\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"                + \"Now you have \" + numTask + \" \" + single + \" in the task list.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"     * Executes the Delete command.","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"     * It tries to get the latest task that was added to the TaskList and deletes that from the TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"     * It then returns a formatted String about the Task that have just been deleted.","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"     * If it fails then it returns the formatted String to tell the user about the remaining about of Tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"     * Else if either deletes all the task or ask the user to key in a valid input instead.","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String that is the message to be displayed after trying to remove a task from TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"    public String execute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"        String single \u003d this.getTasks().size() \u003c\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"            Task currTask \u003d this.getTasks().getTask(Integer.parseInt(this.getFullCommand()[1]) - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"            this.getTasks().deleteTask(Integer.parseInt(this.getFullCommand()[1]) - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"            return formatRemoveTaskString(currTask, this.getTasks().size(), single);","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"            return formatTaskString(this.getTasks().size(), single);","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Zack-Tay"},"content":"            if (this.getFullCommand()[1].equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"Zack-Tay"},"content":"                this.getTasks().clearList();","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Zack-Tay"},"content":"            } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Zack-Tay"},"content":"                return \"Please enter a valid input\";","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"Zack-Tay"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Zack-Tay"},"content":"            return \"Clearing all current tasks in the list\";","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":79}},{"path":"src/main/java/fredricksen/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.Event;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" * Represents an \"Event\" Command, which extends the Command class.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":" * An \"Event\" Command is a command that creates a EventCommand object with","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":" * the user input command and the TaskList tasks to store the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"    private String fullCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs an EventCommand instance with the specified user input command","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"     * and the TaskList to store the Event task in.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"     * @param fullCommand The user input command to be executed.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"     * @param tasks the TaskList to store the various tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"    public EventCommand(String fullCommand, TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"        assert fullCommand.equals(\"\") : \"Should not happen\";","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"     * Check whether the formatted Date for the task is valid.","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"     * @param task the Deadline task formatted time to check.","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"     * @return A boolean based on whether the user input date portion of the command","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"     *          is valid or invalid.","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"    public boolean isDateInvalid(Event task) {","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"        return task.toString().contains(\"Invalid Date\");","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"    public boolean isDescInvalid(Event task) {","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"        return task.toString().contains(\"Invalid description\");","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"     * Format a String that displays when the date time is not formatted correctly.","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String that is formatted to display the Invalid date message.","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"    public String formatInvalidDateString() {","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"        return \"Please enter date in the correct format!\";","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"     * Format a String that displays when the description is not formatted correctly.","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String that is formatted to display the Invalid date message.","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"    public String formatInvalidDescString() {","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"        return \"Please enter description in the correct format!\";","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"     * Executes the Event command.","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"     * It creates a new Event instance.","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"     * Then it triggers the displayTask method in the base class to display the add task message","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"     * and then adds the Event instance into the TaskList containing all current Task type object.","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String that is the message to be displayed after successfully adding an Event task.","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"Zack-Tay"},"content":"    public String execute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Zack-Tay"},"content":"        Event newEventTask \u003d new Event(this.fullCommand, \"E\", false);","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Zack-Tay"},"content":"        if (isDateInvalid(newEventTask)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"Zack-Tay"},"content":"            return formatInvalidDateString();","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Zack-Tay"},"content":"        } else if (isDescInvalid(newEventTask)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"Zack-Tay"},"content":"            return formatInvalidDescString();","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"Zack-Tay"},"content":"        this.tasks.addTask(newEventTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"Zack-Tay"},"content":"        return displayTask(newEventTask, this.tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":82}},{"path":"src/main/java/fredricksen/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" * Represents a \"Find\" Command, which extends the Command class.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":" * A \"Find\" Command is a command that creates a FindCommand object with","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":" * an Array of each word from the user input command, the user input command","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":" * and the TaskList tasks to store the Task type object.","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"    private String fullCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"    private String[] commandWords;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs a FindCommand instance with the specified user input command","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"     * and the TaskList to store the Task type task in.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"     * @param fullCommand The user input command to be executed.","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"     * @param commandWords The Array of each word from the user input command.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"     * @param tasks The TaskList to store the various tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"    public FindCommand(String fullCommand, String[] commandWords, TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"        this.commandWords \u003d commandWords;","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"     * Executes the Find command.","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"     * It gets the matchList that is a TaskList with all the Tasks that matches the keyWord.","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"     * It then returns a formatted String about all the Task that are in the matchList.","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String that is the message to display all the Tasks in the matchList TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"    public String execute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"        int keywordIndex \u003d this.fullCommand.indexOf(this.commandWords[1]);","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"        String keyWord \u003d this.fullCommand.substring(keywordIndex);","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"        TaskList matchList \u003d getKeywordMatchList(this.tasks, keyWord);","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"        for (int i \u003d 0; i \u003c matchList.size(); i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"            sb.append(i + 1).append(\". \").append(matchList.getTask(i)).append(\"\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"     * A function that find all the Tasks from the TaskList that matches the keyWord","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"     * and adds them into a separate TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"     * @param tasks The TaskList containing all the current Tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"     * @param keyWord The key word to find the match for in each Tasks in TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"     * @return A TaskList with all the Tasks that have a match with the keyWord.","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"    public TaskList getKeywordMatchList(TaskList tasks, String keyWord) {","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"        TaskList matchList \u003d new TaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"            Task currTask \u003d tasks.getTask(i);","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"            if (findWordPresent(currTask, keyWord)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"                matchList.addTask(currTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"        return matchList;","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"     * Returns a boolean based on whether the word passed by the user","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Zack-Tay"},"content":"     * matches a word in the Task from the list of current tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Zack-Tay"},"content":"     * @param currTask The current Task to check.","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Zack-Tay"},"content":"     * @param word The word to find a match in currTask.","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"Zack-Tay"},"content":"     * @return A boolean if the current Task contains that word.","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"Zack-Tay"},"content":"    public boolean findWordPresent(Task currTask, String word) {","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"Zack-Tay"},"content":"        return currTask.getTask().contains(word);","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":81}},{"path":"src/main/java/fredricksen/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":" * Represents a \"Help\" Command, which extends the Command class.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":" * A \"Help\" Command is a command that creates a HelpCommand object","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":" * with no parameters needed.","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"    public HelpCommand() {}","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"     * It executes the Find command.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"     * It will display the List of available commands that the user can type.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"     * @return A formatted String with all the available commands that the user can type.","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"    public String execute() {","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"        return \"Below are the available commands and formats to follow!\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"                + \"1. To view all your current task: list\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"                + \"2. To add new task:\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"                + \"    a. todos: todo \u003ctask\u003e\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"                + \"    b. deadlines: deadline \u003ctask\u003e /by \u003cdeadline with byTime\u003e\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"                + \"    c. event: Event \u003cevent\u003e /from \u003cstartDate, startTiming\u003e /to \u003cendDate, endTiming\u003e\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"                + \"3. To delete a task: delete \u003ctask number\u003e\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"                + \"4. To mark task as completed: mark \u003ctask number\u003e\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"                + \"5. To unmark completed task: unmark \u003ctask number\u003e\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"                + \"6. To exit program: bye\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"Zack-Tay":30}},{"path":"src/main/java/fredricksen/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":" * Represents a \"List\" Command, which extends the Command class.","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" * A \"List\" Command is a command that creates a ListCommand object with","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":" * the TaskList tasks that stores the Task type object.","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs an FindCommand instance with the TaskList that store the Task type tasks in.","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"     * @param tasks The TaskList of Task type tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"    public ListCommand(TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"     * Executes the List command.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"     * It goes through the TaskList and outputs all the tasks in the TaskList","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"     * in a formatted String.","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"     * @return A formatted String that displays all the tasks in the TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"    public String execute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"        sb.append(\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"        for (int i \u003d 1; i \u003c\u003d this.tasks.size(); i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"            sb.append(i).append(\". \");","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"            sb.append(this.tasks.getTask(i - 1)).append(\"\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"        return obj instanceof ListCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":44}},{"path":"src/main/java/fredricksen/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" * Represents a \"Mark\" Command, which extends the Command class.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":" * A \"Mark\" Command is a command that creates a MarkCommand object with","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":" * an array of each word of the user input command and","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":" * the TaskList tasks that stores the Task type object.","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"    public MarkCommand(String[] fullCommandWords, TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"        super(fullCommandWords, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"     * Goes through the TaskList tasks and sets all the Task\u0027s isDone to true.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"     * @param tasks The TaskList of tasks to iterate through.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"    public void markAll(TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"            tasks.getTask(i).setDone();","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"     * Executes the Mark command.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"     * It sets the Task isDone field at task index that the user have input in the TaskList to true.","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"     * @return A formatted String that is displayed after marking the tasks based on user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"    public String execute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"            Task currTask \u003d this.getTasks().getTask(Integer.parseInt(this.getFullCommand()[1]) - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"            currTask.setDone();","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"            return \"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"                    + \"    \" + currTask;","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"            String single \u003d this.getTasks().size() \u003c\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"            int num \u003d this.getTasks().size();","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"            return \"You only have \" + num + \" \"","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"                    + single","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"                    + \" currently. Type \\\"list\\\" to view all your current \"","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"                    + single;","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"            if (this.getFullCommand()[1].equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"                markAll(this.getTasks());","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"            return \"Set all current tasks as completed\";","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":56}},{"path":"src/main/java/fredricksen/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.ToDo;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" * Represents an \"ToDo\" Command, which extends the Command class.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":" * An \"ToDo\" Command is a command that creates a ToDoCommand object with","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":" * the user input command and the TaskList tasks to store the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"    private String fullCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs an ToDoCommand instance with the specified user input command","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"     * and the TaskList to store the ToDo task in.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"     * @param fullCommand The user input command to be executed.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"     * @param tasks the TaskList to store the various tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"    public TodoCommand(String fullCommand, TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"     * It creates a new ToDo instance.","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"     * Then it triggers the displayTask method in the base class to display the add task message","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"     * and then adds the ToDo instance into the TaskList containing all current Task type object.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String that is the message to be displayed after successfully adding an ToDo task.","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"    public String execute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"        ToDo newTdTask \u003d new ToDo(this.fullCommand, \"T\", false);","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"        this.tasks.addTask(newTdTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"        return displayTask(newTdTask, this.tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":40}},{"path":"src/main/java/fredricksen/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":" * Represents an \"Unknown\" Command, which extends the Command class.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":" * An \"Unknown\" Command is a command that creates an UnknownCommand object.","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":" *","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"    public UnknownCommand() {}","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"     * Executes the Unknown command.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"     * Formats the String that tells the user it does not recognise specified input.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String that is formatted that tells the user it does not recognise","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"     *      the input specified by the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"    public String execute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"        return \"Sorry Old Man Fredricksen don\u0027t recognise this input! \"","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"                + \"Type \\\"help\\\" if you need a guide on input format!\";","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":25}},{"path":"src/main/java/fredricksen/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.commands;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" * Represents an \"Unmark\" Command, which extends the Command class.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":" * An \"Unmark\" Command is a command that creates a UnmarkCommand object with","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":" * an array of each word of the user input command and","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":" * the TaskList tasks that stores the Task type object.","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"    public UnmarkCommand(String[] fullCommandWords, TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"        super(fullCommandWords, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"     * Goes through the TaskList tasks and sets all the Task\u0027s isDone to false.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"     * @param tasks The TaskList of tasks to iterate through.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"    public void unmarkAll(TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"            tasks.getTask(i).setUndone();","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"     * Executes the Mark command.","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"     * It sets the Task isDone field at task index that the user have input in the TaskList to false.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"     * @return A formatted String that is displayed after marking the tasks based on user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"    public String execute() {","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"            Task currTask \u003d this.getTasks().getTask(Integer.parseInt(this.getFullCommand()[1]) - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"            currTask.setUndone();","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"            return \"Okay, I\u0027ve marked this task as not done yet: \\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"                    + \"    \" + currTask;","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"            String single \u003d this.getTasks().size() \u003c\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"            int num \u003d this.getTasks().size();","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"            return \"You only have \" + num + \" \"","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"                    + single","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"                    + \" currently. Type \\\"list\\\" to view all your current \"","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"                    + single;","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"            if (this.getFullCommand()[1].equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"                unmarkAll(this.getTasks());","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"            } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"                return \"Please enter a valid input\";","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"            return \"Set all current tasks as uncompleted\";","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"        return obj instanceof UnmarkCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":62}},{"path":"src/main/java/fredricksen/exceptions/FredricksenException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.exceptions;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":" * A user created Exception class to handle some exceptions in the program","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"public class FredricksenException extends Exception {","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":8}},{"path":"src/main/java/fredricksen/formatter/ParseInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.formatter;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.ByeCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.Command;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.DeadlineCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.DeleteCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.EventCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.FindCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.HelpCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.ListCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.MarkCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.TodoCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.UnknownCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.UnmarkCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":" * Represents a ParseInput class that is used to parse user input command.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":" * The ParseInput object can call the getCommand function which will be","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":" * responsible for sending out Command executable to handle the different user input commands.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"public class ParseInput {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"    public ParseInput() {}","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"     * A function to check if the first element in the commands Array is equals to","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"     * either \"list\", \"help\" or \"bye\".","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"     * @param commands An Array of each word from the user input command.","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"     * @return A boolean if the first element of commands is equals to \"list\", \"help\" or \"bye\".","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"    public boolean isInputEquals(String[] commands) {","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"        return commands[0].equals(\"list\") || commands[0].equals(\"help\") || commands[0].equals(\"bye\");","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"     * A function to return a Command executable based on the first String","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"     * of the user input command.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"     * @param userInput The user input command","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"     * @param tasks The TaskList that stores the current list of Task type task.","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"     * @return A Command executable that based on the first string in the user input command.","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"    public Command getCommand(String userInput, TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"        String[] inputCommands \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"        if (inputCommands.length \u003c\u003d 1 \u0026\u0026 !isInputEquals(inputCommands)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"            return new UnknownCommand();","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"        switch (inputCommands[0]) {","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"        case \"list\":","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"            return new ListCommand(tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"            return new TodoCommand(userInput, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"        case \"event\":","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"            return new EventCommand(userInput, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"            return new DeadlineCommand(userInput, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"            return new MarkCommand(inputCommands, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"            return new UnmarkCommand(inputCommands, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"            return new DeleteCommand(inputCommands, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"        case \"find\":","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"            return new FindCommand(userInput, inputCommands, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"        case \"help\":","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Zack-Tay"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"Zack-Tay"},"content":"        default:","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Zack-Tay"},"content":"            return new UnknownCommand();","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":76}},{"path":"src/main/java/fredricksen/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.gui;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"    private Label nameLabel;","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs a DialogBox with specified text and image.","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"     * @param text the text to be displayed in the dialog box.","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"     * @param img the image to be displayed in the dialog box.","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"        dialog.setPadding(new Insets(10, 0, 0, 10));","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"        dialog.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"        dialog.setFont(Font.font(\"Lobster\", 15));","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"        makeImageCircular();","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"     * Applies a circular clip to the ImageView to display the image in a circular shape.","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"    private void makeImageCircular() {","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"        double radius \u003d displayPicture.getFitWidth() / 2;","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"        Circle clip \u003d new Circle(radius, radius, radius);","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"Zack-Tay"},"content":"    private void flip() {","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"Zack-Tay"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"Zack-Tay"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"Zack-Tay"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"Zack-Tay"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"Zack-Tay"},"content":"     * Creates a User dialog box with specified text and image.","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"Zack-Tay"},"content":"     * @param text the text to be shown as user\u0027s dialog.","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"Zack-Tay"},"content":"     * @param img the image to be shown as the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"Zack-Tay"},"content":"     * @return a new DialogBox object representing user\u0027s dialog box.","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"Zack-Tay"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"Zack-Tay"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"Zack-Tay"},"content":"     * Creates a Fredricksen Chat Bot dialog box with specified text and image.","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"Zack-Tay"},"content":"     * The dialogBox calls .flip() to invert the dialogBox","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"Zack-Tay"},"content":"     * to distinguish it from the user\u0027s dialog.","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"Zack-Tay"},"content":"     * @param text the text to be displayed as Adam\u0027s dialog.","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"Zack-Tay"},"content":"     * @param img the image to be displayed representing Adam.","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"Zack-Tay"},"content":"     * @return a new DialogBox object representing Adam\u0027s dialog.","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"Zack-Tay"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"Zack-Tay"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"Zack-Tay"},"content":"        db.flip();","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"Zack-Tay"},"content":"        return db;","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"Zack-Tay"},"content":"    public void configBotBox() {","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"Zack-Tay"},"content":"        this.nameLabel.setText(\"Fredricksen\");","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"Zack-Tay"},"content":"     * Configures the User dialog box to set the dialog box label to \"user\"","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"Zack-Tay"},"content":"     * and the position of the nameLabel label to top right of the container","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"Zack-Tay"},"content":"     * it is in.","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"Zack-Tay"},"content":"    public void configUserBox() {","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"Zack-Tay"},"content":"        this.nameLabel.setText(\"\");","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"Zack-Tay"},"content":"        this.nameLabel.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"Zack-Tay"},"content":"        this.dialog.setId(\"user\");","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"Zack-Tay":118}},{"path":"src/main/java/fredricksen/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.gui;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"public class Launcher {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Zack-Tay":12}},{"path":"src/main/java/fredricksen/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.gui;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.Fredricksen;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"    private Fredricksen fredricksen \u003d new Fredricksen();","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"    private Image icon \u003d new Image(this.getClass().getResourceAsStream(\"/images/Up.jpg\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"            stage.setTitle(\"Fredricksen\");","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"            stage.setResizable(false);","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setFredricksen(fredricksen, stage);","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"            stage.show();","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"Zack-Tay":40}},{"path":"src/main/java/fredricksen/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.gui;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.Fredricksen;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"    private Fredricksen fredricksen;","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"    private Stage stage;","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Russell.jpeg\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"    private Image fredricksenImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Fredricksen.jpg\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"     * Initialise the height property of the dialog container,","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"     * set the background of the dialog container and greet the user","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"     * when they open the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"        dialogContainer.setBackground(getBg());","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"        dialogContainer.getChildren().add(greetUser());","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"    public Background getBg() {","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"        BackgroundFill bgFill \u003d new BackgroundFill(Color.LAVENDER, CornerRadii.EMPTY, Insets.EMPTY);","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"        return new Background(bgFill);","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"    public void setFredricksen(Fredricksen d, Stage stage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"        fredricksen \u003d d;","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"     * Greet the user with a welcome message when the user opens the application.","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"     * @return A DialogBox with the welcome message inside.","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"    public DialogBox greetUser() {","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Zack-Tay"},"content":"        DialogBox greetDialog \u003d DialogBox.getDukeDialog(this.ui.showWelcome(), fredricksenImage);","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"Zack-Tay"},"content":"        greetDialog.configBotBox();","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Zack-Tay"},"content":"        return greetDialog;","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"Zack-Tay"},"content":"     * Adds a short timeout after the function is called.","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"Zack-Tay"},"content":"     * After this timeout ends, the window application is closed.","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"Zack-Tay"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"Zack-Tay"},"content":"    public void closeWindow() {","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"Zack-Tay"},"content":"        new Thread(() -\u003e {","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"Zack-Tay"},"content":"            try {","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"Zack-Tay"},"content":"                Thread.sleep(1300);","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"Zack-Tay"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"Zack-Tay"},"content":"                Thread.currentThread().interrupt();","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"Zack-Tay"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"Zack-Tay"},"content":"            Platform.runLater(() -\u003e {","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"Zack-Tay"},"content":"                this.stage.close();","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"Zack-Tay"},"content":"            });","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"Zack-Tay"},"content":"        }).start();","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"Zack-Tay"},"content":"    public String checkByeString() {","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"Zack-Tay"},"content":"        return \"Bye! Sad to see you leave! Please come again!\";","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"Zack-Tay"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"Zack-Tay"},"content":"     * Fredricksen\u0027s reply and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"Zack-Tay"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"Zack-Tay"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"Zack-Tay"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"Zack-Tay"},"content":"        String response \u003d fredricksen.getResponse(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"Zack-Tay"},"content":"        DialogBox userBox \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"Zack-Tay"},"content":"        DialogBox botBox \u003d DialogBox.getDukeDialog(response, fredricksenImage);","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"Zack-Tay"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"Zack-Tay"},"content":"                userBox,","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"Zack-Tay"},"content":"                botBox","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"Zack-Tay"},"content":"        );","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"Zack-Tay"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"Zack-Tay"},"content":"        userBox.configUserBox();","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"Zack-Tay"},"content":"        botBox.configBotBox();","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"Zack-Tay"},"content":"        boolean isExit \u003d response.equals(checkByeString());","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"Zack-Tay"},"content":"        if (isExit) {","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"Zack-Tay"},"content":"            closeWindow();","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":122}},{"path":"src/main/java/fredricksen/storages/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.storages;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.Event;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.ToDo;","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":" * Represents a Storage class that have operations that can","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":" * create, read, and write to a file that stores a list of Task type tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":" * in a nicely formatted manner in a String format.","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"    private File file;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"    private Path path;","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs a Storage instance with a specified file path.","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"     * @param file A file path destination to store the String format Task.","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"    public Storage(String file) {","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"        this.file \u003d new File(file);","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"        this.path \u003d Paths.get(this.file.toURI());","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"     * Creates a new Task based on the taskType passed into the function.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"     * @param taskType A String that represents the type of task.","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"     * @param content A String that represents the task description.","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"     * @param isDone A boolean that represents if the task have been mark done.","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"     * @return A Task that have been created based on the task type.","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"    public Task createNewTask(String taskType, String content, boolean isDone) {","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"        case \"D\": {","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"            Deadline newTask \u003d new Deadline(content, taskType, isDone);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"            return newTask;","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"        case \"T\": {","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"            ToDo newTask \u003d new ToDo(content, taskType, isDone);","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"            return newTask;","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"        case \"E\": {","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"            Event newTask \u003d new Event(content, taskType, isDone);","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"            return newTask;","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"        default:","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"            return new ToDo(content, taskType, isDone);","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"     * Returns an ArrayList of Task based on the data","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"     * stored in the Fredricksen.txt file.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"     * @return a TaskList of Task","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"     * @throws IOException if file cannot be opened or read.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Zack-Tay"},"content":"    public TaskList loadFile() throws IOException {","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"Zack-Tay"},"content":"        TaskList lists \u003d new TaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Zack-Tay"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(this.path.toFile()))) {","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Zack-Tay"},"content":"            String next;","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Zack-Tay"},"content":"            while ((next \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"Zack-Tay"},"content":"                int type \u003d next.indexOf(\"type: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Zack-Tay"},"content":"                int doneIndex \u003d next.indexOf(\"isDone: \");","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"Zack-Tay"},"content":"                int content \u003d next.indexOf(\"content: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Zack-Tay"},"content":"                boolean isDone \u003d next.substring(doneIndex + 8, content - 1).equals(\"true\");","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"Zack-Tay"},"content":"                Task newTask \u003d createNewTask(next.substring(type + 6, type + 7), next.substring(content + 9), isDone);","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"Zack-Tay"},"content":"                lists.addTask(newTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"Zack-Tay"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"Zack-Tay"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"Zack-Tay"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Zack-Tay"},"content":"        return lists;","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"Zack-Tay"},"content":"     * Updates the file specified by this object\u0027s path with the elements of TaskList.","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"Zack-Tay"},"content":"     * Each task in the list is written to the file in a specific format.","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"Zack-Tay"},"content":"     * Each task\u0027s details are on a separate line.","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"Zack-Tay"},"content":"     * @param lists The TaskList containing tasks to be written to the file. Each task in the list","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"Zack-Tay"},"content":"     *             is expected to have a type, a completion status, and content.","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"Zack-Tay"},"content":"    public void updateFile(TaskList lists) {","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"Zack-Tay"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(this.path.toFile()))) {","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"Zack-Tay"},"content":"            for (int i \u003d 0; i \u003c lists.size(); i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"Zack-Tay"},"content":"                Task task \u003d lists.getTask(i);","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"Zack-Tay"},"content":"                String type \u003d task.getType();","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"Zack-Tay"},"content":"                String content \u003d task.getTask();","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"Zack-Tay"},"content":"                boolean isDone \u003d task.getDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"Zack-Tay"},"content":"                bw.write(\"type: \" + type + \" isDone: \" + isDone + \" content: \" + content);","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"Zack-Tay"},"content":"                bw.newLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"Zack-Tay"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"Zack-Tay"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Zack-Tay"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"Zack-Tay"},"content":"     * Checks if the directory with the object\u0027s file path to store the txt file exists,","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"Zack-Tay"},"content":"     * if it doesn\u0027t, it creates the directory. Then check if the file exist, if it doesn\u0027t,","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"Zack-Tay"},"content":"     * then creates the file under the directory.","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"Zack-Tay"},"content":"    public void createFileInData() {","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"Zack-Tay"},"content":"        Path dataDir \u003d this.path.getParent();","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"Zack-Tay"},"content":"        if (!Files.exists(dataDir)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"Zack-Tay"},"content":"            try {","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"Zack-Tay"},"content":"                Files.createDirectories(dataDir);","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"Zack-Tay"},"content":"            } catch (IOException err) {","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"Zack-Tay"},"content":"                System.out.println(err.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":127,"author":{"gitId":"Zack-Tay"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":128,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":130,"author":{"gitId":"Zack-Tay"},"content":"        if (!Files.exists(this.path)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":131,"author":{"gitId":"Zack-Tay"},"content":"            try {","lastModifiedDate":"2024-02-15"},{"lineNumber":132,"author":{"gitId":"Zack-Tay"},"content":"                Files.createFile(this.path);","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"Zack-Tay"},"content":"            } catch (IOException err) {","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"Zack-Tay"},"content":"                System.out.println(err.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"Zack-Tay"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":136,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":137,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Zack-Tay":138}},{"path":"src/main/java/fredricksen/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.exceptions.FredricksenException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":" * Represents a \"Deadline\" class, which extends the Task base class.","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" * A \"Deadline\" Task is a task that creates a \"Deadline\" object with the","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":" * task description, the task type, and the status of the task isDone,","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":" * represented by boolean values.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs a Deadline instance with the specified task description,","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"     * the task type, and the status of the task isDone, represented by boolean values.","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"     * @param task The task description as per user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"     * @param type The task type.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"     * @param isDone The status of the task isDone, represented by boolean values.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"    public Deadline(String task, String type, boolean isDone) {","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"        super(task, type, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"     * Returns the String representation of a date in MM DD YYYY form eg. Dec 15 2020.","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"     * @param fullCommand The full command that the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String in the format MM DD YYYY form eg. Dec 15 2020.","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"    public String formatByDtPattern(String fullCommand) {","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"        int byStartIndex \u003d fullCommand.indexOf(\"/by\");","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"        String byDate \u003d fullCommand.substring(byStartIndex + 4);","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"        String formattedDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"            formattedDate \u003d this.formatDates(byDate);","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"        } catch (FredricksenException err) {","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"            formattedDate \u003d \"Invalid Date\";","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"        return formattedDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"     * Get the description of the task from user input command.","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"     * @param fullCommand The full command that the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String of the description of the command.","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"    public String getDescription(String fullCommand) {","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"        int descIndex \u003d fullCommand.indexOf(\"/by\");","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"        int startDesc \u003d 9;","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"        if (startDesc \u003e\u003d descIndex - 1) {","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"            return \"\";","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"        return fullCommand.substring(startDesc, descIndex - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"     * Format the Date from the task description.","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String that is formatted with the description plus formatted date.","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"    public String formatByDateString() {","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"        String formattedByDate \u003d formatByDtPattern(this.getTask());","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"        String description \u003d getDescription(this.getTask());","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"        if (formattedByDate.equals(\"Invalid Date\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"            return \"Invalid Date\";","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"        } else if (description.equals(\"\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"            return \"Invalid description\";","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"        } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Zack-Tay"},"content":"            return getDescription(this.getTask())","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"Zack-Tay"},"content":"                    + \" (by: \" + formattedByDate","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Zack-Tay"},"content":"                    + \")\";","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"Zack-Tay"},"content":"    public String toString() {","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"Zack-Tay"},"content":"        if (formatByDateString().equals(\"Invalid Date\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"Zack-Tay"},"content":"            return \"Invalid Date\";","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"Zack-Tay"},"content":"        return super.toString() + formatByDateString();","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":84}},{"path":"src/main/java/fredricksen/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.exceptions.FredricksenException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":" * Represents an \"Event\" class, which extends the Task base class.","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" * An \"Event\" Task is a task that creates an \"Event\" object with the","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":" * task description, the task type, and the status of the task isDone,","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":" * represented by boolean values.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs an Event instance with the specified task description,","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"     * the task type, and the status of the task isDone, represented by boolean values.","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"     * @param task The task description as per user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"     * @param type The task type.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"     * @param isDone The status of the task isDone, represented by boolean values.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"    public Event(String task, String type, boolean isDone) {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"        super(task, type, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"     * Formats the \"from\" start date in the format specified by","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"     * the formatDates function.","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"     * @param fullCommand The full command that the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String with the formatted date or date time.","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"    public String formatFromDtPattern(String fullCommand) {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"        int fromStartIndex \u003d fullCommand.indexOf(\"/from\");","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"        int toStartIndex \u003d fullCommand.indexOf(\"/to\");","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"        assert fromStartIndex !\u003d -1 : \"Should not happen\";","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"        assert toStartIndex !\u003d -1 : \"Should not happen\";","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"        String fromDate \u003d fullCommand.substring(fromStartIndex + 6, toStartIndex - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"        String formattedDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"            formattedDate \u003d this.formatDates(fromDate);","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"        } catch (FredricksenException err) {","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"            formattedDate \u003d \"Invalid Date\";","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"        return formattedDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"     * Formats the \"to\" end date in the format specified by","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"     * the formatDates function.","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"     * @param fullCommand The full command that the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String with the formatted date or date time.","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"    public String formatToDtPattern(String fullCommand) {","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"        int toStartIndex \u003d fullCommand.indexOf(\"/to\");","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"        String toDate \u003d fullCommand.substring(toStartIndex + 4);","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"        String formattedDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"            formattedDate \u003d this.formatDates(toDate);","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"        } catch (FredricksenException err) {","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"            formattedDate \u003d \"Invalid Date\";","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"        return formattedDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"    public String getDescription(String fullCommand) {","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"        int descIndex \u003d fullCommand.indexOf(\"/from\");","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"        int startDesc \u003d 6;","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Zack-Tay"},"content":"        if (startDesc \u003e\u003d descIndex - 1) {","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"Zack-Tay"},"content":"            return \"\";","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Zack-Tay"},"content":"        return fullCommand.substring(startDesc, descIndex - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"Zack-Tay"},"content":"     * Format both the \"from\" and \"to\" date from the task description.","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"Zack-Tay"},"content":"     * Then format and combine the task description and the dates together.","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String that is formatted with the task description plus formatted dates.","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"Zack-Tay"},"content":"    public String formatStringOutput() {","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"Zack-Tay"},"content":"        String formattedFromDate \u003d formatFromDtPattern(this.getTask());","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"Zack-Tay"},"content":"        String formattedToDate \u003d formatToDtPattern(this.getTask());","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"Zack-Tay"},"content":"        String description \u003d getDescription(this.getTask());","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"Zack-Tay"},"content":"        if (formattedFromDate.equals(\"Invalid Date\") || formattedToDate.equals(\"Invalid Date\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"Zack-Tay"},"content":"            return \"Invalid Date\";","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"Zack-Tay"},"content":"        } else if (description.equals(\"\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"Zack-Tay"},"content":"            return \"Invalid description\";","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"Zack-Tay"},"content":"        } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"Zack-Tay"},"content":"            return getDescription(this.getTask())","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"Zack-Tay"},"content":"                    + \" (from: \" + formattedFromDate","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"Zack-Tay"},"content":"                    + \" to: \" + formattedToDate","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"Zack-Tay"},"content":"                    + \")\";","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"Zack-Tay"},"content":"    public String toString() {","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"Zack-Tay"},"content":"        if (formatStringOutput().equals(\"Invalid Date\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"Zack-Tay"},"content":"            return \"Invalid Date\";","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"Zack-Tay"},"content":"        return super.toString() + formatStringOutput();","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":108}},{"path":"src/main/java/fredricksen/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.exceptions.FredricksenException;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":" * Represents a Task class with the user input task, the Task type,","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":" * and the status of the task represented by boolean values. It serves","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":" * as a base class for different task types such as Deadline, Event and ToDo.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"public class Task {","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"    private String task;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"    private String type;","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs a Task instance with the specified task description,","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"     * the task type, and the status of the task isDone, represented by boolean values.","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"     * @param task The task description as per user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"     * @param type The task type.","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"     * @param isDone The status of the task isDone, represented by boolean values.","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"    public Task(String task, String type, boolean isDone) {","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"     * Set the status isDone of the Task instance.","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"    public void setDone() {","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"    public void setUndone() {","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"     * Get the status of the Task instance.","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"     * @return A boolean isDone of the status of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"    public boolean getDone() {","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"     * Get the task type of the Task instance.","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String of the type of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"    public String getType() {","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"        return this.type;","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"     * Get the Task type task.","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"     * @return The instance\u0027s task.","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"    public String getTask() {","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"        return this.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Zack-Tay"},"content":"    public DateTimeFormatter[] getDateTimeFormats() {","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"Zack-Tay"},"content":"        return new DateTimeFormatter[]{","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Zack-Tay"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy\"),","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Zack-Tay"},"content":"                DateTimeFormatter.ofPattern(\"d-M-yyyy\"),","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"Zack-Tay"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Zack-Tay"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"Zack-Tay"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"Zack-Tay"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"Zack-Tay"},"content":"        };","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"Zack-Tay"},"content":"     * Format the date or date time based on the String date","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"Zack-Tay"},"content":"     * that is passed into the function.","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"Zack-Tay"},"content":"     * @param date The String date or date time to be formatted","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String with the formatted date or date time.","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"Zack-Tay"},"content":"     * @throws FredricksenException throws an Exception if both formatting methods does not work.","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"Zack-Tay"},"content":"    public String formatDates(String date) throws FredricksenException {","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"Zack-Tay"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"Zack-Tay"},"content":"        DateTimeFormatter[] formats \u003d this.getDateTimeFormats();","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"Zack-Tay"},"content":"        for (DateTimeFormatter format : formats) {","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"Zack-Tay"},"content":"            try {","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"Zack-Tay"},"content":"                LocalDateTime time \u003d LocalDateTime.parse(date, format);","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"Zack-Tay"},"content":"                result \u003d time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, hh:mm a\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"Zack-Tay"},"content":"                return result;","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"Zack-Tay"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"Zack-Tay"},"content":"                // Try the next formatter if parsing fails","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"Zack-Tay"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"Zack-Tay"},"content":"        for (DateTimeFormatter format : formats) {","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"Zack-Tay"},"content":"            try {","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"Zack-Tay"},"content":"                LocalDate dateWoTime \u003d LocalDate.parse(date, format);","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"Zack-Tay"},"content":"                result \u003d dateWoTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"Zack-Tay"},"content":"                return result;","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"Zack-Tay"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"Zack-Tay"},"content":"                // Try the next formatter if parsing fails","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"Zack-Tay"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"Zack-Tay"},"content":"        throw new FredricksenException();","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"Zack-Tay"},"content":"    public String toString() {","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"Zack-Tay"},"content":"        return \"[\" + this.type + \"][\" + (this.isDone ? \"X\" : \"\") + \"] \";","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":121}},{"path":"src/main/java/fredricksen/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":" * Represents an ArrayList of Task type tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"    private ArrayList\u003cTask\u003e lists;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs a new TaskList object with a new ArrayList.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"        this.lists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs a TaskList object with a specified list of Task type tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"     * @param lists An ArrayList of Task type objects.","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"    public TaskList(TaskList lists) {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"        this.lists \u003d lists.getList();","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"     * Add a new Task to the ArrayList list.","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"     * @param task The Task to be added to the ArrayList.","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"        this.lists.add(task);","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"     * Remove a Task from the ArrayList based on the position in the ArrayList.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"     * @param task The index of the Task in the ArrayList.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"    public void deleteTask(int task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"        this.lists.remove(task);","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"     * Returns the Task in the ArrayList based on their position in the ArrayList.","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"     * @param index The index of the Task in the ArrayList.","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"     * @return A Task in the ArrayList.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"        return this.lists.get(index);","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"        return this.lists;","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Zack-Tay"},"content":"     * Returns the current size of the ArrayList.","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Zack-Tay"},"content":"     * @return an int that represents the size of the ArrayList currently.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Zack-Tay"},"content":"    public int size() {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Zack-Tay"},"content":"        return this.lists.size();","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Zack-Tay"},"content":"     * Clears the entire ArrayList when called.","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Zack-Tay"},"content":"    public void clearList() {","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"Zack-Tay"},"content":"        this.lists.clear();","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Zack-Tay"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Zack-Tay"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Zack-Tay"},"content":"        for (Task task : this.lists) {","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"Zack-Tay"},"content":"            sb.append(task.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Zack-Tay"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Zack-Tay"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Zack-Tay":84}},{"path":"src/main/java/fredricksen/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":" * Represents a \"ToDo\" class, which extends the Task base class.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":" * A \"ToDo\" Task is a task that creates a \"ToDo\" object with the","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":" * task description, the task type, and the status of the task isDone,","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" * represented by boolean values.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs a ToDo instance with the specified task description,","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"     * the task type, and the status of the task isDone, represented by boolean values.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"     * @param task The task description as per user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"     * @param type The task type.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"     * @param isDone The status of the task isDone, represented by boolean values.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"    public ToDo(String task, String type, boolean isDone) {","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"        super(task, type, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"     * Get the description of the ToDo task from user input command.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"     * @param fullCommand The full command that the user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String of the description of the command.","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"    public String getTodoDescription(String fullCommand) {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"        int todoIndex \u003d fullCommand.indexOf(\"todo\");","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"        return fullCommand.substring(todoIndex + 5);","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"    public String toString() {","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"        return super.toString() + getTodoDescription(this.getTask());","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":38}},{"path":"src/main/java/fredricksen/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package fredricksen.ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":" * Represents an \"Ui\" class that handles the User Interface of the chatbot,","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":" * focus on displaying some outputs, or pass messages to be displayed.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"    private Scanner in;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"     * Constructs an Ui object which initializes a Scanner object to read user inputs.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"    public Ui() {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"     * A function to close the Scanner.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"    public void closeScanner() {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"        this.in.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"     * returns a welcome message everytime a user starts up the chatbot.","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"        return \"Wassup! I\u0027m Fredricksen\\n\" + \"What can I do for you?\";","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"     * Returns the content String passed as argument","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"     * @param content The String passed as an argument.","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"    public String output(String content) {","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"        return content;","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"     * Prints to the console the error message of the Exception.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"    public void showError(Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Zack-Tay"},"content":"     * Returns the next line that the user inputs into the CLI.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Zack-Tay"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Zack-Tay"},"content":"     * @return A String that the user inputs into the CLI.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Zack-Tay"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Zack-Tay"},"content":"        return this.in.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Zack-Tay":57}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"        \u003cURL value\u003d\"@styles.css\"/\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"    \u003cHBox fx:id\u003d\"chat\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"            \u003cLabel fx:id\u003d\"nameLabel\" text\u003d\"Label\" maxWidth\u003d\"500\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"            \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\"/\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"Zack-Tay":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"fredricksen.gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" promptText\u003d\"Enter command here\"/\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"        \u003cURL value\u003d\"@styles.css\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"Zack-Tay":22}},{"path":"src/test/java/tasks/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"     * Checks if toString method for Deadline class returns string with correct format if successful.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"    public void deadlineToString_correctFormat_success() {","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"        String dateTime \u003d \"2/12/2019 1800\";","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"        Deadline newTask \u003d new Deadline(\"deadline homework /by \" + dateTime, \"D\", false);","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"        assertEquals(\"[D][] homework (by: Dec 2 2019, 06:00 PM)\", newTask.toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"    public void deadlineToString_incorrectTimeFormatHandled_failure() {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"        String dateTime \u003d \"2/12/2019 100\";","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"        Deadline newTask \u003d new Deadline(\"deadline homework /by \" + dateTime, \"D\", false);","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"        assertEquals(\"Invalid Date\", newTask.toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"    public void deadlineToString_incorrectDateFormatHandled_failure() {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"        String dateTime \u003d \"2/123/2019 1300\";","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"        Deadline newTask \u003d new Deadline(\"deadline homework /by \" + dateTime, \"D\", false);","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"        assertEquals(\"Invalid Date\", newTask.toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":34}},{"path":"src/test/java/tasks/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.Event;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"public class EventTaskTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"    public void eventToString_correctFormat_success() {","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"        String fromDateTime \u003d \"2/12/2019 1800\";","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"        String toDateTime \u003d \"3/12/2019 1900\";","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"        Event newTask \u003d new Event(\"event homework /from \" + fromDateTime + \" /to \" + toDateTime, \"E\", false);","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"        assertEquals(\"[E][] homework (from: Dec 2 2019, 06:00 PM to: Dec 3 2019, 07:00 PM)\", newTask.toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"    public void eventToString_incorrectTimeFormatHandled_failure() {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"        String fromDateTime \u003d \"2/12/2019 100\";","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"        String toDateTime \u003d \"3/12/2019 1300\";","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"        Deadline newTask \u003d new Deadline(\"event homework /from \" + fromDateTime + \" /to \" + toDateTime, \"E\", false);","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"        assertEquals(\"Invalid Date\", newTask.toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"    public void eventToString_incorrectDateFormatHandled_failure() {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"        String fromDateTime \u003d \"2/123/2019 1300\";","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"        String toDateTime \u003d \"3/12/2019 1300\";","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"        Deadline newTask \u003d new Deadline(\"event homework /from \" + fromDateTime + \" /to \" + toDateTime, \"E\", false);","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"        assertEquals(\"Invalid Date\", newTask.toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":35}},{"path":"src/test/java/tasks/FormatDateTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.exceptions.FredricksenException;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"public class FormatDateTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"    private Task task \u003d new Task(\"\", \"\", false);","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"    public void dateWithTime_correctFormat_success() {","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"            assertEquals(\"Feb 12 2019, 07:00 PM\", task.formatDates(\"12/2/2019 1900\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"        } catch (FredricksenException err) {","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"    public void dateWoTime_correctFormat_success() {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"            assertEquals(\"Feb 12 2019\", task.formatDates(\"12/2/2019\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Zack-Tay"},"content":"        } catch (FredricksenException err) {","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Zack-Tay"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Zack-Tay"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Zack-Tay"},"content":"    public void dateWoTime_incorrectDateFormatHandled_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Zack-Tay"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Zack-Tay"},"content":"            assertEquals(task.formatDates(\"200/200/2019\"), \"\");","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Zack-Tay"},"content":"        } catch (FredricksenException err) {","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Zack-Tay"},"content":"            assertEquals(null, err.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Zack-Tay"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Zack-Tay"},"content":"    public void dateWithTime_incorrectTimeFormatHandled_exceptionThrown() {","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Zack-Tay"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Zack-Tay"},"content":"            assertEquals(task.formatDates(\"2/2/2019 231\"), \"\");","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Zack-Tay"},"content":"        } catch (FredricksenException err) {","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Zack-Tay"},"content":"            assertEquals(null, err.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Zack-Tay"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":47}},{"path":"src/test/java/tasks/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.Fredricksen;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.commands.UnknownCommand;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.tasks.ToDo;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"public class ToDoTaskTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"    private Fredricksen fredricksen \u003d new Fredricksen();","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"    public void toDoToString_correctFormat_success() {","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"        ToDo newTask \u003d new ToDo(\"todo homework\", \"T\", false);","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"        assertEquals(\"[T][] homework\", newTask.toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"    public void toDoToString_incorrectFormat_failure() {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"        String command \u003d \"tdo homework\";","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Zack-Tay"},"content":"        assertEquals(new UnknownCommand().execute(), fredricksen.getResponse(command));","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":24}},{"path":"src/test/java/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"package ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Zack-Tay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Zack-Tay"},"content":"import fredricksen.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Zack-Tay"},"content":"public class UiTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Zack-Tay"},"content":"    public void uiOutput_correctFormat_success() {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Zack-Tay"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Zack-Tay"},"content":"        assertEquals(\"deadline homework /by 2/12/2019 1800\", ui.output(\"deadline homework /by 2/12/2019 1800\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Zack-Tay"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Zack-Tay"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Zack-Tay"},"content":"    public void uiOutput2_correctFormat_success() {","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Zack-Tay"},"content":"        assertEquals(\"todo laundry\", ui.output(\"todo laundry\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Zack-Tay"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Zack-Tay"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Zack-Tay":21}},{"path":"text-ui-test/data/Fredricksen.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"type: T isDone: false content: todo laundry","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"type: T isDone: false content: todo laundry","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Zack-Tay"},"content":"type: T isDone: false content: todo laundry","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Zack-Tay"},"content":"type: T isDone: false content: todo laundry","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zack-Tay"},"content":"todo laundry","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Zack-Tay"},"content":"bye","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Zack-Tay":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Zack-Tay"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Fredricksen\\*.java","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Zack-Tay"},"content":"java -classpath ..\\bin Fredricksen/Fredricksen \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zack-Tay":2,"-":19}}]
