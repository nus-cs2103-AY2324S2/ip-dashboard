[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"Week 2 duke.task done all by hand.","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"Week 3 duke.task:","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"- Using github copilot for:","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"    - Level 7","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"        - \\+ Sometimes able to predict what I was going to type","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"        - \\+ Sometimes able to provide options which I wasn\u0027t even aware of","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"        - \\- Sometimes provides invalid suggestions, may not always be accurate","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"          - If invalid suggestions are lazily taken, productivity actually reduces in the long-term","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"    - Level 8","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"      - \\+ extremely useful in coming up with suitable datetime patterns","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"      - \\+ kind of insane how good it is at predicting what i am going to type.. almost a little creepy ngl lol","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    - Level 9 and all future increments","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"kokerinks":13}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"# duke.Duke project template","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kokerinks":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kokerinks":2,"-":38}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":" * Represents a Command","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"public class Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"     * Type of the Command","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"    public Duke.CommandType type;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"     * Stores the arguments required for running of command","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    public String[] args;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"     * Constructor for Commands which do not require arguments","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"     * @param newType Type of the Command","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    public Command(Duke.CommandType newType) {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        this.type \u003d newType;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"        this.args \u003d new String[]{};","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"     * Constructor for Command","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"     * @param newType Type of the Command","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"     * @param newArgs Arguments required for running of command","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"    public Command(Duke.CommandType newType, String[] newArgs) {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"        this.type \u003d newType;","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"        this.args \u003d newArgs;","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"kokerinks":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":" * Represents the main Duke class","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"     * Represents the type of command","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    public enum CommandType {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"     * Represents the storage of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"     * Represents the list of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"     * Represents the user interface","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"     * Represents the parser","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"     * Constructor for Duke","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"     * @param filePath Path of the file","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"     * @param botName  Name of the bot","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"    public Duke(Path filePath, String botName) {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"        ui \u003d new Ui(botName);","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"     * Runs the bot","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"    public void run() {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"        String input \u003d ui.readCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"kokerinks"},"content":"        while (true) {","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"kokerinks"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"kokerinks"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"kokerinks"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":76,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"kokerinks"},"content":"                Command cmd \u003d parser.parse(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"kokerinks"},"content":"                switch (cmd.type) {","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"kokerinks"},"content":"                    case LIST:","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"kokerinks"},"content":"                        ui.showTaskList(tasks.getTaskStrings());","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"kokerinks"},"content":"                    case MARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"kokerinks"},"content":"                        int toMark \u003d Integer.parseInt(cmd.args[0]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"kokerinks"},"content":"                        tasks.markTaskAsDone(toMark);","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"kokerinks"},"content":"                        ui.showTaskMarked(tasks.getTask(toMark));","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"kokerinks"},"content":"                    case UNMARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"kokerinks"},"content":"                        int toUnmark \u003d Integer.parseInt(cmd.args[0]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"kokerinks"},"content":"                        tasks.markTaskAsUndone(toUnmark);","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"kokerinks"},"content":"                        ui.showTaskUnmarked(tasks.getTask(toUnmark));","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"kokerinks"},"content":"                    case TODO:","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"kokerinks"},"content":"                        Todo newTodo \u003d createTodo(cmd.args[0]);","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"kokerinks"},"content":"                        tasks.addTask(newTodo);","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"kokerinks"},"content":"                        ui.showTaskAdded(newTodo, tasks.getSize());","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"kokerinks"},"content":"                    case DEADLINE:","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"kokerinks"},"content":"                        Deadline newDeadline \u003d createDeadline(cmd.args[0], cmd.args[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"kokerinks"},"content":"                        tasks.addTask(newDeadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"                        ui.showTaskAdded(newDeadline, tasks.getSize());","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"                    case EVENT:","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"                        Event newEvent \u003d createEvent(cmd.args[0], cmd.args[1], cmd.args[2]);","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"                        tasks.addTask(newEvent);","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"kokerinks"},"content":"                        ui.showTaskAdded(newEvent, tasks.getSize());","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"kokerinks"},"content":"                        //numList(duke.tasks.getSize());","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"kokerinks"},"content":"                    case DELETE:","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"kokerinks"},"content":"                        Task deletedTask \u003d tasks.deleteTask(Integer.parseInt(cmd.args[0]) - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"                        ui.showTaskDeleted(deletedTask, tasks.getSize());","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"kokerinks"},"content":"                    case FIND:","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"kokerinks"},"content":"                        ui.showMatchingTasks(tasks.getMatchingTasks(cmd.args[0]));","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"kokerinks"},"content":"                    default:","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"kokerinks"},"content":"                        throw new DukeException(\"Unknown command\");","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"kokerinks"},"content":"                storage.updateFile(tasks.getFileStrings());","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"kokerinks"},"content":"            } catch (duke.DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"kokerinks"},"content":"                ui.printLineBreak();","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"kokerinks"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"kokerinks"},"content":"            ui.printLineBreak();","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"kokerinks"},"content":"            input \u003d ui.readCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":126,"author":{"gitId":"kokerinks"},"content":"        ui.showGoodbye();","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":128,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"kokerinks"},"content":"     * Creates a LocalDateTime object from a string","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"kokerinks"},"content":"     * @param input String to be parsed","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"kokerinks"},"content":"     * @return LocalDateTime object","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"kokerinks"},"content":"     * @throws DukeException If the string is not in a valid date-time format","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"kokerinks"},"content":"    public static LocalDateTime createDateTime(String input) throws DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":137,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"kokerinks"},"content":"        String[] possibleDates \u003d {","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"kokerinks"},"content":"                \"d/M/yyyy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"kokerinks"},"content":"                \"d-M-yyyy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"kokerinks"},"content":"                \"d/M/yy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"kokerinks"},"content":"                \"d-M-yy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"kokerinks"},"content":"                \"dMMyyyy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":144,"author":{"gitId":"kokerinks"},"content":"                \"dMMyy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"kokerinks"},"content":"                \"dd/MM/yyyy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"kokerinks"},"content":"                \"dd-MM-yyyy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"kokerinks"},"content":"                \"yyyy-MM-dd\",","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"kokerinks"},"content":"                \"dd/MM/yy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":151,"author":{"gitId":"kokerinks"},"content":"                \"dd-MM-yy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"kokerinks"},"content":"                \"ddMMyyyy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":153,"author":{"gitId":"kokerinks"},"content":"                \"ddMMyy\",};","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":155,"author":{"gitId":"kokerinks"},"content":"        String[] possibleTimes \u003d {\"HHmm\", \"HH:mm\", \"HH\", \"h:mma\",};","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":157,"author":{"gitId":"kokerinks"},"content":"        for (String datePattern : possibleDates) {","lastModifiedDate":"2024-01-28"},{"lineNumber":158,"author":{"gitId":"kokerinks"},"content":"            for (String timePattern : possibleTimes) {","lastModifiedDate":"2024-01-28"},{"lineNumber":159,"author":{"gitId":"kokerinks"},"content":"                //check that time pattern comes before date pattern","lastModifiedDate":"2024-01-28"},{"lineNumber":160,"author":{"gitId":"kokerinks"},"content":"                try {","lastModifiedDate":"2024-01-28"},{"lineNumber":161,"author":{"gitId":"kokerinks"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(timePattern + \" \" + datePattern);","lastModifiedDate":"2024-01-28"},{"lineNumber":162,"author":{"gitId":"kokerinks"},"content":"                    return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":163,"author":{"gitId":"kokerinks"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"kokerinks"},"content":"                    //do nothing","lastModifiedDate":"2024-01-28"},{"lineNumber":165,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":166,"author":{"gitId":"kokerinks"},"content":"                //check that time pattern comes after date pattern","lastModifiedDate":"2024-01-28"},{"lineNumber":167,"author":{"gitId":"kokerinks"},"content":"                try {","lastModifiedDate":"2024-01-28"},{"lineNumber":168,"author":{"gitId":"kokerinks"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(datePattern + \" \" + timePattern);","lastModifiedDate":"2024-01-28"},{"lineNumber":169,"author":{"gitId":"kokerinks"},"content":"                    return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":170,"author":{"gitId":"kokerinks"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":171,"author":{"gitId":"kokerinks"},"content":"                    //do nothing","lastModifiedDate":"2024-01-28"},{"lineNumber":172,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":173,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":174,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":175,"author":{"gitId":"kokerinks"},"content":"        return null;","lastModifiedDate":"2024-01-28"},{"lineNumber":176,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":177,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":178,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":179,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"kokerinks"},"content":"     * Creates a To do task","lastModifiedDate":"2024-01-31"},{"lineNumber":181,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"kokerinks"},"content":"     * @param description Description of the To do","lastModifiedDate":"2024-01-31"},{"lineNumber":183,"author":{"gitId":"kokerinks"},"content":"     * @return To do task","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"kokerinks"},"content":"     * @throws DukeException If the description is empty","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"kokerinks"},"content":"    public static Todo createTodo(String description) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":187,"author":{"gitId":"kokerinks"},"content":"        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":188,"author":{"gitId":"kokerinks"},"content":"        return newTodo;","lastModifiedDate":"2024-01-22"},{"lineNumber":189,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":190,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":191,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"kokerinks"},"content":"     * Creates a Deadline task","lastModifiedDate":"2024-01-31"},{"lineNumber":193,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"kokerinks"},"content":"     * @param description Description of the Deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"kokerinks"},"content":"     * @param dueDate     Due date of the Deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"kokerinks"},"content":"     * @return Deadline task","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"kokerinks"},"content":"     * @throws DukeException If the due date is not in a valid date-time format","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":199,"author":{"gitId":"kokerinks"},"content":"    public static Deadline createDeadline(String description, String dueDate) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":200,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":201,"author":{"gitId":"kokerinks"},"content":"        LocalDateTime dueDateTime \u003d createDateTime(dueDate);","lastModifiedDate":"2024-01-30"},{"lineNumber":202,"author":{"gitId":"kokerinks"},"content":"        if (dueDateTime \u003d\u003d null) {","lastModifiedDate":"2024-01-28"},{"lineNumber":203,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Unknown usage - due date of \\\"deadline\\\" is not in a valid date-time format.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":204,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":205,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":206,"author":{"gitId":"kokerinks"},"content":"        return new Deadline(description, dueDateTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":207,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":208,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":209,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":210,"author":{"gitId":"kokerinks"},"content":"     * Creates an Event task","lastModifiedDate":"2024-01-31"},{"lineNumber":211,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":212,"author":{"gitId":"kokerinks"},"content":"     * @param description Description of the Event","lastModifiedDate":"2024-01-31"},{"lineNumber":213,"author":{"gitId":"kokerinks"},"content":"     * @param startDate   Start date of the Event","lastModifiedDate":"2024-01-31"},{"lineNumber":214,"author":{"gitId":"kokerinks"},"content":"     * @param endDate     End date of the Event","lastModifiedDate":"2024-01-31"},{"lineNumber":215,"author":{"gitId":"kokerinks"},"content":"     * @return Event task","lastModifiedDate":"2024-01-31"},{"lineNumber":216,"author":{"gitId":"kokerinks"},"content":"     * @throws DukeException If the start date is after the end date","lastModifiedDate":"2024-01-31"},{"lineNumber":217,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":218,"author":{"gitId":"kokerinks"},"content":"    public static Event createEvent(String description, String startDate, String endDate) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":219,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":220,"author":{"gitId":"kokerinks"},"content":"        LocalDateTime startDateTime \u003d createDateTime(startDate);","lastModifiedDate":"2024-01-30"},{"lineNumber":221,"author":{"gitId":"kokerinks"},"content":"        if (startDateTime \u003d\u003d null) {","lastModifiedDate":"2024-01-28"},{"lineNumber":222,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Unknown usage - start date of \\\"event\\\" is not in a valid date-time format.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":223,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":224,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":225,"author":{"gitId":"kokerinks"},"content":"        LocalDateTime endDateTime \u003d createDateTime(endDate);","lastModifiedDate":"2024-01-30"},{"lineNumber":226,"author":{"gitId":"kokerinks"},"content":"        if (endDateTime \u003d\u003d null) {","lastModifiedDate":"2024-01-28"},{"lineNumber":227,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Unknown usage - end date of \\\"event\\\" is not in a valid date-time format.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":228,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":229,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":230,"author":{"gitId":"kokerinks"},"content":"        if (startDateTime.isAfter(endDateTime)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":231,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Unknown usage - start date of \\\"event\\\" is after end date.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":232,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":233,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":234,"author":{"gitId":"kokerinks"},"content":"        return new Event(description, startDateTime, endDateTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":235,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":236,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":237,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"kokerinks"},"content":"     * Main method","lastModifiedDate":"2024-01-31"},{"lineNumber":239,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":240,"author":{"gitId":"kokerinks"},"content":"     * @param args Command line arguments","lastModifiedDate":"2024-01-31"},{"lineNumber":241,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":242,"author":{"gitId":"kokerinks"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":243,"author":{"gitId":"kokerinks"},"content":"        String botName \u003d \"KokBot\";","lastModifiedDate":"2024-01-30"},{"lineNumber":244,"author":{"gitId":"kokerinks"},"content":"        Path path \u003d Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":245,"author":{"gitId":"kokerinks"},"content":"        new Duke(path, botName).run();","lastModifiedDate":"2024-01-30"},{"lineNumber":246,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kokerinks":245,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":" * Represents a DukeException","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"     * Constructor for DukeException","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"    public DukeException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"        super();","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"     * Constructor for DukeException","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"     * @param message Error message to be displayed","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"kokerinks":23}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":" * Represents a Parser","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"     * Constructor for Parser","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    public Parser() {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"     * Parses the input string and returns the corresponding Command","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"     * @param input Input string","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"     * @return Corresponding Command","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"     * @throws DukeException If the input string is not a valid command","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"        switch (parts[0]) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"            case \"list\":","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"                return new Command(Duke.CommandType.LIST);","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"                    Integer.parseInt(parts[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"                    String[] args \u003d new String[]{parts[1]};","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"                    return new Command(Duke.CommandType.MARK, args);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"                } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"                    throw new DukeException(\"Incorrect usage - please provide the task number to be marked done\");","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"                    Integer.parseInt(parts[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"                    String[] args \u003d new String[]{parts[1]};","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"                    return new Command(Duke.CommandType.UNMARK, args);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"                } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"                    throw new DukeException(\"Incorrect usage - please provide the task number to be unmarked\");","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"                String todoDesc \u003d input.substring(5);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"                if (todoDesc.equals(\"\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"                    throw new DukeException(\"Incorrect usage - description cannot be empty\");","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"                String[] args \u003d new String[]{todoDesc};","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"                return new Command(Duke.CommandType.TODO, args);","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"                int byIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"                for (byIndex \u003d 0; byIndex \u003c parts.length; byIndex++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"                    if (parts[byIndex].equals(\"/by\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"                if (byIndex \u003d\u003d parts.length) {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"                    throw new DukeException(\"Unknown usage - /by not found in \\\"deadline\\\" command.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"                String deadlineDesc \u003d String.join(\" \", Arrays.copyOfRange(parts, 1, byIndex));","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"                String dueDateStr \u003d String.join(\" \", Arrays.copyOfRange(parts, byIndex + 1, parts.length));","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"                if (deadlineDesc.equals(\"\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"                    throw new DukeException(\"Unknown usage - description of \\\"deadline\\\" should not be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"                if (dueDateStr.equals(\"\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"                    throw new DukeException(\"Unknown usage - due date of \\\"deadline\\\" should not be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"kokerinks"},"content":"                return new Command(Duke.CommandType.DEADLINE, new String[]{deadlineDesc, dueDateStr});","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"kokerinks"},"content":"            case \"event\":","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"kokerinks"},"content":"                int fromIndex \u003d -1;","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"kokerinks"},"content":"                int toIndex \u003d -1;","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"kokerinks"},"content":"                for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"kokerinks"},"content":"                    if (parts[i].equals(\"/from\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"kokerinks"},"content":"                        fromIndex \u003d i;","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"kokerinks"},"content":"                    } else if (parts[i].equals(\"/to\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"kokerinks"},"content":"                        toIndex \u003d i;","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"kokerinks"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"kokerinks"},"content":"                if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"kokerinks"},"content":"                    throw new DukeException(\"Unknown usage - /from not found in \\\"event\\\" command.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"kokerinks"},"content":"                if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"kokerinks"},"content":"                    throw new DukeException(\"Unknown usage - /to not found in \\\"event\\\" command.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"kokerinks"},"content":"                String description \u003d String.join(\" \", Arrays.copyOfRange(parts, 1, fromIndex));","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"kokerinks"},"content":"                String startDateStr \u003d String.join(\" \", Arrays.copyOfRange(parts, fromIndex + 1, toIndex));","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"kokerinks"},"content":"                String endDateStr \u003d String.join(\" \", Arrays.copyOfRange(parts, toIndex + 1, parts.length));","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"kokerinks"},"content":"                if (description.equals(\"\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"kokerinks"},"content":"                    throw new DukeException(\"Unknown usage - description of \\\"event\\\" should not be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"                if (startDateStr.equals(\"\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"kokerinks"},"content":"                    throw new DukeException(\"Unknown usage - start date of \\\"event\\\" should not be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"                if (endDateStr.equals(\"\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"                    throw new DukeException(\"Unknown usage - end date of \\\"event\\\" should not be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"kokerinks"},"content":"                return new Command(Duke.CommandType.EVENT, new String[]{description, startDateStr, endDateStr});","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"kokerinks"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"kokerinks"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"kokerinks"},"content":"                    if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"                        throw new DukeException(\"Unknown usage - task number should be included in \\\"delete\\\" command\");","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"kokerinks"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"kokerinks"},"content":"                    for (char c : parts[1].toCharArray()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"kokerinks"},"content":"                        if (!Character.isDigit(c)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"kokerinks"},"content":"                            throw new DukeException(\"Unknown usage - task number given is not a valid number\");","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"kokerinks"},"content":"                        }","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"kokerinks"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"kokerinks"},"content":"                    int i \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"kokerinks"},"content":"                    return new Command(Duke.CommandType.DELETE, new String[]{parts[1]});","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"kokerinks"},"content":"                } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"kokerinks"},"content":"                    throw new DukeException(\"Unknown usage - task number given is not a valid number\");","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"kokerinks"},"content":"            case \"find\":","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"kokerinks"},"content":"                if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"kokerinks"},"content":"                    throw new DukeException(\"Unknown usage - keyword should be included in \\\"find\\\" command\");","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"kokerinks"},"content":"                String keyword \u003d input.substring(5);","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"kokerinks"},"content":"                return new Command(Duke.CommandType.FIND, new String[]{keyword});","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"kokerinks"},"content":"            default:","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"kokerinks"},"content":"                throw new DukeException(\"Unknown command\");","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"kokerinks":134}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"import java.util.List;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":" * Represents the file storage of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"     * Path of the file","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"    protected Path filePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"     * Constructor for Storage","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"     * @param newFilePath Path of the file","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"    public Storage(Path newFilePath) {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        this.filePath \u003d newFilePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"     * Returns the file given its path","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"     * @param path Path of the file","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"     * @return File","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"     * @throws DukeException If there is an error creating the file","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"    private static File getFile(Path path) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"        File file \u003d path.toFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"                throw new DukeException(\"Error creating file\");","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"        return file;","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"     * Updates the file with the given list of task Strings","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"     * @param tasks list of task Strings to be written to the file","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"     * @throws DukeException If there is an error updating the file","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"    public void updateFile(String[] tasks) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"        File file;","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"        file \u003d getFile(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"            lines.clear();","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"            lines.addAll(Arrays.asList(tasks));","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"kokerinks"},"content":"            Files.write(filePath, lines);","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"kokerinks"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Error updating file\");","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"kokerinks"},"content":"     * Loads the file and returns the list of parsed Task objects","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"kokerinks"},"content":"     * @return List of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"kokerinks"},"content":"     * @throws DukeException If there is an error loading the file","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"kokerinks"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"kokerinks"},"content":"        File file;","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"kokerinks"},"content":"        file \u003d getFile(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"kokerinks"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"kokerinks"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"kokerinks"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"kokerinks"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"kokerinks"},"content":"                String[] parts \u003d line.split(\",\");","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"kokerinks"},"content":"                switch (parts[0]) {","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"kokerinks"},"content":"                    case \"T\":","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"kokerinks"},"content":"                        tasks.add(new Todo(parts[2]));","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"kokerinks"},"content":"                    case \"D\":","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"kokerinks"},"content":"                        tasks.add(new Deadline(parts[2], parts[3]));","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"kokerinks"},"content":"                    case \"E\":","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"                        tasks.add(new Event(parts[2], parts[3], parts[4]));","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"kokerinks"},"content":"                if (parts[1].equals(\"X\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"kokerinks"},"content":"                    tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"kokerinks"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"            System.out.println(\"File not found: \" + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"kokerinks"},"content":"        return tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"kokerinks":114}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":" * Represents the list of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"     * List of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"     * Constructor for TaskList","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"     * Constructor for TaskList with existing ArrayList of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"     * @param newTasks ArrayList of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"    public TaskList(ArrayList\u003cTask\u003e newTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"        this.tasks \u003d newTasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"     * Adds a task to the list of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"     * @param newTask Task to be added","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"     * Deletes a task from the list of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"     * @param index Index of the task to be deleted","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"     * @return Task that was deleted","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"     * Marks a task of the given index as done","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"     * @param index Index of the task to be marked as done","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"        this.tasks.get(index).markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"     * Marks a task of the given index as undone","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"     * @param index Index of the task to be marked as undone","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"    public void markTaskAsUndone(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"        this.tasks.get(index).markAsUndone();","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"     * Returns the task of the given index","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"kokerinks"},"content":"     * @param index Index of the task to be returned","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"kokerinks"},"content":"     * @return Task of the given index","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"kokerinks"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"kokerinks"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"kokerinks"},"content":"     * Returns the number of tasks in the list","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"kokerinks"},"content":"     * @return Number of tasks in the list","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"kokerinks"},"content":"    public int getSize() {","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"kokerinks"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"kokerinks"},"content":"     * Returns the list of tasks to be printed to the user","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"kokerinks"},"content":"     * @return List of tasks to be printed to the user","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"kokerinks"},"content":"    public String[] getTaskStrings() {","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"kokerinks"},"content":"        String[] taskStrings \u003d new String[this.tasks.size()];","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"kokerinks"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"kokerinks"},"content":"            taskStrings[i] \u003d this.tasks.get(i).toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"kokerinks"},"content":"        return taskStrings;","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"     * Returns the list of tasks to be saved to file","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"kokerinks"},"content":"     * @return List of tasks to be saved to file","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"kokerinks"},"content":"    public String[] getFileStrings() {","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"kokerinks"},"content":"        String[] storageStrings \u003d new String[this.tasks.size()];","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"kokerinks"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"            storageStrings[i] \u003d this.tasks.get(i).toFileString();","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"kokerinks"},"content":"        return storageStrings;","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"kokerinks"},"content":"    public ArrayList\u003cString\u003e getMatchingTasks(String keyword) {","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"kokerinks"},"content":"        ArrayList\u003cString\u003e matchingTasks \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"kokerinks"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"kokerinks"},"content":"            if (task.matchesKeyword(keyword)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"kokerinks"},"content":"                matchingTasks.add(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"kokerinks"},"content":"        return matchingTasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"kokerinks":124}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"     * Name of the bot","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    protected String botName;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"     * Scanner to read user input","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    protected Scanner scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"     * Constructor for Ui","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"     * @param botName Name of the bot","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"    public Ui(String botName) {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"        this.botName \u003d botName;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"     * Reads the next line of user input","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"     * @return Next line of user input","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"     * Shows the message if error when loading file","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"____________________________________________________________%n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\" Error loading file. Creating new file...%n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"____________________________________________________________%n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"     * Shows welcome message","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"____________________________________________________________%n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\" Hello! I\u0027m %s%n\", botName);","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\" What can I do for you?%n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"____________________________________________________________%n%n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"     * Shows a string representation of the list of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"    public void showTaskList(String[] tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"        System.out.print(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"        System.out.print(\" Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"        for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"            System.out.printf(\" %d.%s%n\", i + 1, tasks[i]);","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"     * Shows a string representation of the task marked as done","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"kokerinks"},"content":"     * @param task Task being marked as done","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"kokerinks"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"____________________________________________________________%n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\" Nice! I\u0027ve marked this task as done:%n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"   %s%n\", task);","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"kokerinks"},"content":"     * Shows a string representation of the task marked as undone","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"kokerinks"},"content":"     * @param task Task being marked as undone","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"kokerinks"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"____________________________________________________________%n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\" OK, I\u0027ve marked this task as not done yet:%n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"   %s%n\", task);","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"kokerinks"},"content":"     * Shows a string representation of the task added","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"kokerinks"},"content":"     * @param task Task being added","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"kokerinks"},"content":"     * @param len Length of the list of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"kokerinks"},"content":"    public void showTaskAdded(Task task, int len) {","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"kokerinks"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"kokerinks"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"kokerinks"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"        System.out.println(\"Now you have \" + len + \" tasks in the list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"     * Shows a string representation of the task deleted","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"kokerinks"},"content":"     * @param task Task being deleted","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"kokerinks"},"content":"     * @param len Length of the list of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"kokerinks"},"content":"    public void showTaskDeleted(Task task, int len) {","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"____________________________________________________________%n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\" Noted. I\u0027ve removed this task:%n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"   %s%n\", task);","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\" Now you have %d tasks in the list.%n\", len);","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"kokerinks"},"content":"     * Bids goodbye to the user","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"kokerinks"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"____________________________________________________________%n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\" Bye. Hope to see you again soon!%n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"____________________________________________________________%n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"kokerinks"},"content":"    public void showMatchingTasks(ArrayList\u003cString\u003e matchingTasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"____________________________________________________________%n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\" Here are the matching tasks in your list:%n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"kokerinks"},"content":"        for (String task : matchingTasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"kokerinks"},"content":"            System.out.printf(\"   %s%n\", task);","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"kokerinks"},"content":"     * Prints a line break","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"kokerinks"},"content":"    public void printLineBreak() {","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"kokerinks"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"kokerinks":139}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package duke.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":" * Represents a Deadline task","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"     * Due date of the Deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"    protected LocalDateTime dueDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"     * Constructor for Deadline with LocalDateTime","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"     * @param description Description of the Deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"     * @param newDueDate  Due date of the Deadline in LocalDateTime format","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    public Deadline(String description, LocalDateTime newDueDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        this.dueDate \u003d newDueDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"     * Constructor for Deadline with String","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"     * @param description Description of the Deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"     * @param newDueDate  Due date of the Deadline in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"    public Deadline(String description, String newDueDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        super(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"        this.dueDate \u003d LocalDateTime.parse(newDueDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"     * Returns the due date of the Deadline in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"    public String formatDueDate() {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"        return this.dueDate.format(DateTimeFormatter.ofPattern(this.dateTimeFormat));","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"     * Represents the Deadline in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"     * @return String format of the Deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.formatDueDate());","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"     * Represents the Deadline in String format for saving to file","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"     * @return String format of the Deadline for saving to file","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"D,%s,%s\", super.toFileString(), this.dueDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"kokerinks":65}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package duke.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":" * Represents an Event task","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"     * Start date of the Event","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"    protected LocalDateTime startDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"     * End date of the Event","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"     * Constructor for Event with LocalDateTime","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"     * @param description  Description of the Event","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"     * @param newStartDate Start date of the Event in LocalDateTime format","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"     * @param newEndDate   End date of the Event in LocalDateTime format","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"    public Event(String description, LocalDateTime newStartDate, LocalDateTime newEndDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"        this.startDate \u003d newStartDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"        this.endDate \u003d newEndDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"     * Constructor for Event with String","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"     * @param description  Description of the Event","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"     * @param newStartDate Start date of the Event in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"     * @param newEndDate   End date of the Event in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"    public Event(String description, String newStartDate, String newEndDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"        super(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"        this.startDate \u003d LocalDateTime.parse(newStartDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"        this.endDate \u003d LocalDateTime.parse(newEndDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"     * Returns the start date of the Event in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"    public String formatStartDate() {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"        return this.startDate.format(DateTimeFormatter.ofPattern(this.dateTimeFormat));","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"     * Returns the end date of the Event in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"    public String formatEndDate() {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"        return this.endDate.format(DateTimeFormatter.ofPattern(this.dateTimeFormat));","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"     * Represents the Event in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"     * @return String format of the Event","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.formatStartDate(), this.formatEndDate());","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"kokerinks"},"content":"     * Represents the Event in String format for saving to file","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"kokerinks"},"content":"     * @return String format of the Event for saving to file","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"kokerinks"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"E,%s,%s,%s\", super.toFileString(), this.startDate, this.endDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"kokerinks":81}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package duke.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":" * Represents a Task","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"abstract public class Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"     * Description of the Task","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"     * Whether the Task is done","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"     * Format for dateTimes to be printed to the user","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"    protected String dateTimeFormat \u003d \"MMM d yyyy h:mma\";","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"     * Constructor for Task","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"     * @param description Description of the Task","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"     * Returns the status icon of the Task","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"     * @return Status icon of the Task","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"     * Returns the overview of the Task in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"     * @return Overview of the Task in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"     * Returns the overview of the Task in String format for saving to file","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"     * @return Overview of the Task in String format for saving to file","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"%s,%s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"     * Marks the current Task as done","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"     * Marks the current Task as undone","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"kokerinks"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":74,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"kokerinks"},"content":"    public boolean matchesKeyword(String keyword) {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"kokerinks"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"kokerinks":78}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package duke.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":" * Represents a To do task","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"     * Constructor for To do","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"     * @param description Description of the To do","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"     * Represents the To do in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"     * @return String format of the To do","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"     * Represents the To do in String format for saving to file","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"     * @return String format of the To do for saving to file","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"T,%s\", super.toFileString());","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"kokerinks":36}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package duke.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"    public void toString_normalInput_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2021-08-24T18:00\");","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"        assertEquals(\"[D][ ] read book (by: Aug 24 2021 6:00PM)\",","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"                new Deadline(\"read book\", dateTime).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"    public void toFileString_normalInput_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2021-08-24T18:00\");","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"        assertEquals(\"D, ,read book,2021-08-24T18:00\",","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"                new Deadline (\"read book\", dateTime).toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"kokerinks":22}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"package duke.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"    public void toString_normalInput_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"        assertEquals(\"[T][ ] read book\", new Todo(\"read book\").toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    public void toFileString_normalInput_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"        assertEquals(\"T, ,read book\", new Todo (\"read book\").toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"kokerinks":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"todo borrow book","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"unmark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"delete 2","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"delete hello","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"kokerinks":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kokerinks":1,"-":20}}]
