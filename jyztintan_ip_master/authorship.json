[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jyztintan":3,"-":41}},{"path":"data/taskyapper.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"T | 1 | CS2103T IP ","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"D | 0 | help me | 2024-01-29","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"E | 0 | birthday | 2001-11-14 | 2001-11-14","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"D | 0 | ip | 2024-01-30","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"E | 0 | 3230 | 2024-01-29 | 2024-01-30","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"D | 0 | ip | 2024-02-02","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"jyztintan":6}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"import commands.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"import commands.Parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import main.java.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import main.java.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":" * Duke is the main class for the task management application.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":" * It initializes the application and starts the interaction loop with the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"     * Constructs a new Duke object.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"     * Initializes the UI, storage, and task list components of the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"     * @param filePath The path to the file where tasks are saved and loaded from.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"        taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"        run();","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"     * Starts the application and enters the command processing loop.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"     * The loop reads commands from the user, parses them, and executes them","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"     * until the user issues the bye command.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"    public void run() {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"        while (isRunning) {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"            String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"                Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"                c.execute(taskList, ui, storage, userInput);","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"                if (c.equals(Command.BYE)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"            System.out.println(\"Quit yappin, that task does not exist\");","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"        ui.exit();","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"     * The main entry point for the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"     * Creates a new Duke instance and starts the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"     * @param args Command line arguments, not used in this application.","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"        new Duke(\"./data/taskyapper.txt\");","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jyztintan":67,"-":4}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package main.java;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":" * Storage handles the loading and saving of task list data to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"    private String filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"     * @param filePath The path to the file used for storing task list data.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"     * Loads tasks from the file specified by filePath.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"     * Parses each line of the file into a Task object and adds it to an ArrayList of Tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"                String[] inputs \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"                Task task \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"                switch (inputs[0]) {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"                case \"T\":","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"                    task \u003d new ToDo(inputs[2]);","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"                case \"D\":","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"                    task \u003d new Deadline(inputs[2], inputs[3]);","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"                case \"E\":","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"                    task \u003d new Event(inputs[2], inputs[3], inputs[4]);","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"                if (!task.equals(null)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"                    if (inputs[1].equals(\"1\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"                        task.markDone(true);","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"                    taskList.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"            sc.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"            System.out.println(\"Error reading the datafile, it might be corrupted. Creating a new database with any salvaged data\");","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"            TaskList salvagedTasks \u003d new TaskList(taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"            this.saveTasks(salvagedTasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"            file.delete();","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"                System.out.println(\"Failed to create a new blank file: \" + ioException.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"        return taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"     * Saves the current list of tasks to the file specified by filePath.","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"     * Converts each task into a format suitable for file storage before writing.","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"     * @param tasks The TaskList containing the tasks to be saved.","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"    public void saveTasks(TaskList tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"            PrintWriter pw \u003d new PrintWriter(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"jyztintan"},"content":"                pw.println(task.toFileFormat());","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"jyztintan"},"content":"            pw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"jyztintan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"jyztintan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jyztintan":105}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package main.java;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":" * Ui class handles the user interface of the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":" * It is responsible for reading user input and printing messages to the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"    private Scanner sc;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"    /*","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"     * It initializes the scanner object to read user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"     * It also prints a greeting message to the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"    public Ui() {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"        this.greet();","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    /*","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"     * Prints a greeting message to the user when the application starts.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"    public void greet() {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"        String logo \u003d \"▀█▀ ▄▀█ █▀ █▄▀ █▄█ ▄▀█ █▀█ █▀█ █▀▀ █▀█\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"                + \"░█░ █▀█ ▄█ █░█ ░█░ █▀█ █▀▀ █▀▀ ██▄ █▀▄\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"        System.out.println(\"*YAP* Good morning YAPPER! *YAP*\\nGreetings from\\n\" + logo);","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"    /*","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"     * Prints a message to the user when the application stops.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"    public void exit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"        String bye \u003d \"█▀▀ █▀█ █▀█ █▀▄ █▄▄ █▄█ █▀▀ █\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"                + \"█▄█ █▄█ █▄█ █▄▀ █▄█ ░█░ ██▄ ▄\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"        System.out.println(\"Stoppin\u0027 the YAP...\\n\" + bye);","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"        sc.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"     * Reads the next line of input from the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"     * @return The user input as a String.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"     * Displays a message indicating a task has been added.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"     * @param task The task that has been added.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"    public void triggerAddMessage(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"            return;","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"        System.out.println(\"Added task:\\n\" + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"     * Displays a message indicating a task has been deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"     * @param task The task that has been deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"    public void triggerDeleteMessage(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"            return;","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"        System.out.println(\"Okay, I\u0027ll stop yapping about this task:\\n\" + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jyztintan":78}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import main.java.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import main.java.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":" * Defines the set of commands that can be executed within the Duke application.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":" * Each enum constant represents a distinct command and defines its own execution behavior.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"public enum Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"     * Command to terminate the application. It saves the current state of tasks before exiting.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"    BYE {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage, String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"     * Command to list all tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"    YAP {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage, String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"            tasks.yapTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"     * Command to mark a specified task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"    MARK {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage, String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"            // Extract task index from argument and mark the task as done","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"            String[] inputs \u003d message.split(\" \");","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"            int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"            tasks.markTaskAsDone(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"     * Command to unmark a specified task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"    UNMARK {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage, String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"            // Extract task index from argument and mark the task as not done","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"            String[] inputs \u003d message.split(\" \");","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"            int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"            tasks.unmarkTaskAsDone(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"     * Command to add a todo task to tasklist.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"    ADD_TODO {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage, String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"            // Create a new tasks.ToDo task and add it to the task list","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"            Task task \u003d tasks.initTask(message, \"todo\");","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"            tasks.addTasktoTaskList(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"            ui.triggerAddMessage(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"     * Command to add a deadline task to tasklist.","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"    ADD_DEADLINE {","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage, String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"            // Create a new tasks.Deadline task and add it to the task list","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"            Task task \u003d tasks.initTask(message, \"deadline\");","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"            tasks.addTasktoTaskList(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"            ui.triggerAddMessage(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"     * Command to add a event task to tasklist.","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"    ADD_EVENT {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage, String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"            // Create a new tasks.Event task and add it to the task list","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"            Task task \u003d tasks.initTask(message, \"event\");","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"            tasks.addTasktoTaskList(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"            ui.triggerAddMessage(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"jyztintan"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"jyztintan"},"content":"     * Command to delete a task from tasklist by index.","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"jyztintan"},"content":"    DELETE {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"jyztintan"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage, String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"jyztintan"},"content":"            String[] inputs \u003d message.split(\" \");","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"jyztintan"},"content":"            int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"jyztintan"},"content":"            Task task \u003d tasks.removeTaskfromTaskList(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"jyztintan"},"content":"            ui.triggerDeleteMessage(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"jyztintan"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"jyztintan"},"content":"    FIND {","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"jyztintan"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage, String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"jyztintan"},"content":"            String[] inputs \u003d message.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"jyztintan"},"content":"            String queryString \u003d inputs[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"jyztintan"},"content":"            ArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"jyztintan"},"content":"            TaskList tempTaskList \u003d tasks.filter(queryString);","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"jyztintan"},"content":"            tempTaskList.yapTasks();","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"jyztintan"},"content":"    ;","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"jyztintan"},"content":"     * Executes the command with the given parameters.","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"jyztintan"},"content":"     * Each command defines its own execution behavior.","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"jyztintan"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"jyztintan"},"content":"     * @param ui The UI instance for user interaction.","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"jyztintan"},"content":"     * @param storage The storage instance for saving and loading tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"jyztintan"},"content":"     * @param message The additional message or data required for command execution.","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"jyztintan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"jyztintan"},"content":"        throw new UnsupportedOperationException(\"This command does not take any arguments.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jyztintan":141}},{"path":"src/main/java/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"     * Parses the given input message and returns the corresponding Command.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"     * The method maps specific keywords or phrases in the input message to predefined commands in the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"     * If the input message does not match any known command patterns, the method throws a DukeException with a message","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"     * prompting the user to provide a clearer instruction.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"     * @param message The user input message to be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"     * @return The Command corresponding to the user\u0027s input message.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"     * @throws DukeException If the input message does not match any known command patterns, indicating that the","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"     *                       user\u0027s instruction is unclear or invalid within the context of the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"    public static Command parse(String message) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"        if (message.equals(\"bye\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"            return Command.BYE;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"        } else if (message.equals(\"yap\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"            return Command.YAP;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"mark \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"            return Command.MARK;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"unmark \")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"            return Command.UNMARK;","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"            return Command.ADD_TODO;","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"            return Command.ADD_DEADLINE;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"event\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"            return Command.ADD_EVENT;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"            return Command.DELETE;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"find\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"            return Command.FIND;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"            throw new DukeException(\"What\u0027s YAPpening??!! Please yap your instruction more clearly\");","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jyztintan":42}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package exceptions;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":" * This class is used for handling exceptional scenarios that are unique to the Duke application\u0027s workflow.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"     * The detail message is saved for later retrieval by the {@link Throwable#getMessage()} method.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"     * @param errorMessage the detail message. The detail message is saved for later retrieval by the","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"     *                     {@link Throwable#getMessage()} method.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"    public DukeException(String errormessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"        super(errormessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"jyztintan":19}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":" * A deadline task is a task that needs to be done before a specific date.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"    protected LocalDate by; // The deadline date","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"     * Constructs a Deadline task with the specified description and deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"     * @param by The deadline date in the format of a String that can be parsed as a LocalDate.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"     * Returns a string representation of the deadline task, including its type,","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"     * status, description, and deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.getMonth() + \" \" + by.getDayOfMonth() + \" \" + by.getYear() + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"     * Returns a string formatted for file storage, including the task type,","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"     * completion status, description, and deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"     * @return A string suitable for storing the task in a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"        String completed \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"        return \"D | \" + completed + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"jyztintan":45}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":" * Represents an event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":" * An event is a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"    protected LocalDate from; //The start date of the event","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"    protected LocalDate to; //The end date of the event","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"     * Constructs an Event task with the specified description, start date, and end date.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"     * @param from The start date of the event in the format of a String that can be parsed as a LocalDate.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"     * @param to The end date of the event in the format of a String that can be parsed as a LocalDate.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"     * Returns a string representation of the event task, including its type,","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"     * status, description, start date, and end date.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.getMonth() + \" \" + from.getDayOfMonth() + \" \" + from.getYear()","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"                + \" to \" + to.getMonth() + \" \" + to.getDayOfMonth() + \" \" + to.getYear() + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"     * Returns a string formatted for file storage, including the task type,","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"     * completion status, description, start date, and end date.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"     * @return A string suitable for storing the task in a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"        String completed \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"        return \"E | \" + completed + \" | \" + this.description + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"jyztintan":49}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":" * Represents a general task in the task management application.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":" * This class serves as a base for specific types of tasks like ToDo, Deadline, and Event.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"    protected String description; // The description of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"    protected boolean isDone; //The completion status of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"     * @return The task\u0027s description.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"        return this.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"     * @return The task\u0027s completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"     * Returns a string representation of the task\u0027s status icon.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"     * Completed tasks are marked with \"[X]\" and incomplete tasks with \"[ ]\".","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"     * @return A string representing the task\u0027s completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"     * Marks the task as done or not done based on the input.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"     * Prints a message indicating the action taken.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"     * @param start Indicates whether the marking is being done at the start (initial loading).","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"    public void markDone(boolean start) {","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"            System.out.println(\"Stop yappin\u0027 bruh... tasks.Task is already marked as done\");","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"            if (!start) {","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"            System.out.println(\"Good job Yapper! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"        if (!start) {","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"            System.out.println(this);","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"     * Unmarks the task as done, setting its status to incomplete.","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"     * Prints a message indicating the action taken.","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"    public void unmarkDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"        if (!this.isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"            System.out.println(\"Stop yappin\u0027 bruh... tasks.Task remains incomplete\");","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"            System.out.println(\"YAPYAP! I\u0027ve unmarked this task...\");","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"        System.out.println(this);","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"     * Returns a string formatted for file storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"     * This method is intended to be overridden by subclasses.","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"jyztintan"},"content":"     * @return A string suitable for storing the task in a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"jyztintan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"jyztintan"},"content":"        return \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"jyztintan":103}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":" * Represents a list of tasks in the task management application.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":" * This class encapsulates operations such as adding, removing, marking tasks as done, and listing all tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"    private ArrayList\u003cTask\u003e taskList;// The list of tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"     * @param taskList The initial list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"        return this.taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"     * Displays all tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"     * If the list is empty, it prints a message indicating there are no tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"    public void yapTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"            System.out.println(\"Nothin\u0027 to yap...\");","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"            System.out.println((i+1)+\". \"+taskList.get(i));","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"     * @param index The index of the task in the list to be marked as done, starting from 1.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"        Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"        task.markDone(false);","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"     * @param index The index of the task in the list to be marked as done, starting from 1.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"    public void unmarkTaskAsDone(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"        Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"        task.unmarkDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"    public void addTasktoTaskList(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"            return;","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"        taskList.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"     * Removes a task from the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"     * @param index The index of the task in the list to be removed, starting from 1.","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"     * @return The task that was removed.","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"    public Task removeTaskfromTaskList(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"        Task task \u003d taskList.remove(index - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"        return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"     * Initializes a task based on the input message and task type.","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"     * This method attempts to parse the input and create the appropriate task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"     * @param message The input message containing task details.","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"     * @param taskType The type of the task (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"     * @return The initialized task, or null if the task could not be created due to invalid input.","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"jyztintan"},"content":"    public Task initTask(String message, String taskType) {","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"jyztintan"},"content":"        Task task;","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"jyztintan"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"jyztintan"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"jyztintan"},"content":"                try {","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"jyztintan"},"content":"                    String[] inputs \u003d message.split(\"todo \");","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"jyztintan"},"content":"                    task \u003d new ToDo(inputs[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"jyztintan"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"jyztintan"},"content":"                    throw new DukeException(\"Whats the task, yapper???\");","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"jyztintan"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"jyztintan"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"jyztintan"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"jyztintan"},"content":"                try {","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"jyztintan"},"content":"                    message \u003d message.substring(\"deadline \".length());","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"jyztintan"},"content":"                    String[] inputs \u003d message.split(\"/by\");","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"jyztintan"},"content":"                    task \u003d new Deadline(inputs[0].trim(), inputs[1].trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"jyztintan"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"jyztintan"},"content":"                    throw new DukeException(\"Deadlines need a deadline, yapper!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"jyztintan"},"content":"                } catch (StringIndexOutOfBoundsException e ) {","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"jyztintan"},"content":"                    throw new DukeException(\"Whats the task, yapper???\");","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"jyztintan"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"jyztintan"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"jyztintan"},"content":"            case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"jyztintan"},"content":"                try {","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"jyztintan"},"content":"                    message \u003d message.substring(\"event \".length());","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"jyztintan"},"content":"                    String[] inputs \u003d message.split(\"/from\");","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"jyztintan"},"content":"                    String[] innerInputs \u003d inputs[1].split(\"/to\");","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"jyztintan"},"content":"                    task \u003d new Event(inputs[0].trim(), innerInputs[0].trim(), innerInputs[1].trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"jyztintan"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"jyztintan"},"content":"                    throw new DukeException(\"YAPYAP, What time is your from and to?\");","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"jyztintan"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"jyztintan"},"content":"                    throw new DukeException(\"Whats the task, yapper???\");","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"jyztintan"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"jyztintan"},"content":"            default:","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"jyztintan"},"content":"                //should not reach here because of filter in main logic","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"jyztintan"},"content":"                task \u003d new Task(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"jyztintan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"jyztintan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"jyztintan"},"content":"            return null;","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"jyztintan"},"content":"        return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"jyztintan"},"content":"    public TaskList filter(String queryString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"jyztintan"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"jyztintan"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"jyztintan"},"content":"            if (task.getDescription().contains(queryString)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"jyztintan"},"content":"                newList.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"jyztintan"},"content":"        return new TaskList(newList);","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jyztintan":153}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"/*","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":" * Represents a to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":" * A to-do is a task without any date/time associated with it.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"     * Returns a string representation of the to-do task, including its type,","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"     * status, and description.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"     * @return A string representation of the to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"     * Returns a string formatted for file storage, including the task type,","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"     * completion status, and description.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"     * @return A string suitable for storing the task in a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"        String completed \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"        return \"T | \" + completed + \" | \" + this.description;","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"jyztintan":39}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"public class DukeTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"    public void dummyTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"        DukeTest test \u003d new DukeTest();","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"        test.dummyTest();","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"        test.anotherDummyTest();","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"jyztintan":21}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import main.java.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"public class UiTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    @AfterEach","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    public void testGreet() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"        ui.greet();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"        String expectedOutput \u003d \"*YAP* Good morning YAPPER! *YAP*\\nGreetings from\\n\" + \"▀█▀ ▄▀█ █▀ █▄▀ █▄█ ▄▀█ █▀█ █▀█ █▀▀ █▀█\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"                + \"░█░ █▀█ ▄█ █░█ ░█░ █▀█ █▀▀ █▀▀ ██▄ █▀▄\\n\" + System.lineSeparator();","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"    public void testExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"        ui.exit();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"        String expectedOutput \u003d \"Stoppin\u0027 the YAP...\\n\" + \"█▀▀ █▀█ █▀█ █▀▄ █▄▄ █▄█ █▀▀ █\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"                + \"█▄█ █▄█ █▄█ █▄▀ █▄█ ░█░ ██▄ ▄\\n\" + System.lineSeparator();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"jyztintan":41}},{"path":"src/test/java/tasksTest/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package tasksTest;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"public class TaskTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"    public void testTaskInit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"        Task task \u003d new Task(\"hello\");","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"        assertEquals(\"hello\", task.getDescription());","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"        assertEquals(false, task.getStatus());","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"    public void testStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"        Task task \u003d new Task(\"hello\");","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"        assertEquals(task.getStatusIcon(), \"[ ]\");","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"        task.markDone(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"        assertEquals(task.getStatusIcon(), \"[X]\");","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"jyztintan":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"yapyapyap","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"deadline CS2103T work /by Wednesday 11am","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"event CS2103T Lecture /from Friday 4pm /to 6pm","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"todo Learn about Git commands","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"yap","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"delete 1","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"yap","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"jyztintan":11}}]
