{"authorDailyContributionsMap":{"shunjieee":[{"date":"2024-01-25","commitResults":[{"hash":"c4f0b7c3ef80e5665734e0f5db3cde75be164fb2","isMergeCommit":false,"messageTitle":"Duke.java: Add Level-0 requirements","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}}]},{"date":"2024-01-26","commitResults":[{"hash":"63aaba617f50ca60f6d7c6f420d129529c23652a","isMergeCommit":false,"messageTitle":"Duke.java: Add Level-1 requirements","messageBody":"The chatbot now take user inputs.\n\nImplementing echo functionality allows user to interact with the\nchatbot.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":4}}},{"hash":"60e044f2a0382a7c2102e9f54b96e204d94a57ae","isMergeCommit":false,"messageTitle":"Duke.java: Add Level-2 requirements","messageBody":"User inputs are tasks to be added into the list. Inputting\n\"list\" allows return of the tasks listed in chronological order.\n\nLet\u0027s use a data structure (i.e. ArrayList) to store the tasks.\n\nArrayList allows random access of tasks in the array.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":3}}},{"hash":"3dcf67ff115b2c606a88ad0bc50371e34dff8dcd","isMergeCommit":false,"messageTitle":"Add helperpackage and Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":0}}},{"hash":"5c6a18234d376ba9e42c4e8470de94b2ea906429","isMergeCommit":false,"messageTitle":"Duke.java: Add Level-3 requirements","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":6}}}]},{"date":"2024-01-30","commitResults":[{"hash":"7e74b17bef5578604fc8c92e3d1f2a420113e6c1","isMergeCommit":false,"messageTitle":"Add Deadline.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"3477c2adbe6afdc2654a92d9439cff7b914f5deb","isMergeCommit":false,"messageTitle":"Add Event.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"e2862b01d378e1bceda7acdbfb471575076fb2e2","isMergeCommit":false,"messageTitle":"ToDo.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"e38ae263c1a208e5fce1ced86cab14ce773dc1e7","isMergeCommit":false,"messageTitle":"Update test cases and expected results","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0},"sh":{"insertions":0,"deletions":0}}}]},{"date":"2024-02-01","commitResults":[{"hash":"c527c2b177f9ec85c6c500c98053f7dd66a57f82","isMergeCommit":false,"messageTitle":"Deadline.java: Add DukeException for invalid inputs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":2}}},{"hash":"8f063a8b28eb193d00efc63c53dab9ef7523c648","isMergeCommit":false,"messageTitle":"Event.java: Add DukeException for invalid inputs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":2}}},{"hash":"6ccab68f9e7dc5f807232527920f9934022e75e6","isMergeCommit":false,"messageTitle":"Add DukeException.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"0ebbf062ff01c47ed8ac9a3e0b8041ef69036c67","isMergeCommit":false,"messageTitle":"Duke.java: Add try-catch for exceptions","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":28}}},{"hash":"b884da49383bbdc7e810cee2619375c3e90d9b01","isMergeCommit":false,"messageTitle":"Duke.java: Add Level-6 requirements","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":4}}}]},{"date":"2024-02-02","commitResults":[{"hash":"02c1ec31378fffb8932bc84b33ea9c024e97ce70","isMergeCommit":false,"messageTitle":"Add ToDo.java","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}}]},{"date":"2024-02-05","commitResults":[{"hash":"6389e2f42d6317929b507b6054a24cac0b9e8ffd","isMergeCommit":true,"messageTitle":"Merge commit \u002702c1ec31378fffb8932bc84b33ea9c024e97ce70\u0027","messageBody":"* commit \u002702c1ec31378fffb8932bc84b33ea9c024e97ce70\u0027:\n  Add ToDo.java\n","fileTypesAndContributionMap":{}}]},{"date":"2024-02-07","commitResults":[{"hash":"52aa83dee239ee780c6265558322c3ddb7d8a952","isMergeCommit":false,"messageTitle":"Add toData() function","messageBody":"This function allows a different formatting that is used in the\ntext file, e.g. E | 1 | concert | Aug 2nd 4-6pm, as compared to\nthe toString method.\n\nThis format is also in accordance with how the text file will\nbe read when the programme runs.\n\nLet\u0027s create a new function to give an output with a specific format\n","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":5}}},{"hash":"d09f72d4d63241a6c727c7f11808d74849852cd1","isMergeCommit":false,"messageTitle":"Add branch-Level-7 requirements","messageBody":"Data can be read from a text file when the program is\ninitialised. The text file is updated when the program\nterminated.\n\nLet\u0027s\n* create an instance of File to locate the text file\n* handle errors when locating the file, i.e. file / path\ndoes not exist\n* read existing data from the file and add them into the\ntaskList, if any\n* update the text file when the program terminates\n","fileTypesAndContributionMap":{"java":{"insertions":90,"deletions":12}}},{"hash":"002c74196386de82e8c30de073860541ef4883eb","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"* branch-Level-7:\n  Add branch-Level-7 requirements\n  Add toData() function\n","tags":["Level-7"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"shunjieee":{"java":385,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":0,"txt":9}},"authorContributionVariance":{"shunjieee":3083.4},"authorDisplayNameMap":{"shunjieee":"CS2103T-T12-3 LEE .. JIE"}}
