[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"# Signal: A task helper","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"This is a project based on the template for a greenfield Java project. Given below are instructions on how to use it.","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"\u003cimg src\u003d\"./docs/Ui.png\" alt\u003d\"A screenshot of the chatbot\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"## Features","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"* Create tasks, set deadlines and create events","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"* Mark some tasks as priority","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"* Mark tasks done and un-done","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"Find the full feature list [here](https://tahnya.github.io/ip/)!","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"## Accepted inputs:","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"Note:","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"The round brackets indicate you can enter any text, square brackets indicate you should enter a number, without the brackets.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"CREATING TASKS:","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"* todo \u003ctask\u003e -- creates a To Do task, which has no deadline.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"* deadline \u003ctask\u003e /by \u003cdate\u003e \u003ctime\u003e -- creates a Deadline task, indicate its deadline after \u0027/by\u0027. Adding the time is optional.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"* event \u003ctask\u003e /from \u003cdate\u003e \u003ctime\u003e /to \u003cdate\u003e \u003ctime\u003e -- creates an Event task, indicate its start and end after \u0027/from\u0027 and \u0027/to\u0027. Adding the time is optional.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"Note: dates and times are formatted as \u003cdd-mm-yyyy\u003e \\\u003chhmm\u003e. Dates added are always in the current year if not specified.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"COMMANDS: ","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"* list -- prints a numbered list of the tasks created, in input order.","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"* mark \u003ctask_number\u003e -- marks the task at index \u003ctask_number\u003e as completed. ","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"* unmark \u003ctask_number\u003e -- marks the task at index \u003ctask_number\u003e as uncompleted. ","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"* notdonelist -- show the list of tasks that are uncompleted.","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"* prioritise \u003ctask_number\u003e -- sets the task at index \u003ctask_number\u003e as priority.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"* unprioritise \u003ctask_number\u003e -- sets the task at index \u003ctask_number\u003e as non priority.","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"* prioritylist -- show the list of prioritised tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"* find \u003ctext\u003e -- show a list of tasks which contain \u003ctext\u003e in their description.","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"* delete \u003ctask_number\u003e -- removes the task at index [] from the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"* bye -- exits the program.","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"tahnya":32,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"    archiveFileName \u003d \u0027signal.jar\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"    archiveBaseName \u003d \"signal\"","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tahnya":20,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"# SIGNAL User Guide","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"\u003cimg src\u003d\"./Ui.png\" alt\u003d\"A screenshot of a chat\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"Signal is a chat-bot helper who is here to assist you in managing your tasks!","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"Feature list:","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"* Viewing help","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"* Adding a ToDo task","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"* Adding a Deadline task","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"* Adding an Event task","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"* Marking a task as completed","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"* Marking a task as uncompleted","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"* Marking a task as priority","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"* Marking a task as non-priority","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"* Listing all tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"* Listing uncompleted tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"* Listing priority tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"* Finding a task by description","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"* Spelling error detection","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"* Deleting a task","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"* Exiting the program","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"## Viewing help ","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"Shows a message explaining how to access the help message.","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"Format: `help`","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"## Adding a ToDo task","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"Adds a new task","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"Format: `todo \u003ctask\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"Example: `todo sleep`","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"Output: The task description and type are shown.","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"Got it! I\u0027ve added this task to your list:","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"  T | 0 | sleep","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"## Adding a Deadline task","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"Adds a new task with a deadline.","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"Format: `deadline \u003ctask\u003e /by \u003cdate\u003e \u003ctime\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"Example: `deadline homework /by 2024-02-23 23:59:59`","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"\u003e Tip! dates and times are formatted as `\u003cdd-mm-yyyy\u003e \\\u003chhmm\u003e`. It is optional to include the year or time.","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"tahnya"},"content":"Output: The task description, type and deadline are shown.","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"tahnya"},"content":"Got it! I\u0027ve added this task to your list:","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"tahnya"},"content":"  D | 0 | homework | by: 23 Feb 2024 11:59 pm","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"tahnya"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"tahnya"},"content":"## Adding an Event task","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"tahnya"},"content":"Adds a new task with a start and end time.","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"tahnya"},"content":"Format: `event \u003ctask\u003e /from \u003cdate\u003e \u003ctime\u003e /to \u003cdate\u003e \u003ctime\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"tahnya"},"content":"Example: `event birthday /from 2024-12-12 /to 2024-12-12`","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"tahnya"},"content":"\u003e Tip! dates and times are formatted as \u003cyyyy-mm-dd\u003e \u003chh:mm:ss\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"tahnya"},"content":"Output: The task description, type, start and end time are shown.","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"tahnya"},"content":"Got it! I\u0027ve added this task to your list:","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"tahnya"},"content":"  E | 0 | birthday | from: 12 Dec 2024 | to: 12 Dec 2024","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"tahnya"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"tahnya"},"content":"## Marking a task as completed","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"tahnya"},"content":"Marks a task as completed with an \u0027X\u0027.","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"tahnya"},"content":"Format: `mark \u003ctask_number\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"tahnya"},"content":"Example: `mark 12`","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"tahnya"},"content":"Output: The task is shown with an \u0027X\u0027 beside it.","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"tahnya"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"tahnya"},"content":"  D | X | homework | by: 23 Feb 2024 11:59 pm","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"tahnya"},"content":"## Marking a task as uncompleted","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"tahnya"},"content":"Marks a task as uncompleted, removing the \u0027X\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"tahnya"},"content":"Format: `unmark \u003ctask_number\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"tahnya"},"content":"Example: `unmark 12`","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"tahnya"},"content":"Output: The task is shown without the \u0027X\u0027 beside it.","lastModifiedDate":"2024-02-24"},{"lineNumber":111,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"tahnya"},"content":"OK, I\u0027ve marked this task as undone:","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"tahnya"},"content":"  D | 0 | homework | by: 23 Feb 2024 11:59 pm","lastModifiedDate":"2024-02-24"},{"lineNumber":115,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":116,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":117,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":118,"author":{"gitId":"tahnya"},"content":"## Marking a task as priority","lastModifiedDate":"2024-02-24"},{"lineNumber":119,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":120,"author":{"gitId":"tahnya"},"content":"Marks a task as priority with a \u0027*\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":121,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"tahnya"},"content":"Format: `prioritise \u003ctask_number\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":123,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":124,"author":{"gitId":"tahnya"},"content":"Example: `prioritise 12`","lastModifiedDate":"2024-02-24"},{"lineNumber":125,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":126,"author":{"gitId":"tahnya"},"content":"Output: The task is shown with a \u0027*\u0027 beside it.","lastModifiedDate":"2024-02-24"},{"lineNumber":127,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":128,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":129,"author":{"gitId":"tahnya"},"content":"OK, I\u0027ve marked this task as high priority!","lastModifiedDate":"2024-02-24"},{"lineNumber":130,"author":{"gitId":"tahnya"},"content":"  D | 0 | homework * | by: 23 Feb 2024 11:59 pm","lastModifiedDate":"2024-02-24"},{"lineNumber":131,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":133,"author":{"gitId":"tahnya"},"content":"## Marking a task as non-priority","lastModifiedDate":"2024-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"tahnya"},"content":"Marks a task as non-priority, removing the \u0027*\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":137,"author":{"gitId":"tahnya"},"content":"Format: `unprioritise \u003ctask_number\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":139,"author":{"gitId":"tahnya"},"content":"Example: `unprioritise 12`","lastModifiedDate":"2024-02-24"},{"lineNumber":140,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":141,"author":{"gitId":"tahnya"},"content":"Output: The task is shown without the \u0027*\u0027 beside it.","lastModifiedDate":"2024-02-24"},{"lineNumber":142,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":143,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":144,"author":{"gitId":"tahnya"},"content":"OK, I\u0027ve marked this task as not priority!","lastModifiedDate":"2024-02-24"},{"lineNumber":145,"author":{"gitId":"tahnya"},"content":"  T | 0 | sleep ","lastModifiedDate":"2024-02-24"},{"lineNumber":146,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":147,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":148,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":149,"author":{"gitId":"tahnya"},"content":"## Listing all tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":150,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":151,"author":{"gitId":"tahnya"},"content":"Shows a list of all the tasks added.","lastModifiedDate":"2024-02-24"},{"lineNumber":152,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":153,"author":{"gitId":"tahnya"},"content":"Format: `list`","lastModifiedDate":"2024-02-24"},{"lineNumber":154,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":155,"author":{"gitId":"tahnya"},"content":"Output: A numbered list of tasks created, in order of creation.","lastModifiedDate":"2024-02-24"},{"lineNumber":156,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":157,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":158,"author":{"gitId":"tahnya"},"content":"## Listing uncompleted tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":159,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":160,"author":{"gitId":"tahnya"},"content":"Shows a list of all the uncompleted tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":161,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":162,"author":{"gitId":"tahnya"},"content":"Format: `notdonelist`","lastModifiedDate":"2024-02-24"},{"lineNumber":163,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":164,"author":{"gitId":"tahnya"},"content":"Output: A numbered list of uncompleted tasks, in order of creation.","lastModifiedDate":"2024-02-24"},{"lineNumber":165,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":166,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":167,"author":{"gitId":"tahnya"},"content":"## Listing priority tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":168,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":169,"author":{"gitId":"tahnya"},"content":"Shows a list of all the tasks marked priority.","lastModifiedDate":"2024-02-24"},{"lineNumber":170,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":171,"author":{"gitId":"tahnya"},"content":"Format: `prioritylist`","lastModifiedDate":"2024-02-24"},{"lineNumber":172,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":173,"author":{"gitId":"tahnya"},"content":"Output: A numbered list of priority tasks, in order of creation.","lastModifiedDate":"2024-02-24"},{"lineNumber":174,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":175,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":176,"author":{"gitId":"tahnya"},"content":"## Locating a task by description","lastModifiedDate":"2024-02-24"},{"lineNumber":177,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":178,"author":{"gitId":"tahnya"},"content":"Shows a list of all the tasks which contain the searched keyword.","lastModifiedDate":"2024-02-24"},{"lineNumber":179,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":180,"author":{"gitId":"tahnya"},"content":"Format: `find \u003ctext\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":181,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":182,"author":{"gitId":"tahnya"},"content":"Output: A numbered list of tasks, which contain the keyword in their description, in order of creation.","lastModifiedDate":"2024-02-24"},{"lineNumber":183,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":184,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":185,"author":{"gitId":"tahnya"},"content":"## Spelling error detection","lastModifiedDate":"2024-02-24"},{"lineNumber":186,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":187,"author":{"gitId":"tahnya"},"content":"Shows a message checking if the user meant a certain command if the input permutation matches one of the valid commands.","lastModifiedDate":"2024-02-24"},{"lineNumber":188,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":189,"author":{"gitId":"tahnya"},"content":"Example: `lsit`","lastModifiedDate":"2024-02-24"},{"lineNumber":190,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":191,"author":{"gitId":"tahnya"},"content":"\u003e This feature is only available for the `mark`, `unmark`, `list` and `find` commands.","lastModifiedDate":"2024-02-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":194,"author":{"gitId":"tahnya"},"content":"Did you mean \u0027list\u0027? (y/n)","lastModifiedDate":"2024-02-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":196,"author":{"gitId":"tahnya"},"content":"Output: If the user inputs \u0027y\u0027, the intended command will be executed.","lastModifiedDate":"2024-02-24"},{"lineNumber":197,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":199,"author":{"gitId":"tahnya"},"content":"## Deleting a task","lastModifiedDate":"2024-02-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":201,"author":{"gitId":"tahnya"},"content":"Deletes a task from the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":203,"author":{"gitId":"tahnya"},"content":"Format: `delete \u003ctask_number\u003e`","lastModifiedDate":"2024-02-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":205,"author":{"gitId":"tahnya"},"content":"Example: `delete 1`","lastModifiedDate":"2024-02-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":207,"author":{"gitId":"tahnya"},"content":"Output: The deleted task is shown.","lastModifiedDate":"2024-02-24"},{"lineNumber":208,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":209,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":210,"author":{"gitId":"tahnya"},"content":"Noted, I\u0027ve deleted this task from your list:","lastModifiedDate":"2024-02-24"},{"lineNumber":211,"author":{"gitId":"tahnya"},"content":"  T | 0 | sleep ","lastModifiedDate":"2024-02-24"},{"lineNumber":212,"author":{"gitId":"tahnya"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":213,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":214,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":215,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":216,"author":{"gitId":"tahnya"},"content":"## Exiting the program","lastModifiedDate":"2024-02-24"},{"lineNumber":217,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":218,"author":{"gitId":"tahnya"},"content":"Closes the program.","lastModifiedDate":"2024-02-24"},{"lineNumber":219,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":220,"author":{"gitId":"tahnya"},"content":"\u003e Note: Attempting to close the program with the X button shows a message reminding the user to say goodbye to Signal.","lastModifiedDate":"2024-02-24"},{"lineNumber":221,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":222,"author":{"gitId":"tahnya"},"content":"Format: `bye`","lastModifiedDate":"2024-02-24"},{"lineNumber":223,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":224,"author":{"gitId":"tahnya"},"content":"Output: Signal replies goodbye.","lastModifiedDate":"2024-02-24"},{"lineNumber":225,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":226,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"},{"lineNumber":227,"author":{"gitId":"tahnya"},"content":"Bye! Hope you come back soon :D","lastModifiedDate":"2024-02-24"},{"lineNumber":228,"author":{"gitId":"tahnya"},"content":"```","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"tahnya":204,"-":24}},{"path":"src/main/java/GUI/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"package GUI;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"    private Color textboxColor;","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"    private int textboxWidth \u003d 310;","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"    private DialogBox(String text, Image img, String type) {","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"        dialog \u003d new Label(text);","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"        displayPicture \u003d new ImageView(img);","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"        if (type.equals(\"USER\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"            textboxColor \u003d Color.LIGHTBLUE;","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"            textboxColor \u003d Color.LIGHTPINK;","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"        textStyle(dialog);","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"tahnya"},"content":"        StackPane textBox \u003d new StackPane();","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"        makeTextbox(textBox, dialog);","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"tahnya"},"content":"        displayPicStyle(displayPicture);","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"tahnya"},"content":"        dialogBoxStyle(textBox, displayPicture);","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"tahnya"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"tahnya"},"content":"    private void flip() {","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"tahnya"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"tahnya"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"tahnya"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"tahnya"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"tahnya"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"tahnya"},"content":"        return new DialogBox(text, img, \"USER\");","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"tahnya"},"content":"    public static DialogBox getSignalDialog(String text, Image img) {","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"tahnya"},"content":"        var db \u003d new DialogBox(text, img, \"\");","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"tahnya"},"content":"        db.flip();","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"tahnya"},"content":"        return db;","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"tahnya"},"content":"     * Styles the rectangle of the textbox and stacks the text on top of it.","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"tahnya"},"content":"     * @param stack The stack containing the rectangle and the text.","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"tahnya"},"content":"     * @param text The text.","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"tahnya"},"content":"    private void makeTextbox(StackPane stack, Label text) {","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"tahnya"},"content":"        // Create a rectangle shape with rounded corners to enclose the text","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"tahnya"},"content":"        Rectangle rect \u003d new Rectangle();","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"tahnya"},"content":"        rect.setArcWidth(20);","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"tahnya"},"content":"        rect.setArcHeight(20);","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"tahnya"},"content":"        rect.setFill(textboxColor);","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"tahnya"},"content":"        rect.widthProperty().bind(Bindings.min(text.widthProperty(), textboxWidth));","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"tahnya"},"content":"        rect.heightProperty().bind(text.heightProperty());","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"tahnya"},"content":"        stack.setAlignment(text, Pos.CENTER_RIGHT);","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"tahnya"},"content":"        stack.getChildren().addAll(rect, text);","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"tahnya"},"content":"     * Styles the text of the dialog.","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"tahnya"},"content":"     * @param text The text.","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"tahnya"},"content":"    private void textStyle(Label text) {","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"tahnya"},"content":"        text.setWrapText(true);","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"tahnya"},"content":"        text.setPadding(new Insets(10));","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"tahnya"},"content":"        text.setMinHeight(Double.NEGATIVE_INFINITY);","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"tahnya"},"content":"     * Styles the display picture.","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":117,"author":{"gitId":"tahnya"},"content":"     * @param img The display picture.","lastModifiedDate":"2024-02-21"},{"lineNumber":118,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"tahnya"},"content":"    private void displayPicStyle(ImageView img) {","lastModifiedDate":"2024-02-21"},{"lineNumber":120,"author":{"gitId":"tahnya"},"content":"        img.setFitWidth(40.0);","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"tahnya"},"content":"        img.setFitHeight(40.0);","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"tahnya"},"content":"        Circle clip \u003d new Circle(20, 20, 20);","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"tahnya"},"content":"        img.setClip(clip);","lastModifiedDate":"2024-02-21"},{"lineNumber":125,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":126,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":127,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":128,"author":{"gitId":"tahnya"},"content":"     * Styles the dialog box.","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":130,"author":{"gitId":"tahnya"},"content":"     * @param stack The stack of the textbox.","lastModifiedDate":"2024-02-21"},{"lineNumber":131,"author":{"gitId":"tahnya"},"content":"     * @param img The display picture.","lastModifiedDate":"2024-02-21"},{"lineNumber":132,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":133,"author":{"gitId":"tahnya"},"content":"    private void dialogBoxStyle(StackPane stack, ImageView img) {","lastModifiedDate":"2024-02-21"},{"lineNumber":134,"author":{"gitId":"tahnya"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-21"},{"lineNumber":135,"author":{"gitId":"tahnya"},"content":"        this.setSpacing(10);","lastModifiedDate":"2024-02-21"},{"lineNumber":136,"author":{"gitId":"tahnya"},"content":"        this.getChildren().addAll(stack, img);","lastModifiedDate":"2024-02-21"},{"lineNumber":137,"author":{"gitId":"tahnya"},"content":"        this.setPadding(new Insets(10));","lastModifiedDate":"2024-02-21"},{"lineNumber":138,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":139,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":140,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":141,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tahnya":141}},{"path":"src/main/java/GUI/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"package GUI;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"import signal.Signal;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"    private Signal signal;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userBlueOct.jpg\"));","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"    private Image signalImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/signalPinkOct.jpg\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"    public void setSignal(Signal d) {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"        signal \u003d d;","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"     * Handles displaying the introduction message from Signal.","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"    public void handleSignalIntro() {","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"        String introMessage \u003d signal.getIntro(); // Assuming Signal has a method to retrieve the intro message","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"        dialogContainer.getChildren().add(DialogBox.getSignalDialog(introMessage, signalImage));","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Signal\u0027s reply and then appends them to","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"        String response \u003d signal.getResponse(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"tahnya"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"tahnya"},"content":"                DialogBox.getSignalDialog(response, signalImage)","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"tahnya"},"content":"        );","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"tahnya"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"tahnya":61}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"public class Launcher {","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tahnya":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"import signal.Signal;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":" * A GUI for Signal using FXML.","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"    private Signal signal \u003d new Signal();","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"            stage.setTitle(\"SIGNAL :3\");","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"            stage.setResizable(true);","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"            fxmlLoader.\u003cGUI.MainWindow\u003egetController().setSignal(signal);","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"            stage.show();","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"            fxmlLoader.\u003cGUI.MainWindow\u003egetController().handleSignalIntro();","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"            stage.setOnCloseRequest(event -\u003e {","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"                // Show confirmation dialog","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"                Alert alert \u003d new Alert(Alert.AlertType.INFORMATION);","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"                alert.setTitle(\"Exit\");","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"                alert.setHeaderText(\"Do you want to leave the chat?\");","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"                alert.setContentText(\"Please say \u0027bye\u0027 to Signal!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"                alert.showAndWait();","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"                event.consume();","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"            });","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"tahnya":47}},{"path":"src/main/java/signal/Signal.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"package signal;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"import signal.task.Task;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"import signal.util.Parser;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"import signal.util.Storage;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"import signal.util.Ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"import java.util.Timer;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"import java.util.TimerTask;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"public class Signal {","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"    private static Storage fileManager \u003d new Storage();","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d fileManager.loadTasks();","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"    private static Ui ui \u003d new Ui(taskList, fileManager);","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"    public static Parser parser \u003d new Parser(taskList, ui);","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"    public Signal() {","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"            shutDown();","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"        return parser.parse(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"    public void shutDown() {","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"        Timer timer \u003d new Timer();","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"        timer.schedule(new TimerTask() {","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"            @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"            public void run() {","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"                Platform.exit();","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"                System.exit(0);","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"        }, 1000);","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"tahnya"},"content":"    public String getIntro() {","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"        return ui.intro();","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tahnya":60,"-":1}},{"path":"src/main/java/signal/SignalException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"package signal;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"public class SignalException extends Exception {","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"    public SignalException(String message) {","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"        super(message);","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"tahnya":7}},{"path":"src/main/java/signal/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"package signal.task;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"import java.util.Date;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"import signal.SignalException;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"import signal.util.TimeManager;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":" * Represents a deadline task in the Signal chat-bot.","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":" * A deadline task has an end time in addition to the properties inherited from Task.","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"    private TimeManager timeManager \u003d new TimeManager();","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"    private LocalDate byDate;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"    private LocalTime byTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"     * Constructor for a new Deadline task.","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"     * @param by The time that the task is due.","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"    public Deadline(String description, String by) throws SignalException {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"        super(description);","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"            String[] parseBy \u003d by.split(\" \");","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"            if (parseBy.length \u003e 1) {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"                this.byTime \u003d timeManager.convertTime(parseBy[1]);","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"            this.byDate \u003d timeManager.convertDate(parseBy[0]);","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(\"Oops, I can\u0027t read the date or time like that! Please use yyyy-mm-dd for date and hh:mm:ss for time.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"    public LocalDate getDue() {","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"        return this.byDate;","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"     * @return The string representation of the Deadline task.","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"        return \"D\" + super.toString()","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"                + \"| by: \" + timeManager.formatDate(byDate) + (byTime !\u003d null ? \" \" + timeManager.formatTime(byTime) : \"\");","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"tahnya"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"tahnya"},"content":"    public String checkType() {","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"tahnya"},"content":"        return \"Deadline\";","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"tahnya":61}},{"path":"src/main/java/signal/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"package signal.task;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"import signal.SignalException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"import signal.util.TimeManager;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"    private TimeManager timeManager \u003d new TimeManager();","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"    private LocalDate startDate;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"    private LocalTime startTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"    private LocalDate endDate;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"    private LocalTime endTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"     * Constructor for a new Event task.","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"     * @param start The start timing of the event.","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"     * @param end The end timing of the event.","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"    public Event(String description, String start, String end) throws SignalException {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"        super(description);","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"            String[] parseStart \u003d start.split(\" \");","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"            String[] parseEnd \u003d end.split(\" \");","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"            if (parseStart.length \u003e 1) {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"                this.startTime \u003d timeManager.convertTime(parseStart[1]);","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"            this.startDate \u003d timeManager.convertDate(parseStart[0]);","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"            if (parseEnd.length \u003e 1) {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"                this.endTime \u003d timeManager.convertTime(parseEnd[1]);","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"            this.endDate \u003d timeManager.convertDate(parseEnd[0]);","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(\"Oops, I can\u0027t read the date or time like that! Please use dd-mm-yyyy for date \" +","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"                    \"(year is optional) and hhmm for time (time is optional).\");","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"    public LocalDate getDue() {","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"        return this.startDate;","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"     * @return The string representation of the Event task.","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"tahnya"},"content":"        return \"E\" + super.toString()","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"                + \"| from: \" + timeManager.formatDate(startDate) + (startTime !\u003d null ? \" \" + timeManager.formatTime(startTime) : \"\")","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"tahnya"},"content":"                +  \" | to: \" + timeManager.formatDate(endDate) + (endTime !\u003d null ? \" \" + timeManager.formatTime(endTime) : \"\");","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"tahnya"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"tahnya"},"content":"    public String checkType() {","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"tahnya"},"content":"        return \"Event\";","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"tahnya":65}},{"path":"src/main/java/signal/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"package signal.task;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":" * Represents a tasks in available in the Signal chat-bot.","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":" * A task can be of three types: Todo (T), Deadline (D), or Event (E).","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":" * Each task has a name and a completion status.","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"public class Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"    private String description;","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"    private boolean isPriority \u003d false;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"    private String type;","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"    private String date;","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"     * Constructor for a new Task.","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"        return this.description;","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"    public boolean checkDone() {","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"    public boolean checkPriority() {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"        return this.isPriority;","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"     * @return A representation of the completion of the task.","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"        return (this.isDone ? \"X\" : \"0\" ); // mark done task with X","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"    public String getPriorityIcon() {","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"        return (this.isPriority ? \"* \" : \"\"); // mark priority with P","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"    public void markDone() {","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"tahnya"},"content":"    public void markUnDone() {","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"tahnya"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"tahnya"},"content":"    public void setPriority() {","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"tahnya"},"content":"        this.isPriority \u003d true;","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"tahnya"},"content":"    public void setNotPriority() {","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"tahnya"},"content":"        this.isPriority \u003d false;","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"tahnya"},"content":"    public String checkType() {","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"tahnya"},"content":"        return \"Task\";","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"tahnya"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"tahnya"},"content":"    public String toString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"tahnya"},"content":"        return \" | \" + getStatusIcon() + \" | \" + this.description + \" \" + getPriorityIcon();","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"tahnya"},"content":"    public LocalDate getDue() {","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"tahnya"},"content":"        return null;","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"tahnya":87}},{"path":"src/main/java/signal/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"package signal.task;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"public class TaskList {","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"        this.taskList \u003d list;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"    public void addTask(Task current) {","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"        assert current !\u003d null : \"task added cannot be null\";","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"        taskList.add(current);","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"    public void deleteTask(int index){","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"        taskList.remove(index);","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"    public ArrayList\u003cString\u003e showList(){","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"        return (ArrayList\u003cString\u003e) IntStream.range(0, taskList.size())","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"                .mapToObj(i -\u003e (i+1) + \".\" + taskList.get(i).toString())","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"    public ArrayList\u003cTask\u003e giveList() {","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"        return this.taskList;","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"    public int size() {","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"        return taskList.size();","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"    public ArrayList\u003cString\u003e find(String key) {","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"        for (Task i : taskList) {","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"            if (i.getDescription().contains(key)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"                result.add(Integer.toString(count) + \".\" + i.toString());","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"                count++;","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"        return result;","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tahnya":54}},{"path":"src/main/java/signal/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"package signal.task;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"     * Constructor for a new ToDo task.","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"        super(description);","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"     * @return The string representation of the ToDo task.","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"    public String toString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"        return \"T\" + super.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"    public String checkType() {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"        return \"ToDo\";","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"tahnya":27}},{"path":"src/main/java/signal/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"package signal.util;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"import signal.SignalException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"import signal.task.Task;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":" * Parses user input and executes commands based on the input.","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":" * This class handles the interpretation of user commands, creating tasks,","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":" * and managing user interactions through the Ui class.","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"public class Parser {","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"    private String[] prevCommand;","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"     * Constructs a Parser with references to the current task list and the UI for user interaction.","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"     * @param ui    The UI instance for displaying messages to the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"    public Parser(ArrayList\u003cTask\u003e taskList, Ui ui) {","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"    public Parser() {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"    public String parse(String userInput) {","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"            return read(userInput);","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"        } catch (SignalException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"     * Reads the input from the user and implement the corresponding method.","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"     * @param userInput The string of input.","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"    public String read(String userInput) throws SignalException {","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"        String[] inputParts \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"            // show goodbye message","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.leave();","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"        } else if (userInput.equals(\"\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"tahnya"},"content":"            // input is blank","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.emptyInput();","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"tahnya"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"tahnya"},"content":"            // mark item as done","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.markTask(inputParts);","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"tahnya"},"content":"        } else if (isPermutationMatch(inputParts[0], \"mark\")) {","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"tahnya"},"content":"            reply \u003d checkTypo(\"inputParts[0]\", \"mark\");","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"tahnya"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"tahnya"},"content":"            // mark item as undone","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.unMarkTask(inputParts);","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"tahnya"},"content":"        } else if (isPermutationMatch(inputParts[0], \"unmark\")) {","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"tahnya"},"content":"            reply \u003d checkTypo(\"inputParts[0]\", \"unmark\");","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"tahnya"},"content":"        } else if (userInput.equals(\"notdonelist\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.commandNotDoneList();","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"tahnya"},"content":"        } else if (userInput.startsWith(\"prioritise\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.markPriority(inputParts);","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"tahnya"},"content":"        } else if (userInput.startsWith(\"unprioritise\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.markNotPriority(inputParts);","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"tahnya"},"content":"        } else if (userInput.equals(\"prioritylist\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.commandPriorityList();","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"tahnya"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"tahnya"},"content":"            // show list of tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.commandList();","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"tahnya"},"content":"        } else if (isPermutationMatch(userInput, \"list\")) {","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"tahnya"},"content":"            // check if user made a typo of \u0027list\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"tahnya"},"content":"            reply \u003d checkTypo(\"inputParts[0]\", \"list\");","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"tahnya"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"tahnya"},"content":"            // remove a task","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"tahnya"},"content":"            reply \u003d listDelete(inputParts);","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"tahnya"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"tahnya"},"content":"            // find a keyword","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.commandFind(inputParts);","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"tahnya"},"content":"        } else if (isPermutationMatch(inputParts[0], \"find\")) {","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"tahnya"},"content":"            reply \u003d checkTypo(\"inputParts[0]\", \"find\");","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"tahnya"},"content":"        } else if ((userInput.equals(\"yes\") || userInput.equals(\"no\")) \u0026\u0026 checkPrev()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"tahnya"},"content":"            reply \u003d handleIsTypo(userInput);","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"tahnya"},"content":"        } else if (userInput.equals(\"help\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"tahnya"},"content":"            // show help message","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.commandHelp();","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"tahnya"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"tahnya"},"content":"            // create a new task or other commands","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"tahnya"},"content":"            reply \u003d taskCommands(userInput);","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"tahnya"},"content":"        this.prevCommand \u003d inputParts;","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"tahnya"},"content":"        ui.signalSays(reply);","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"tahnya"},"content":"        assert reply.length() !\u003d 0 : \"Reply can\u0027t be empty!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"tahnya"},"content":"     * Check if the input is a permutation of the original.","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":107,"author":{"gitId":"tahnya"},"content":"     * @param input Input collected from the user.","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"tahnya"},"content":"     * @param original String to compare the input to.","lastModifiedDate":"2024-02-25"},{"lineNumber":109,"author":{"gitId":"tahnya"},"content":"     * @return True if input is a permutation of original.","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"tahnya"},"content":"    public boolean isPermutationMatch(String input, String original) {","lastModifiedDate":"2024-02-25"},{"lineNumber":112,"author":{"gitId":"tahnya"},"content":"        // Check if user input is a permutation match","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"tahnya"},"content":"        char[] userInputArray \u003d input.toCharArray();","lastModifiedDate":"2024-02-25"},{"lineNumber":114,"author":{"gitId":"tahnya"},"content":"        char[] originalArray \u003d original.toCharArray();","lastModifiedDate":"2024-02-25"},{"lineNumber":115,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":116,"author":{"gitId":"tahnya"},"content":"        // Sort the arrays to compare","lastModifiedDate":"2024-02-25"},{"lineNumber":117,"author":{"gitId":"tahnya"},"content":"        java.util.Arrays.sort(userInputArray);","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"tahnya"},"content":"        java.util.Arrays.sort(originalArray);","lastModifiedDate":"2024-02-25"},{"lineNumber":119,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"tahnya"},"content":"        return java.util.Arrays.equals(userInputArray, originalArray);","lastModifiedDate":"2024-02-25"},{"lineNumber":121,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":122,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"tahnya"},"content":"     * Checks if the previous command is a typo of commands mark, unmark, list or find.","lastModifiedDate":"2024-02-25"},{"lineNumber":126,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"tahnya"},"content":"     * @return True if it is a typo of commands mark, unmark, list or find.","lastModifiedDate":"2024-02-25"},{"lineNumber":128,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":129,"author":{"gitId":"tahnya"},"content":"    public boolean checkPrev() {","lastModifiedDate":"2024-02-25"},{"lineNumber":130,"author":{"gitId":"tahnya"},"content":"        if (isPermutationMatch(prevCommand[0], \"mark\")","lastModifiedDate":"2024-02-25"},{"lineNumber":131,"author":{"gitId":"tahnya"},"content":"                || isPermutationMatch(prevCommand[0], \"unmark\")","lastModifiedDate":"2024-02-25"},{"lineNumber":132,"author":{"gitId":"tahnya"},"content":"                || isPermutationMatch(prevCommand[0], \"list\")","lastModifiedDate":"2024-02-25"},{"lineNumber":133,"author":{"gitId":"tahnya"},"content":"                || isPermutationMatch(prevCommand[0], \"find\")) {","lastModifiedDate":"2024-02-25"},{"lineNumber":134,"author":{"gitId":"tahnya"},"content":"            return true;","lastModifiedDate":"2024-02-25"},{"lineNumber":135,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":136,"author":{"gitId":"tahnya"},"content":"        return false;","lastModifiedDate":"2024-02-25"},{"lineNumber":137,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":138,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":139,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":140,"author":{"gitId":"tahnya"},"content":"     * Confirms with the user if they intended to type commands mark, unmark, list or find.","lastModifiedDate":"2024-02-25"},{"lineNumber":141,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":142,"author":{"gitId":"tahnya"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2024-02-25"},{"lineNumber":143,"author":{"gitId":"tahnya"},"content":"     * @param command The command which the input is a permutation.","lastModifiedDate":"2024-02-25"},{"lineNumber":144,"author":{"gitId":"tahnya"},"content":"     * @return A string that contains the command which the input is a permutation.","lastModifiedDate":"2024-02-25"},{"lineNumber":145,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"tahnya"},"content":"    public String checkTypo(String input, String command) {","lastModifiedDate":"2024-02-25"},{"lineNumber":147,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":148,"author":{"gitId":"tahnya"},"content":"        if(!input.equals(command)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":149,"author":{"gitId":"tahnya"},"content":"            reply \u003d \"Did you mean \u0027\"+ command + \"\u0027? (yes/no)\";","lastModifiedDate":"2024-02-25"},{"lineNumber":150,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":151,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":152,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":153,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":154,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":155,"author":{"gitId":"tahnya"},"content":"     * Handles the cases if the user has made a typo or not.","lastModifiedDate":"2024-02-25"},{"lineNumber":156,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":157,"author":{"gitId":"tahnya"},"content":"     * @param userInput The input from the user, either yes or no.","lastModifiedDate":"2024-02-25"},{"lineNumber":158,"author":{"gitId":"tahnya"},"content":"     * @return The output of the user\u0027s intended command.","lastModifiedDate":"2024-02-25"},{"lineNumber":159,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":160,"author":{"gitId":"tahnya"},"content":"    public String handleIsTypo(String userInput) {","lastModifiedDate":"2024-02-25"},{"lineNumber":161,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":162,"author":{"gitId":"tahnya"},"content":"        if (userInput.equals(\"yes\")) {","lastModifiedDate":"2024-02-25"},{"lineNumber":163,"author":{"gitId":"tahnya"},"content":"            reply \u003d handleWhichTypo(this.prevCommand);","lastModifiedDate":"2024-02-25"},{"lineNumber":164,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":165,"author":{"gitId":"tahnya"},"content":"        if (userInput.equals(\"no\")) {","lastModifiedDate":"2024-02-25"},{"lineNumber":166,"author":{"gitId":"tahnya"},"content":"            reply \u003d \"What else can I help you with?\";","lastModifiedDate":"2024-02-21"},{"lineNumber":167,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":168,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":169,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":170,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":171,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":172,"author":{"gitId":"tahnya"},"content":"     * Handles the different cases of command typos, mark, unmark, list or find.","lastModifiedDate":"2024-02-25"},{"lineNumber":173,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":174,"author":{"gitId":"tahnya"},"content":"     * @param prevCommand The command that the user previously input.","lastModifiedDate":"2024-02-25"},{"lineNumber":175,"author":{"gitId":"tahnya"},"content":"     * @return The output of the user\u0027s intended command.","lastModifiedDate":"2024-02-25"},{"lineNumber":176,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":177,"author":{"gitId":"tahnya"},"content":"    public String handleWhichTypo(String[] prevCommand) {","lastModifiedDate":"2024-02-25"},{"lineNumber":178,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":179,"author":{"gitId":"tahnya"},"content":"        String command \u003d prevCommand[0];","lastModifiedDate":"2024-02-25"},{"lineNumber":180,"author":{"gitId":"tahnya"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":181,"author":{"gitId":"tahnya"},"content":"            if (isPermutationMatch(prevCommand[0], \"mark\")) {","lastModifiedDate":"2024-02-25"},{"lineNumber":182,"author":{"gitId":"tahnya"},"content":"                reply \u003d ui.markTask(prevCommand);","lastModifiedDate":"2024-02-25"},{"lineNumber":183,"author":{"gitId":"tahnya"},"content":"            } else if (isPermutationMatch(prevCommand[0], \"unmark\")) {","lastModifiedDate":"2024-02-25"},{"lineNumber":184,"author":{"gitId":"tahnya"},"content":"                reply \u003d ui.unMarkTask(prevCommand);","lastModifiedDate":"2024-02-25"},{"lineNumber":185,"author":{"gitId":"tahnya"},"content":"            } else if (isPermutationMatch(prevCommand[0], \"list\")) {","lastModifiedDate":"2024-02-25"},{"lineNumber":186,"author":{"gitId":"tahnya"},"content":"                reply \u003d ui.commandList();","lastModifiedDate":"2024-02-21"},{"lineNumber":187,"author":{"gitId":"tahnya"},"content":"            } else if (isPermutationMatch(prevCommand[0], \"find\")) {","lastModifiedDate":"2024-02-25"},{"lineNumber":188,"author":{"gitId":"tahnya"},"content":"                reply \u003d ui.commandFind(prevCommand);","lastModifiedDate":"2024-02-25"},{"lineNumber":189,"author":{"gitId":"tahnya"},"content":"            } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":190,"author":{"gitId":"tahnya"},"content":"                reply \u003d \"Oops, I\u0027m not sure what command you meant. Please repeat?\";","lastModifiedDate":"2024-02-25"},{"lineNumber":191,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":192,"author":{"gitId":"tahnya"},"content":"        } catch (SignalException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":193,"author":{"gitId":"tahnya"},"content":"            reply \u003d e.getMessage();","lastModifiedDate":"2024-02-21"},{"lineNumber":194,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":195,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":196,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":197,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":198,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":199,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":200,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":201,"author":{"gitId":"tahnya"},"content":"     * Handles the command for deleting a task.","lastModifiedDate":"2024-02-20"},{"lineNumber":202,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":203,"author":{"gitId":"tahnya"},"content":"     * @param inputParts The string array of input.","lastModifiedDate":"2024-02-20"},{"lineNumber":204,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":205,"author":{"gitId":"tahnya"},"content":"    public String listDelete(String[] inputParts) {","lastModifiedDate":"2024-02-21"},{"lineNumber":206,"author":{"gitId":"tahnya"},"content":"        int index \u003d Integer.parseInt(inputParts[1]);","lastModifiedDate":"2024-02-20"},{"lineNumber":207,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":208,"author":{"gitId":"tahnya"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":209,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.commandDelete(index - 1);","lastModifiedDate":"2024-02-21"},{"lineNumber":210,"author":{"gitId":"tahnya"},"content":"        } catch (SignalException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":211,"author":{"gitId":"tahnya"},"content":"            reply \u003d e.getMessage();","lastModifiedDate":"2024-02-21"},{"lineNumber":212,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":213,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":214,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":215,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":216,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":217,"author":{"gitId":"tahnya"},"content":"     * Creates a task of the corresponding type as the input.","lastModifiedDate":"2024-02-20"},{"lineNumber":218,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":219,"author":{"gitId":"tahnya"},"content":"     * @param userInput The string of input.","lastModifiedDate":"2024-02-20"},{"lineNumber":220,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":221,"author":{"gitId":"tahnya"},"content":"    public String taskCommands(String userInput) {","lastModifiedDate":"2024-02-21"},{"lineNumber":222,"author":{"gitId":"tahnya"},"content":"        // create tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":223,"author":{"gitId":"tahnya"},"content":"        String[] inputParts \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-20"},{"lineNumber":224,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":225,"author":{"gitId":"tahnya"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":226,"author":{"gitId":"tahnya"},"content":"            if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":227,"author":{"gitId":"tahnya"},"content":"                // Create a ToDo task","lastModifiedDate":"2024-02-20"},{"lineNumber":228,"author":{"gitId":"tahnya"},"content":"                reply \u003d ui.commandToDo(inputParts);","lastModifiedDate":"2024-02-21"},{"lineNumber":229,"author":{"gitId":"tahnya"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":230,"author":{"gitId":"tahnya"},"content":"                // Create a Deadline task","lastModifiedDate":"2024-02-20"},{"lineNumber":231,"author":{"gitId":"tahnya"},"content":"                reply \u003d ui.commandDeadline(inputParts);","lastModifiedDate":"2024-02-21"},{"lineNumber":232,"author":{"gitId":"tahnya"},"content":"            } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":233,"author":{"gitId":"tahnya"},"content":"                // Create an Event task","lastModifiedDate":"2024-02-20"},{"lineNumber":234,"author":{"gitId":"tahnya"},"content":"                reply \u003d ui.commandEvent(inputParts);","lastModifiedDate":"2024-02-21"},{"lineNumber":235,"author":{"gitId":"tahnya"},"content":"            } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":236,"author":{"gitId":"tahnya"},"content":"                reply \u003d otherInputs(userInput);","lastModifiedDate":"2024-02-21"},{"lineNumber":237,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":238,"author":{"gitId":"tahnya"},"content":"        } catch (SignalException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":239,"author":{"gitId":"tahnya"},"content":"            reply \u003d e.getMessage();","lastModifiedDate":"2024-02-21"},{"lineNumber":240,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":241,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":242,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":243,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":244,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":245,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":246,"author":{"gitId":"tahnya"},"content":"     * Handles cases where the input is not in the list of commands.","lastModifiedDate":"2024-02-20"},{"lineNumber":247,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":248,"author":{"gitId":"tahnya"},"content":"     * @param userInput The string of input.","lastModifiedDate":"2024-02-20"},{"lineNumber":249,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":250,"author":{"gitId":"tahnya"},"content":"    public String otherInputs(String userInput) {","lastModifiedDate":"2024-02-21"},{"lineNumber":251,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":252,"author":{"gitId":"tahnya"},"content":"        if (userInput.equals(\"blah\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":253,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.commandBlah();","lastModifiedDate":"2024-02-21"},{"lineNumber":254,"author":{"gitId":"tahnya"},"content":"        } else if (userInput.equals(\"something else\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":255,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.commandSomethingelse();","lastModifiedDate":"2024-02-21"},{"lineNumber":256,"author":{"gitId":"tahnya"},"content":"        } else if (userInput.equals(\"hi\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":257,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.commandHi();","lastModifiedDate":"2024-02-21"},{"lineNumber":258,"author":{"gitId":"tahnya"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":259,"author":{"gitId":"tahnya"},"content":"            reply \u003d ui.unknownInput();","lastModifiedDate":"2024-02-21"},{"lineNumber":260,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":261,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":262,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":263,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":264,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tahnya":264}},{"path":"src/main/java/signal/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"package signal.util;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"import signal.SignalException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"import signal.task.*;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"import java.io.*;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":" * Manages the loading and saving of tasks to a file.","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":" * This class encapsulates file operations, allowing tasks to be persisted to disk and loaded back into the application.","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"public class Storage {","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"    private static final String FILE_PATH \u003d \"../data/signal.txt\";","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"     * Constructs Storage to the specified file path for saving and loading tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"    public Storage() {","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"     * Loads tasks from the file specified by the path.","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"     * If the file does not exist, it creates a new file. Each line in the file is expected to represent a single task.","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"            File file \u003d new File(this.FILE_PATH);","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"                // Create the file and necessary directory structure if it doesn\u0027t exist","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"                return taskList.giveList(); // Return an empty list since there are no tasks yet","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH));","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"            String line;","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"                // Parse each line and create Task objects","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"                    taskList.addTask(task);","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"                }","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"            reader.close();","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"        } catch (IOException | SignalException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"            System.out.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"tahnya"},"content":"        return taskList.giveList();","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"tahnya"},"content":"     * Helper function to read each line from the file.","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"tahnya"},"content":"     * @param line The next line from the file.","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"tahnya"},"content":"     * @return The Task recorded by the line.","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"tahnya"},"content":"    public Task parseTask(String line) throws SignalException {","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"tahnya"},"content":"        // Parse each line to create Task objects","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"tahnya"},"content":"        // Example line format: \"T | 1 | read book\"","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"tahnya"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"tahnya"},"content":"        if (parts.length \u003e\u003d 3) {","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"tahnya"},"content":"            boolean isDone \u003d parts[1].equals(\"X\");","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"tahnya"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"tahnya"},"content":"            if (parts[0] \u003d\u003d \"T\") { // todo","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"tahnya"},"content":"                return new ToDo(description);","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"tahnya"},"content":"            } else if (parts[0] \u003d\u003d \"D\") { // deadline","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"tahnya"},"content":"                String deadline \u003d parts[3];","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"tahnya"},"content":"                return new Deadline(description, deadline);","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"tahnya"},"content":"            } else if (parts[0] \u003d\u003d \"E\") { // event","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"tahnya"},"content":"                String from \u003d parts[3];","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"tahnya"},"content":"                String to \u003d parts[4];","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"tahnya"},"content":"                return new Event(description, from, to);","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"tahnya"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"tahnya"},"content":"            System.out.println(\"Invalid line format: \" + line);","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"tahnya"},"content":"            return null;","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"tahnya"},"content":"        return null;","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"tahnya"},"content":"     * Writes the current list of tasks to the file specified by the path.","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"tahnya"},"content":"     * Converts each task to a string that is recorded in the file.","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"tahnya"},"content":"     * @param taskList The list of tasks to be written to the file.","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"tahnya"},"content":"    public void writeTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"tahnya"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"tahnya"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.FILE_PATH));","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"tahnya"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"tahnya"},"content":"                // Write each task to a line in the file","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"tahnya"},"content":"                writer.write(task.toString());","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"tahnya"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"tahnya"},"content":"            writer.close();","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"tahnya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"tahnya"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tahnya":113}},{"path":"src/main/java/signal/util/TimeManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"package signal.util;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"import java.time.Year;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":" * Manages the conversion of date and time inputs from the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"public class TimeManager {","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"    public TimeManager() {","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"     * Converts the date into a string to be displayed to the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"     * @param date The LocalDate recorded in the Task object.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"     * @return The date in dd MMM yyyy format.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"    public String formatDate(LocalDate date) {","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"        String formattedDate \u003d date.format(outputFormatter);","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"        return formattedDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"     * Converts the date from a string input by the user to be parsed into a LocalDate.","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"     * @param date The date string from the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"     * @return The LocalDate parsed.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"    public LocalDate convertDate(String date) {","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"        char[] splitDate \u003d date.toCharArray();","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"        StringBuilder converted \u003d new StringBuilder();","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"        if (splitDate.length \u003d\u003d 10) {","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"            converted.append(splitDate[6]);","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"            converted.append(splitDate[7]);","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"            converted.append(splitDate[8]);","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"            converted.append(splitDate[9]);","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"        } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"            String yr \u003d String.valueOf(LocalDate.now().getYear());","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"            converted.append(yr);","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"        converted.append(\u0027-\u0027);","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"        converted.append(splitDate[3]);","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"        converted.append(splitDate[4]);","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"        converted.append(\u0027-\u0027);","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"        converted.append(splitDate[0]);","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"        converted.append(splitDate[1]);","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"        return LocalDate.parse(converted);","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"     * Converts the time into a string to be displayed to the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"tahnya"},"content":"     * @param time The LocalTime recorded in the Task object.","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"tahnya"},"content":"     * @return The time in h:mm a format.","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"tahnya"},"content":"    public String formatTime(LocalTime time) {","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"tahnya"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"tahnya"},"content":"        String formattedTime \u003d time.format(formatter);","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"tahnya"},"content":"        return formattedTime;","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"tahnya"},"content":"     * Converts the time from a string input by the user to be parsed into a LocalTime.","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"tahnya"},"content":"     * @param twentyFourHrTime The date string from the user.","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"tahnya"},"content":"     * @return The LocalTime parsed.","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":73,"author":{"gitId":"tahnya"},"content":"    public LocalTime convertTime(String twentyFourHrTime) {","lastModifiedDate":"2024-02-24"},{"lineNumber":74,"author":{"gitId":"tahnya"},"content":"        char[] splitTime \u003d twentyFourHrTime.toCharArray();","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"tahnya"},"content":"        StringBuilder converted \u003d new StringBuilder();","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"tahnya"},"content":"        converted.append(splitTime[0]);","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"tahnya"},"content":"        converted.append(splitTime[1]);","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"tahnya"},"content":"        converted.append(\u0027:\u0027);","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"tahnya"},"content":"        converted.append(splitTime[2]);","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"tahnya"},"content":"        converted.append(splitTime[3]);","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"tahnya"},"content":"        converted.append(\":00\");","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"tahnya"},"content":"        return LocalTime.parse(converted);","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tahnya":85}},{"path":"src/main/java/signal/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"package signal.util;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"import signal.SignalException;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"import signal.task.*;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":" * Handles user interactions with the Signal chatbot.","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":" * Carries out instructions to create, delete, list and edit tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":" *","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"public class Ui {","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"    private final String LOGO \u003d \" _______  __                       __ \\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"            + \"|     __||__|.-----..-----..---.-.|  |\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"            + \"|__     ||  ||  _  ||     ||  _  ||  |\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"            + \"|_______||__||___  ||__|__||___._||__|\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"            + \"             |_____|                  \\n\";","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"    private final String DIV \u003d \"\\n\" + \"~~**~~\";","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"    private Storage storeFiles;","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"    public Ui(ArrayList\u003cTask\u003e taskList, Storage storage) {","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"        this.storeFiles \u003d storage;","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"    public Ui() {","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"        this.storeFiles \u003d new Storage();","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"     * Converts an ArrayList to a String.","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"     * @param list An ArrayList of strings to convert.","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"     * @return The converted String.","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"    public String listToString(ArrayList\u003cString\u003e list) {","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"        for (String s : list) {","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"            result +\u003d s + \"\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"        return result;","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"     * Prints the opening message of the Signal chatbot.","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"tahnya"},"content":"    public String intro() {","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"tahnya"},"content":"        response.add(\"Hello! My name is SIGNAL :3 \\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"tahnya"},"content":"        response.add(\"How can I help?\");","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"tahnya"},"content":"        response.add((\"Enter \u0027help\u0027 to see the list of commands available :D\"));","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"tahnya"},"content":"        String reply \u003d listToString(response);","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"tahnya"},"content":"        signalSays(reply);","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"tahnya"},"content":"     * Prints the closing message of the Signal chatbot.","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"tahnya"},"content":"    public String leave() {","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"Bye! Hope you come back soon :D\";","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"tahnya"},"content":"     * Prints a reponse to an empty input.","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"tahnya"},"content":"    public String emptyInput() {","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"Brevity is the soul of wit, but you have to tell me something still!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"tahnya"},"content":"    public String unknownInput() {","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"Sorry, I don\u0027t know what you\u0027re talking about. Enter \u0027help\u0027 to see what commands you can use!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"tahnya"},"content":"     * Finds the first string from a list of strings.","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"tahnya"},"content":"     * @param checker The string to find.","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"tahnya"},"content":"     * @param list The list of strings to search in.","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"tahnya"},"content":"     * @return The index of the string to be found, otherwise returns -1.","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"tahnya"},"content":"    public int finder(String checker, String[] list) {","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"tahnya"},"content":"        for (int i \u003d 0; i \u003c list.length; i++) {","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"tahnya"},"content":"            if (list[i].equals(checker)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"tahnya"},"content":"                return i;","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"tahnya"},"content":"        return -1;","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"tahnya"},"content":"     * Save the new task added to the file and print a response to the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"tahnya"},"content":"     * @param task The task added.","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"tahnya"},"content":"    public String taskAdded(Task task) {","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"tahnya"},"content":"        assert task !\u003d null : \"Task added cannot be null!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"tahnya"},"content":"        storeFiles.writeTasks(taskList);","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":117,"author":{"gitId":"tahnya"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2024-02-21"},{"lineNumber":118,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"tahnya"},"content":"        response.add(\"Got it! I\u0027ve added this task to your list:\");","lastModifiedDate":"2024-02-21"},{"lineNumber":120,"author":{"gitId":"tahnya"},"content":"        response.add(\"  \" + task.toString());","lastModifiedDate":"2024-02-21"},{"lineNumber":121,"author":{"gitId":"tahnya"},"content":"        response.add(\"Now you have \" + size + (size \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":122,"author":{"gitId":"tahnya"},"content":"        String reply \u003d listToString(response);","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":124,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"tahnya"},"content":"     * Create a new Task of type ToDo.","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"tahnya"},"content":"     * @param inputParts The string array of the user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"tahnya"},"content":"    public String commandToDo(String[] inputParts) throws SignalException {","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"tahnya"},"content":"        if (inputParts.length \u003c 2) {","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(\"Looks like you haven\u0027t entered a task description!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"tahnya"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"tahnya"},"content":"            String description \u003d String.join(\" \", Arrays.copyOfRange(inputParts, 1, inputParts.length));","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"tahnya"},"content":"            Task task \u003d new ToDo(description);","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"tahnya"},"content":"            taskList.add(task);","lastModifiedDate":"2024-02-20"},{"lineNumber":138,"author":{"gitId":"tahnya"},"content":"            return taskAdded(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":139,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":140,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":142,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":144,"author":{"gitId":"tahnya"},"content":"     * Create a new Task of type Deadline.","lastModifiedDate":"2024-02-20"},{"lineNumber":145,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"tahnya"},"content":"     * @param inputParts The string array of the user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":148,"author":{"gitId":"tahnya"},"content":"    public String commandDeadline(String[] inputParts) throws SignalException {","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"tahnya"},"content":"        if (inputParts.length \u003c 2) {","lastModifiedDate":"2024-02-20"},{"lineNumber":150,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(\"Looks like you haven\u0027t entered a task description!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"tahnya"},"content":"        } else if (!Arrays.asList(inputParts).contains(\"/by\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":152,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(\"Looks like you haven\u0027t added a deadline!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":153,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":154,"author":{"gitId":"tahnya"},"content":"        int byIndex \u003d finder(\"/by\", inputParts);","lastModifiedDate":"2024-02-20"},{"lineNumber":155,"author":{"gitId":"tahnya"},"content":"        if (byIndex \u003d\u003d 1) {","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(\"Looks like you haven\u0027t entered a task description!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":157,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"tahnya"},"content":"        String description \u003d String.join(\" \", Arrays.copyOfRange(inputParts, 1, byIndex));","lastModifiedDate":"2024-02-20"},{"lineNumber":159,"author":{"gitId":"tahnya"},"content":"        String by \u003d String.join(\" \", Arrays.copyOfRange(inputParts, byIndex + 1, inputParts.length));","lastModifiedDate":"2024-02-20"},{"lineNumber":160,"author":{"gitId":"tahnya"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-20"},{"lineNumber":161,"author":{"gitId":"tahnya"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-20"},{"lineNumber":162,"author":{"gitId":"tahnya"},"content":"        return taskAdded(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":163,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":164,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":165,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":166,"author":{"gitId":"tahnya"},"content":"     * Create a new Task of type Event.","lastModifiedDate":"2024-02-20"},{"lineNumber":167,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":168,"author":{"gitId":"tahnya"},"content":"     * @param inputParts The string array of the user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":169,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":170,"author":{"gitId":"tahnya"},"content":"    public String commandEvent(String[] inputParts) throws SignalException {","lastModifiedDate":"2024-02-23"},{"lineNumber":171,"author":{"gitId":"tahnya"},"content":"        if (inputParts.length \u003c 2) {","lastModifiedDate":"2024-02-20"},{"lineNumber":172,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(\"Looks like you haven\u0027t entered a task description!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":173,"author":{"gitId":"tahnya"},"content":"        } else if (!Arrays.asList(inputParts).contains(\"/from\") \u0026\u0026 !Arrays.asList(inputParts).contains(\"/to\")){","lastModifiedDate":"2024-02-20"},{"lineNumber":174,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(\"Please tell me the event timeframe!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":175,"author":{"gitId":"tahnya"},"content":"        } else if (!Arrays.asList(inputParts).contains(\"/from\")){","lastModifiedDate":"2024-02-20"},{"lineNumber":176,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(\"Please tell me when the event starts.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":177,"author":{"gitId":"tahnya"},"content":"        } else if (!Arrays.asList(inputParts).contains(\"/to\")){","lastModifiedDate":"2024-02-20"},{"lineNumber":178,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(\"Please tell me when the event ends.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":179,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":180,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":181,"author":{"gitId":"tahnya"},"content":"        int fromIndex \u003d finder(\"/from\", inputParts);","lastModifiedDate":"2024-02-20"},{"lineNumber":182,"author":{"gitId":"tahnya"},"content":"        int toIndex \u003d finder(\"/to\", inputParts);","lastModifiedDate":"2024-02-20"},{"lineNumber":183,"author":{"gitId":"tahnya"},"content":"        if (fromIndex \u003d\u003d 1) {","lastModifiedDate":"2024-02-23"},{"lineNumber":184,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(\"Looks like you haven\u0027t entered a task description!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":185,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":186,"author":{"gitId":"tahnya"},"content":"        String description \u003d String.join(\" \", Arrays.copyOfRange(inputParts, 1, fromIndex));","lastModifiedDate":"2024-02-20"},{"lineNumber":187,"author":{"gitId":"tahnya"},"content":"        String start \u003d String.join(\" \", Arrays.copyOfRange(inputParts, fromIndex + 1, toIndex));","lastModifiedDate":"2024-02-20"},{"lineNumber":188,"author":{"gitId":"tahnya"},"content":"        String end \u003d String.join(\" \", Arrays.copyOfRange(inputParts, toIndex + 1, inputParts.length));","lastModifiedDate":"2024-02-20"},{"lineNumber":189,"author":{"gitId":"tahnya"},"content":"        Task task \u003d new Event(description, start, end);","lastModifiedDate":"2024-02-20"},{"lineNumber":190,"author":{"gitId":"tahnya"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-20"},{"lineNumber":191,"author":{"gitId":"tahnya"},"content":"        return taskAdded(task);","lastModifiedDate":"2024-02-21"},{"lineNumber":192,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":193,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":194,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":195,"author":{"gitId":"tahnya"},"content":"     * Prints the list of inputs collected from the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":196,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":197,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":198,"author":{"gitId":"tahnya"},"content":"    public String commandList() throws SignalException {","lastModifiedDate":"2024-02-23"},{"lineNumber":199,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":200,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":201,"author":{"gitId":"tahnya"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-20"},{"lineNumber":202,"author":{"gitId":"tahnya"},"content":"            reply \u003d \"Oops, looks like you haven\u0027t added any tasks!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":203,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(reply);","lastModifiedDate":"2024-02-23"},{"lineNumber":204,"author":{"gitId":"tahnya"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":205,"author":{"gitId":"tahnya"},"content":"            ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":206,"author":{"gitId":"tahnya"},"content":"            response.add(\"Here is your tasklist!\");","lastModifiedDate":"2024-02-20"},{"lineNumber":207,"author":{"gitId":"tahnya"},"content":"            for (Task i : taskList) {","lastModifiedDate":"2024-02-20"},{"lineNumber":208,"author":{"gitId":"tahnya"},"content":"                response.add(taskList.indexOf(i) + 1 + \". \" + i.toString());","lastModifiedDate":"2024-02-20"},{"lineNumber":209,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":210,"author":{"gitId":"tahnya"},"content":"            reply \u003d listToString(response);","lastModifiedDate":"2024-02-21"},{"lineNumber":211,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":212,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":213,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":214,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":215,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":216,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":217,"author":{"gitId":"tahnya"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-20"},{"lineNumber":218,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":219,"author":{"gitId":"tahnya"},"content":"     * @param current The task to mark.","lastModifiedDate":"2024-02-20"},{"lineNumber":220,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":221,"author":{"gitId":"tahnya"},"content":"    public String commandMark(Task current) {","lastModifiedDate":"2024-02-21"},{"lineNumber":222,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":223,"author":{"gitId":"tahnya"},"content":"        response.add(current.checkDone()","lastModifiedDate":"2024-02-20"},{"lineNumber":224,"author":{"gitId":"tahnya"},"content":"                ? \"This task is already done! Yay!\"","lastModifiedDate":"2024-02-22"},{"lineNumber":225,"author":{"gitId":"tahnya"},"content":"                : \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-22"},{"lineNumber":226,"author":{"gitId":"tahnya"},"content":"        current.markDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":227,"author":{"gitId":"tahnya"},"content":"        response.add(\"  \" + current.toString());","lastModifiedDate":"2024-02-20"},{"lineNumber":228,"author":{"gitId":"tahnya"},"content":"        String reply \u003d listToString(response);","lastModifiedDate":"2024-02-21"},{"lineNumber":229,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":230,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":231,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":232,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":233,"author":{"gitId":"tahnya"},"content":"     * Calls the commandMark method.","lastModifiedDate":"2024-02-20"},{"lineNumber":234,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":235,"author":{"gitId":"tahnya"},"content":"     * @param inputParts The string array of the user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":236,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":237,"author":{"gitId":"tahnya"},"content":"    public String markTask(String[] inputParts) {","lastModifiedDate":"2024-02-21"},{"lineNumber":238,"author":{"gitId":"tahnya"},"content":"        int index \u003d Integer.parseInt(inputParts[1]);","lastModifiedDate":"2024-02-20"},{"lineNumber":239,"author":{"gitId":"tahnya"},"content":"        return commandMark(taskList.get(index -1));","lastModifiedDate":"2024-02-21"},{"lineNumber":240,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":241,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":242,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":243,"author":{"gitId":"tahnya"},"content":"     * Unmarks the task as not done.","lastModifiedDate":"2024-02-20"},{"lineNumber":244,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":245,"author":{"gitId":"tahnya"},"content":"     * @param current The task to unmark.","lastModifiedDate":"2024-02-20"},{"lineNumber":246,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":247,"author":{"gitId":"tahnya"},"content":"    public String commandUnmark(Task current) {","lastModifiedDate":"2024-02-21"},{"lineNumber":248,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":249,"author":{"gitId":"tahnya"},"content":"        response.add(!current.checkDone()","lastModifiedDate":"2024-02-23"},{"lineNumber":250,"author":{"gitId":"tahnya"},"content":"                ? \"This task is not yet done! Best get on it :D\"","lastModifiedDate":"2024-02-22"},{"lineNumber":251,"author":{"gitId":"tahnya"},"content":"                : \"OK, I\u0027ve marked this task as undone:\");","lastModifiedDate":"2024-02-22"},{"lineNumber":252,"author":{"gitId":"tahnya"},"content":"        current.markUnDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":253,"author":{"gitId":"tahnya"},"content":"        response.add(\"  \" + current.toString());","lastModifiedDate":"2024-02-20"},{"lineNumber":254,"author":{"gitId":"tahnya"},"content":"        String reply \u003d listToString(response);","lastModifiedDate":"2024-02-21"},{"lineNumber":255,"author":{"gitId":"tahnya"},"content":"        signalSays(reply);","lastModifiedDate":"2024-02-21"},{"lineNumber":256,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":257,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":258,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":259,"author":{"gitId":"tahnya"},"content":"    public String commandNotDoneList() throws SignalException {","lastModifiedDate":"2024-02-23"},{"lineNumber":260,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":261,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":262,"author":{"gitId":"tahnya"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-22"},{"lineNumber":263,"author":{"gitId":"tahnya"},"content":"            reply \u003d \"Oops, looks like you haven\u0027t added any tasks!\";","lastModifiedDate":"2024-02-22"},{"lineNumber":264,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(reply);","lastModifiedDate":"2024-02-23"},{"lineNumber":265,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":266,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":267,"author":{"gitId":"tahnya"},"content":"        response.add(\"Here are your tasks that are not yet completed!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":268,"author":{"gitId":"tahnya"},"content":"        for (Task i : taskList) {","lastModifiedDate":"2024-02-22"},{"lineNumber":269,"author":{"gitId":"tahnya"},"content":"            if (!i.checkDone()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":270,"author":{"gitId":"tahnya"},"content":"                response.add(taskList.indexOf(i) + 1 + \". \" + i.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":271,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":272,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":273,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":274,"author":{"gitId":"tahnya"},"content":"        if (response.size() \u003d\u003d 1) {","lastModifiedDate":"2024-02-22"},{"lineNumber":275,"author":{"gitId":"tahnya"},"content":"            reply \u003d \"Wow! Looks like you dont have any uncompleted tasks!\";","lastModifiedDate":"2024-02-22"},{"lineNumber":276,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(reply);","lastModifiedDate":"2024-02-23"},{"lineNumber":277,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":278,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":279,"author":{"gitId":"tahnya"},"content":"        reply \u003d listToString(response);","lastModifiedDate":"2024-02-22"},{"lineNumber":280,"author":{"gitId":"tahnya"},"content":"        signalSays(reply);","lastModifiedDate":"2024-02-22"},{"lineNumber":281,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-22"},{"lineNumber":282,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":283,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":284,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":285,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":286,"author":{"gitId":"tahnya"},"content":"     * Calls the commandUnark method.","lastModifiedDate":"2024-02-20"},{"lineNumber":287,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":288,"author":{"gitId":"tahnya"},"content":"     * @param inputParts The string array of the user input.","lastModifiedDate":"2024-02-20"},{"lineNumber":289,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":290,"author":{"gitId":"tahnya"},"content":"    public String unMarkTask(String[] inputParts) {","lastModifiedDate":"2024-02-21"},{"lineNumber":291,"author":{"gitId":"tahnya"},"content":"        int index \u003d Integer.parseInt(inputParts[1]);","lastModifiedDate":"2024-02-20"},{"lineNumber":292,"author":{"gitId":"tahnya"},"content":"        return commandUnmark(taskList.get(index - 1));","lastModifiedDate":"2024-02-21"},{"lineNumber":293,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":294,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":295,"author":{"gitId":"tahnya"},"content":"    public String commandPriorityList() throws SignalException {","lastModifiedDate":"2024-02-23"},{"lineNumber":296,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":297,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":298,"author":{"gitId":"tahnya"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-22"},{"lineNumber":299,"author":{"gitId":"tahnya"},"content":"            reply \u003d \"Oops, looks like you haven\u0027t added any tasks!\";","lastModifiedDate":"2024-02-22"},{"lineNumber":300,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(reply);","lastModifiedDate":"2024-02-23"},{"lineNumber":301,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":302,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":303,"author":{"gitId":"tahnya"},"content":"        response.add(\"Here are your tasks marked as priority!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":304,"author":{"gitId":"tahnya"},"content":"        for (Task i : taskList) {","lastModifiedDate":"2024-02-22"},{"lineNumber":305,"author":{"gitId":"tahnya"},"content":"            if (i.checkPriority()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":306,"author":{"gitId":"tahnya"},"content":"                response.add(taskList.indexOf(i) + 1 + \". \" + i.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":307,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":308,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":309,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":310,"author":{"gitId":"tahnya"},"content":"        if (response.size() \u003d\u003d 1) {","lastModifiedDate":"2024-02-22"},{"lineNumber":311,"author":{"gitId":"tahnya"},"content":"            reply \u003d \"Oops, looks like you haven\u0027t marked any tasks as priority!\";","lastModifiedDate":"2024-02-22"},{"lineNumber":312,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(reply);","lastModifiedDate":"2024-02-23"},{"lineNumber":313,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":314,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":315,"author":{"gitId":"tahnya"},"content":"        reply \u003d listToString(response);","lastModifiedDate":"2024-02-22"},{"lineNumber":316,"author":{"gitId":"tahnya"},"content":"        signalSays(reply);","lastModifiedDate":"2024-02-22"},{"lineNumber":317,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-22"},{"lineNumber":318,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":319,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":320,"author":{"gitId":"tahnya"},"content":"    public String commandPriority(Task current) {","lastModifiedDate":"2024-02-22"},{"lineNumber":321,"author":{"gitId":"tahnya"},"content":"        current.setPriority();","lastModifiedDate":"2024-02-22"},{"lineNumber":322,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":323,"author":{"gitId":"tahnya"},"content":"        response.add(\"OK, I\u0027ve marked this task as high priority!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":324,"author":{"gitId":"tahnya"},"content":"        response.add(\"  \" + current.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":325,"author":{"gitId":"tahnya"},"content":"        String reply \u003d listToString(response);","lastModifiedDate":"2024-02-22"},{"lineNumber":326,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":327,"author":{"gitId":"tahnya"},"content":"        signalSays(reply);","lastModifiedDate":"2024-02-22"},{"lineNumber":328,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-22"},{"lineNumber":329,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":330,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":331,"author":{"gitId":"tahnya"},"content":"    public String markPriority(String[] inputParts) {","lastModifiedDate":"2024-02-22"},{"lineNumber":332,"author":{"gitId":"tahnya"},"content":"        int index \u003d Integer.parseInt(inputParts[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":333,"author":{"gitId":"tahnya"},"content":"        return commandPriority(taskList.get(index - 1));","lastModifiedDate":"2024-02-22"},{"lineNumber":334,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":335,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":336,"author":{"gitId":"tahnya"},"content":"    public String commandNotPriority(Task current) {","lastModifiedDate":"2024-02-22"},{"lineNumber":337,"author":{"gitId":"tahnya"},"content":"        current.setNotPriority();","lastModifiedDate":"2024-02-22"},{"lineNumber":338,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":339,"author":{"gitId":"tahnya"},"content":"        response.add(\"OK, I\u0027ve marked this task as not priority!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":340,"author":{"gitId":"tahnya"},"content":"        response.add(\"  \" + current.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":341,"author":{"gitId":"tahnya"},"content":"        String reply \u003d listToString(response);","lastModifiedDate":"2024-02-22"},{"lineNumber":342,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":343,"author":{"gitId":"tahnya"},"content":"        signalSays(reply);","lastModifiedDate":"2024-02-22"},{"lineNumber":344,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-22"},{"lineNumber":345,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":346,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":347,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":348,"author":{"gitId":"tahnya"},"content":"    public String markNotPriority(String[] inputParts) {","lastModifiedDate":"2024-02-22"},{"lineNumber":349,"author":{"gitId":"tahnya"},"content":"        int index \u003d Integer.parseInt(inputParts[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":350,"author":{"gitId":"tahnya"},"content":"        return commandNotPriority(taskList.get(index - 1));","lastModifiedDate":"2024-02-22"},{"lineNumber":351,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":352,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":353,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":354,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":355,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":356,"author":{"gitId":"tahnya"},"content":"     * Deletes the task from the list and shifts the subsequent tasks forward.","lastModifiedDate":"2024-02-20"},{"lineNumber":357,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":358,"author":{"gitId":"tahnya"},"content":"     * @param x The index of the task to be deleted.","lastModifiedDate":"2024-02-20"},{"lineNumber":359,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":360,"author":{"gitId":"tahnya"},"content":"    public String commandDelete(int x) throws SignalException {","lastModifiedDate":"2024-02-23"},{"lineNumber":361,"author":{"gitId":"tahnya"},"content":"        Task current \u003d taskList.get(x);","lastModifiedDate":"2024-02-20"},{"lineNumber":362,"author":{"gitId":"tahnya"},"content":"        int initialSize \u003d taskList.size();","lastModifiedDate":"2024-02-20"},{"lineNumber":363,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-21"},{"lineNumber":364,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":365,"author":{"gitId":"tahnya"},"content":"        if (initialSize \u003d\u003d 0) {","lastModifiedDate":"2024-02-20"},{"lineNumber":366,"author":{"gitId":"tahnya"},"content":"            response.add(\"Looks like there\u0027s nothing here to remove. Better get on those tasks!\");","lastModifiedDate":"2024-02-21"},{"lineNumber":367,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(listToString(response));","lastModifiedDate":"2024-02-23"},{"lineNumber":368,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":369,"author":{"gitId":"tahnya"},"content":"        if (x \u003e initialSize) {","lastModifiedDate":"2024-02-20"},{"lineNumber":370,"author":{"gitId":"tahnya"},"content":"            response.add(\"I\u0027d say shoot for the stars but in this case there are only \"","lastModifiedDate":"2024-02-21"},{"lineNumber":371,"author":{"gitId":"tahnya"},"content":"                    + initialSize + (initialSize \u003d\u003d 1 ? \" item\" : \" items\") + \" in this list\");","lastModifiedDate":"2024-02-20"},{"lineNumber":372,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(listToString(response));","lastModifiedDate":"2024-02-23"},{"lineNumber":373,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":374,"author":{"gitId":"tahnya"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":375,"author":{"gitId":"tahnya"},"content":"            taskList.remove(x);","lastModifiedDate":"2024-02-20"},{"lineNumber":376,"author":{"gitId":"tahnya"},"content":"            response.add(\"Noted, I\u0027ve deleted this task from your list:\");","lastModifiedDate":"2024-02-20"},{"lineNumber":377,"author":{"gitId":"tahnya"},"content":"            response.add(\"  \" + current.toString());","lastModifiedDate":"2024-02-20"},{"lineNumber":378,"author":{"gitId":"tahnya"},"content":"            response.add(\"Now you have \" + (initialSize - 1)","lastModifiedDate":"2024-02-20"},{"lineNumber":379,"author":{"gitId":"tahnya"},"content":"                    + (initialSize - 1 \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":380,"author":{"gitId":"tahnya"},"content":"            storeFiles.writeTasks(taskList);","lastModifiedDate":"2024-02-20"},{"lineNumber":381,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":382,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":383,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":384,"author":{"gitId":"tahnya"},"content":"        String reply \u003d listToString(response);","lastModifiedDate":"2024-02-21"},{"lineNumber":385,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":386,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":387,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":388,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":389,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":390,"author":{"gitId":"tahnya"},"content":"    public ArrayList\u003cString\u003e find(String key) {","lastModifiedDate":"2024-02-20"},{"lineNumber":391,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":392,"author":{"gitId":"tahnya"},"content":"        for (Task i : taskList) {","lastModifiedDate":"2024-02-20"},{"lineNumber":393,"author":{"gitId":"tahnya"},"content":"            if (i.getDescription().contains(key)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":394,"author":{"gitId":"tahnya"},"content":"                result.add(taskList.indexOf(i) + 1 + \". \" + i.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":395,"author":{"gitId":"tahnya"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":396,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":397,"author":{"gitId":"tahnya"},"content":"        return result;","lastModifiedDate":"2024-02-20"},{"lineNumber":398,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":399,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":400,"author":{"gitId":"tahnya"},"content":"    public String commandFind(String[] inputParts) throws SignalException {","lastModifiedDate":"2024-02-23"},{"lineNumber":401,"author":{"gitId":"tahnya"},"content":"        if (inputParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-23"},{"lineNumber":402,"author":{"gitId":"tahnya"},"content":"            throw new SignalException(\"I don\u0027t know what you\u0027re looking for!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":403,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":404,"author":{"gitId":"tahnya"},"content":"        String toFind \u003d String.join(\" \", Arrays.copyOfRange(inputParts, 1, inputParts.length));","lastModifiedDate":"2024-02-23"},{"lineNumber":405,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":406,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":407,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cString\u003e found \u003d find(toFind);","lastModifiedDate":"2024-02-21"},{"lineNumber":408,"author":{"gitId":"tahnya"},"content":"        if (found.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-21"},{"lineNumber":409,"author":{"gitId":"tahnya"},"content":"            response.add(\"Looks like there\u0027s nothing here. Try another keyword!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":410,"author":{"gitId":"tahnya"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":411,"author":{"gitId":"tahnya"},"content":"            response.add(\"Sure, here are the tasks containing \u0027\" + toFind + \"\u0027:\");","lastModifiedDate":"2024-02-20"},{"lineNumber":412,"author":{"gitId":"tahnya"},"content":"            response.addAll(find(toFind));","lastModifiedDate":"2024-02-20"},{"lineNumber":413,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":414,"author":{"gitId":"tahnya"},"content":"        String reply \u003d listToString(response);","lastModifiedDate":"2024-02-21"},{"lineNumber":415,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":416,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":417,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":418,"author":{"gitId":"tahnya"},"content":"    public String commandHi() {","lastModifiedDate":"2024-02-21"},{"lineNumber":419,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"Hi! Enter \u0027help\u0027 to view the available commands!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":420,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":421,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":422,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":423,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":424,"author":{"gitId":"tahnya"},"content":"     * Response to user input \u0027blah\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":425,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":426,"author":{"gitId":"tahnya"},"content":"    public String commandBlah() {","lastModifiedDate":"2024-02-21"},{"lineNumber":427,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"All words are made up, but this one seems more nonsensical than usual. Try something else!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":428,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":429,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":430,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":431,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":432,"author":{"gitId":"tahnya"},"content":"     * Response to user input \u0027something else\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":433,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":434,"author":{"gitId":"tahnya"},"content":"    public String commandSomethingelse() {","lastModifiedDate":"2024-02-21"},{"lineNumber":435,"author":{"gitId":"tahnya"},"content":"        String reply \u003d \"Haha, very funny. Nice try my guy!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":436,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":437,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":438,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":439,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":440,"author":{"gitId":"tahnya"},"content":"     * Prints a user guide.","lastModifiedDate":"2024-02-20"},{"lineNumber":441,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":442,"author":{"gitId":"tahnya"},"content":"    public String commandHelp() {","lastModifiedDate":"2024-02-21"},{"lineNumber":443,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cString\u003e response \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2024-02-21"},{"lineNumber":444,"author":{"gitId":"tahnya"},"content":"        response.add(\"Note:\");","lastModifiedDate":"2024-02-21"},{"lineNumber":445,"author":{"gitId":"tahnya"},"content":"        response.add(\"The round brackets indicate you can enter any text, square brackets indicate you should enter a number, without the brackets.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":446,"author":{"gitId":"tahnya"},"content":"        response.add(\"\\nCREATING TASKS:\");","lastModifiedDate":"2024-02-21"},{"lineNumber":447,"author":{"gitId":"tahnya"},"content":"        response.add(\"* todo \u003ctask\u003e -- creates a To Do task, which has no deadline. \");","lastModifiedDate":"2024-02-23"},{"lineNumber":448,"author":{"gitId":"tahnya"},"content":"        response.add(\"* deadline \u003ctask\u003e /by \u003cdate\u003e \u003ctime\u003e -- creates a Deadline task, indicate its deadline after \u0027/by\u0027. Adding the time is optional.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":449,"author":{"gitId":"tahnya"},"content":"        response.add(\"* event \u003ctask\u003e /from \u003cdate\u003e \u003ctime\u003e /to \u003cdate\u003e \u003ctime\u003e -- creates an Event task, indicate its start and end after \u0027/from\u0027 and \u0027/to\u0027. Adding the time is optional.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":450,"author":{"gitId":"tahnya"},"content":"        response.add(\"Note: dates and times are formatted as \u003cdd-mm-yyyy\u003e \u003chhmm\u003e. Dates added are always in the current year if not specified.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":451,"author":{"gitId":"tahnya"},"content":"        response.add(\"\\nCOMMANDS: \");","lastModifiedDate":"2024-02-21"},{"lineNumber":452,"author":{"gitId":"tahnya"},"content":"        response.add(\"* list -- prints a numbered list of the tasks created, in input order.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":453,"author":{"gitId":"tahnya"},"content":"        response.add(\"* mark \u003ctask_number\u003e -- marks the task at index \u003ctask_number\u003e as completed. \");","lastModifiedDate":"2024-02-24"},{"lineNumber":454,"author":{"gitId":"tahnya"},"content":"        response.add(\"* unmark \u003ctask_number\u003e -- marks the task at index \u003ctask_number\u003e as uncompleted. \");","lastModifiedDate":"2024-02-24"},{"lineNumber":455,"author":{"gitId":"tahnya"},"content":"        response.add(\"* notdonelist -- show the list of tasks that are uncompleted.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":456,"author":{"gitId":"tahnya"},"content":"        response.add(\"* prioritise \u003ctask_number\u003e -- sets the task at index \u003ctask_number\u003e as priority.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":457,"author":{"gitId":"tahnya"},"content":"        response.add(\"* unprioritise \u003ctask_number\u003e -- sets the task at index \u003ctask_number\u003e as non priority\");","lastModifiedDate":"2024-02-24"},{"lineNumber":458,"author":{"gitId":"tahnya"},"content":"        response.add(\"* prioritylist -- show the list of prioritised tasks\");","lastModifiedDate":"2024-02-22"},{"lineNumber":459,"author":{"gitId":"tahnya"},"content":"        response.add(\"* find \u003ctext\u003e -- show a list of tasks which contain \u003ctext\u003e in their description\");","lastModifiedDate":"2024-02-24"},{"lineNumber":460,"author":{"gitId":"tahnya"},"content":"        response.add(\"* delete \u003ctask_number\u003e -- removes the task at index [] from the list.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":461,"author":{"gitId":"tahnya"},"content":"        response.add(\"* bye -- exits the program.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":462,"author":{"gitId":"tahnya"},"content":"        String reply \u003d listToString(response);","lastModifiedDate":"2024-02-21"},{"lineNumber":463,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":464,"author":{"gitId":"tahnya"},"content":"        return reply;","lastModifiedDate":"2024-02-21"},{"lineNumber":465,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":466,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":467,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":468,"author":{"gitId":"tahnya"},"content":"     * Prints Signal\u0027s response enclosed in the dividers.","lastModifiedDate":"2024-02-20"},{"lineNumber":469,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":470,"author":{"gitId":"tahnya"},"content":"     * @param response The message that is printed.","lastModifiedDate":"2024-02-20"},{"lineNumber":471,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":472,"author":{"gitId":"tahnya"},"content":"    public void signalSays(String response) {","lastModifiedDate":"2024-02-20"},{"lineNumber":473,"author":{"gitId":"tahnya"},"content":"        System.out.println(DIV);","lastModifiedDate":"2024-02-20"},{"lineNumber":474,"author":{"gitId":"tahnya"},"content":"        System.out.println(response);","lastModifiedDate":"2024-02-20"},{"lineNumber":475,"author":{"gitId":"tahnya"},"content":"        System.out.println(DIV);","lastModifiedDate":"2024-02-20"},{"lineNumber":476,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":477,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":478,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":479,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"tahnya":479}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"tahnya":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"GUI.MainWindow\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.topAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"42.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"50.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"tahnya":19}},{"path":"src/test/java/signal/util/SignalTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"package signal.util;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"import signal.SignalException;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"import signal.task.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"import signal.task.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"import signal.task.ToDo;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"tahnya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"tahnya"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"tahnya"},"content":" * Test class for Signal application functionality.","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"tahnya"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"tahnya"},"content":"public class SignalTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"tahnya"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"tahnya"},"content":"    private Parser parse \u003d new Parser();","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"tahnya"},"content":"     * Test case for adding a Todo task with normal usage.","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"tahnya"},"content":"    public void testTasks1(){","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"tahnya"},"content":"        // todo normal usage","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Got it! I\u0027ve added this task to your list:\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"tahnya"},"content":"                \"  T | 0 | read book \\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"tahnya"},"content":"                \"Now you have 1 task in the list.\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"tahnya"},"content":"        String test \u003d parse.taskCommands(\"todo read book\");","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"tahnya"},"content":"     * Test case for adding a Todo task with an empty task description.","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"tahnya"},"content":"    public void testTasks2() {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"tahnya"},"content":"        // todo with empty task","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Looks like you haven\u0027t entered a task description!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"tahnya"},"content":"        String test \u003d parse.taskCommands(\"todo\");","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"tahnya"},"content":"     * Test case for adding a Deadline task with normal usage.","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"tahnya"},"content":"    public void testTasks3() {","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"tahnya"},"content":"        // deadline normal usage","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Got it! I\u0027ve added this task to your list:\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"tahnya"},"content":"                \"  D | 0 | homework | by: 23 Feb 2024 11:59 pm\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"tahnya"},"content":"                \"Now you have 1 task in the list.\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"tahnya"},"content":"        String test \u003d parse.taskCommands(\"deadline homework /by 2024-02-23 23:59:59\");","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"tahnya"},"content":"     * Test case for adding a Deadline task with an empty task description.","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"tahnya"},"content":"    public void testTasks4() {","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"tahnya"},"content":"        // deadline with empty task","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Looks like you haven\u0027t entered a task description!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"tahnya"},"content":"        String test \u003d parse.taskCommands(\"deadline\");","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"tahnya"},"content":"     * Test case for adding a Deadline task with an empty deadline.","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"tahnya"},"content":"    public void testTasks5() {","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"tahnya"},"content":"        // deadline with empty deadline","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Looks like you haven\u0027t added a deadline!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"tahnya"},"content":"        String test \u003d parse.taskCommands(\"deadline homework\");","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"tahnya"},"content":"     * Test case for adding a Deadline task with an incorrect date/time format.","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"tahnya"},"content":"    public void testTasks6() {","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"tahnya"},"content":"        // deadline with wrong date/time format","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Oops, I can\u0027t read the date or time like that! Please use yyyy-mm-dd for date and hh:mm:ss for time.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"tahnya"},"content":"        String test \u003d parse.taskCommands(\"deadline homework /by date\");","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"tahnya"},"content":"     * Test case for adding a Deadline task with an empty description.","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"tahnya"},"content":"    public void testTasks7() {","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"tahnya"},"content":"        // deadline with empty description","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Looks like you haven\u0027t entered a task description!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"tahnya"},"content":"        String test \u003d parse.taskCommands(\"deadline /by 2024-02-23\");","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"tahnya"},"content":"     * Test case for adding an Event task with normal usage.","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"tahnya"},"content":"    public void testTasks8() {","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"tahnya"},"content":"        // event normal usage","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Got it! I\u0027ve added this task to your list:\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"tahnya"},"content":"                \"  E | 0 | birthday | from: 12 Dec 2024| to: 12 Dec 2024\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"tahnya"},"content":"                \"Now you have 1 task in the list.\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"tahnya"},"content":"        String test \u003d parse.taskCommands(\"event birthday /from 2024-12-12 /to 2024-12-12\");","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"tahnya"},"content":"     * Test case for adding an Event task with an empty task description.","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"tahnya"},"content":"    public void testTasks9() {","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"tahnya"},"content":"        // deadline with empty task","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Looks like you haven\u0027t entered a task description!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"tahnya"},"content":"        String test \u003d parse.taskCommands(\"event\");","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"tahnya"},"content":"     * Test case for adding an Event task without specifying an end time.","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"tahnya"},"content":"    public void testTasks10() {","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"tahnya"},"content":"        // deadline with no to","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Please tell me when the event ends.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":133,"author":{"gitId":"tahnya"},"content":"        String test \u003d parse.taskCommands(\"event birthday /from 2024-12-12\");","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":135,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":136,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":138,"author":{"gitId":"tahnya"},"content":"     * Test case for adding an Event task with an incorrect date/time format.","lastModifiedDate":"2024-02-23"},{"lineNumber":139,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":140,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":141,"author":{"gitId":"tahnya"},"content":"    public void testTasks11() {","lastModifiedDate":"2024-02-23"},{"lineNumber":142,"author":{"gitId":"tahnya"},"content":"        // deadline with wrong date/time format","lastModifiedDate":"2024-02-23"},{"lineNumber":143,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Oops, I can\u0027t read the date or time like that! Please use yyyy-mm-dd for date and hh:mm:ss for time.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"tahnya"},"content":"        String test \u003d parse.taskCommands(\"event birthday /from 12 dec /to 12 dec\");","lastModifiedDate":"2024-02-23"},{"lineNumber":145,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":146,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"tahnya"},"content":"     * Test case for adding an Event task with an empty description.","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"tahnya"},"content":"    public void testTasks12() {","lastModifiedDate":"2024-02-23"},{"lineNumber":153,"author":{"gitId":"tahnya"},"content":"        // deadline with empty description","lastModifiedDate":"2024-02-23"},{"lineNumber":154,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Looks like you haven\u0027t entered a task description!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"tahnya"},"content":"        String test \u003d parse.taskCommands(\"event /from 2024-02-23 /to 2024-02-23\");","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":157,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":159,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"tahnya"},"content":"     * Test case for adding an Event task without specifying an end date.","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":162,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":163,"author":{"gitId":"tahnya"},"content":"    public void testTasks13() {","lastModifiedDate":"2024-02-23"},{"lineNumber":164,"author":{"gitId":"tahnya"},"content":"        // event with no end date","lastModifiedDate":"2024-02-23"},{"lineNumber":165,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Please tell me when the event ends.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":166,"author":{"gitId":"tahnya"},"content":"        String test \u003d parse.taskCommands(\"event birthday /from 2024-02-23\");","lastModifiedDate":"2024-02-23"},{"lineNumber":167,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":168,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":169,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":170,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":171,"author":{"gitId":"tahnya"},"content":"     * Test case for finding tasks with an empty search query.","lastModifiedDate":"2024-02-23"},{"lineNumber":172,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":173,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":174,"author":{"gitId":"tahnya"},"content":"    public void testFind1() {","lastModifiedDate":"2024-02-23"},{"lineNumber":175,"author":{"gitId":"tahnya"},"content":"        // find with empty search","lastModifiedDate":"2024-02-23"},{"lineNumber":176,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"I don\u0027t know what you\u0027re looking for!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":177,"author":{"gitId":"tahnya"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":178,"author":{"gitId":"tahnya"},"content":"            String[] input \u003d {\"find\"};","lastModifiedDate":"2024-02-23"},{"lineNumber":179,"author":{"gitId":"tahnya"},"content":"            ui.commandFind(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":180,"author":{"gitId":"tahnya"},"content":"        } catch (SignalException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":181,"author":{"gitId":"tahnya"},"content":"            assertEquals(expected, e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":182,"author":{"gitId":"tahnya"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":183,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":184,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":185,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":186,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":187,"author":{"gitId":"tahnya"},"content":"     * Test case for finding tasks when the task list is empty.","lastModifiedDate":"2024-02-23"},{"lineNumber":188,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":189,"author":{"gitId":"tahnya"},"content":"     * @throws SignalException if an error occurs while processing the find command.","lastModifiedDate":"2024-02-23"},{"lineNumber":190,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":191,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":192,"author":{"gitId":"tahnya"},"content":"    public void testFind2() throws SignalException {","lastModifiedDate":"2024-02-23"},{"lineNumber":193,"author":{"gitId":"tahnya"},"content":"        // find with empty tasklist","lastModifiedDate":"2024-02-23"},{"lineNumber":194,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Looks like there\u0027s nothing here. Try another keyword!\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":195,"author":{"gitId":"tahnya"},"content":"        String[] input \u003d {\"find\", \"this\"};","lastModifiedDate":"2024-02-23"},{"lineNumber":196,"author":{"gitId":"tahnya"},"content":"        String test \u003d ui.commandFind(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":197,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":198,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":199,"author":{"gitId":"tahnya"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":200,"author":{"gitId":"tahnya"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":201,"author":{"gitId":"tahnya"},"content":"     * Test case for finding tasks with a valid search query.","lastModifiedDate":"2024-02-23"},{"lineNumber":202,"author":{"gitId":"tahnya"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":203,"author":{"gitId":"tahnya"},"content":"     * @throws SignalException if an error occurs while processing the find command.","lastModifiedDate":"2024-02-23"},{"lineNumber":204,"author":{"gitId":"tahnya"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":205,"author":{"gitId":"tahnya"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":206,"author":{"gitId":"tahnya"},"content":"    public void testFind3() throws SignalException {","lastModifiedDate":"2024-02-23"},{"lineNumber":207,"author":{"gitId":"tahnya"},"content":"        // find working correctly","lastModifiedDate":"2024-02-23"},{"lineNumber":208,"author":{"gitId":"tahnya"},"content":"        String expected \u003d \"Sure, here are the tasks containing \u0027read\u0027:\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":209,"author":{"gitId":"tahnya"},"content":"                \"1. T | 0 | read book \\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":210,"author":{"gitId":"tahnya"},"content":"                \"2. D | 0 | read article | by: 25 Feb 2024\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":211,"author":{"gitId":"tahnya"},"content":"        String[] input \u003d {\"find\", \"read\"};","lastModifiedDate":"2024-02-23"},{"lineNumber":212,"author":{"gitId":"tahnya"},"content":"        ArrayList\u003cTask\u003e tL \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":213,"author":{"gitId":"tahnya"},"content":"        tL.add(new ToDo(\"read book\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":214,"author":{"gitId":"tahnya"},"content":"        tL.add(new Deadline(\"read article\", \"2024-02-25\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":215,"author":{"gitId":"tahnya"},"content":"        Ui ui2 \u003d new Ui(tL, new Storage());","lastModifiedDate":"2024-02-23"},{"lineNumber":216,"author":{"gitId":"tahnya"},"content":"        String test \u003d ui2.commandFind(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":217,"author":{"gitId":"tahnya"},"content":"        assertEquals(expected, test);","lastModifiedDate":"2024-02-23"},{"lineNumber":218,"author":{"gitId":"tahnya"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":219,"author":{"gitId":"tahnya"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"tahnya":219}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tahnya"},"content":"hi","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"tahnya"},"content":"todo read book","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"tahnya"},"content":"deadline homework /by 2024-02-23","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"tahnya"},"content":"event birthday /from 2024-12-12 /to 2024-12-12","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"tahnya"},"content":"list","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"tahnya"},"content":"mark 1","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"tahnya"},"content":"mark 1","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"tahnya"},"content":"unmark 1","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"tahnya"},"content":"unmark 1","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"tahnya":9}}]
